CREATE OR REPLACE PROCEDURE schm_artifacts.bitr_lca(v_period int4)
	LANGUAGE plpgsql
AS $$
	
BEGIN
	DROP TABLE IF EXISTS schm_workspace.rut_for_lca;
	DROP TABLE IF EXISTS schm_workspace.pre_lca;
	DROP TABLE IF EXISTS schm_workspace.pre_lca_2;
	CREATE TABLE schm_workspace.rut_for_lca AS 
	SELECT
		a.codent,
		a.centalta,
		a.cuenta,
		b.pemid_gls_nro_dct_ide_k AS rut
	FROM
		br_dm_prod_bigdata_reporitf_db.mpdt007 AS a
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide b
	ON (a.identcli::integer = b.pemid_nro_inn_ide)
	;
	CREATE TABLE schm_workspace.pre_lca AS 
	SELECT
		*,
		v_period AS periodo
	FROM
		br_dm_prod_bigdata_mis_db.lca
	;
	CREATE TABLE schm_workspace.pre_lca_2 AS 
	SELECT
			t2.rut, 
			t1.limcrelna, 
			t1.linea, 
			t1.cuenta, 
			t1.centalta, 
			t1.codent,
			t1.periodo
	FROM
		schm_workspace.pre_lca t1
	INNER JOIN schm_workspace.rut_for_lca t2 ON
		t1.codent = t2.codent
		AND t1.centalta = t2.centalta
		AND t1.cuenta = t2.cuenta
	;
	DELETE
	FROM
		schm_data_analytics.bitr_lca
	WHERE
		periodo = v_period
	;
	INSERT INTO schm_data_analytics.bitr_lca
	(rut, limcrelna, linea, cuenta, centalta, codent, periodo)
	select rut, limcrelna, linea, cuenta, centalta, codent, periodo
	FROM schm_workspace.pre_lca_2;
	--SELECT max(periodo) FROM schm_data_analytics.bitr_lca;
	DROP TABLE IF EXISTS schm_workspace.rut_for_lca;
	DROP TABLE IF EXISTS schm_workspace.pre_lca;
	DROP TABLE IF EXISTS schm_workspace.pre_lca_2;
END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.clts_seguimiento_saldo()
	LANGUAGE plpgsql
AS $$
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.cuentas;
    DROP TABLE IF EXISTS schm_workspace.mora;
    DROP TABLE IF EXISTS schm_workspace.finala;
    DROP TABLE IF EXISTS schm_workspace.cuentas2;
    DROP TABLE IF EXISTS schm_workspace.final_agg;
    DROP TABLE IF EXISTS schm_workspace.final_agg2;
    DROP TABLE IF EXISTS schm_workspace.final_agg3;

    DELETE
    FROM schm_data_analytics.clts_seguimiento_saldo
    WHERE periodo = to_char(dateadd(DAY,-2,current_date),'yyyymm')::integer
        AND dia=EXTRACT(DAY from(dateadd(DAY,-2,current_date))) ;

    CREATE TABLE schm_workspace.cuentas AS
    SELECT
        codent
        ,centalta
        ,cuenta
        ,codestcta
        ,fecproces
        ,tipimp_1 +
        tipimp_2 +
        tipimp_3 +
        tipimp_4 +
        tipimp_5 +
        tipimp_6 +
        tipimp_7 +
        tipimp_8 +
        tipimp_9 +
        tipimp_10 AS tipimp
    FROM
        br_dm_prod_bigdata_reporitf_db.mpdt166
    WHERE
        tipimp_1 +
        tipimp_2 +
        tipimp_3 +
        tipimp_4 +
        tipimp_5 +
        tipimp_6 +
        tipimp_7 +
        tipimp_8 +
        tipimp_9 +
        tipimp_10 >0
        AND fecproces = (dateadd(DAY,-2,current_date))
    ;

    CREATE TABLE schm_workspace.mora AS
    SELECT
        evaam_nro_ctt
        ,evaam_dia_mor
    FROM br_dm_prod_bigdata_reporitf_db.sfries_alt_mor
    WHERE
        evaam_fch_pro = (dateadd(DAY,-2,current_date))
    ;

    CREATE TABLE schm_workspace.finala AS
    SELECT
        a.*
        ,b.*
    FROM schm_workspace.cuentas a
    LEFT JOIN schm_workspace.mora b ON
        (a.codent || a.centalta || a.cuenta = b.evaam_nro_ctt)
    ;

    CREATE TABLE schm_workspace.cuentas2 AS
    SELECT
        a.identcli
        ,(b.pemid_gls_nro_dct_ide_k)::integer rut
        ,a.codent
        ,a.centalta
        ,a.cuenta
        ,a.fecalta fecalta_ctto
        ,a.fecbaja fecbaja_ctto
        ,a.producto
        ,a.subprodu
        ,a.conprod
        ,a.grupoliq
        ,a.indblqope
        ,CASE
            WHEN a.grupoliq = 1 THEN 5
            WHEN a.grupoliq = 2 THEN 10
            WHEN a.grupoliq = 3 THEN 15
            WHEN a.grupoliq = 4 THEN 20
            WHEN a.grupoliq = 5 THEN 25
            WHEN a.grupoliq = 6 THEN 30
            WHEN a.grupoliq = 7 THEN 18
        END AS corte
    FROM br_dm_prod_bigdata_reporitf_db.mpdt007 a
    INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide b
    ON
        a.identcli = b.pemid_nro_inn_ide
    WHERE
        a.producto NOT IN ('08', '13')
    ;

    CREATE TABLE schm_workspace.final_agg AS
    SELECT
        b.*
        ,a.rut
    FROM schm_workspace.finala b
    LEFT JOIN schm_workspace.cuentas2 a ON
        (a.codent || a.centalta || a.cuenta = b.evaam_nro_ctt)
    ;

    CREATE TABLE schm_workspace.final_agg2 AS
    SELECT
        a.*
        ,segmento_final AS segmento_comercial
        ,segmento_loyalty AS segmento_gestion
    FROM schm_workspace.final_agg a
    LEFT JOIN br_dm_prod_analytics_ripley_puntos_db.segmento_comercial_diario b ON
        a.rut = b.rut
    WHERE
        b.fecha_ejecucion = (DATEADD(day, -1, getdate())::DATE)
    ;

    CREATE TABLE schm_workspace.final_agg3 AS
    SELECT
        a.*
        ,CASE
            WHEN evaam_dia_mor = 0 THEN '1.- MORA 0'
            WHEN evaam_dia_mor BETWEEN 1 AND 30 THEN '2.- MORA 1-30'
            WHEN evaam_dia_mor BETWEEN 31 AND 60 THEN '3.- MORA 31-60'
            WHEN evaam_dia_mor BETWEEN 61 AND 90 THEN '4.- MORA 61-90'
            WHEN evaam_dia_mor BETWEEN 91 AND 120 THEN '5.- MORA 91-120'
            WHEN evaam_dia_mor BETWEEN 121 AND 150 THEN '6.- MORA 121-150'
            WHEN evaam_dia_mor BETWEEN 151 AND 180 THEN '7.- MORA 151-180'
            WHEN evaam_dia_mor>180 THEN '8.- MORA>181d'
        END AS mora_tramo
    FROM
        schm_workspace.final_agg2 a
    ;

    --CREATE TABLE schm_data_analytics.clts_seguimiento_saldo AS SELECT * FROM br_dm_prod_bigdata_oracloud_db.clts_seguimiento_saldo;

    INSERT
        INTO
        schm_data_analytics.clts_seguimiento_saldo
    SELECT
        to_char(dateadd(DAY,-2,current_date),'yyyymm')::integer AS periodo
        ,EXTRACT(DAY from(dateadd(DAY,-2,current_date))) AS dia
        ,segmento_gestion
        ,segmento_comercial
        ,mora_tramo
        ,sum(tipimp) AS sum_of_tipimp
        ,count(DISTINCT(rut)) AS count_distinct_of_rut
        ,count(DISTINCT(evaam_nro_ctt)) AS count_distinct_of_evaam_nro_ctt
    FROM
        schm_workspace.final_agg3
    GROUP BY
        segmento_gestion
        ,segmento_comercial
        ,mora_tramo
    ;

END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.ctbl_resumen_inhibiciones_sernac(v_nombre_campaing varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN

	DROP TABLE IF EXISTS schm_workspace.resumen_fono;
	DROP TABLE IF EXISTS schm_workspace.resumen_sms;
	DROP TABLE IF EXISTS schm_workspace.resumen_email;
	DROP TABLE IF EXISTS schm_data_analytics.resumen_final;

	CREATE TABLE schm_workspace.resumen_fono AS
	SELECT DISTINCT
		tipo_inhibicion
		,max(fecha_ingreso) AS fecha_ingreso
		,count(fono) AS q_telefonos
	FROM schm_data_analytics.ctbl_lnegro_call
	WHERE
		fecha_ingreso = (dateadd(DAY,-1,current_date))
		AND tipo_inhibicion != 'LISTA_NEGRA_CALL'
	GROUP BY tipo_inhibicion
	;

	CREATE TABLE schm_workspace.resumen_sms AS
	SELECT DISTINCT
		tipo_inhibicion
		,max(fecha_ingreso) AS fecha_ingreso
		,count(fono) AS q_sms
	FROM schm_data_analytics.ctbl_lnegro_sms
	WHERE
		fecha_ingreso = (dateadd(DAY,-1,current_date))
	GROUP BY
		tipo_inhibicion
	;

	CREATE TABLE schm_workspace.resumen_email AS
	SELECT DISTINCT
		CASE
			WHEN motivo = 'SERNAC_ECCSA' THEN 'SERNAC_ECSSA'
			ELSE motivo
		END AS tipo_inhibicion
		,max(fecha_inhibicion) AS fecha_inhibicion
		,count(email) AS q_email
	FROM schm_data_analytics.ctbl_lnegro_email
	WHERE
		fecha_inhibicion = (dateadd(DAY,-1,current_date))
	GROUP BY
		motivo
		;

	CREATE TABLE schm_data_analytics.resumen_final AS
	SELECT
		t1.tipo_inhibicion
		,t1.fecha_ingreso
		,t1.q_telefonos
		,t2.q_sms
		,t3.q_email
	FROM schm_workspace.resumen_fono AS t1
	LEFT JOIN schm_workspace.resumen_sms AS t2
		ON (t1.tipo_inhibicion = t2.tipo_inhibicion)
	LEFT JOIN schm_workspace.resumen_email AS t3
		ON (t1.tipo_inhibicion = t3.tipo_inhibicion)
	ORDER BY
		tipo_inhibicion ASC
;

EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/ctbl/resumen_inhibiciones_sernac/' || v_nombre_campaing || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
RETURN;


END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.ctbl_user_info_autom()
	LANGUAGE plpgsql
AS $$
	
BEGIN


    DROP TABLE IF EXISTS schm_workspace.ctbl_update_user_info_view;
    DROP TABLE IF EXISTS schm_workspace.ctbl_user_info_ayer;
    DROP TABLE IF EXISTS schm_workspace.ctbl_user_info_hoy;


	CREATE TABLE schm_workspace.ctbl_update_user_info_view AS
	SELECT
		U.id
		, U.token
		, L.session_rut AS rut
		, U.old_email AS email_viejo
		, U.new_email AS email_nuevo
		, U.old_phone_number AS telefono_viejo
		, U.new_phone_number AS telefono_nuevo
		, (old_street||' '||old_street_number||' '||old_complement) AS calle_vieja
		, (new_street||' '||new_street_number||' '||new_complement) AS calle_nueva
		, U.old_district AS codigo_comuna_vieja
		, U.new_district AS codigo_comuna_nueva
		, U.old_city AS codigo_ciudad_vieja
		, U.new_city AS codigo_ciudad_nueva
		, U.old_region AS codigo_region_vieja
		, U.new_region AS codigo_region_nueva
		, U.authentication AS autenticacion
		, cast((U.created_at_utc_cl||' '||U.created_at_utc_cl_hora) as timestamp) AS fecha_actualizacion
		, 'PWA' AS canal
		, L.device AS dispositivo
		, T.commerce AS comercio
		, T.branch AS sucursal
		, T.terminal AS terminal
		, T.totem_Id AS totem_id
	FROM br_dm_prod_bigdata_pwa_db.update_user_info AS U
	LEFT JOIN br_dm_prod_bigdata_pwa_db.Login L
		ON U.token = L.token
	LEFT JOIN br_dm_prod_bigdata_pwa_db.Totem T
		ON L.token = T.token;


    CREATE TABLE schm_workspace.ctbl_user_info_ayer AS
	SELECT
		COUNT(rut) AS cantidad_registros
        , MAX(created_at_ts) AS fecha_maxima
	FROM schm_data_analytics.ctbl_user_info;


	DELETE FROM schm_data_analytics.ctbl_user_info;


    INSERT INTO schm_data_analytics.ctbl_user_info
	SELECT
		B.id
	    , B.rut AS rut
	    , B.email_nuevo as email
	    , B.token AS token
	    , B.dispositivo AS dispositivo
        , cast((A.created_at_utc_cl||' '||A.created_at_utc_cl_hora) as timestamp) as created_at_ts
        , B.fecha_actualizacion AS update_at
	FROM br_dm_prod_bigdata_pwa_db.update_user_info A
	INNER JOIN schm_workspace.ctbl_update_user_info_view B
		ON A.id = B.id;


	CREATE TABLE schm_workspace.ctbl_user_info_hoy AS
	SELECT
		COUNT(rut) AS cantidad_registros
        , MAX(created_at_ts) AS fecha_maxima
	FROM schm_data_analytics.ctbl_user_info;


	DELETE FROM schm_data_analytics.ctbl_query_for_user_info;


	INSERT INTO schm_data_analytics.ctbl_query_for_user_info
	SELECT * FROM schm_workspace.ctbl_user_info_ayer
	UNION ALL
	SELECT * FROM schm_workspace.ctbl_user_info_hoy;


    DROP TABLE IF EXISTS schm_workspace.ctbl_update_user_info_view;
    DROP TABLE IF EXISTS schm_workspace.ctbl_user_info_ayer;
    DROP TABLE IF EXISTS schm_workspace.ctbl_user_info_hoy;


END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.cupon_capta(v_id_beneficio varchar, v_nombre_campaing varchar, v_user varchar, v_fecha varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	 
BEGIN 
	
    DROP TABLE IF EXISTS schm_workspace.capta_ayer;
    DROP TABLE IF EXISTS schm_workspace.capta_ayer_dv;
    DROP TABLE IF EXISTS schm_data_analytics.cupon_capta ;

    CREATE TABLE schm_workspace.capta_ayer AS
    SELECT
    	rut_cliente
    	,1 AS campana_ind_rut_dup_camp
    	,fecha
    	,v_id_beneficio AS campana_id_beneficio
    	,via
    	,producto
    FROM
    	br_dm_prod_bigdata_sftp_db.capta_salida
    WHERE
    	fecha >= (dateadd(DAY,-1,current_date))
    AND via = 'HOMEBANKING'
    AND producto IN('CAMBIO DE PRODUCTO', 'MASTERCARD_BLACK', 'TAM', 'TAM_CERRADA', 'TAM_CUOTAS', 'TR')
    ORDER BY
    fecha
    ;


    CREATE TABLE schm_workspace.capta_ayer_dv AS
    SELECT
    	a.rut_cliente
    	,a.rut_cliente || b.pemid_dvr_nro_dct_ide AS cliente_id_usuario_dv
    	,a.fecha
    	,a.campana_ind_rut_dup_camp
    	,a.campana_id_beneficio
    	,via
    	,producto
    FROM
    	schm_workspace.capta_ayer a
    INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide b
    ON
    	a.rut_cliente = b.pemid_gls_nro_dct_ide_k::integer
    ;

    --SELECT * FROM schm_workspace.capta_ayer_dv;

    CREATE TABLE schm_data_analytics.cupon_capta
    ("CAMPANA-RUT_PUSH" VARCHAR(38)
    	,"CAMPANA-ID_BENEFICIO" VARCHAR(200)
    	--,"SEPARATOR" VARCHAR(5)
    	);

    INSERT INTO schm_data_analytics.cupon_capta
    ("CAMPANA-RUT_PUSH"
      ,"CAMPANA-ID_BENEFICIO"
      --,"SEPARATOR"
      )

    VALUES('194227043','J2ORwK9lamihQSZlRqvc;')
    ,('183578138','J2ORwK9lamihQSZlRqvc;')
    ,('170052447','J2ORwK9lamihQSZlRqvc;')
    ;

    EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-raw/bigdata/campaign/CAMPAIGN_INPUT_FIREBASE_CUPON_CAPTA/' || v_nombre_campaing || '_' || v_fecha || '_0-' || v_user || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
    RETURN;

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.dvn_test(v_periodo int4)
	LANGUAGE plpgsql
AS $$
	

BEGIN
	DROP TABLE IF EXISTS schm_workspace.tmp_tabla_1;
	DROP TABLE IF EXISTS schm_workspace.tmp_tabla_2;
	
RAISE INFO 'variable_1 v_periodo: %',v_periodo;

--en el sp al reemplazar 202308 por v_periodo, NO falla
CREATE TABLE schm_workspace.tmp_tabla_1 AS
SELECT schm_artifacts.f_period_add_n_months((v_periodo+1),-1);

RAISE INFO 'variable_2 v_periodo: %',v_periodo;
RAISE INFO 'tabla schm_workspace.tmp_tabla_1 CREADA';

--en el sp al reemplazar 202308 por v_periodo, falla
CREATE TABLE schm_workspace.tmp_tabla_2 AS
SELECT schm_artifacts.f_last_day_given_period(v_periodo);

RAISE INFO 'variable_3 v_periodo: %',v_periodo;
RAISE INFO 'tabla schm_workspace.tmp_tabla_2 CREADA';
END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.ejecutar(stop int4)
	LANGUAGE plpgsql
AS $$
	 
declare 
contador integer:=0;
begin
	while contador<=stop
	loop
		call CARGOS_PAT(contador);
contador=contador+1;
		end loop;
		
	end;


$$
;

CREATE OR REPLACE FUNCTION schm_artifacts.f_add_rut_dv(rut varchar)
	RETURNS varchar
	LANGUAGE plpythonu
	IMMUTABLE
AS $$
	 
	def calculate_dv(rut):
		incremetal_operators = [2,3,4,5,6,7,2,3,4,5,6,7,2][:len(rut)]
		rut_list = []
		for num in rut:
			rut_list.append(int(num)*incremetal_operators.pop())
		
		dv = str(11- (sum(rut_list)%11))
		if dv == '10':
			dv = 'k'
		if dv == '11':
			dv = '0'
			
		return '{:,}'.format(int(rut)).replace(',','.')+'-'+dv
 
	return calculate_dv(rut)

$$
;

CREATE OR REPLACE FUNCTION schm_artifacts.f_first_day($1 date)
	RETURNS date
	LANGUAGE sql
	STABLE
AS $$
	

SELECT TRUNC(DATEADD(DAY,-(EXTRACT(DAY FROM $1)-1), $1))


$$
;

CREATE OR REPLACE FUNCTION schm_artifacts.f_get_month_from_date(v_date date)
	RETURNS int4
	LANGUAGE sql
	STABLE
AS $$
	
	

SELECT EXTRACT(MONTH FROM $1)



$$
;

CREATE OR REPLACE FUNCTION schm_artifacts.f_get_year_from_date(v_date date)
	RETURNS int4
	LANGUAGE sql
	STABLE
AS $$
	
	

SELECT EXTRACT(YEAR FROM $1)



$$
;

CREATE OR REPLACE FUNCTION schm_artifacts.f_last_day_given_period($1 int4)
	RETURNS date
	LANGUAGE sql
	STABLE
AS $$
	
   SELECT
       (TRUNC(dateadd(DAY,-1,(dateadd(MONTH,1,(to_date(cast($1 as varchar(6)),'YYYYMM')))))));

$$
;

CREATE OR REPLACE FUNCTION schm_artifacts.f_meses_entre($1 int4, $2 int4)
	RETURNS int4
	LANGUAGE sql
	STABLE
AS $$
	

  select datediff(month ,to_date(cast($1 as varchar(6))+'01', 'yyyyMMdd'),to_date(cast($2 as varchar(6))+'01', 'yyyyMMdd'))::integer;

 
$$
;

CREATE OR REPLACE FUNCTION schm_artifacts.f_period($1 date)
	RETURNS int4
	LANGUAGE sql
	STABLE
AS $$
	

select CAST(TO_CHAR($1,'YYYYMM') AS INTEGER)


$$
;

CREATE OR REPLACE FUNCTION schm_artifacts.f_period_add_n_months(period int4, n int4)
	RETURNS int4
	LANGUAGE sql
	STABLE
AS $$
	
	

select CAST(TO_CHAR(DATEADD(month, $2, TO_DATE($1, 'YYYYMM')),'YYYYMM') AS INTEGER)



$$
;

CREATE OR REPLACE FUNCTION schm_artifacts.f_test_interpolado($1 numeric, $2 numeric, $3 numeric, $4 numeric, $5 numeric, $6 numeric)
	RETURNS float8
	LANGUAGE sql
	STABLE
AS $$
	
	
 
SELECT
CASE
	WHEN $1 = 0 THEN 0
	WHEN $2 = 0 THEN 0
	WHEN $4 > $3 AND $1 > $4 then $6
	WHEN $4 > $3 AND $1 < $3 then $5
	WHEN $4 < $3 AND $1 > $3 then $5
	WHEN $4 < $3 AND $1 < $4 then $6
	ELSE ($5 + (($6 - $5)/(POW($4, $2) - POW($3, $2))) * (POW($1, $2) - POW($3, $2)))
END;
 
 

$$
;

CREATE OR REPLACE FUNCTION schm_artifacts.f_tramificar(saldo int4)
	RETURNS varchar
	LANGUAGE plpythonu
	STABLE
AS $$
	
    
    def sb_tramificar(saldo):
        if saldo <= 0:
            return '0. 0'
        else:
		    tramo = (saldo // 500000) + 1
		    if 0 < tramo <= 400:
		        lower_bound = max(500000 * (tramo - 1), 0)
		        upper_bound = min(500000 * tramo, 500000)
		        lower_str = '{:.1f}MM'.format(lower_bound / 1e6) if lower_bound > 0 else '0'
		        second_digit = int(str(saldo)[1]) if len(str(saldo)) > 1 else 0
		    
		        if lower_bound == 0:
		            upper_str = '500M'
		        elif 0 <= second_digit <= 4:
		            upper_str = '{}MM'.format(int(str(saldo)[0]) + 0.5) if int(str(saldo)[0]) > 0 else '0.5MM'
		        else:
		            if 500000 <= saldo < 1000000:
		                upper_str = '1MM'
		            else:
		                upper_str = '{}MM'.format(int(str(saldo)[0]) + 1)
		                
		        return '{:02d}. [ {} - {} )'.format(tramo, lower_str, upper_str)
		    else:
		        return '>= 200MM'

    return sb_tramificar(saldo)

#	===========================================================================================================
#	=== Control de versiones visual ===
#	2023-11-14	-- v01	--	Christian Bastías	--	Versión original refactorizada.
#
#	=== Información adicional:
#	Función tramificar, refactorizada.
#	===========================================================================================================


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.f_unload_s3_txt(v_query varchar, v_nombre_archivo varchar)
	LANGUAGE plpgsql
AS $$
	
BEGIN
	
EXECUTE
	'UNLOAD('
	|| quote_literal(v_query)
	|| ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/'||v_nombre_archivo||''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off 
	ALLOWOVERWRITE extension ''txt'' DELIMITER '';'';';
RETURN;

END;
	

$$
;

CREATE OR REPLACE FUNCTION schm_artifacts.f_valor_interpolado($1 numeric, $2 numeric, $3 numeric, $4 numeric, $5 numeric, $6 numeric)
	RETURNS numeric
	LANGUAGE sql
	STABLE
AS $$
	
	

SELECT
CASE
	WHEN $1 = 0 THEN 0
	WHEN $2 = 0 THEN 0
	WHEN $4 > $3 AND $1 > $4 then $6
	WHEN $4 > $3 AND $1 < $3 then $5
	WHEN $4 < $3 AND $1 > $3 then $5
	WHEN $4 < $3 AND $1 < $4 then $6
	ELSE $5 + (($6 - $5)/(($4 * $2) - ($3 * $2))) * (($1 * $2) - ($3 * $2))
END;


$$
;

CREATE OR REPLACE FUNCTION schm_artifacts.get_dv(rut varchar)
	RETURNS varchar
	LANGUAGE plpythonu
	IMMUTABLE
AS $$
	 
    def calculate_dv(rut): 
    	incremetal_operators = [2,3,4,5,6,7,2,3,4,5,6,7,2][:len(rut)]
    	rut_list = []
    	for num in rut:
    		rut_list.append(int(num)*incremetal_operators.pop())
    	
    	dv = str(11- (sum(rut_list)%11))
    	if dv == '10':
    		return 'k'
    	if dv == '11':
    		return '0'
    	return dv
    	
 
    return calculate_dv(rut)

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.matinal_falla()
	LANGUAGE plpgsql
AS $$
	
	
	
	
	
	
BEGIN


    CREATE TABLE schm_workspace.matinal_falla AS
    SELECT
        a.*
    FROM br_dm_prod_bigdata.sas_mdpg_contrato_epu a;

         


END;






$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.ppff_panel_cta_vta(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
-- DECLARE
--   min_val int;

BEGIN

    DROP TABLE IF EXISTS schm_workspace.ppff_dotacion;
    DROP TABLE IF EXISTS schm_workspace.ppff_foto_panes_hoy_tmp;
    DROP TABLE IF EXISTS schm_workspace.ppff_foto_panes_hoy;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_stock_cuenta_vista;
    DROP TABLE IF EXISTS schm_workspace.ppff_curse_debito;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_stock_cuenta_vista_camal;
    DROP TABLE IF EXISTS schm_workspace.ppff_plasticos_cierre;
    DROP TABLE IF EXISTS schm_workspace.ppff_max_plastico;
    DROP TABLE IF EXISTS schm_workspace.ppff_plasticos_cierre2;
    DROP TABLE IF EXISTS schm_workspace.ppff_mpdt666;
    DROP TABLE IF EXISTS schm_workspace.ppff_base_plasticos2;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_stock_cuenta_vista;
    DROP TABLE IF EXISTS schm_workspace.ppff_mpdt666;
    DROP TABLE IF EXISTS schm_workspace.ppff_cdp;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_stock_cuenta_vista_funcionario;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_saldos_cuenta_vista;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_saldos_cuenta_vista2;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_saldos_cuenta_vista2_funcionario;
    DROP TABLE IF EXISTS schm_workspace.ppff_core_venta;
    DROP TABLE IF EXISTS schm_workspace.ppff_dotacion;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_saldos_cuenta_vista;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_salida_panel_ctavta;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_stock_cuenta_vista_validada;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_saldos_cuenta_vista2_validado;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_suscritos_cv_validado;
    DROP TABLE IF EXISTS schm_workspace.ppff_panel_ctavta;
    DROP TABLE IF EXISTS schm_workspace.ppff_final_plasticos;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_stock_cuenta_vista_captado;
    -------------------------------------------------------------------------------------------------;
    -- [00.4] Base dotación;
    -------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_dotacion AS
        SELECT max(periodo)
        FROM schm_data_analytics.clts_dotacion;

    -- ------------------------------------------------------------------------------------------------;
    --  [00.5] Base Panes;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_foto_panes_hoy_tmp AS
    SELECT
        b.pemid_gls_nro_dct_ide_k as rut
        ,a.codent
        ,a.centalta
        ,a.cuenta
        ,a.calpart
        ,a.codent||a.centalta||a.cuenta as ctto
        ,c.fecalta as fecalta_ctto
        ,c.fecbaja as fecbaja_ctto
        ,g.numplastico
        ,g.pan
        ,g.panant
        ,g.feccadtar
        ,g.indulttar
        ,g.numbencta
        ,g.fecalta as fecalta_tr
        ,g.fecbaja as fecbaja_tr
        ,g.indsittar
        ,h.dessittar
        ,g.fecultblq
        ,g.codblq
        ,g.texblq
        ,i.desblq
        ,substring(g.pan,13,4) as pan2
        ,a.codent||a.centalta||a.cuenta|| substring(g.pan,13,4)  as contrato_pan
    FROM br_dm_prod_bigdata_reporitf_db.mpdt013 A /*CONTRATO de Tarjeta*/
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 C /*CONTRATO*/
        ON (a.codent=c.codent)
               AND (a.centalta=c.centalta)
               AND (a.cuenta=c.cuenta)
    INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide B
        ON a.identcli = b.pemid_nro_inn_ide
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt009 G /*Tarjeta*/
        ON (a.codent=g.codent)
               AND (a.centalta=g.centalta)
               AND (a.cuenta=g.cuenta)
               AND (a.numbencta=g.numbencta)
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt063 H
        ON (G.CODENT=H.CODENT)
               AND (g.indsittar=h.indsittar)
    LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt060 I
        ON (g.codblq=i.codblq)
    WHERE c.producto='08'
    ;

    CREATE TABLE schm_workspace.ppff_foto_panes_hoy AS
    SELECT
        rut
        ,codent
        ,centalta
        ,cuenta
        ,calpart
        ,ctto
        ,CASE
            WHEN
                fecbaja_ctto = '0001-01-01' THEN 1 ELSE 0
        END AS t_ctto_vigente
        ,fecalta_ctto
        ,fecbaja_ctto
        ,CASE
            WHEN substring(pan,1,6) IN('628156') THEN 'CERRADA'
            WHEN substring(pan,1,4) IN('6392') THEN 'CUENTA VISTA'
            WHEN substring(pan,1,6) in ('525384') then 'CUENTA VISTA'
            WHEN substring(pan,1,6) IN('549070')AND substring(pan,1,7) >=5490702 THEN 'TAM CHIP'
            WHEN substring(pan,1,6) IN('549070')AND substring(pan,1,7) < 5490702 THEN 'TAM'
            ELSE 'CERRADA'
        END AS tipo_tr
        ,numplastico
        ,pan
        ,panant
        ,feccadtar
        ,indulttar
        ,numbencta
        ,fecalta_tr
        ,fecbaja_tr
        ,indsittar
        ,dessittar
        ,fecultblq
        ,codblq as cod_bloq_tr
        ,CASE
            WHEN codblq = 1 AND texblq = 'BLOQUEO TARJETA NO ISO' THEN 'BLOQUEO TARJETA NO ISO'
            WHEN codblq = 1 AND texblq NOT IN ('BLOQUEO TARJETA NO ISO') THEN 'ROBO/CODIGO_BLOQUEO'
            WHEN codblq IN (79,98) THEN 'CAMBIO DE PRODUCTO'
            WHEN codblq IN (16,43) THEN 'FRAUDE'
            WHEN codblq > 1 AND codblq NOT IN (16,43,79,98) THEN desblq
        END AS motivo_bloqueo
        ,CASE
            WHEN indsittar=5 AND fecalta_tr<>'0001-01-01' AND fecbaja_tr='0001-01-01' AND codblq=0
            THEN 1 ELSE 0
        END AS t_tr_vig
        ,pan2
        ,contrato_pan
    FROM schm_workspace.ppff_foto_panes_hoy_tmp;

    -- ==================================================================================================;
    --  [01] Base de datos de Stock de Cuenta Vista;
    -- ==================================================================================================;

    -- --------------------------------------------------------------------------------------------------;
    --  [01.1] Generar Tabla Stock de Cuenta Vista;
    -- --------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_sb_stock_cuenta_vista as
        SELECT
            a.cli_identifica as  rut
            ,a.cli_identifica_dv as dv
            ,b.vis_numcue as cuenta
            ,b.vis_fechape as fecha_apertura
            /*b.vis_fechcierr,*/
            ,b.vis_fechcierr as fecha_cierre
            /*b.vis_status  estado,*/
            ,CASE
                WHEN b.vis_pro=4 THEN 'CUENTA_VISTA'
                WHEN b.vis_pro=40 THEN 'LCA'
            END as descrip_producto
            ,CASE
                WHEN b.vis_status ='9' THEN 'cerrado'
                when b.vis_status ='2' then 'vigente'
            END as estado_cuenta
            /*c.DES_CODTAB,*/
            ,b.vis_suc as sucursal_apertura
            ,c.des_codigo as cod_cierre_contrato
            ,c.des_descripcion as desc_cierre_contrato
            ,schm_artifacts.f_period(b.vis_fechape) as p_apertura
            ,schm_artifacts.f_period(b.vis_fechcierr) as p_cierre
        FROM br_dm_prod_bigdata_fisa_db.tcap_vista b
        INNER JOIN br_dm_prod_bigdata_fisa_db.tcli_persona a
                ON (a.cli_codigo=b.vis_codcli)
        LEFT JOIN br_dm_prod_bigdata_fisa_db.tgen_desctabla c
               ON (b.VIS_CODTAB=c.DES_CODTAB)
              AND (b.VIS_CAUCIERR=c.DES_CODIGO)
        WHERE   b.vis_mod=4
            AND (b.VIS_PRO=4)
            AND b.vis_tip=1;

    -- --------------------------------------------------------------------------------------------------;
    --  [01.2] Captados digitales;
    -- --------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_curse_debito AS
        SELECT
            tar.tar_cac_nro_ctt_k as numero_contrato
            ,tar.tar_cac_nro_pan_k as numero_tarjeta
            ,substring(prd.prd_cac_nro_ctt,9) as numero_cuenta_vista
            ,sol.sol_cod_ide_cli as rut_cliente
            ,per.per_cac_ide_cli_dv as dv
            ,sol.sol_fch_alt_sol as fecha_solicitud
            ,sol.sol_cod_nro_sol_k as numero_solicitud
            ,sol.sol_cod_est_sol as estado
        FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol as SOL
        INNER JOIN br_dm_prod_bigdata_reporitf_db.SFADMI_BCO_TAR as TAR
           ON tar.tar_cod_nro_sol_k = sol.sol_cod_nro_sol_k
        INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol as PRD
           ON tar.tar_cod_nro_sol_k = prd.prd_cod_nro_sol_k
           AND tar.tar_cod_tip_prd_k = prd.prd_cod_tip_prd_k
        INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_dat_per as PER
           ON prd.prd_cod_nro_sol_k = per.per_cod_nro_sol_k
         AND sol.sol_cod_ide_cli = per.per_cod_ide_cli_k
        WHERE
         substring(tar.tar_cod_tip_prd_k,1,2) = '04'
        AND (sol.sol_cod_cll_act = 14 OR sol.sol_cod_cll_ant = 14)
        AND sol.sol_cod_cll_adm = 2
        AND sol.sol_fch_crc_sol
            between v_fecha_inicio AND v_fecha_fin
        AND EXISTS (SELECT btc_cod_nro_sol_k
                    FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
                    WHERE btc_cod_nro_sol_k = sol.sol_cod_nro_sol_k
                    AND btc_cod_tip_reg_k = 1
                    AND btc_cod_eta_k = 102
                    AND btc_cod_evt_k = 30)
        ORDER BY sol.sol_cod_nro_sol_k ASC;


    CREATE TABLE schm_workspace.ppff_sb_stock_cuenta_vista_camal AS
        SELECT
            a.*
            ,CASE
                WHEN b.rut_cliente IS NOT NULL AND b.numero_cuenta_vista IS NOT NULL THEN 'CAPTA_ONLINE'
                WHEN  b.rut_cliente IS NULL AND b.numero_cuenta_vista IS NULL AND a.sucursal_apertura=70 THEN 'PWA'
                ELSE 'PRESENCIAL'
            END AS tipo_capta
        FROM schm_workspace.ppff_sb_stock_cuenta_vista as a
        LEFT JOIN schm_workspace.ppff_curse_debito as b
               ON (a.rut=b.rut_cliente) AND (a.cuenta=b.numero_cuenta_vista)
        ;
    -- --------------------------------------------------------------------------------------------------;
    --  [01.3] Ultimo pan vigente del periodo;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_plasticos_cierre as
    SELECT *
    FROM schm_workspace.ppff_foto_panes_hoy
    WHERE fecalta_tr <= v_fecha_fin
    ;

    CREATE TABLE schm_workspace.ppff_max_plastico AS
    SELECT
        ctto
        ,max(numplastico) as numplastico
    FROM schm_workspace.ppff_plasticos_cierre
    GROUP BY ctto
    ;


    CREATE TABLE schm_workspace.ppff_plasticos_cierre2 AS
    SELECT
        a.*
    FROM schm_workspace.ppff_plasticos_cierre as a
    INNER JOIN schm_workspace.ppff_max_plastico as b
            ON (a.ctto=b.ctto)
           AND (a.numplastico=b.numplastico)
    ;

    CREATE TABLE schm_workspace.ppff_mpdt666 as
    SELECT
        codent1,
        centalta1,
        cuenta1,
        cuenta2 as cv
    FROM br_dm_prod_bigdata_reporitf_db.mpdt666
    ;


    CREATE TABLE schm_workspace.ppff_base_plasticos2 as
    SELECT
        a.*
        ,b.cv as cuenta_cv
    FROM schm_workspace.ppff_plasticos_cierre2 as a
    LEFT JOIN schm_workspace.ppff_mpdt666 as b
           ON (a.ctto= b.CODENT1||b.CENTALTA1||b.CUENTA1)
    ;


    CREATE TABLE schm_workspace.ppff_cdp as
    SELECT DISTINCT
        codent
        ,centalta
        ,cuenta
    FROM schm_workspace.ppff_foto_panes_hoy
    WHERE
        fecalta_tr
            between v_fecha_inicio AND v_fecha_fin
    AND (substring(pan,1,6)='525384' AND substring(panant,1,6)='639229')
    ;

    CREATE TABLE schm_workspace.ppff_final_plasticos AS
    SELECT
        a.codent,
        a.centalta,
        a.cuenta,
        a.pan,
        a.cuenta_cv,
        CASE
            WHEN b.cuenta IS NOT NULL AND substring(a.pan,1,6)='525384' THEN 'MAESTRO a MCD'
            WHEN b.cuenta IS NULL AND substring(a.pan,1,6)='525384' THEN 'MCD'
            WHEN b.cuenta IS NULL AND substring(a.pan,1,6)='639229' THEN 'MAESTRO'
            ELSE 'MAESTRO'
        END AS tipo_plastico
    FROM schm_workspace.ppff_base_plasticos2 as a
    LEFT JOIN schm_workspace.ppff_cdp as b
        ON (a.codent=b.codent)
       AND (a.centalta=b.centalta)
       AND (a.cuenta=b.cuenta)
    ;


    DROP TABLE IF EXISTS schm_workspace.ppff_sb_stock_cuenta_vista;
    CREATE TABLE schm_workspace.ppff_sb_stock_cuenta_vista as
    SELECT
        a.*,
        CASE
            WHEN b.cuenta_cv IS NOT NULL THEN b.tipo_plastico ELSE 'MAESTRO'
        END AS tipo_plastico
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_camal as a
    LEFT JOIN schm_workspace.ppff_final_plasticos as b
           ON (a.cuenta=b.cuenta_cv)
    ;

    -- --------------------------------------------------------------------------------------------------;
    -- [01.2] Marcar nuevos y fugados;
    -- --------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_sb_stock_cuenta_vista_captado as
    SELECT
        *
        ,CASE
            WHEN fecha_apertura >= v_fecha_inicio
                AND fecha_apertura <= v_fecha_fin
                THEN 1 else 0 end as si_captado_periodo
        ,case
            WHEN fecha_cierre >= v_fecha_inicio
                     AND fecha_cierre <= v_fecha_fin THEN 1 ELSE 0
        END AS si_fugado_periodo
        ,CASE
            WHEN fecha_apertura< v_fecha_inicio
                     AND (fecha_cierre >= v_fecha_inicio
                              OR fecha_cierre is null) then 1 else 0
        end as si_stock_anterior
    FROM schm_workspace.ppff_sb_stock_cuenta_vista
    ;

    -- --------------------------------------------------------------------------------------------------;
    --  [01.3] Pegar Marca de Funcionarios;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_sb_stock_cuenta_vista_funcionario as
    SELECT
        a.*
        ,CASE
            WHEN b.rut IS NOT NULL THEN 1 ELSE 0
        END AS si_funcionario
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_captado as a
    LEFT JOIN schm_data_analytics.clts_dotacion AS b
       ON (a.rut=b.rut)
      AND cast(schm_artifacts.f_period(DATEADD(month, -3, getdate())::DATE) as integer) = b.periodo
    ;

    -- --------------------------------------------------------------------------------------------------;
    -- [01.4] Dejar tabla en duro;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_sb_stock_cuenta_vista_validada AS  /* VALIDADA */
    SELECT *
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_funcionario
    ;


    -- ==================================================================================================;
    --  [02] Base de Saldos de Cuenta Vista diarios;
    -- ==================================================================================================;

    -- --------------------------------------------------------------------------------------------------;
    --  [02.1] Sacar Base de saldos diarios;
    -- --------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_sb_saldos_cuenta_vista  as
    SELECT
        b.cli_identifica rut,
        to_char(CAST(a.acp_fecha AS date),'yyyyMMdd')::integer AS codfecha,
        a.acp_fecha,
        a.acp_numcue,
        sum(a.acp_salefe + a.acp_sal12h + a.acp_sal24h + a.acp_sal48h)::bigint as saldo
    FROM br_dm_prod_bigdata_fisa_db.tcap_acrpas a
    left join (
        SELECT
            distinct cli_identifica ,vis_numcue
        FROM br_dm_prod_bigdata_fisa_db.tcli_persona ,br_dm_prod_bigdata_fisa_db.tcap_vista
        WHERE cli_codigo=vis_codcli
            AND vis_mod=4
            AND (VIS_PRO=4)
            AND vis_tip=1
            AND (vis_status='2' or vis_status='9')) b
        on(a.acp_numcue=b.vis_numcue)
    WHERE a.acp_pro = 4 AND a.acp_tip = 1
        AND a.acp_fecha::date >=  v_fecha_inicio
        AND a.acp_fecha::date <= v_fecha_fin
        group by
        a.ACP_FECHA,
        a.ACP_NUMCUE,
        b.cli_identifica
    ;

    -- --------------------------------------------------------------------------------------------------;
    --  [02.2] Calcular por cuenta: Saldo ultimo dia, Saldo promedio, dias con saldo;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_sb_saldos_cuenta_vista2 as
    SELECT
        a.*,
        b.saldo as ultimo_saldo
    FROM (
        SELECT
            ACP_NUMCUE as cuenta,
            max(rut) as rut,
            sum(CASE WHEN Saldo>1 THEN 1 ELSE 0 END) as nro_dias_saldo_mayor_1,
            sum(CASE WHEN Saldo>1 THEN Saldo ELSE 0 END) as sum_saldo_fecha
        FROM schm_workspace.ppff_sb_saldos_cuenta_vista
        GROUP BY acp_numcue
    ) as a
    LEFT JOIN (
        SELECT DISTINCT
            acp_numcue,
            saldo
        FROM schm_workspace.ppff_sb_saldos_cuenta_vista
        WHERE codfecha=(
                SELECT max(CodFecha)
                FROM schm_workspace.ppff_sb_saldos_cuenta_vista)
    ) as b
    ON (a.cuenta=b.acp_numcue)
    ;

    -- --------------------------------------------------------------------------------------------------;
    --  [02.3] Marcar Funcionarios;
    -- --------------------------------------------------------------------------------------------------;


    CREATE TABLE schm_workspace.ppff_sb_saldos_cuenta_vista2_funcionario AS
    SELECT
        a.*
        ,CASE
            WHEN b.rut IS NOT NULL THEN 1 ELSE 0
        END AS si_funcionario
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2 as a
    LEFT JOIN schm_data_analytics.clts_dotacion AS b
           ON (a.rut=b.rut)
           AND cast(schm_artifacts.f_period(DATEADD(month, -3, getdate())::DATE) as integer) = b.periodo
    ;


    -- --------------------------------------------------------------------------------------------------;
    --  [02.4] Dejar tabla en duro;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_sb_saldos_cuenta_vista2_validado as	/*	VALIDADO	*/
    SELECT *
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_funcionario
    ;

    -- ==================================================================================================;
    --  [03] Base de Movimientos de Cuenta Vista;
    -- ==================================================================================================;

    /*Pendiente Categorizar movimientos (por ejempo Movs de DAP)*/

    -- --------------------------------------------------------------------------------------------------;
    -- [03.1] Extraer Movimientos de debito totales;
    -- --------------------------------------------------------------------------------------------------;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_mov_cuenta_vista_mvtos_det_temp;
    CREATE TABLE schm_workspace.ppff_sb_mov_cuenta_vista_mvtos_det_temp as
    SELECT
        c2.cli_identifica rut
        ,c2.cli_identifica_dv dv
        ,schm_artifacts.f_period(c1.tmo_fech) as periodo
        ,c1.tmo_fech as CodFecha
        ,c1.tmo_hora as CodFechaHora
        ,c1.tmo_numcue as cuenta
        ,c1.tmo_fechcon as fechacon
        ,c1.tmo_fech as fecha
        ,c1.rub_desc as descripcion
        ,c1.tmo_val as monto
        ,c1.con_libre as desc_negocio
        ,c1.tmo_codmod
        ,c1.tmo_tipotra
        ,c1.tmo_rubro
        ,c1.tmo_numtra
        ,c1.tmo_numcue
        ,c1.tmo_codusr
        ,c1.tmo_sec
        ,c1.tmo_codtra
        ,(
            SELECT cod_destra
            FROM br_dm_prod_bigdata_fisa_db.tgen_codtrans
            WHERE cod_tra = tmo_codtra AND cod_mod = tmo_codmod
        ) as gls_transac
        ,CASE
            WHEN c1.tmo_tipotra='D' THEN 'CARGO'
            WHEN c1.tmo_tipotra='C' THEN 'ABONO'
        END AS tipo_movimiento,
        CASE
            WHEN c1.tmo_rubro = 1 AND c1.tmo_codtra = 30 AND c1.con_libre LIKE 'Depo%' THEN 1
            ELSE 0
        END as marca_dap,
        CASE
            WHEN c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS' AND (
                c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%'
                OR c1.con_libre LIKE '%Sueldos%')  THEN 1
        ELSE 0
        END as si_abr,
    CASE
        WHEN c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS'
                  AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre like '%Sueldos%')
                  AND c1.con_libre LIKE '%BANCO RIPLEY%' THEN 'BANCO RIPLEY'
        WHEN c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS'
                 AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre like '%Sueldos%')
                 AND c1.con_libre LIKE '%CAR S.A.%' THEN 'CAR'
        WHEN c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS'
                  AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre like '%Sueldos%')
                  AND c1.con_libre LIKE '%RIPLEY STORE%' THEN 'RIPLEY STORE'
        WHEN c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS'
                AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre like '%Sueldos%')
                AND (
                    c1.con_libre NOT LIKE ('%RIPLEY STORE%') or c1.con_libre NOT like ('%CAR S.A.%') or c1.con_libre NOT like ('%BANCO RIPLEY%')
                ) THEN 'OTROS BANCOS' else ''
        END AS descripcion_abr,
        CASE
            WHEN c1.tmo_tipotra='D'
                     AND (c1.con_libre like '%Ripley%' OR c1.con_libre like '%RIPLEY%')
                     AND  c1.con_libre NOT like '%PAGO%' THEN 'COMPRA_RIPLEY' else ''
        END AS compra_ripley
        FROM (
        SELECT *
            FROM br_dm_prod_bigdata_fisa_db.tcap_tramon /*base de movimientos*/
                , br_dm_prod_bigdata_fisa_db.TGEN_TRANRUBRO /*base descriptiva (para complementar movimientos)*/
                , br_dm_prod_bigdata_fisa_db.tcap_concepto /*base descriptiva (para complementar movimientos)*/
            WHERE
                rub_mod = tmo_codmod /*unificacion de base de movs con rubro*/
            AND rub_tra = tmo_codtra /*unificacion de base de movs con rubro*/
            AND rub_rubro = tmo_rubro /*unificacion de base de movs con rubro*/

            AND con_modulo(+) = tmo_codmod /*unificacion de base de movs con con_*/
            AND con_rubro(+) = tmo_rubro /*unificacion de base de movs con con_*/
            AND con_numtran(+) = tmo_numtra /*unificacion de base de movs con con_*/
            AND con_cuenta (+) = tmo_numcue /*unificacion de base de movs con con_*/
            AND con_codusr(+) = tmo_codusr /*unificacion de base de movs con con_*/
            AND con_sec(+) = tmo_sec /*unificacion de base de movs con con_*/
            AND con_transa(+) = tmo_codtra /*unificacion de base de movs con con_*/
            /*FILTROS DE MOVIMIENTOS*/
            AND tmo_tipotra in ('D','C') /*D=Cargo, C=Abono*/
            AND tmo_codpro = 4
            AND tmo_codtip = 1
            AND tmo_modo = 'N'
            AND tmo_val > 1 /*solo montos mayores a 1 peso (mov de prueba)*/

            AND tmo_fechcon >= v_fecha_inicio
            AND tmo_fechcon <= v_fecha_fin

        /*FINAL: QUERY DESDE OPERACIONES*/
        )  c1
        LEFT JOIN (
            SELECT
                DISTINCT cli_identifica, cli_identifica_dv ,vis_numcue
            FROM br_dm_prod_bigdata_fisa_db.tcli_persona /*MAESTRA DE CLIENTES BANCO*/
                ,br_dm_prod_bigdata_fisa_db.tcap_vista /*SALDOS CUENTAS VISTAS */
            WHERE cli_codigo=vis_codcli
                AND vis_mod=4/*cuenta vista*/
                AND (VIS_PRO=4/*CV*/)
                AND vis_tip=1  /*persona no juridica*/
                AND (vis_status='2' or vis_status='9') /*solo aquellas con estado vigente o cerrado*/
        )  C2
        ON (c1.tmo_numcue=c2.vis_numcue)
    ;

    DROP TABLE IF EXISTS schm_workspace.ppff_sb_mov_cuenta_vista_mvtos_det;
    CREATE TABLE schm_workspace.ppff_sb_mov_cuenta_vista_mvtos_det as
    SELECT
        *,
        CASE
            WHEN tmo_tipotra='C' THEN
                CASE
                    WHEN descripcion IN ('VALOR EFECTIVO','EN EFECTIVO') AND GLS_TRANSAC ='DEPOSITO' AND  SI_ABR<>1  THEN 'Depósitos en Efectivo'
                    WHEN descripcion IN ('CON DOCUMENTOS') AND GLS_TRANSAC ='DEPOSITO' AND SI_ABR<>1 THEN 'Depósitos con Documento'
                    WHEN descripcion IN ('TRANSFERENCIA DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas'
                    WHEN descripcion IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas'
                    WHEN descripcion IN ('DESDE OTROS BANCOS') AND  SI_ABR=1 THEN 'Abono de Remuneraciones'
                    WHEN descripcion IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 AND DESC_NEGOCIO like '%Proveedores%' THEN 'TEF Recibidas'
                    WHEN descripcion IN ('POR REGULARIZACION') AND  SI_ABR<>1 THEN 'Otros (pago proveedores)'
                    WHEN descripcion IN ('DESDE LINEA DE CREDITO') AND GLS_TRANSAC ='TRASPASO DE FONDOS' AND  SI_ABR<>1 THEN 'Traspaso desde LCA'
                    WHEN descripcion IN ('AVANCE DESDE TARJETA DE CREDITO BANCO RIPLEY') AND  SI_ABR<>1 THEN 'Avance desde Tarjeta Ripley'
                    WHEN descripcion IN ('DEVOLUCION COMISION') AND  SI_ABR<>1 THEN 'DEVOLUCION COMISION'
                    WHEN descripcion IN ('POR TRANSFERENCIA  DE LCA A CTA VISTA') AND  SI_ABR<>1 THEN 'Traspaso desde LCA' ELSE 'OTROS ABONOS'
            END ELSE ''
        END AS descripcion_abono,

        CASE
            WHEN tmo_tipotra='D' THEN
                CASE
                    WHEN descripcion IN ('COMPRA NACIONAL') THEN 'Compras Redcompra'
                    WHEN descripcion IN ('COMPRA NACIONAL MCD') THEN 'Compras Redcompra MCD'
                    WHEN descripcion IN ('COMPRA INTERNACIONAL') THEN 'Compras Internacionales'
                    WHEN descripcion IN ('COMPRA INTERNACIONAL MCD') THEN 'Compras Internacionales MCD'
                    WHEN descripcion IN ('CARGO POR PEC') THEN 'PEC'
                    WHEN descripcion IN ('GIRO CAJERO AUTOMATICO') THEN 'Giros ATM'
                    WHEN descripcion IN ('GIRO ATM INTERNACIONAL MCD') then 'Giros internacional MCD'
                    WHEN descripcion IN ('GIRO ATM NACIONAL MCD') then 'Giros ATM MCD'
                    WHEN descripcion IN ('GIRO POR CAJA') THEN 'Giros Caja'
                    WHEN descripcion IN ('GIRO INTERNACIONAL') THEN 'Giro Internacional'
                    WHEN descripcion IN ('TRANSFERENCIA A OTROS BANCOS') THEN 'TEF emitidas Otros Bancos'
                    WHEN descripcion IN ('PAGO TARJETA DE CREDITO') THEN 'Pago de Tarjeta'
                    WHEN descripcion IN ('A CUENTA BANCO RIPLEY','POR TRASPASO A CUENTA')  THEN 'Pago LCA'
                    WHEN descripcion IN ('COSTO DE MANTENCIÓN MENSUAL CUENTA VISTA') then 'Comision planes'
                    else 'OTROS CARGOS'
            end else ''
        END AS descripcion_cargo
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_mvtos_det_temp
    ;

    -- --------------------------------------------------------------------------------------------------;
    --  [03.2] Pegar Marca de Funcionario;
    -- --------------------------------------------------------------------------------------------------;

    DROP TABLE IF EXISTS schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios;
    CREATE TABLE schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios as
    SELECT
        a.*,
    CASE
        WHEN b.rut IS NOT NULL THEN 1 ELSE 0
    END AS si_funcionario
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_mvtos_det as a
    LEFT JOIN schm_data_analytics.clts_dotacion as b
          on (a.rut=b.rut)
         AND cast(schm_artifacts.f_period(DATEADD(month, -3, getdate())::DATE) as integer) = b.periodo
    ;



    -- --------------------------------------------------------------------------------------------------;
    --  [03.3] Dejar tabla en duro;
    -- --------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada as	/*	VALIDADO	*/
    SELECT *
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios
    ;

    -- ==================================================================================================;
    --  [04] Base de Suscritos Abono de remuneraciones (desde bases control comercial);
    -- ==================================================================================================;

    -- --------------------------------------------------------------------------------------------------;
    --  [04.1] Generar Tabla de Core de Ventas;
    -- --------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_core_venta AS
    SELECT distinct
    *,
    t1.fecha as fec_num
    FROM schm_data_analytics.ppff_capta_salida t1
    /*inner join GEDCRE_CREDITO.CORE_VENTA t2 on t1.RUT_CLIENTE=t2.RUT_CLIENTE */
        WHERE
            t1.COD_PROD=4 /*AND t1.PRODUCTO = ('CUENTA VISTA')*/
        AND T1.fecha::date >= v_fecha_inicio
        AND T1.fecha::date <= v_fecha_fin
    ;

    -- --------------------------------------------------------------------------------------------------;
    -- [04.2] Suscritos en CV segun control de seguimiento;
    -- --------------------------------------------------------------------------------------------------;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_suscritos_cv;
    CREATE TABLE schm_workspace.ppff_sb_suscritos_cv as
    SELECT
          a.nro_solicitud
        , a.prd_cac_det_prd
        , b.rut_cliente as rut
    FROM (
        SELECT DISTINCT
            ps.prd_cod_nro_sol_k as nro_solicitud
           ,ps.prd_cac_det_prd
        FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol ps
        WHERE
            ps.prd_cod_tip_prd_k like '%04%') a
    INNER JOIN schm_workspace.ppff_core_venta as b
            ON (a.nro_solicitud=b.nro_solicitud)
    ;

    -- --------------------------------------------------------------------------------------------------;
    --  [04.3] Pegar Marca de Funcionario;
    -- --------------------------------------------------------------------------------------------------;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_suscritos_cv_funcionario;
    CREATE TABLE schm_workspace.ppff_sb_suscritos_cv_funcionario as
    SELECT
         a.*
        ,CASE
            WHEN b.rut IS NOT NULL THEN 1
            ELSE 0
        END AS si_funcionario
    FROM schm_workspace.ppff_sb_suscritos_cv as a
    LEFT JOIN schm_data_analytics.clts_dotacion as b
           ON a.rut = b.rut
          AND cast(schm_artifacts.f_period(DATEADD(month, -3, getdate())::DATE) as integer) = b.periodo
    ;

    -- --------------------------------------------------------------------------------------------------;
    --  [04.4] Dejar tabla en duro;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_sb_suscritos_cv_validado as 	/*	VALIDADO	*/
    SELECT *
    FROM schm_workspace.ppff_sb_suscritos_cv_funcionario
    ;

    -- ==================================================================================================;
    --  [05] Informacion de Captaciones de CtaVta segun control comercial;
    -- ==================================================================================================;


    /*Pendiente identificar*/



    -- ==================================================================================================;
    -- [06] Comenzar a Generar Salidas de cara al panel de cuenta Vista;
    -- ==================================================================================================;


    -- --------------------------------------------------------------------------------------------------;
    --  [05.1] Total;
    -- --------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_sb_salida_panel_ctavta as
    SELECT
        '001.00' as nro_fila
       ,'Clientes Totales' as observacion
       ,'----------------------' as categoria
       ,max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario >= 0

    UNION

    SELECT
        '001.01' as nro_fila
       ,'Clientes Totales' as observacion
       ,'Stock' as categoria
       ,max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario >= 0

    UNION

    SELECT
          '001.02' as Nro_Fila
        ,'Clientes Totales' as Observacion
        ,'Stock CV Inicio de Periodo' as Categoria
        ,COUNT(CASE WHEN p_apertura < v_periodo AND (p_cierre IS NULL OR p_cierre >= v_periodo) THEN cuenta END) AS valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario >= 0

    UNION

    SELECT
        '001.03' as nro_fila,
        'Clientes Totales' as observacion,
        'Captacion' as categoria,
        sum(si_captado_periodo) as valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario >= 0

    UNION

    SELECT
        '001.04' as nro_fila
        ,'Clientes Totales' as observacion
        ,'Cierre' as categoria
         ,COUNT(CASE WHEN p_cierre = v_periodo THEN cuenta END) AS Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario >= 0

    union

    SELECT
        '001.05' as Nro_Fila
       ,'Clientes Totales' as Observacion
       ,'Stock CV Final de periodo' as Categoria
       ,COUNT(CASE WHEN p_apertura <= v_periodo AND (p_cierre IS NULL OR p_cierre > v_periodo) THEN cuenta END) AS valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '001.06' as nro_fila
       ,'Clientes Totales' as observacion
       ,'Tasa de cierre' as categoria
       ,max(0) as valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    /*Bloque2: Informacion de uso CV*/
    SELECT
        '002.00' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '002.01' as nro_fila
        ,'Clientes Totales' as observacion
        ,'Informacion de uso CV' as categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    union

    SELECT
        '002.02' as nro_fila
        ,'Clientes Totales' as observacion
        ,'# de Cuentas con Movimientos cargos o abonos' as categoria
        ,count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE
            si_funcionario >= 0
        AND (descripcion_abono in (
            'Depósitos en Efectivo',
            'Depósitos con Documento',
            'TEF Recibidas',
            'Abono de Remuneraciones',
            'Otros (pago proveedores)',
            'Traspaso desde LCA',
            'Avance desde Tarjeta Ripley',
            'OTROS ABONOS')
        OR Descripcion_Cargo in (
            'Comision planes',
            'Compras Internacionales',
            'Compras Internacionales MCD',
            'Compras Redcompra',
            'Compras Redcompra MCD',
            'Giro Internacional',
            'Giros ATM',
            'Giros Caja',
            'PEC',
            'Pago LCA',
            'Pago de Tarjeta',
            'TEF emitidas Otros Bancos',
            'Giros internacional MCD',
            'Giros ATM MCD',
            'OTROS CARGOS'))

    union

    SELECT
        '002.03' as nro_fila
        ,'Clientes Totales' as observacion
        ,'# de Cuentas con Cargos' as categoria
        ,count(distinct cuenta) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE
        si_funcionario>=0
    AND (descripcion_cargo in (
            'Comision planes',
            'Compras Internacionales',
            'Compras Redcompra',
            'Compras Internacionales MCD',
            'Compras Redcompra MCD',
            'Giro Internacional',
            'Giros ATM',
            'Giros Caja',
            'PEC',
            'Pago LCA',
            'Pago de Tarjeta',
            'TEF emitidas Otros Bancos',
            'Giros internacional MCD',
            'Giros ATM MCD',
            'OTROS CARGOS'))
    UNION

    SELECT
        '002.04' as nro_fila
        ,'Clientes Totales' as observacion
        ,'Cuentas con compras' as categoria
        ,count(distinct cuenta) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE
        si_funcionario>=0
    AND (Descripcion_Cargo in (
        'Compras Internacionales',
        'Compras Redcompra',
        'Compras Internacionales MCD',
        'Compras Redcompra MCD'))

    UNION

    SELECT
        '002.05' as nro_fila
       ,'Clientes Totales' as observacion
       ,'Cuentas con Giros' as categoria
       ,count(distinct cuenta) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
        'Giro Internacional',
        'Giros ATM',
        'Giros Caja',
        'Giros internacional MCD',
        'Giros ATM MCD'))

    UNION

    SELECT
        '002.06' as nro_fila,
        'Clientes Totales' as observacion,
        'Cuentas con TEF' as categoria,
        count(distinct cuenta) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
        'TEF emitidas Otros Bancos'))

    UNION

    SELECT
        '002.07' as nro_fila,
        'Clientes Totales' as observacion,
        'Cuentas con Pago' as categoria,
        count(distinct cuenta) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
      AND (Descripcion_Cargo in (
            'Pago de Tarjeta'
            ,'Pago LCA'))

    UNION

    SELECT
        '002.08' as nro_fila,
        'Clientes Totales' as observacion,
        'Cuentas con uso Internacional' as categoria,
        count(distinct cuenta) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
      AND (Descripcion_Cargo in ('Giro Internacional' ,'Giros internacional MCD'))

    union

    SELECT
        '002.09' as nro_fila,
        'Clientes Totales' as observacion,
        '# Cuentas con  Abonos' as categoria,
        count(distinct cuenta) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE
        si_funcionario >= 0
    AND (Descripcion_Abono in (
        'Abono de Remuneraciones'
       ,'Avance desde Tarjeta Ripley'
       ,'Depósitos con Documento'
       ,'Depósitos en Efectivo'
       ,'OTROS ABONOS'
       ,'Otros (pago proveedores)'
       ,'TEF Recibidas'
       ,'Traspaso desde LCA'))

    union

    SELECT
        '002.10' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Depósitos en Efectivo' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE
        si_funcionario>=0
    AND (descripcion_abono in (
        'Depósitos en Efectivo'))

    union

    SELECT
        '002.11' as nro_fila,
        'Clientes Totales' as observacion,
        'Depósitos con Documento' as categoria,
        count(distinct cuenta) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
        'Depósitos con Documento'))

    UNION

    SELECT
        '002.12' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'TEF Recibidas' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'TEF Recibidas'))

    UNION

    SELECT
        '002.13' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Abono de Remuneraciones' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
        'Abono de Remuneraciones'))

    UNION

    SELECT
        '002.14' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Otros (pago proveedores)' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Otros (pago proveedores)'))

    UNION

    SELECT
        '002.15' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Traspaso desde LCA' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
        'Traspaso desde LCA'))

    UNION

    SELECT
        '002.16' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Avance desde Tarjeta Ripley' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Avance desde Tarjeta Ripley'))

    UNION

    SELECT
        '002.17' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'OTROS ABONOS' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'OTROS ABONOS'))

    UNION

    /*Bloque3: Informacion de uso CV %*/
    SELECT
        '003.00' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.01' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Informacion de uso CV %' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
    '003.02' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '% de Cuentas con movimiento o abonos' as Categoria,
    max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.03' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '% de Cuentas con Cargos' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.04' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cuentas con compras' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.05' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cuentas con Giros' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.06' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cuentas con TEF' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.07' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cuentas con uso Internacional' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.08' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '% Cuentas con Abonos' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.09' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Depósitos en Efectivo' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.10' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Depósitos con Documento' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.11' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'TEF Recibidas' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.12' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Abono de Remuneraciones' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.13' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Otros (pago proveedores)' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.14' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Traspaso desde LCA' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.15' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Avance desde Tarjeta Ripley' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.16' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'OTROS ABONOS' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    /*Bloque4: Informacion de ABR*/
    SELECT
        '004.00' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '004.01' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Informacion de ABR' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '004.02' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# de Cuentas Distintas Total Abonos >= $270.000' as Categoria,
        count(distinct cuenta) as Valor
    FROM (
    SELECT cuenta,sum(Monto) as SUM_Monto
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE
        si_funcionario>=0
    AND GLS_TRANSAC='ABONO'
    AND Descripcion_Abono NOT IN ('Traspaso desde LCA','Abono de Remuneraciones','Avance desde Tarjeta Ripley')
    AND SI_ABR=0
    group by cuenta
    ) as X
    WHERE SUM_Monto>=270000


    UNION

    SELECT
        '004.03' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# de Cuentas Distintas con ABR' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND SI_ABR=1

    UNION

    SELECT
        '004.04' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '% de ABR vigentes' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '004.05' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# de ABR suscritos de los Captados' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_suscritos_cv_validado
    WHERE si_funcionario>=0

    UNION

    SELECT
        '004.06' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Tasa de cruce de ABR en Captacion' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '004.07' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '% de ABR con Cargo' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario=0

    UNION

    /*Bloque5: Informacion de uso CV/por cuenta*/
    SELECT
        '005.00' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario=0

    UNION

    SELECT
        '005.01' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Informacion de uso CV/por cuenta' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.02' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# de movimiento por cuenta cargo y abono' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    union

    SELECT
        '005.03' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# de cargos por cuenta' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.04' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# de compras por cuenta' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0


    UNION

    SELECT
        '005.05' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# de Giros por cuenta' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
    '005.06' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '# de TEF por cuenta' as Categoria,
    max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.07' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# uso internacional por cuenta' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.08' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# Abonos por cuenta' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0


    UNION

    SELECT
        '005.09' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# Depósitos en Efectivo' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.10' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# Depósitos con Documento' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.11' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# TEF Recibidas' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.12' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# Abono de Remuneraciones' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.13' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# Otros (pago proveedores)' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
            '005.14' as Nro_Fila,
            'Clientes Totales' as Observacion,
            '# Traspaso desde LCA' as Categoria,
            max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.15' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# Avance desde Tarjeta Ripley' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0


    UNION

    /*Bloque6: Informacion de Saldo*/
    SELECT
        '006.00' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>=0

    UNION

    SELECT
        '006.01' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Informacion de Saldo' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>=0

    UNION

    SELECT
        '006.02' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cuentas con Saldo >$1' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>=0
    AND Nro_Dias_Saldo_mayor_1>0

    UNION

    SELECT
        '006.03' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cuentas con Saldo >$1 EOP' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>=0
    AND Ultimo_Saldo>1

    UNION

    SELECT
        '006.04' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Saldo Total Promedio Mes (MM$)' as Categoria,
        sum(
                SUM_SALDO_FECHA/(SELECT max(DATE_PART(day, ACP_FECHA::date))
                                 FROM schm_workspace.ppff_sb_saldos_cuenta_vista))/1000000 as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>=0
    AND Nro_Dias_Saldo_mayor_1>0

    UNION

    SELECT
        '006.05' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Saldo Total EOP (MM$)' as Categoria,
        sum(Ultimo_Saldo)/1000000 as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>=0

    UNION

    SELECT
        '006.06' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Saldo Promedio por cuenta Activa ($)' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>=0

    UNION

    /*Bloque7: Informacion de Saldo %*/
    SELECT
        '007.00' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '007.01' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Informacion de Saldo %' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int)) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '007.02' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '% de Cuentas con Saldo' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    /*Bloque8: Movimientos ($)*/
    SELECT
        '008.00' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '008.01' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Movimientos ($)' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '008.02' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cargos' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
        'Comision planes',
        'Compras Internacionales',
        'Compras Redcompra',
        'Compras Internacionales MCD',
        'Compras Redcompra MCD',
        'Giro Internacional',
        'Giros ATM',
        'Giros Caja',
        'OTROS CARGOS',
        'PEC',
        'Pago LCA',
        'Pago de Tarjeta',
        'TEF emitidas Otros Bancos',
        'Giros internacional MCD',
        'Giros ATM MCD'))

    UNION

    SELECT
        '008.03' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
            'Compras Redcompra',
            'Compras Internacionales',
            'Compras Internacionales MCD',
            'Compras Redcompra MCD',
            'PEC'))

    UNION

    SELECT
        '008.04' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras Redcompra' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in ('Compras Redcompra'))

    UNION

    SELECT
        '008.05' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras  Redcompra Tienda' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in ('Compras Redcompra')) AND COMPRA_RIPLEY='COMPRA_RIPLEY'

    UNION

    SELECT
        '008.06' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras Redcompra no Tienda' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in ('Compras Redcompra')) AND COMPRA_RIPLEY<>'COMPRA_RIPLEY'

    UNION

    SELECT
        '008.07' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras Internacionales' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in ('Compras Internacionales'))

    UNION

    SELECT
        '008.08' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'PEC' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in ('PEC'))


    UNION

    SELECT
        '008.09' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Giros' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Giros ATM',
    'Giros Caja',
    'Giro Internacional',
    'Giros internacional MCD',
    'Giros ATM MCD'
    ))

    UNION

    SELECT
        '008.10' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'ATM' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Giros ATM'
    ))

    UNION

    SELECT
        '008.11' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Caja' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Giros Caja'
    ))

    UNION

    SELECT
        '008.12' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Internacional' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Giro Internacional'
    ))

    UNION

    SELECT
        '008.13' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'TEF emitidas' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'TEF emitidas Otros Bancos'
    ))

    UNION

    SELECT
        '008.14' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Otros Bancos' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'TEF emitidas Otros Bancos'
    ))

    UNION

    SELECT
        '008.15' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Pagos' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Pago de Tarjeta',
    'Pago LCA'
    ))

    UNION

    SELECT
        '008.16' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Pago de Tarjeta' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Pago de Tarjeta'
    ))

    UNION

    SELECT
        '008.17' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Pago LCA' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Pago LCA'
    ))

    UNION

    SELECT
        '008.18' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cobro Mantención Cuenta Vista' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in ('Comision planes'))

    UNION

    SELECT
        '008.19' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'OTROS CARGOS' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'OTROS CARGOS'
    ))

    UNION

    SELECT
        '008.20' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Abonos' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Abono de Remuneraciones',
    'Avance desde Tarjeta Ripley',
    'Depósitos con Documento',
    'Depósitos en Efectivo',
    'OTROS ABONOS',
    'Otros (pago proveedores)',
    'TEF Recibidas',
    'Traspaso desde LCA'
    ))

    UNION

    SELECT
        '008.21' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Depósitos en Efectivo' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Depósitos en Efectivo'))

    UNION

    SELECT
        '008.22' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Depósitos con Documento' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Depósitos con Documento'))

    UNION

    SELECT
        '008.23' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'TEF Recibidas' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'TEF Recibidas'))

    UNION

    SELECT
        '008.24' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Abono de Remuneraciones' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE (Descripcion_Abono in (
    'Abono de Remuneraciones'))

    UNION

    SELECT
        '008.25' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Otros (pago proveedores)' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Otros (pago proveedores)'))

    UNION

    SELECT
        '008.26' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Traspaso desde LCA' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Traspaso desde LCA'))

    UNION

    SELECT
        '008.27' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Avance desde Tarjeta Ripley' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Avance desde Tarjeta Ripley'))

    UNION

    SELECT
        '008.28' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'OTROS ABONOS' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'OTROS ABONOS'))

    UNION

    /*Bloque9: Movimientos (Tx)*/
    SELECT
        '009.00' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '009.01' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Movimientos (#)' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '009.02' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Movimientos (#) (Cargos y Abonos)' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Comision planes',
    'Compras Internacionales',
    'Compras Redcompra',
    'Compras Internacionales MCD',
    'Compras Redcompra MCD',
    'Giro Internacional',
    'Giros ATM',
    'Giros Caja',
    'OTROS CARGOS',
    'PEC',
    'Pago LCA',
    'Pago de Tarjeta',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'TEF emitidas Otros Bancos'
    ) or Descripcion_Abono in (
    'Abono de Remuneraciones',
    'Avance desde Tarjeta Ripley',
    'Depósitos con Documento',
    'Depósitos en Efectivo',
    'OTROS ABONOS',
    'Otros (pago proveedores)',
    'TEF Recibidas',
    'Traspaso desde LCA'
    ))

    UNION

    SELECT
        '009.03' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cargos' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Comision planes',
    'Compras Internacionales',
    'Compras Redcompra',
    'Compras Internacionales MCD',
    'Compras Redcompra MCD',
    'Giro Internacional',
    'Giros ATM',
    'Giros Caja',
    'OTROS CARGOS',
    'PEC',
    'Pago LCA',
    'Pago de Tarjeta',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'TEF emitidas Otros Bancos'
    ))

    UNION

    SELECT
        '009.04' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Compras Redcompra',
    'Compras Internacionales',
    'Compras Redcompra MCD',
    'Compras Internacionales MCD',
    'PEC'
    ))

    UNION

    SELECT
        '009.05' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras Redcompra' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Compras Redcompra'
    ))

    UNION

    SELECT
        '009.06' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras  Redcompra Tienda' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Compras Redcompra'
    )) AND COMPRA_RIPLEY='COMPRA_RIPLEY'

    UNION

    SELECT
        '009.07' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras Redcompra no Tienda' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Compras Redcompra'
    )) AND COMPRA_RIPLEY<>'COMPRA_RIPLEY'

    UNION

    SELECT
        '009.08' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras Internacionales' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Compras Internacionales'
    ))

    UNION

    SELECT
        '009.09' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'PEC' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'PEC'
    ))

    UNION

    SELECT
        '009.10' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Giros' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Giros ATM',
    'Giros Caja',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'Giro Internacional'
    ))

    UNION

    SELECT
        '009.11' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'ATM' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Giros ATM'
    ))

    UNION

    SELECT
        '009.12' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Caja' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Giros Caja'
    ))

    UNION

    SELECT
        '009.13' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Internacional' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Giro Internacional'
    ))

    UNION

    SELECT
        '009.14' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'TEF emitidas' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'TEF emitidas Otros Bancos'
    ))

    UNION

    SELECT
        '009.15' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Otros Bancos' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'TEF emitidas Otros Bancos'
    ))

    UNION

    SELECT
        '009.16' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Pagos' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Pago de Tarjeta',
    'Pago LCA'
    ))

    UNION

    SELECT
        '009.17' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Pago de Tarjeta' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Pago de Tarjeta'
    ))

    UNION

    SELECT
        '009.18' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Pago LCA' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Pago LCA'
    ))

    UNION

    SELECT
        '009.19' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cobro Mantenci�n Cuenta Vista' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Comision planes'
    ))

    UNION

    SELECT
        '009.20' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'OTROS CARGOS' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'OTROS CARGOS'
    ))

    UNION

    SELECT
        '009.21' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Abonos' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Abono de Remuneraciones',
    'Avance desde Tarjeta Ripley',
    'Depósitos con Documento',
    'Depósitos en Efectivo',
    'OTROS ABONOS',
    'Otros (pago proveedores)',
    'TEF Recibidas',
    'Traspaso desde LCA'
    ))

    UNION

    SELECT
        '009.22' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Depósitos en Efectivo' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Depósitos en Efectivo'))

    UNION

    SELECT
        '009.23' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Depósitos con Documento' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Depósitos con Documento'))

    UNION

    SELECT
        '009.24' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'TEF Recibidas' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'TEF Recibidas'))

    UNION

    SELECT
        '009.25' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Abono de Remuneraciones' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Abono de Remuneraciones'))

    UNION

    SELECT
        '009.26' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Otros (pago proveedores)' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Otros (pago proveedores)'))

    UNION

    SELECT
        '009.27' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Traspaso desde LCA' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Traspaso desde LCA'))

    UNION

    SELECT
        '009.28' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Avance desde Tarjeta Ripley' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Avance desde Tarjeta Ripley'))

    UNION

    SELECT
        '009.29' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'OTROS ABONOS' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'OTROS ABONOS'))



    UNION

    select
    '010.00' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '----------------------' as Categoria,
    max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0

    UNION

    select
    '010.01' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '$ Compras Redcompra MCD' as Categoria,
    sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>=0
    and (Descripcion_Cargo in (
    'Compras Redcompra MCD'
    ))

    UNION

    select
    '010.02' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '$ Compras  Redcompra MCD Tienda' as Categoria,
    sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>=0
    and (Descripcion_Cargo in (
    'Compras Redcompra MCD'
    )) and COMPRA_RIPLEY='COMPRA_RIPLEY'

    UNION

    select
    '010.03' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '$ Compras Redcompra MCD no Tienda' as Categoria,
    sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>=0
    and (Descripcion_Cargo in (
    'Compras Redcompra MCD'
    )) and COMPRA_RIPLEY<>'COMPRA_RIPLEY'

    UNION

    select
    '010.04' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '$ Compras Internacionales MCD' as Categoria,
    sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>=0
    and (Descripcion_Cargo in (
    'Compras Internacionales MCD'
    ))

    UNION

    select
    '011.00' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '----------------------' as Categoria,
    max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0

    UNION

    select
    '011.01' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '# Compras Redcompra MCD' as Categoria,
    count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>=0
    and (Descripcion_Cargo in (
    'Compras Redcompra MCD'
    ))

    UNION

    select
    '011.02' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '# Compras  Redcompra MCD Tienda' as Categoria,
    count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>=0
    and (Descripcion_Cargo in (
    'Compras Redcompra MCD'
    )) and COMPRA_RIPLEY='COMPRA_RIPLEY'


    UNION

    select
    '011.03' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '# Compras Redcompra MCD no Tienda' as Categoria,
    count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>=0
    and (Descripcion_Cargo in (
    'Compras Redcompra MCD'
    )) and COMPRA_RIPLEY<>'COMPRA_RIPLEY'


    UNION

    select
    '011.04' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '# Compras Internacionales MCD' as Categoria,
    count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>=0
    and (Descripcion_Cargo in (
    'Compras Internacionales MCD'
    ))

    UNION

    select
    '012.00' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '----------------------' as Categoria,
    max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0

    UNION

    select
    '012.01' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Captacion PWA' as Categoria,
    sum(case when tipo_capta='PWA' then SI_Captado_Periodo end) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0

    UNION

    select
    '012.02' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Captacion Online' as Categoria,
    sum(case when tipo_capta='CAPTA_ONLINE' then SI_Captado_Periodo end) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0

    UNION

    select
    '012.03' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Captacion Presencial' as Categoria,
    sum(case when tipo_capta='PRESENCIAL' then SI_Captado_Periodo end) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0

    UNION

    select
    '013.00' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '----------------------' as Categoria,
    max(0) as Valor
    from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    where SI_Funcionario>=0

    UNION

    select
    '013.01' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '# Cuentas con Saldo >$1' as Categoria,
    count(case when ultimo_saldo>1 then cuenta end) as Valor
    from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    where SI_Funcionario>=0

    UNION

    select
    '013.02' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '# Cuentas con Saldo >$1.000' as Categoria,
    count(case when ultimo_saldo>1000 then cuenta end) as Valor
    from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    where SI_Funcionario>=0

    UNION

    select
    '013.03' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '# Cuentas con Saldo >$100.000' as Categoria,
    count(case when ultimo_saldo>100000 then cuenta end) as Valor
    from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    where SI_Funcionario>=0

    UNION

    select
    '014.00' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '----------------------' as Categoria,
    max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0

    UNION

    select
    '014.01' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Stock MAESTRO' as Categoria,
    max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0
    and tipo_plastico='MAESTRO'

    UNION

    select
    '014.02' as Nro_Fila,
    'Clientes Totales ' as Observacion,
    'Stock CV Inicio de Periodo MAESTRO' as Categoria,
    sum(SI_Stock_Anterior) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0 and tipo_plastico='MAESTRO'

    UNION

    select
    '014.03' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Captacion MAESTRO' as Categoria,
    sum(SI_Captado_Periodo) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0 and tipo_plastico='MAESTRO'

    UNION

    select
    '014.04' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Cierre MAESTRO' as Categoria,
    sum(SI_Fugado_Periodo) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0 and tipo_plastico='MAESTRO'

    UNION

    select
    '014.05' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Stock CV Final de periodo MAESTRO' as Categoria,
    max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0 and tipo_plastico='MAESTRO'

    UNION

    select
    '015.00' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '----------------------' as Categoria,
    max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0

    UNION

    select
    '015.01' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Stock MCD' as Categoria,
    max(floor(to_char(schm_artifacts.f_first_day(current_date), 'YYYYMMDD')::int/100)) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0
    and tipo_plastico='MCD'

    UNION

    select
    '015.02' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Stock CV Inicio de Periodo MCD' as Categoria,
    sum(SI_Stock_Anterior) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0 and tipo_plastico='MCD'

    UNION

    select
    '015.03' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Captacion MCD' as Categoria,
    sum(SI_Captado_Periodo) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0 and tipo_plastico='MCD'

    UNION

    select
    '015.04' as Nro_Fila,
    'Clientes Totales ' as Observacion,
    'Cierre MCD' as Categoria,
    sum(SI_Fugado_Periodo) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0 and tipo_plastico='MCD'

    UNION

    select
    '015.05' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Stock CV Final de periodo MCD' as Categoria,
    max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0 and tipo_plastico='MCD'

    UNION

    select
    '016.00' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '----------------------' as Categoria,
    max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0

    UNION

    select
    '016.01' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Stock MAESTRO a MCD' as Categoria,
    max(floor(to_char(schm_artifacts.f_first_day(current_date), 'YYYYMMDD')::int/100)) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0
    and tipo_plastico='MAESTRO a MCD'

    UNION

    select
    '016.02' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Stock CV Inicio de Periodo MAESTRO a MCD' as Categoria,
    sum(SI_Stock_Anterior) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0 and tipo_plastico='MAESTRO a MCD'

    UNION

    select
    '016.03' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Captacion MAESTRO a MCD' as Categoria,
    sum(SI_Captado_Periodo) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0 and tipo_plastico='MAESTRO a MCD'

    UNION

    select
    '016.04' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Cierre MAESTRO a MCD' as Categoria,
    sum(SI_Fugado_Periodo) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0 and tipo_plastico='MAESTRO a MCD'

    UNION

    select
    '016.05' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Stock CV Final de periodo MAESTRO a MCD' as Categoria,
    max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>=0 and tipo_plastico='MAESTRO a MCD'



    UNION

    select
    '017.01' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '---------------------' as Categoria,
    max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada


    UNION

    select
    '017.02' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Monto Giros ATM MCD' as Categoria,
    sum(monto) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>=0
    and (Descripcion_Cargo in (
    'Giros ATM MCD'
    ))

    UNION

    select
    '017.03' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'Monto Giros internacional MCD' as Categoria,
    sum(monto) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>=0
    and (Descripcion_Cargo in (
    'Giros internacional MCD'
    ))

    UNION

    select
    '017.04' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'TRX Giros ATM MCD' as Categoria,
    count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>=0
    and (Descripcion_Cargo in ('Giros ATM MCD'))

    UNION

    select
    '017.05' as Nro_Fila,
    'Clientes Totales' as Observacion,
    'TRX Giros internacional MCD' as Categoria,
    count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>=0
    and (Descripcion_Cargo in ('Giros internacional MCD'))


    ;


    -- --------------------------------------------------------------------------------------------------;
    -- [05.2] NO Funcionario;
    -- --------------------------------------------------------------------------------------------------;
    INSERT INTO schm_workspace.ppff_sb_salida_panel_ctavta
    SELECT
        '001.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '001.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Stock' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '001.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Stock CV Inicio de Periodo' as Categoria,
        COUNT(CASE WHEN p_apertura < v_periodo AND (p_cierre IS NULL OR p_cierre >= v_periodo) THEN cuenta END) AS valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '001.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Captacion' as Categoria,
        sum(SI_Captado_Periodo) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '001.04' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cierre' as Categoria,
        COUNT(CASE WHEN p_cierre = v_periodo THEN cuenta END) AS Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '001.05' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Stock CV Final de periodo' as Categoria,
        COUNT(CASE WHEN p_apertura <= v_periodo AND (p_cierre IS NULL OR p_cierre > v_periodo) THEN cuenta END) AS valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '001.06' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Tasa de cierre' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    /*Bloque2: Informacion de uso CV*/
    SELECT
        '002.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '002.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Informacion de uso CV' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '002.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# de Cuentas con Movimientos cargos o abonos' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in (
    'Dep�sitos en Efectivo',
    'Dep�sitos con Documento',
    'TEF Recibidas',
    'Abono de Remuneraciones',
    'Otros (pago proveedores)',
    'Traspaso desde LCA',
    'Avance desde Tarjeta Ripley',

    'OTROS ABONOS'
    )
    or
    Descripcion_Cargo in (
    'Comision planes',
    'Compras Internacionales',
    'Compras Internacionales MCD',
    'Compras Redcompra',
    'Compras Redcompra MCD',
    'Giro Internacional',
    'Giros ATM',
    'Giros Caja',
    'PEC',
    'Pago LCA',
    'Pago de Tarjeta',
    'TEF emitidas Otros Bancos',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'OTROS CARGOS'
    ))

    UNION

    SELECT
        '002.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# de Cuentas con Cargos' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Comision planes',
    'Compras Internacionales',
    'Compras Redcompra',
    'Compras Internacionales MCD',
    'Compras Redcompra MCD',
    'Giro Internacional',
    'Giros ATM',
    'Giros Caja',
    'PEC',
    'Pago LCA',
    'Pago de Tarjeta',
    'TEF emitidas Otros Bancos',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'OTROS CARGOS'
    ))

    UNION

    SELECT
        '002.04' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cuentas con compras' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Compras Internacionales',
    'Compras Redcompra',
    'Compras Internacionales MCD',
    'Compras Redcompra MCD'
    ))

    UNION

    SELECT
        '002.05' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cuentas con Giros' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Giro Internacional',
    'Giros ATM',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'Giros Caja'
    ))

    UNION

    SELECT
        '002.06' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cuentas con TEF' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'TEF emitidas Otros Bancos'
    ))

    UNION

    SELECT
        '002.07' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cuentas con Pago' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Pago de Tarjeta',
    'Pago LCA'
    ))

    UNION

    SELECT
        '002.08' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cuentas con uso Internacional' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Giro Internacional','Giros internacional MCD'))

    UNION

    SELECT
        '002.09' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# Cuentas con  Abonos' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in (
    'Abono de Remuneraciones',
    'Avance desde Tarjeta Ripley',
    'Dep�sitos con Documento',
    'Dep�sitos en Efectivo',
    'OTROS ABONOS',
    'Otros (pago proveedores)',
    'TEF Recibidas',
    'Traspaso desde LCA'
    ))

    UNION

    SELECT
        '002.10' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Dep�sitos en Efectivo' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in (
    'Dep�sitos en Efectivo'))

    UNION

    SELECT
        '002.11' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Dep�sitos con Documento' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in (
    'Dep�sitos con Documento'))

    UNION

    SELECT
        '002.12' as Nro_Fila,
        'Clientes NF' as Observacion,
        'TEF Recibidas' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in (
    'TEF Recibidas'))

    UNION

    SELECT
        '002.13' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Abono de Remuneraciones' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in (
    'Abono de Remuneraciones'))

    UNION

    SELECT
        '002.14' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Otros (pago proveedores)' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in (
    'Otros (pago proveedores)'))

    UNION

    SELECT
        '002.15' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Traspaso desde LCA' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in (
    'Traspaso desde LCA'))

    UNION

    SELECT
        '002.16' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Avance desde Tarjeta Ripley' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in (
    'Avance desde Tarjeta Ripley'))

    UNION

    SELECT
        '002.17' as Nro_Fila,
        'Clientes NF' as Observacion,
        'OTROS ABONOS' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in (
    'OTROS ABONOS'))

    UNION

    /*Bloque3: Informacion de uso CV %*/
    SELECT
        '003.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '003.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Informacion de uso CV %' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '003.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        '% de Cuentas con movimiento o abonos' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '003.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        '% de Cuentas con Cargos' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '003.04' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cuentas con compras' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '003.05' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cuentas con Giros' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '003.06' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cuentas con TEF' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '003.07' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cuentas con uso Internacional' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '003.08' as Nro_Fila,
        'Clientes NF' as Observacion,
        '% Cuentas con Abonos' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '003.09' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Dep�sitos en Efectivo' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '003.10' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Dep�sitos con Documento' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '003.11' as Nro_Fila,
        'Clientes NF' as Observacion,
        'TEF Recibidas' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '003.12' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Abono de Remuneraciones' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '003.13' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Otros (pago proveedores)' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '003.14' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Traspaso desde LCA' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '003.15' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Avance desde Tarjeta Ripley' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '003.16' as Nro_Fila,
        'Clientes NF' as Observacion,
        'OTROS ABONOS' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    /*Bloque4: Informacion de ABR*/
    SELECT
        '004.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '004.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Informacion de ABR' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '004.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# de Cuentas Distintas Total Abonos >= $270.000' as Categoria,
        count(distinct cuenta) as Valor
    FROM (
        SELECT
            cuenta,sum(Monto) as SUM_Monto
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND GLS_TRANSAC='ABONO'
        AND Descripcion_Abono NOT IN ('Traspaso desde LCA','Abono de Remuneraciones','Avance desde Tarjeta Ripley')
        AND SI_ABR=0
        group by cuenta
    ) as X
    WHERE SUM_Monto>=270000

    UNION

    SELECT
        '004.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# de Cuentas Distintas con ABR' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND SI_ABR=1

    UNION

    SELECT
        '004.04' as Nro_Fila,
        'Clientes NF' as Observacion,
        '% de ABR vigentes' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '004.05' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# de ABR suscritos de los Captados' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_suscritos_cv_validado
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '004.06' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Tasa de cruce de ABR en Captacion' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '004.07' as Nro_Fila,
        'Clientes NF' as Observacion,
        '% de ABR con Cargo' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    /*Bloque5: Informacion de uso CV/por cuenta*/
    SELECT
        '005.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '005.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Informacion de uso CV/por cuenta' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '005.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# de movimiento por cuenta cargo y abono' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '005.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# de cargos por cuenta' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '005.04' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# de compras por cuenta' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '005.05' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# de Giros por cuenta' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '005.06' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# de TEF por cuenta' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '005.07' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# uso internacional por cuenta' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '005.08' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# Abonos por cuenta' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '005.09' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# Dep�sitos en Efectivo' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '005.10' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# Dep�sitos con Documento' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '005.11' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# TEF Recibidas' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '005.12' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# Abono de Remuneraciones' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '005.13' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# Otros (pago proveedores)' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '005.14' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# Traspaso desde LCA' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '005.15' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# Avance desde Tarjeta Ripley' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    /*Bloque6: Informacion de Saldo*/
    SELECT
        '006.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '006.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Informacion de Saldo' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '006.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cuentas con Saldo >$1' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE SI_Funcionario=0
    AND Nro_Dias_Saldo_mayor_1>0

    UNION

    SELECT
        '006.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cuentas con Saldo >$1 EOP' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE SI_Funcionario=0
    AND Ultimo_Saldo>1

    UNION

    SELECT
        '006.04' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Saldo Total Promedio Mes (MM$)' as Categoria,
        sum(SUM_SALDO_FECHA/(SELECT max(DATE_PART(day, ACP_FECHA::date))FROM schm_workspace.ppff_sb_saldos_cuenta_vista))/1000000 as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE SI_Funcionario=0
    AND Nro_Dias_Saldo_mayor_1>0

    UNION

    SELECT
        '006.05' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Saldo Total EOP (MM$)' as Categoria,
        sum(Ultimo_Saldo)/1000000 as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '006.06' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Saldo Promedio por cuenta Activa ($)' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE SI_Funcionario=0

    UNION

    /*Bloque7: Informacion de Saldo %*/
    SELECT
        '007.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '007.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Informacion de Saldo %' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int)) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '007.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        '% de Cuentas con Saldo' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    /*Bloque8: Movimientos ($)*/
    SELECT
        '008.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '008.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Movimientos ($)' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '008.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cargos' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Comision planes',
    'Compras Internacionales',
    'Compras Redcompra',
    'Compras Internacionales MCD',
    'Compras Redcompra MCD',
    'Giro Internacional',
    'Giros ATM',
    'Giros Caja',
    'OTROS CARGOS',
    'PEC',
    'Pago LCA',
    'Pago de Tarjeta',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'TEF emitidas Otros Bancos'
    ))

    UNION

    SELECT
        '008.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Compras' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Compras Redcompra',
    'Compras Internacionales',
    'Compras Internacionales MCD',
    'Compras Redcompra MCD',
    'PEC'
    ))

    UNION

    SELECT
        '008.04' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Compras Redcompra' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Compras Redcompra'
    ))

    UNION

    SELECT
        '008.05' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Compras  Redcompra Tienda' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Compras Redcompra'
    )) AND COMPRA_RIPLEY='COMPRA_RIPLEY'

    UNION

    SELECT
        '008.06' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Compras Redcompra no Tienda' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Compras Redcompra'
    )) AND COMPRA_RIPLEY<>'COMPRA_RIPLEY'

    UNION

    SELECT
        '008.07' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Compras Internacionales' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Compras Internacionales'
    ))

    UNION

    SELECT
        '008.08' as Nro_Fila,
        'Clientes NF' as Observacion,
        'PEC' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'PEC'
    ))

    UNION

    SELECT
        '008.09' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Giros' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Giros ATM',
    'Giros Caja',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'Giro Internacional'
    ))

    UNION

    SELECT
        '008.10' as Nro_Fila,
        'Clientes NF' as Observacion,
        'ATM' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Giros ATM'
    ))

    UNION

    SELECT
        '008.11' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Caja' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Giros Caja'
    ))

    UNION

    SELECT
        '008.12' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Internacional' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Giro Internacional'
    ))

    UNION

    SELECT
        '008.13' as Nro_Fila,
        'Clientes NF' as Observacion,
        'TEF emitidas' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'TEF emitidas Otros Bancos'
    ))

    UNION

    SELECT
        '008.14' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Otros Bancos' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('TEF emitidas Otros Bancos'))

    UNION

    SELECT
        '008.15' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Pagos' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Pago de Tarjeta','Pago LCA'))

    UNION

    SELECT
        '008.16' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Pago de Tarjeta' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Pago de Tarjeta'))

    UNION

    SELECT
        '008.17' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Pago LCA' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Pago LCA'))

    UNION

    SELECT
        '008.18' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cobro Mantención Cuenta Vista' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Comision planes'))

    UNION

    SELECT
        '008.19' as Nro_Fila,
        'Clientes NF' as Observacion,
        'OTROS CARGOS' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('OTROS CARGOS'))

    UNION

    SELECT
        '008.20' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Abonos' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in (
    'Abono de Remuneraciones',
    'Avance desde Tarjeta Ripley',
    'Dep�sitos con Documento',
    'Dep�sitos en Efectivo',
    'OTROS ABONOS',
    'Otros (pago proveedores)',
    'TEF Recibidas',
    'Traspaso desde LCA'))

    UNION

    SELECT
        '008.21' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Dep�sitos en Efectivo' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in ('Dep�sitos en Efectivo'))

    UNION

    SELECT
        '008.22' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Dep�sitos con Documento' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in ('Dep�sitos con Documento'))

    UNION

    SELECT
        '008.23' as Nro_Fila,
        'Clientes NF' as Observacion,
        'TEF Recibidas' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in ('TEF Recibidas'))

    UNION

    SELECT
        '008.24' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Abono de Remuneraciones' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in ('Abono de Remuneraciones'))

    UNION

    SELECT
        '008.25' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Otros (pago proveedores)' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in ('Otros (pago proveedores)'))

    UNION

    SELECT
        '008.26' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Traspaso desde LCA' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in ('Traspaso desde LCA'))

    UNION

    SELECT
        '008.27' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Avance desde Tarjeta Ripley' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in ('Avance desde Tarjeta Ripley'))

    UNION

    SELECT
        '008.28' as Nro_Fila,
        'Clientes NF' as Observacion,
        'OTROS ABONOS' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in ('OTROS ABONOS'))

    UNION

    /*Bloque9: Movimientos (Tx)*/
    SELECT
        '009.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '009.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Movimientos (#)' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '009.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Movimientos (#) (Cargos y Abonos)' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Comision planes',
    'Compras Internacionales',
    'Compras Redcompra',
    'Compras Internacionales MCD',
    'Compras Redcompra MCD',
    'Giro Internacional',
    'Giros ATM',
    'Giros Caja',
    'OTROS CARGOS',
    'PEC',
    'Pago LCA',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'Pago de Tarjeta',
    'TEF emitidas Otros Bancos'
    ) or Descripcion_Abono in (
    'Abono de Remuneraciones',
    'Avance desde Tarjeta Ripley',
    'Dep�sitos con Documento',
    'Dep�sitos en Efectivo',
    'OTROS ABONOS',
    'Otros (pago proveedores)',
    'TEF Recibidas',
    'Traspaso desde LCA'))

    UNION

    SELECT
        '009.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cargos' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Comision planes',
    'Compras Internacionales',
    'Compras Redcompra',
    'Compras Internacionales MCD',
    'Compras Redcompra MCD',
    'Giro Internacional',
    'Giros ATM',
    'Giros Caja',
    'OTROS CARGOS',
    'PEC',
    'Pago LCA',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'Pago de Tarjeta',
    'TEF emitidas Otros Bancos'))

    UNION

    SELECT
        '009.04' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Compras' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Compras Redcompra',
    'Compras Internacionales',
    'Compras Redcompra MCD',
    'Compras Internacionales MCD',
    'PEC'))

    UNION

    SELECT
        '009.05' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Compras Redcompra' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Compras Redcompra'))

    UNION

    SELECT
        '009.06' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Compras  Redcompra Tienda' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Compras Redcompra'))
    AND COMPRA_RIPLEY='COMPRA_RIPLEY'

    UNION

    SELECT
        '009.07' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Compras Redcompra no Tienda' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Compras Redcompra'))
    AND COMPRA_RIPLEY<>'COMPRA_RIPLEY'

    UNION

    SELECT
        '009.08' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Compras Internacionales' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Compras Internacionales'))

    UNION

    SELECT
        '009.09' as Nro_Fila,
        'Clientes NF' as Observacion,
        'PEC' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('PEC'))

    UNION

    SELECT
        '009.10' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Giros' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Giros ATM',
    'Giros Caja',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'Giro Internacional'))

    UNION

    SELECT
        '009.11' as Nro_Fila,
        'Clientes NF' as Observacion,
        'ATM' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Giros ATM'))

    UNION

    SELECT
        '009.12' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Caja' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Giros Caja'))

    UNION

    SELECT
        '009.13' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Internacional' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Giro Internacional'))

    UNION

    SELECT
        '009.14' as Nro_Fila,
        'Clientes NF' as Observacion,
        'TEF emitidas' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('TEF emitidas Otros Bancos'))

    UNION

    SELECT
        '009.15' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Otros Bancos' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('TEF emitidas Otros Bancos'))

    UNION

    SELECT
        '009.16' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Pagos' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Pago de Tarjeta',
    'Pago LCA'))

    UNION

    SELECT
        '009.17' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Pago de Tarjeta' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Pago de Tarjeta'))

    UNION

    SELECT
        '009.18' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Pago LCA' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Pago LCA'))

    UNION

    SELECT
        '009.19' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cobro Mantenci�n Cuenta Vista' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Comision planes'))

    UNION

    SELECT
        '009.20' as Nro_Fila,
        'Clientes NF' as Observacion,
        'OTROS CARGOS' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('OTROS CARGOS'))

    UNION

    SELECT
        '009.21' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Abonos' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in (
        'Abono de Remuneraciones',
        'Avance desde Tarjeta Ripley',
        'Dep�sitos con Documento',
        'Dep�sitos en Efectivo',
        'OTROS ABONOS',
        'Otros (pago proveedores)',
        'TEF Recibidas',
        'Traspaso desde LCA'))

    UNION

    SELECT
        '009.22' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Dep�sitos en Efectivo' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in ('Dep�sitos en Efectivo'))

    UNION

    SELECT
        '009.23' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Dep�sitos con Documento' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in ('Dep�sitos con Documento'))

    UNION

    SELECT
        '009.24' as Nro_Fila,
        'Clientes NF' as Observacion,
        'TEF Recibidas' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in ('TEF Recibidas'))

    UNION

    SELECT
        '009.25' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Abono de Remuneraciones' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in ('Abono de Remuneraciones'))

    UNION

    SELECT
        '009.26' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Otros (pago proveedores)' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in ('Otros (pago proveedores)'))

    UNION

    SELECT
        '009.27' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Traspaso desde LCA' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in ('Traspaso desde LCA'))

    UNION

    SELECT
        '009.28' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Avance desde Tarjeta Ripley' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in ('Avance desde Tarjeta Ripley'))

    UNION

    SELECT
        '009.29' as Nro_Fila,
        'Clientes NF' as Observacion,
        'OTROS ABONOS' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Abono in ('OTROS ABONOS'))

    UNION

    SELECT
        '010.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '010.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        '$ Compras Redcompra MCD' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Compras Redcompra MCD'
    ))

    UNION

    SELECT
        '010.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        '$ Compras  Redcompra MCD Tienda' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Compras Redcompra MCD'
    )) AND COMPRA_RIPLEY='COMPRA_RIPLEY'

    UNION

    SELECT
        '010.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        '$ Compras Redcompra MCD no Tienda' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Compras Redcompra MCD'
    )) AND COMPRA_RIPLEY<>'COMPRA_RIPLEY'

    UNION

    SELECT
        '010.04' as Nro_Fila,
        'Clientes NF' as Observacion,
        '$ Compras Internacionales MCD' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Compras Internacionales MCD'))

    UNION

    SELECT
        '011.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '011.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# Compras Redcompra MCD' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Compras Redcompra MCD'))

    UNION

    SELECT
        '011.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# Compras  Redcompra MCD Tienda' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Compras Redcompra MCD'))
    AND COMPRA_RIPLEY='COMPRA_RIPLEY'


    UNION

    SELECT
        '011.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# Compras Redcompra MCD no Tienda' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Compras Redcompra MCD')) AND COMPRA_RIPLEY<>'COMPRA_RIPLEY'


    UNION

    SELECT
        '011.04' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# Compras Internacionales MCD' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Compras Internacionales MCD'
    ))

    UNION

    SELECT
        '012.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '012.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Captacion PWA' as Categoria,
        sum(case when tipo_capta='PWA' then SI_Captado_Periodo end) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '012.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Captacion Online' as Categoria,
        sum(case when tipo_capta='CAPTA_ONLINE' then SI_Captado_Periodo end) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '012.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Captacion Presencial' as Categoria,
        sum(case when tipo_capta='PRESENCIAL' then SI_Captado_Periodo end) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '013.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '013.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# Cuentas con Saldo >$1' as Categoria,
        count(case when ultimo_saldo>1 then cuenta end) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '013.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# Cuentas con Saldo >$1.000' as Categoria,
        count(case when ultimo_saldo>1000 then cuenta end) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '013.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        '# Cuentas con Saldo >$100.000' as Categoria,
        count(case when ultimo_saldo>100000 then cuenta end) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE SI_Funcionario=0

    UNION
    SELECT
        '014.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '014.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Stock MAESTRO' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0
    AND tipo_plastico='MAESTRO'

    UNION

    SELECT
        '014.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Stock CV Inicio de Periodo MAESTRO' as Categoria,
        sum(SI_Stock_Anterior) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0 AND tipo_plastico='MAESTRO'

    UNION

    SELECT
        '014.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Captacion MAESTRO' as Categoria,
        sum(SI_Captado_Periodo) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0 AND tipo_plastico='MAESTRO'

    UNION

    SELECT
        '014.04' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cierre MAESTRO' as Categoria,
        sum(SI_Fugado_Periodo) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0 AND tipo_plastico='MAESTRO'

    UNION

    SELECT
        '014.05' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Stock CV Final de periodo MAESTRO' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0 AND tipo_plastico='MAESTRO'

    UNION

    SELECT
        '015.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '015.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Stock MCD' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0
    AND tipo_plastico='MCD'

    UNION

    SELECT
        '015.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Stock CV Inicio de Periodo MCD' as Categoria,
        sum(SI_Stock_Anterior) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0 AND tipo_plastico='MCD'

    UNION

    SELECT
        '015.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Captacion MCD' as Categoria,
        sum(SI_Captado_Periodo) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0 AND tipo_plastico='MCD'

    UNION

    SELECT
        '015.04' as Nro_Fila,
        'Clientes NF ' as Observacion,
        'Cierre MCD' as Categoria,
        sum(SI_Fugado_Periodo) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0 AND tipo_plastico='MCD'

    UNION

    SELECT
        '015.05' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Stock CV Final de periodo MCD' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0 AND tipo_plastico='MCD'

    UNION

    SELECT
        '016.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0

    UNION

    SELECT
        '016.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Stock MAESTRO a MCD' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0
    AND tipo_plastico='MAESTRO a MCD'

    UNION

    SELECT
        '016.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Stock CV Inicio de Periodo MAESTRO a MCD' as Categoria,
        sum(SI_Stock_Anterior) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0 AND tipo_plastico='MAESTRO a MCD'

    UNION

    SELECT
        '016.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Captacion MAESTRO a MCD' as Categoria,
        sum(SI_Captado_Periodo) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0 AND tipo_plastico='MAESTRO a MCD'

    UNION

    SELECT
        '016.04' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Cierre MAESTRO a MCD' as Categoria,
        sum(SI_Fugado_Periodo) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0 AND tipo_plastico='MAESTRO a MCD'

    UNION

    SELECT
        '016.05' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Stock CV Final de periodo MAESTRO a MCD' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE SI_Funcionario=0 AND tipo_plastico='MAESTRO a MCD'


    UNION

    SELECT
        '017.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        '---------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada


    UNION

    SELECT
        '017.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Monto Giros ATM MCD' as Categoria,
        sum(monto) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in (
    'Giros ATM MCD'
    ))

    UNION

    SELECT
        '017.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Monto Giros internacional MCD' as Categoria,
        sum(monto) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Giros internacional MCD'))

    UNION

    SELECT
        '017.04' as Nro_Fila,
        'Clientes NF' as Observacion,
        'TRX Giros ATM MCD' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Giros ATM MCD'))

    UNION

    SELECT
        '017.05' as Nro_Fila,
        'Clientes NF' as Observacion,
        'TRX Giros internacional MCD' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE SI_Funcionario=0
    AND (Descripcion_Cargo in ('Giros internacional MCD'))
    ;


    -- --------------------------------------------------------------------------------------------------;
    --  [05.3] Funcionario;
    -- --------------------------------------------------------------------------------------------------;
    INSERT INTO schm_workspace.ppff_sb_salida_panel_ctavta
    /*Bloque1: Stock*/
    select
        '001.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '001.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '001.02' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock CV Inicio de Periodo' as Categoria,
        COUNT(CASE WHEN p_apertura < v_periodo AND (p_cierre IS NULL OR p_cierre >= v_periodo) THEN cuenta END) AS valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '001.03' as Nro_Fila,
        'Clientes F' as Observacion,
        'Captacion' as Categoria,
        sum(SI_Captado_Periodo) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '001.04' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cierre' as Categoria,
        COUNT(CASE WHEN p_cierre = v_periodo THEN cuenta END) AS Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '001.05' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock CV Final de periodo' as Categoria,
        COUNT(CASE WHEN p_apertura <= v_periodo AND (p_cierre IS NULL OR p_cierre > v_periodo) THEN cuenta END) AS valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '001.06' as Nro_Fila,
        'Clientes F' as Observacion,
        'Tasa de cierre' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    /*Bloque2: Informacion de uso CV*/
    select
        '002.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '002.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Informacion de uso CV' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '002.02' as Nro_Fila,
        'Clientes F' as Observacion,
        '# de Cuentas con Movimientos cargos o abonos' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
    'Depósitos en Efectivo',
    'Depósitos con Documento',
    'TEF Recibidas',
    'Abono de Remuneraciones',
    'Otros (pago proveedores)',
    'Traspaso desde LCA',
    'Avance desde Tarjeta Ripley',
    'OTROS ABONOS'
    )
    or
    Descripcion_Cargo in (
    'Comision planes',
    'Compras Internacionales',
    'Compras Internacionales MCD',
    'Compras Redcompra',
    'Compras Redcompra MCD',
    'Giro Internacional',
    'Giros ATM',
    'Giros Caja',
    'PEC',
    'Pago LCA',
    'Pago de Tarjeta',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'TEF emitidas Otros Bancos',
    'OTROS CARGOS'))

    UNION

    select
        '002.03' as Nro_Fila,
        'Clientes F' as Observacion,
        '# de Cuentas con Cargos' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Comision planes',
    'Compras Internacionales',
    'Compras Redcompra',
    'Compras Internacionales MCD',
    'Compras Redcompra MCD',
    'Giro Internacional',
    'Giros ATM',
    'Giros Caja',
    'PEC',
    'Pago LCA',
    'Pago de Tarjeta',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'TEF emitidas Otros Bancos',
    'OTROS CARGOS'))

    UNION

    select
        '002.04' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cuentas con compras' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Compras Internacionales',
    'Compras Redcompra',
    'Compras Internacionales MCD',
    'Compras Redcompra MCD'
    ))

    UNION

    select
        '002.05' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cuentas con Giros' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Giro Internacional',
    'Giros ATM',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'Giros Caja'
    ))

    UNION

    select
        '002.06' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cuentas con TEF' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'TEF emitidas Otros Bancos'
    ))

    UNION

    select
        '002.07' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cuentas con Pago' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Pago de Tarjeta',
    'Pago LCA'
    ))

    UNION

    select
        '002.08' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cuentas con uso Internacional' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in ('Giro Internacional', 'Giros internacional MCD'))

    UNION

    select
        '002.09' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Cuentas con  Abonos' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
    'Abono de Remuneraciones',
    'Avance desde Tarjeta Ripley',
    'Depósitos con Documento',
    'Depósitos en Efectivo',
    'OTROS ABONOS',
    'Otros (pago proveedores)',
    'TEF Recibidas',
    'Traspaso desde LCA'
    ))

    UNION

    select
        '002.10' as Nro_Fila,
        'Clientes F' as Observacion,
        'Depósitos en Efectivo' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in ('Depósitos en Efectivo'))

    UNION

    select
        '002.11' as Nro_Fila,
        'Clientes F' as Observacion,
        'Depósitos con Documento' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in ('Depósitos con Documento'))

    UNION

    select
        '002.12' as Nro_Fila,
        'Clientes F' as Observacion,
        'TEF Recibidas' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
    'TEF Recibidas'))

    UNION

    select
        '002.13' as Nro_Fila,
        'Clientes F' as Observacion,
        'Abono de Remuneraciones' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
    'Abono de Remuneraciones'))

    UNION

    select
        '002.14' as Nro_Fila,
        'Clientes F' as Observacion,
        'Otros (pago proveedores)' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
    'Otros (pago proveedores)'))

    UNION

    select
        '002.15' as Nro_Fila,
        'Clientes F' as Observacion,
        'Traspaso desde LCA' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
    'Traspaso desde LCA'))

    UNION

    select
        '002.16' as Nro_Fila,
        'Clientes F' as Observacion,
        'Avance desde Tarjeta Ripley' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
    'Avance desde Tarjeta Ripley'))

    UNION

    select
        '002.17' as Nro_Fila,
        'Clientes F' as Observacion,
        'OTROS ABONOS' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
    'OTROS ABONOS'))

    UNION

    /*Bloque3: Informacion de uso CV %*/
    select
        '003.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '003.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Informacion de uso CV %' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '003.02' as Nro_Fila,
        'Clientes F' as Observacion,
        '% de Cuentas con movimiento o abonos' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '003.03' as Nro_Fila,
        'Clientes F' as Observacion,
        '% de Cuentas con Cargos' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '003.04' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cuentas con compras' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '003.05' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cuentas con Giros' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '003.06' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cuentas con TEF' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '003.07' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cuentas con uso Internacional' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '003.08' as Nro_Fila,
        'Clientes F' as Observacion,
        '% Cuentas con Abonos' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '003.09' as Nro_Fila,
        'Clientes F' as Observacion,
        'Depósitos en Efectivo' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '003.10' as Nro_Fila,
        'Clientes F' as Observacion,
        'Depósitos con Documento' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '003.11' as Nro_Fila,
        'Clientes F' as Observacion,
        'TEF Recibidas' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '003.12' as Nro_Fila,
        'Clientes F' as Observacion,
        'Abono de Remuneraciones' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '003.13' as Nro_Fila,
        'Clientes F' as Observacion,
        'Otros (pago proveedores)' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '003.14' as Nro_Fila,
        'Clientes F' as Observacion,
        'Traspaso desde LCA' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '003.15' as Nro_Fila,
        'Clientes F' as Observacion,
        'Avance desde Tarjeta Ripley' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '003.16' as Nro_Fila,
        'Clientes F' as Observacion,
        'OTROS ABONOS' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    /*Bloque4: Informacion de ABR*/
    select
        '004.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '004.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Informacion de ABR' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '004.02' as Nro_Fila,
        'Clientes F' as Observacion,
        '# de Cuentas Distintas Total Abonos >= $270.000' as Categoria,
        count(distinct cuenta) as Valor
    from (
        select
            cuenta,sum(Monto) as SUM_Monto
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and GLS_TRANSAC='ABONO'
        and Descripcion_Abono NOT IN ('Traspaso desde LCA','Abono de Remuneraciones','Avance desde Tarjeta Ripley')
        and SI_ABR=0
        group by cuenta
    ) as X
    where SUM_Monto>=270000

    UNION

    select
        '004.03' as Nro_Fila,
        'Clientes F' as Observacion,
        '# de Cuentas Distintas con ABR' as Categoria,
        count(distinct cuenta) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and SI_ABR=1

    UNION

    select
        '004.04' as Nro_Fila,
        'Clientes F' as Observacion,
        '% de ABR vigentes' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '004.05' as Nro_Fila,
        'Clientes F' as Observacion,
        '# de ABR suscritos de los Captados' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_suscritos_cv_validado
    where SI_Funcionario>0

    UNION

    select
        '004.06' as Nro_Fila,
        'Clientes F' as Observacion,
        'Tasa de cruce de ABR en Captacion' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '004.07' as Nro_Fila,
        'Clientes F' as Observacion,
        '% de ABR con Cargo' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    /*Bloque5: Informacion de uso CV/por cuenta*/
    select
        '005.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    where SI_Funcionario>0

    UNION

    select
        '005.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Informacion de uso CV/por cuenta' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '005.02' as Nro_Fila,
        'Clientes F' as Observacion,
        '# de movimiento por cuenta cargo y abono' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '005.03' as Nro_Fila,
        'Clientes F' as Observacion,
        '# de cargos por cuenta' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '005.04' as Nro_Fila,
        'Clientes F' as Observacion,
        '# de compras por cuenta' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '005.05' as Nro_Fila,
        'Clientes F' as Observacion,
        '# de Giros por cuenta' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '005.06' as Nro_Fila,
        'Clientes F' as Observacion,
        '# de TEF por cuenta' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '005.07' as Nro_Fila,
        'Clientes F' as Observacion,
        '# uso internacional por cuenta' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '005.08' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Abonos por cuenta' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '005.09' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Depósitos en Efectivo' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '005.10' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Depósitos con Documento' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '005.11' as Nro_Fila,
        'Clientes F' as Observacion,
        '# TEF Recibidas' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '005.12' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Abono de Remuneraciones' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '005.13' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Otros (pago proveedores)' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '005.14' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Traspaso desde LCA' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '005.15' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Avance desde Tarjeta Ripley' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    /*Bloque6: Informacion de Saldo*/
    select
        '006.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    where SI_Funcionario>0

    UNION

    select
        '006.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Informacion de Saldo' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    where SI_Funcionario>0

    UNION

    select
        '006.02' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cuentas con Saldo >$1' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    where SI_Funcionario>0
    and Nro_Dias_Saldo_mayor_1>0

    UNION

    select
        '006.03' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cuentas con Saldo >$1 EOP' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    where SI_Funcionario>0
    and Ultimo_Saldo>1

    UNION

    select
        '006.04' as Nro_Fila,
        'Clientes F' as Observacion,
        'Saldo Total Promedio Mes (MM$)' as Categoria,
        sum(SUM_SALDO_FECHA/(SELECT max(DATE_PART(day, ACP_FECHA::date))FROM schm_workspace.ppff_sb_saldos_cuenta_vista))/1000000 as Valor
    from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    where SI_Funcionario>0
    and Nro_Dias_Saldo_mayor_1>0

    UNION

    select
        '006.05' as Nro_Fila,
        'Clientes F' as Observacion,
        'Saldo Total EOP (MM$)' as Categoria,
        sum(Ultimo_Saldo)/1000000 as Valor
    from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    where SI_Funcionario>0

    UNION

    select
        '006.06' as Nro_Fila,
        'Clientes F' as Observacion,
        'Saldo Promedio por cuenta Activa ($)' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    where SI_Funcionario>0

    UNION

    /*Bloque7: Informacion de Saldo %*/
    select
        '007.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '007.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Informacion de Saldo %' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int)) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '007.02' as Nro_Fila,
        'Clientes F' as Observacion,
        '% de Cuentas con Saldo' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    /*Bloque8: Movimientos ($)*/
    select
        '008.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '008.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Movimientos ($)' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '008.02' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cargos' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
        'Comision planes',
        'Compras Internacionales',
        'Compras Redcompra',
        'Compras Internacionales MCD',
        'Compras Redcompra MCD',
        'Giro Internacional',
        'Giros ATM',
        'Giros Caja',
        'OTROS CARGOS',
        'PEC',
        'Pago LCA',
        'Giros internacional MCD',
        'Giros ATM MCD',
        'Pago de Tarjeta',
        'TEF emitidas Otros Bancos'
    ))

    UNION

    select
        '008.03' as Nro_Fila,
        'Clientes F' as Observacion,
        'Compras' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Compras Redcompra',
    'Compras Internacionales',
    'Compras Internacionales MCD',
    'Compras Redcompra MCD',
    'PEC'
    ))

    UNION

    select
        '008.04' as Nro_Fila,
        'Clientes F' as Observacion,
        'Compras Redcompra' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Compras Redcompra'
    ))

    UNION

    select
        '008.05' as Nro_Fila,
        'Clientes F' as Observacion,
        'Compras  Redcompra Tienda' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Compras Redcompra'
    )) and COMPRA_RIPLEY='COMPRA_RIPLEY'

    UNION

    select
        '008.06' as Nro_Fila,
        'Clientes F' as Observacion,
        'Compras Redcompra no Tienda' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Compras Redcompra'
    )) and COMPRA_RIPLEY<>'COMPRA_RIPLEY'

    UNION

    select
        '008.07' as Nro_Fila,
        'Clientes F' as Observacion,
        'Compras Internacionales' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Compras Internacionales'
    ))

    UNION

    select
        '008.08' as Nro_Fila,
        'Clientes F' as Observacion,
        'PEC' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'PEC'
    ))

    UNION

    select
        '008.09' as Nro_Fila,
        'Clientes F' as Observacion,
        'Giros' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
        'Giros ATM',
        'Giros Caja',
        'Giros internacional MCD',
        'Giros ATM MCD',
        'Giro Internacional'
    ))

    UNION

    select
        '008.10' as Nro_Fila,
        'Clientes F' as Observacion,
        'ATM' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Giros ATM'
    ))

    UNION

    select
        '008.11' as Nro_Fila,
        'Clientes F' as Observacion,
        'Caja' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Giros Caja'
    ))

    UNION

    select
        '008.12' as Nro_Fila,
        'Clientes F' as Observacion,
        'Internacional' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Giro Internacional'
    ))

    UNION

    select
        '008.13' as Nro_Fila,
        'Clientes F' as Observacion,
        'TEF emitidas' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'TEF emitidas Otros Bancos'
    ))

    UNION

    select
        '008.14' as Nro_Fila,
        'Clientes F' as Observacion,
        'Otros Bancos' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'TEF emitidas Otros Bancos'
    ))

    UNION

    select
        '008.15' as Nro_Fila,
        'Clientes F' as Observacion,
        'Pagos' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Pago de Tarjeta',
    'Pago LCA'
    ))

    UNION

    select
        '008.16' as Nro_Fila,
        'Clientes F' as Observacion,
        'Pago de Tarjeta' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Pago de Tarjeta'
    ))

    UNION

    select
        '008.17' as Nro_Fila,
        'Clientes F' as Observacion,
        'Pago LCA' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Pago LCA'
    ))

    UNION

    select
        '008.18' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cobro Mantenci�n Cuenta Vista' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Comision planes'
    ))

    UNION

    select
        '008.19' as Nro_Fila,
        'Clientes F' as Observacion,
        'OTROS CARGOS' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'OTROS CARGOS'
    ))

    UNION

    select
        '008.20' as Nro_Fila,
        'Clientes F' as Observacion,
        'Abonos' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
        'Abono de Remuneraciones',
        'Avance desde Tarjeta Ripley',
        'Depósitos con Documento',
        'Depósitos en Efectivo',
        'OTROS ABONOS',
        'Otros (pago proveedores)',
        'TEF Recibidas',
        'Traspaso desde LCA'
    ))

    UNION

    select
        '008.21' as Nro_Fila,
        'Clientes F' as Observacion,
        'Depósitos en Efectivo' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
    'Depósitos en Efectivo'))

    UNION

    select
        '008.22' as Nro_Fila,
        'Clientes F' as Observacion,
        'Depósitos con Documento' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
    'Depósitos con Documento'))

    UNION

    select
        '008.23' as Nro_Fila,
        'Clientes F' as Observacion,
        'TEF Recibidas' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
    'TEF Recibidas'))

    UNION

    select
        '008.24' as Nro_Fila,
        'Clientes F' as Observacion,
        'Abono de Remuneraciones' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
    'Abono de Remuneraciones'))

    UNION

    select
        '008.25' as Nro_Fila,
        'Clientes F' as Observacion,
        'Otros (pago proveedores)' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
    'Otros (pago proveedores)'))

    UNION

    select
        '008.26' as Nro_Fila,
        'Clientes F' as Observacion,
        'Traspaso desde LCA' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
    'Traspaso desde LCA'))

    UNION

    select
        '008.27' as Nro_Fila,
        'Clientes F' as Observacion,
        'Avance desde Tarjeta Ripley' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
    'Avance desde Tarjeta Ripley'))

    UNION

    select
        '008.28' as Nro_Fila,
        'Clientes F' as Observacion,
        'OTROS ABONOS' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
    'OTROS ABONOS'))

    UNION

    /*Bloque9: Movimientos (Tx)*/
    select
        '009.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '009.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Movimientos (#)' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0

    UNION

    select
        '009.02' as Nro_Fila,
        'Clientes F' as Observacion,
        'Movimientos (#) (Cargos y Abonos)' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
        'Comision planes',
        'Compras Internacionales',
        'Compras Redcompra',
        'Compras Internacionales MCD',
        'Compras Redcompra MCD',
        'Giro Internacional',
        'Giros ATM',
        'Giros Caja',
        'OTROS CARGOS',
        'PEC',
        'Pago LCA',
        'Giros internacional MCD',
        'Giros ATM MCD',
        'Pago de Tarjeta',
        'TEF emitidas Otros Bancos'
    ) or Descripcion_Abono in (
        'Abono de Remuneraciones',
        'Avance desde Tarjeta Ripley',
        'Depósitos con Documento',
        'Depósitos en Efectivo',
        'OTROS ABONOS',
        'Otros (pago proveedores)',
        'TEF Recibidas',
        'Traspaso desde LCA'
    ))

    UNION

    select
        '009.03' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cargos' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
        'Comision planes',
        'Compras Internacionales',
        'Compras Redcompra',
        'Compras Internacionales MCD',
        'Compras Redcompra MCD',
        'Giro Internacional',
        'Giros ATM',
        'Giros Caja',
        'OTROS CARGOS',
        'PEC',
        'Giros internacional MCD',
        'Giros ATM MCD',
        'Pago LCA',
        'Pago de Tarjeta',
        'TEF emitidas Otros Bancos'
    ))

    UNION

    select
        '009.04' as Nro_Fila,
        'Clientes F' as Observacion,
        'Compras' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
        'Compras Redcompra',
        'Compras Internacionales',
        'Compras Redcompra MCD',
        'Compras Internacionales MCD',
        'PEC'
    ))

    UNION

    select
        '009.05' as Nro_Fila,
        'Clientes F' as Observacion,
        'Compras Redcompra' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Compras Redcompra'
    ))

    UNION

    select
        '009.06' as Nro_Fila,
        'Clientes F' as Observacion,
        'Compras  Redcompra Tienda' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
        'Compras Redcompra'
    )) and COMPRA_RIPLEY='COMPRA_RIPLEY'

    UNION

    select
        '009.07' as Nro_Fila,
        'Clientes F' as Observacion,
        'Compras Redcompra no Tienda' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
        'Compras Redcompra'
    )) and COMPRA_RIPLEY<>'COMPRA_RIPLEY'

    UNION

    select
        '009.08' as Nro_Fila,
        'Clientes F' as Observacion,
        'Compras Internacionales' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Compras Internacionales'
    ))

    UNION

    select
        '009.09' as Nro_Fila,
        'Clientes F' as Observacion,
        'PEC' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
        'PEC'
    ))

    UNION

    select
        '009.10' as Nro_Fila,
        'Clientes F' as Observacion,
        'Giros' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
        'Giros ATM',
        'Giros Caja',
        'Giros internacional MCD',
        'Giros ATM MCD',
        'Giro Internacional'
    ))

    UNION

    select
        '009.11' as Nro_Fila,
        'Clientes F' as Observacion,
        'ATM' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Giros ATM'
    ))

    UNION

    select
        '009.12' as Nro_Fila,
        'Clientes F' as Observacion,
        'Caja' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Giros Caja'
    ))

    UNION

    select
        '009.13' as Nro_Fila,
        'Clientes F' as Observacion,
        'Internacional' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'Giro Internacional'
    ))

    UNION

    select
        '009.14' as Nro_Fila,
        'Clientes F' as Observacion,
        'TEF emitidas' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'TEF emitidas Otros Bancos'
    ))

    UNION

    select
        '009.15' as Nro_Fila,
        'Clientes F' as Observacion,
        'Otros Bancos' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
    'TEF emitidas Otros Bancos'
    ))

    UNION

    select
        '009.16' as Nro_Fila,
        'Clientes F' as Observacion,
        'Pagos' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
        'Pago de Tarjeta',
        'Pago LCA'
    ))

    UNION

    select
        '009.17' as Nro_Fila,
        'Clientes F' as Observacion,
        'Pago de Tarjeta' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
        'Pago de Tarjeta'
    ))

    UNION

    select
        '009.18' as Nro_Fila,
        'Clientes F' as Observacion,
        'Pago LCA' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
        'Pago LCA'
    ))

    UNION

    select
        '009.19' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cobro Mantenci�n Cuenta Vista' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
        'Comision planes'
    ))

    UNION

    select
        '009.20' as Nro_Fila,
        'Clientes F' as Observacion,
        'OTROS CARGOS' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in (
        'OTROS CARGOS'
    ))

    UNION

    select
        '009.21' as Nro_Fila,
        'Clientes F' as Observacion,
        'Abonos' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in (
        'Abono de Remuneraciones',
        'Avance desde Tarjeta Ripley',
        'Depósitos con Documento',
        'Depósitos en Efectivo',
        'OTROS ABONOS',
        'Otros (pago proveedores)',
        'TEF Recibidas',
        'Traspaso desde LCA'
    ))

    UNION

    select
        '009.22' as Nro_Fila,
        'Clientes F' as Observacion,
        'Depósitos en Efectivo' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in ('Depósitos en Efectivo'))

    UNION

    select
        '009.23' as Nro_Fila,
        'Clientes F' as Observacion,
        'Depósitos con Documento' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in ('Depósitos con Documento'))

    UNION

    select
        '009.24' as Nro_Fila,
        'Clientes F' as Observacion,
        'TEF Recibidas' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in ('TEF Recibidas'))

    UNION

    select
        '009.25' as Nro_Fila,
        'Clientes F' as Observacion,
        'Abono de Remuneraciones' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in ('Abono de Remuneraciones'))

    UNION

    select
        '009.26' as Nro_Fila,
        'Clientes F' as Observacion,
        'Otros (pago proveedores)' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in ('Otros (pago proveedores)'))

    UNION

    select
        '009.27' as Nro_Fila,
        'Clientes F' as Observacion,
        'Traspaso desde LCA' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in ('Traspaso desde LCA'))

    UNION

    select
        '009.28' as Nro_Fila,
        'Clientes F' as Observacion,
        'Avance desde Tarjeta Ripley' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in ('Avance desde Tarjeta Ripley'))

    UNION

    select
        '009.29' as Nro_Fila,
        'Clientes F' as Observacion,
        'OTROS ABONOS' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Abono in ('OTROS ABONOS'))

    UNION

    select
        '010.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '010.01' as Nro_Fila,
        'Clientes F' as Observacion,
        '$ Compras Redcompra MCD' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in ('Compras Redcompra MCD'))

    UNION

    select
        '010.02' as Nro_Fila,
        'Clientes F' as Observacion,
        '$ Compras  Redcompra MCD Tienda' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in ('Compras Redcompra MCD'))
    and COMPRA_RIPLEY='COMPRA_RIPLEY'

    UNION

    select
        '010.03' as Nro_Fila,
        'Clientes F' as Observacion,
        '$ Compras Redcompra MCD no Tienda' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in ('Compras Redcompra MCD'))
    and COMPRA_RIPLEY<>'COMPRA_RIPLEY'

    UNION

    select
        '010.04' as Nro_Fila,
        'Clientes F' as Observacion,
        '$ Compras Internacionales MCD' as Categoria,
        sum(MONTO) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in ('Compras Internacionales MCD'))

    UNION

    select
        '011.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '011.01' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Compras Redcompra MCD' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in ('Compras Redcompra MCD'))

    UNION

    select
        '011.02' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Compras  Redcompra MCD Tienda' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in ('Compras Redcompra MCD'))
    and COMPRA_RIPLEY='COMPRA_RIPLEY'


    UNION

    select
        '011.03' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Compras Redcompra MCD no Tienda' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in ('Compras Redcompra MCD'))
    and COMPRA_RIPLEY<>'COMPRA_RIPLEY'


    UNION

    select
        '011.04' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Compras Internacionales MCD' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in ('Compras Internacionales MCD'))

    UNION

    select
        '012.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '012.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Captacion PWA' as Categoria,
        sum(case when tipo_capta='PWA' then SI_Captado_Periodo end) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '012.02' as Nro_Fila,
        'Clientes F' as Observacion,
        'Captacion Online' as Categoria,
        sum(case when tipo_capta='CAPTA_ONLINE' then SI_Captado_Periodo end) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '012.03' as Nro_Fila,
        'Clientes F' as Observacion,
        'Captacion Presencial' as Categoria,
        sum(case when tipo_capta='PRESENCIAL' then SI_Captado_Periodo end) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '013.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    where SI_Funcionario>0

    UNION

    select
        '013.01' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Cuentas con Saldo >$1' as Categoria,
        count(case when ultimo_saldo>1 then cuenta end) as Valor
    from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    where SI_Funcionario>0

    UNION

    select
        '013.02' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Cuentas con Saldo >$1.000' as Categoria,
        count(case when ultimo_saldo>1000 then cuenta end) as Valor
    from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    where SI_Funcionario>0

    UNION

    select
        '013.03' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Cuentas con Saldo >$100.000' as Categoria,
        count(case when ultimo_saldo>100000 then cuenta end) as Valor
    from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    where SI_Funcionario>0

    UNION
    select
        '014.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '014.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock MAESTRO' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0
    and tipo_plastico='MAESTRO'

    UNION

    select
        '014.02' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock CV Inicio de Periodo MAESTRO' as Categoria,
        sum(SI_Stock_Anterior) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0 and tipo_plastico='MAESTRO'

    UNION

    select
        '014.03' as Nro_Fila,
        'Clientes F' as Observacion,
        'Captacion MAESTRO' as Categoria,
        sum(SI_Captado_Periodo) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0 and tipo_plastico='MAESTRO'

    UNION

    select
        '014.04' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cierre MAESTRO' as Categoria,
        sum(SI_Fugado_Periodo) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0 and tipo_plastico='MAESTRO'

    UNION

    select
        '014.05' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock CV Final de periodo MAESTRO' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0 and tipo_plastico='MAESTRO'

    UNION

    select
        '015.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '015.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock MCD' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0
    and tipo_plastico='MCD'

    UNION

    select
        '015.02' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock CV Inicio de Periodo MCD' as Categoria,
        sum(SI_Stock_Anterior) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0 and tipo_plastico='MCD'

    UNION

    select
        '015.03' as Nro_Fila,
        'Clientes F' as Observacion,
        'Captacion MCD' as Categoria,
        sum(SI_Captado_Periodo) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0 and tipo_plastico='MCD'

    UNION

    select
        '015.04' as Nro_Fila,
        'Clientes F ' as Observacion,
        'Cierre MCD' as Categoria,
        sum(SI_Fugado_Periodo) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0 and tipo_plastico='MCD'

    UNION

    select
        '015.05' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock CV Final de periodo MCD' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0 and tipo_plastico='MCD'

    UNION

    select
        '016.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0

    UNION

    select
        '016.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock MAESTRO a MCD' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0
    and tipo_plastico='MAESTRO a MCD'

    UNION

    select
        '016.02' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock CV Inicio de Periodo MAESTRO a MCD' as Categoria,
        sum(SI_Stock_Anterior) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0 and tipo_plastico='MAESTRO a MCD'

    UNION

    select
        '016.03' as Nro_Fila,
        'Clientes F' as Observacion,
        'Captacion MAESTRO a MCD' as Categoria,
        sum(SI_Captado_Periodo) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0 and tipo_plastico='MAESTRO a MCD'

    UNION

    select
        '016.04' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cierre MAESTRO a MCD' as Categoria,
        sum(SI_Fugado_Periodo) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0 and tipo_plastico='MAESTRO a MCD'

    UNION

    select
        '016.05' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock CV Final de periodo MAESTRO a MCD' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_stock_cuenta_vista_validada
    where SI_Funcionario>0 and tipo_plastico='MAESTRO a MCD'


    UNION

    select
        '017.01' as Nro_Fila,
        'Clientes F' as Observacion,
        '---------------------' as Categoria,
        max(0) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada


    UNION

    select
        '017.02' as Nro_Fila,
        'Clientes F' as Observacion,
        'Monto Giros ATM MCD' as Categoria,
        sum(monto) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in ('Giros ATM MCD'))

    UNION

    select
        '017.03' as Nro_Fila,
        'Clientes F' as Observacion,
        'Monto Giros internacional MCD' as Categoria,
        sum(monto) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in ('Giros internacional MCD'))

    UNION

    select
        '017.04' as Nro_Fila,
        'Clientes F' as Observacion,
        'TRX Giros ATM MCD' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in ('Giros ATM MCD'))

    UNION

    select
        '017.05' as Nro_Fila,
        'Clientes F' as Observacion,
        'TRX Giros internacional MCD' as Categoria,
        count(*) as Valor
    from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    where SI_Funcionario>0
    and (Descripcion_Cargo in ('Giros internacional MCD'))

    ;

    -- --------------------------------------------------------------------------------------------------;
    --  [05.4] Eliminar tablas de paso;
    -- --------------------------------------------------------------------------------------------------;


    -- ==================================================================================================;
    --  [06] Vaciar resultados en tabla entregable;
    --m==================================================================================================;
    CREATE TABLE schm_workspace.ppff_panel_ctavta as /*	VALIDADO	*/
    SELECT
        current_date as fecha_proceso
        ,to_char(v_fecha_inicio, 'YYYYMMDD')::int as anomesdia_desde
        ,to_char(v_fecha_fin, 'YYYYMMDD')::int as anomesdia_hasta
        ,*
    from schm_workspace.ppff_sb_salida_panel_ctavta;

    -- ==================================================================================================;
    -- [07] Consolidar Resultados en tabla agrupada (solo si se ingresa periodo);
    -- ==================================================================================================;
    /*eliminar de la tabla previamente periodo que se va a insertar para evitar duplicidad*/

    DELETE FROM schm_data_analytics.ppff_panel_ctavta_consolidado WHERE periodo = v_periodo;

    INSERT INTO schm_data_analytics.ppff_panel_ctavta_consolidado
    (fecha_proceso ,anomesdia_desde ,anomesdia_hasta ,nro_fila ,observacion ,categoria ,valor ,periodo)
    SELECT
        fecha_proceso
         ,anomesdia_desde
         ,anomesdia_hasta
         ,nro_fila
         ,observacion
         ,categoria
         ,valor
        ,v_periodo as periodo
    from schm_workspace.ppff_panel_ctavta
    ;


    -- ==================================================================================================;
    --  [08] Borrado de las tablas de paso;
    -- t==================================================================================================;
    DROP TABLE IF EXISTS schm_workspace.ppff_core_venta;
    DROP TABLE IF EXISTS schm_workspace.ppff_dotacion;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_saldos_cuenta_vista;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_salida_panel_ctavta;




END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.qa_sernac()
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN

	create table schm_workspace.qa_sernac as
	select 'ctbl_lnegro_call' as tabla, max(fecha_ingreso) as fecha_maxima from schm_data_analytics.ctbl_lnegro_call
	union all
	select 'ctbl_lnegro_sms' as tabla, max(fecha_ingreso) as fecha_maxima from schm_data_analytics.ctbl_lnegro_sms
	union all
	select 'ctbl_lnegro_email' as tabla, max(fecha_inhibicion) as fecha_maxima from schm_data_analytics.ctbl_lnegro_email
	union all
	select 'ctbl_lnegro_car' as tabla, max(fecha_ingreso) as fecha_maxima from schm_data_analytics.ctbl_lnegro_car
	union all
	select 'notcall' as tabla, max(fecha_solicitud) as fecha_maxima from schm_data_analytics.notcall;
	
	call schm_artifacts.unload_csv('ctbl','qa_sernac','select * from schm_workspace.qa_sernac');
	drop table if exists schm_workspace.qa_sernac;

END;




$$
;

CREATE OR REPLACE FUNCTION schm_artifacts.rut_test(a int4)
	RETURNS int8
	LANGUAGE plpythonu
	STABLE
AS $$
	
	return a*2*3*4*5*6*7*8*9*10*11

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sj_ppff_panel_cta_vta(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
-- DECLARE
--   min_val int;

BEGIN

    DROP TABLE IF EXISTS schm_workspace.ppff_dotacion;
    DROP TABLE IF EXISTS schm_workspace.ppff_foto_panes_hoy_tmp;
    DROP TABLE IF EXISTS schm_workspace.ppff_foto_panes_hoy;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_stock_cuenta_vista;
    DROP TABLE IF EXISTS schm_workspace.ppff_curse_debito;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_stock_cuenta_vista_camal;
    DROP TABLE IF EXISTS schm_workspace.ppff_plasticos_cierre;
    DROP TABLE IF EXISTS schm_workspace.ppff_max_plastico;
    DROP TABLE IF EXISTS schm_workspace.ppff_plasticos_cierre2;
    DROP TABLE IF EXISTS schm_workspace.ppff_mpdt666;
    DROP TABLE IF EXISTS schm_workspace.ppff_base_plasticos2;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_stock_cuenta_vista;
    DROP TABLE IF EXISTS schm_workspace.ppff_mpdt666;
    DROP TABLE IF EXISTS schm_workspace.ppff_cdp;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_stock_cuenta_vista_funcionario;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_saldos_cuenta_vista;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_saldos_cuenta_vista2;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_saldos_cuenta_vista2_funcionario;
    DROP TABLE IF EXISTS schm_workspace.ppff_core_venta;
    DROP TABLE IF EXISTS schm_workspace.ppff_dotacion;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_saldos_cuenta_vista;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_salida_panel_ctavta;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_stock_cuenta_vista_validada;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_saldos_cuenta_vista2_validado;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_suscritos_cv_validado;
    DROP TABLE IF EXISTS schm_workspace.ppff_panel_ctavta;
    -------------------------------------------------------------------------------------------------;
    -- [00.4] Base dotación;
    -------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_dotacion AS
        SELECT max(periodo)
        FROM schm_data_analytics.clts_dotacion;

    -- ------------------------------------------------------------------------------------------------;
    --  [00.5] Base Panes;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_foto_panes_hoy_tmp AS
    SELECT
        b.pemid_gls_nro_dct_ide_k as rut
        ,a.codent
        ,a.centalta
        ,a.cuenta
        ,a.calpart
        ,a.codent||a.centalta||a.cuenta as ctto
        ,c.fecalta as fecalta_ctto
        ,c.fecbaja as fecbaja_ctto
        ,g.numplastico
        ,g.pan
        ,g.panant
        ,g.feccadtar
        ,g.indulttar
        ,g.numbencta
        ,g.fecalta as fecalta_tr
        ,g.fecbaja as fecbaja_tr
        ,g.indsittar
        ,h.dessittar
        ,g.fecultblq
        ,g.codblq
        ,g.texblq
        ,i.desblq
        ,substring(g.pan,13,4) as pan2
        ,a.codent||a.centalta||a.cuenta|| substring(g.pan,13,4)  as contrato_pan
    FROM br_dm_prod_bigdata_reporitf_db.mpdt013 A /*CONTRATO de Tarjeta*/
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 C /*CONTRATO*/
        ON (a.codent=c.codent)
               AND (a.centalta=c.centalta)
               AND (a.cuenta=c.cuenta)
    INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide B
        ON a.identcli = b.pemid_nro_inn_ide
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt009 G /*Tarjeta*/
        ON (a.codent=g.codent)
               AND (a.centalta=g.centalta)
               AND (a.cuenta=g.cuenta)
               AND (a.numbencta=g.numbencta)
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt063 H
        ON (G.CODENT=H.CODENT)
               AND (g.indsittar=h.indsittar)
    LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt060 I
        ON (g.codblq=i.codblq)
    WHERE c.producto='08'
    ;

    CREATE TABLE schm_workspace.ppff_foto_panes_hoy AS
    SELECT
        rut
        ,codent
        ,centalta
        ,cuenta
        ,calpart
        ,ctto
        ,CASE
            WHEN
                fecbaja_ctto = '0001-01-01' THEN 1 ELSE 0
        END AS t_ctto_vigente
        ,fecalta_ctto
        ,fecbaja_ctto
        ,CASE
            WHEN substring(pan,1,6) IN('628156') THEN 'CERRADA'
            WHEN substring(pan,1,4) IN('6392') THEN 'CUENTA VISTA'
            WHEN substring(pan,1,6) in ('525384') then 'CUENTA VISTA'
            WHEN substring(pan,1,6) IN('549070')AND substring(pan,1,7) >=5490702 THEN 'TAM CHIP'
            WHEN substring(pan,1,6) IN('549070')AND substring(pan,1,7) < 5490702 THEN 'TAM'
            ELSE 'CERRADA'
        END AS tipo_tr
        ,numplastico
        ,pan
        ,panant
        ,feccadtar
        ,indulttar
        ,numbencta
        ,fecalta_tr
        ,fecbaja_tr
        ,indsittar
        ,dessittar
        ,fecultblq
        ,codblq as cod_bloq_tr
        ,CASE
            WHEN codblq = 1 AND texblq = 'BLOQUEO TARJETA NO ISO' THEN 'BLOQUEO TARJETA NO ISO'
            WHEN codblq = 1 AND texblq NOT IN ('BLOQUEO TARJETA NO ISO') THEN 'ROBO/CODIGO_BLOQUEO'
            WHEN codblq IN (79,98) THEN 'CAMBIO DE PRODUCTO'
            WHEN codblq IN (16,43) THEN 'FRAUDE'
            WHEN codblq > 1 AND codblq NOT IN (16,43,79,98) THEN desblq
        END AS motivo_bloqueo
        ,CASE
            WHEN indsittar=5 AND fecalta_tr<>'0001-01-01' AND fecbaja_tr='0001-01-01' AND codblq=0
            THEN 1 ELSE 0
        END AS t_tr_vig
        ,pan2
        ,contrato_pan
    FROM schm_workspace.ppff_foto_panes_hoy_tmp;

    -- ==================================================================================================;
    --  [01] Base de datos de Stock de Cuenta Vista;
    -- ==================================================================================================;

    -- --------------------------------------------------------------------------------------------------;
    --  [01.1] Generar Tabla Stock de Cuenta Vista;
    -- --------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_sb_stock_cuenta_vista as
        SELECT
            a.cli_identifica as  rut
            ,a.cli_identifica_dv as dv
            ,b.vis_numcue as cuenta
            ,b.vis_fechape as fecha_apertura
            /*b.vis_fechcierr,*/
            ,b.vis_fechcierr as fecha_cierre
            /*b.vis_status  estado,*/
            ,CASE
                WHEN b.vis_pro=4 THEN 'CUENTA_VISTA'
                WHEN b.vis_pro=40 THEN 'LCA'
            END as descrip_producto
            ,CASE
                WHEN b.vis_status ='9' THEN 'cerrado'
                when b.vis_status ='2' then 'vigente'
            END as estado_cuenta
            /*c.DES_CODTAB,*/
            ,b.vis_suc as sucursal_apertura
            ,c.des_codigo as cod_cierre_contrato
            ,c.des_descripcion as desc_cierre_contrato
        FROM br_dm_prod_bigdata_fisa_db.tcap_vista b
        INNER JOIN br_dm_prod_bigdata_fisa_db.tcli_persona a
                ON (a.cli_codigo=b.vis_codcli)
        LEFT JOIN br_dm_prod_bigdata_fisa_db.tgen_desctabla c
               ON (b.VIS_CODTAB=c.DES_CODTAB)
              AND (b.VIS_CAUCIERR=c.DES_CODIGO);

    -- --------------------------------------------------------------------------------------------------;
    --  [01.2] Captados digitales;
    -- --------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_curse_debito AS
        SELECT
            tar.tar_cac_nro_ctt_k as numero_contrato
            ,tar.tar_cac_nro_pan_k as numero_tarjeta
            ,substring(prd.prd_cac_nro_ctt,9) as numero_cuenta_vista
            ,sol.sol_cod_ide_cli as rut_cliente
            ,per.per_cac_ide_cli_dv as dv
            ,sol.sol_fch_alt_sol as fecha_solicitud
            ,sol.sol_cod_nro_sol_k as numero_solicitud
            ,sol.sol_cod_est_sol as estado
        FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol as SOL
        INNER JOIN br_dm_prod_bigdata_reporitf_db.SFADMI_BCO_TAR as TAR
           ON tar.tar_cod_nro_sol_k = sol.sol_cod_nro_sol_k
        INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol as PRD
           ON tar.tar_cod_nro_sol_k = prd.prd_cod_nro_sol_k
           AND tar.tar_cod_tip_prd_k = prd.prd_cod_tip_prd_k
        INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_dat_per as PER
           ON prd.prd_cod_nro_sol_k = per.per_cod_nro_sol_k
         AND sol.sol_cod_ide_cli = per.per_cod_ide_cli_k
        WHERE
         substring(tar.tar_cod_tip_prd_k,1,2) = '04'
        AND (sol.sol_cod_cll_act = 14 OR sol.sol_cod_cll_ant = 14)
        AND sol.sol_cod_cll_adm = 2
        AND sol.sol_fch_crc_sol
            between v_fecha_inicio AND v_fecha_fin
        AND EXISTS (SELECT btc_cod_nro_sol_k
                    FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
                    WHERE btc_cod_nro_sol_k = sol.sol_cod_nro_sol_k
                    AND btc_cod_tip_reg_k = 1
                    AND btc_cod_eta_k = 102
                    AND btc_cod_evt_k = 30)
        ORDER BY sol.sol_cod_nro_sol_k ASC;


    CREATE TABLE schm_workspace.ppff_sb_stock_cuenta_vista_camal AS
        SELECT
            a.*
            ,CASE
                WHEN b.rut_cliente IS NOT NULL AND b.numero_cuenta_vista IS NOT NULL THEN 'CAPTA_ONLINE'
                WHEN  b.rut_cliente IS NULL AND b.numero_cuenta_vista IS NULL AND a.sucursal_apertura=70 THEN 'PWA'
                ELSE 'PRESENCIAL'
            END AS tipo_capta
        FROM schm_workspace.ppff_sb_stock_cuenta_vista as a
        LEFT JOIN schm_workspace.ppff_curse_debito as b
               ON (a.rut=b.rut_cliente) AND (a.cuenta=b.numero_cuenta_vista)
        ;
    -- --------------------------------------------------------------------------------------------------;
    --  [01.3] Ultimo pan vigente del periodo;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_plasticos_cierre as
    SELECT *
    FROM schm_workspace.ppff_foto_panes_hoy
    WHERE fecalta_tr <= v_fecha_fin
    ;

    CREATE TABLE schm_workspace.ppff_max_plastico AS
    SELECT
        ctto
        ,max(numplastico) as numplastico
    FROM schm_workspace.ppff_plasticos_cierre
    GROUP BY ctto
    ;


    CREATE TABLE schm_workspace.ppff_plasticos_cierre2 AS
    SELECT
        a.*
    FROM schm_workspace.ppff_plasticos_cierre as a
    INNER JOIN schm_workspace.ppff_max_plastico as b
            ON (a.ctto=b.ctto)
           AND (a.numplastico=b.numplastico)
    ;

    CREATE TABLE schm_workspace.ppff_mpdt666 as
    SELECT
        codent1,
        centalta1,
        cuenta1,
        cuenta2 as cv
    FROM br_dm_prod_bigdata_reporitf_db.mpdt666
    ;


    CREATE TABLE schm_workspace.ppff_base_plasticos2 as
    SELECT
        a.*
        ,b.cv as cuenta_cv
    FROM schm_workspace.ppff_plasticos_cierre2 as a
    LEFT JOIN schm_workspace.ppff_mpdt666 as b
           ON (a.ctto= b.CODENT1||b.CENTALTA1||b.CUENTA1)
    ;


    CREATE TABLE schm_workspace.ppff_cdp as
    SELECT DISTINCT
        codent
        ,centalta
        ,cuenta
    FROM schm_workspace.ppff_foto_panes_hoy
    WHERE
        fecalta_tr
            between v_fecha_inicio AND v_fecha_fin
    AND (substring(pan,1,6)='525384' AND substring(panant,1,6)='639229')
    ;

    CREATE TABLE schm_workspace.ppff_final_plasticos AS
    SELECT
        a.codent,
        a.centalta,
        a.cuenta,
        a.pan,
        a.cuenta_cv,
        CASE
            WHEN b.cuenta IS NOT NULL AND substring(a.pan,1,6)='525384' THEN 'MAESTRO a MCD'
            WHEN b.cuenta IS NULL AND substring(a.pan,1,6)='525384' THEN 'MCD'
            WHEN b.cuenta IS NULL AND substring(a.pan,1,6)='639229' THEN 'MAESTRO'
            ELSE 'MAESTRO'
        END AS tipo_plastico
    FROM schm_workspace.ppff_base_plasticos2 as a
    LEFT JOIN schm_workspace.ppff_cdp as b
        ON (a.codent=b.codent)
       AND (a.centalta=b.centalta)
       AND (a.cuenta=b.cuenta)
    ;



    CREATE TABLE schm_workspace.ppff_sb_stock_cuenta_vista as
    SELECT
        a.*,
        CASE
            WHEN b.cuenta_cv IS NOT NULL THEN b.tipo_plastico ELSE 'MAESTRO'
        END AS tipo_plastico
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_camal as a
    LEFT JOIN schm_workspace.ppff_final_plasticos as b
           ON (a.cuenta=b.cuenta_cv)
    ;

    -- --------------------------------------------------------------------------------------------------;
    -- [01.2] Marcar nuevos y fugados;
    -- --------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_sb_stock_cuenta_vista_captado as
    SELECT
        *
        ,CASE
            WHEN fecha_apertura >= v_fecha_inicio
                AND fecha_apertura <= v_fecha_fin
                THEN 1 else 0 end as si_captado_periodo
        ,case
            WHEN fecha_cierre >= v_fecha_inicio
                     AND fecha_cierre <= v_fecha_fin THEN 1 ELSE 0
        END AS si_fugado_periodo
        ,CASE
            WHEN fecha_apertura< v_fecha_inicio
                     AND (fecha_cierre >= v_fecha_inicio
                              OR fecha_cierre is null) then 1 else 0
        end as si_stock_anterior
    FROM schm_workspace.ppff_sb_stock_cuenta_vista
    ;

    -- --------------------------------------------------------------------------------------------------;
    --  [01.3] Pegar Marca de Funcionarios;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_sb_stock_cuenta_vista_funcionario as
    SELECT
        a.*
        ,CASE
            WHEN b.rut IS NOT NULL THEN 1 ELSE 0
        END AS si_funcionario
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_captado as a
    LEFT JOIN schm_data_analytics.clts_dotacion AS b
           ON (a.rut=b.rut)
    ;

    -- --------------------------------------------------------------------------------------------------;
    -- [01.4] Dejar tabla en duro;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_sb_stock_cuenta_vista_validada AS  /* VALIDADA */
    SELECT *
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_funcionario
    ;


    -- ==================================================================================================;
    --  [02] Base de Saldos de Cuenta Vista diarios;
    -- ==================================================================================================;

    -- --------------------------------------------------------------------------------------------------;
    --  [02.1] Sacar Base de saldos diarios;
    -- --------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_sb_saldos_cuenta_vista  as
    SELECT
        b.cli_identifica rut,
        TO_CHAR(TO_DATE(a.acp_fecha, 'YYYYMMDD'), 'YYYYMMDD')::int as codfecha,
        a.acp_fecha,
        a.acp_numcue,
        sum(a.acp_salefe + a.acp_sal12h + a.acp_sal24h + a.acp_sal48h)::bigint as saldo
    FROM br_dm_prod_bigdata_fisa_db.tcap_acrpas a
    left join (
        SELECT
            distinct cli_identifica ,vis_numcue
        FROM br_dm_prod_bigdata_fisa_db.tcli_persona ,br_dm_prod_bigdata_fisa_db.tcap_vista
        WHERE cli_codigo=vis_codcli
            AND vis_mod=4
            AND (VIS_PRO=4)
            AND vis_tip=1
            AND (vis_status='2' or vis_status='9')) b
        on(a.acp_numcue=b.vis_numcue)
    WHERE a.acp_pro = 4 AND a.acp_tip = 1
    AND a.acp_fecha::date >=  v_fecha_inicio
    AND a.acp_fecha::date <= v_fecha_fin
    group by
    a.ACP_FECHA,
    a.ACP_NUMCUE,
    b.cli_identifica
    ;

    -- --------------------------------------------------------------------------------------------------;
    --  [02.2] Calcular por cuenta: Saldo ultimo dia, Saldo promedio, dias con saldo;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_sb_saldos_cuenta_vista2 as
    SELECT
        a.*,
        b.saldo as ultimo_saldo
    FROM (
        SELECT
            ACP_NUMCUE as cuenta,
            max(rut) as rut,
            sum(CASE WHEN Saldo>1 THEN 1 ELSE 0 END) as nro_dias_saldo_mayor_1,
            sum(CASE WHEN Saldo>1 THEN Saldo ELSE 0 END) as sum_saldo_fecha
        FROM schm_workspace.ppff_sb_saldos_cuenta_vista
        GROUP BY acp_numcue
    ) as a
    LEFT JOIN (
        SELECT DISTINCT
            acp_numcue,
            saldo
        FROM schm_workspace.ppff_sb_saldos_cuenta_vista
        WHERE codfecha=(
                SELECT max(CodFecha)
                FROM schm_workspace.ppff_sb_saldos_cuenta_vista)
    ) as b
    ON (a.cuenta=b.acp_numcue)
    ;

    -- --------------------------------------------------------------------------------------------------;
    --  [02.3] Marcar Funcionarios;
    -- --------------------------------------------------------------------------------------------------;


    CREATE TABLE schm_workspace.ppff_sb_saldos_cuenta_vista2_funcionario AS
    SELECT
        a.*
        ,CASE
            WHEN b.rut IS NOT NULL THEN 1 ELSE 0
        END AS si_funcionario
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2 as a
    LEFT JOIN schm_data_analytics.clts_dotacion AS b
           ON (a.rut=b.rut)
    ;


    SELECT max((ACP_FECHA)) as max_dia
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista
    ; -- %let max_dia=&max_dia;

    -- --------------------------------------------------------------------------------------------------;
    --  [02.4] Dejar tabla en duro;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_sb_saldos_cuenta_vista2_validado as	/*	VALIDADO	*/
    SELECT *
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_funcionario
    ;

    -- ==================================================================================================;
    --  [03] Base de Movimientos de Cuenta Vista;
    -- ==================================================================================================;

    /*Pendiente Categorizar movimientos (por ejempo Movs de DAP)*/

    -- --------------------------------------------------------------------------------------------------;
    -- [03.1] Extraer Movimientos de debito totales;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_sb_mov_cuenta_vista_mvtos_det_temp as
    SELECT
        c2.cli_identifica rut
        ,c2.cli_identifica_dv dv
        ,schm_artifacts.f_period(c1.tmo_fech) as periodo
        ,c1.tmo_fech as CodFecha
        ,c1.tmo_hora as CodFechaHora
        ,c1.tmo_numcue as cuenta
        ,c1.tmo_fechcon as fechacon
        ,c1.tmo_fech as fecha
        ,c1.rub_desc as descripcion
        ,c1.tmo_val as monto
        ,c1.con_libre as desc_negocio
        ,c1.tmo_codmod
        ,c1.tmo_tipotra
        ,c1.tmo_rubro
        ,c1.tmo_numtra
        ,c1.tmo_numcue
        ,c1.tmo_codusr
        ,c1.tmo_sec
        ,c1.tmo_codtra
        ,(
            SELECT cod_destra
            FROM br_dm_prod_bigdata_fisa_db.tgen_codtrans
            WHERE cod_tra = tmo_codtra AND cod_mod = tmo_codmod
        ) as gls_transac
        ,CASE
            WHEN c1.tmo_tipotra='D' THEN 'CARGO'
            WHEN c1.tmo_tipotra='C' THEN 'ABONO'
        END AS tipo_movimiento,
        CASE
            WHEN c1.tmo_rubro = 1 AND c1.tmo_codtra = 30 AND c1.con_libre LIKE 'Depo%' THEN 1
            ELSE 0
        END as marca_dap,
        CASE
            WHEN c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS' AND (
                c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%'
                OR c1.con_libre LIKE '%Sueldos%')  THEN 1
        ELSE 0
        END as si_abr,
    CASE
        WHEN c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS'
                  AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre like '%Sueldos%')
                  AND c1.con_libre LIKE '%BANCO RIPLEY%' THEN 'BANCO RIPLEY'
        WHEN c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS'
                 AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre like '%Sueldos%')
                 AND c1.con_libre LIKE '%CAR S.A.%' THEN 'CAR'
        WHEN c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS'
                  AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre like '%Sueldos%')
                  AND c1.con_libre LIKE '%RIPLEY STORE%' THEN 'RIPLEY STORE'
        WHEN c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS'
                AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre like '%Sueldos%')
                AND (
                    c1.con_libre NOT LIKE ('%RIPLEY STORE%') or c1.con_libre NOT like ('%CAR S.A.%') or c1.con_libre NOT like ('%BANCO RIPLEY%')
                ) THEN 'OTROS BANCOS' else ''
        END AS descripcion_abr,
        CASE
            WHEN c1.tmo_tipotra='D'
                     AND (c1.con_libre like '%Ripley%' OR c1.con_libre like '%RIPLEY%')
                     AND  c1.con_libre NOT like '%PAGO%' THEN 'COMPRA_RIPLEY' else ''
        END AS compra_ripley
        FROM (
        SELECT *
            FROM br_dm_prod_bigdata_fisa_db.tcap_tramon /*base de movimientos*/
                , br_dm_prod_bigdata_fisa_db.TGEN_TRANRUBRO /*base descriptiva (para complementar movimientos)*/
                , br_dm_prod_bigdata_fisa_db.tcap_concepto /*base descriptiva (para complementar movimientos)*/
            WHERE
                rub_mod = tmo_codmod /*unificacion de base de movs con rubro*/
            AND rub_tra = tmo_codtra /*unificacion de base de movs con rubro*/
            AND rub_rubro = tmo_rubro /*unificacion de base de movs con rubro*/

            AND con_modulo(+) = tmo_codmod /*unificacion de base de movs con con_*/
            AND con_rubro(+) = tmo_rubro /*unificacion de base de movs con con_*/
            AND con_numtran(+) = tmo_numtra /*unificacion de base de movs con con_*/
            AND con_cuenta (+) = tmo_numcue /*unificacion de base de movs con con_*/
            AND con_codusr(+) = tmo_codusr /*unificacion de base de movs con con_*/
            AND con_sec(+) = tmo_sec /*unificacion de base de movs con con_*/
            AND con_transa(+) = tmo_codtra /*unificacion de base de movs con con_*/
            /*FILTROS DE MOVIMIENTOS*/
            AND tmo_tipotra in ('D','C') /*D=Cargo, C=Abono*/
            AND tmo_codpro = 4
            AND tmo_codtip = 1
            AND tmo_modo = 'N'
            AND tmo_val > 1 /*solo montos mayores a 1 peso (mov de prueba)*/

            AND tmo_fechcon >= v_fecha_inicio
            AND tmo_fechcon <= v_fecha_fin

        /*FINAL: QUERY DESDE OPERACIONES*/
        )  c1
        LEFT JOIN (
            SELECT
                DISTINCT cli_identifica, cli_identifica_dv ,vis_numcue
            FROM br_dm_prod_bigdata_fisa_db.tcli_persona /*MAESTRA DE CLIENTES BANCO*/
                ,br_dm_prod_bigdata_fisa_db.tcap_vista /*SALDOS CUENTAS VISTAS */
            WHERE cli_codigo=vis_codcli
                AND vis_mod=4/*cuenta vista*/
                AND (VIS_PRO=4/*CV*/)
                AND vis_tip=1  /*persona no juridica*/
                AND (vis_status='2' or vis_status='9') /*solo aquellas con estado vigente o cerrado*/
        )  C2
        ON (c1.tmo_numcue=c2.vis_numcue)
    ;


    CREATE TABLE schm_workspace.ppff_sb_mov_cuenta_vista_mvtos_det as
    SELECT
        *,
        CASE
            WHEN tmo_tipotra='C' THEN
                CASE
                    WHEN descripcion IN ('VALOR EFECTIVO','EN EFECTIVO') AND GLS_TRANSAC ='DEPOSITO' AND  SI_ABR<>1  THEN 'Depósitos en Efectivo'
                    WHEN descripcion IN ('CON DOCUMENTOS') AND GLS_TRANSAC ='DEPOSITO' AND SI_ABR<>1 THEN 'Depósitos con Documento'
                    WHEN descripcion IN ('TRANSFERENCIA DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas'
                    WHEN descripcion IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas'
                    WHEN descripcion IN ('DESDE OTROS BANCOS') AND  SI_ABR=1 THEN 'Abono de Remuneraciones'
                    WHEN descripcion IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 AND DESC_NEGOCIO like '%Proveedores%' THEN 'TEF Recibidas'
                    WHEN descripcion IN ('POR REGULARIZACION') AND  SI_ABR<>1 THEN 'Otros (pago proveedores)'
                    WHEN descripcion IN ('DESDE LINEA DE CREDITO') AND GLS_TRANSAC ='TRASPASO DE FONDOS' AND  SI_ABR<>1 THEN 'Traspaso desde LCA'
                    WHEN descripcion IN ('AVANCE DESDE TARJETA DE CREDITO BANCO RIPLEY') AND  SI_ABR<>1 THEN 'Avance desde Tarjeta Ripley'
                    WHEN descripcion IN ('DEVOLUCION COMISION') AND  SI_ABR<>1 THEN 'DEVOLUCION COMISION'
                    WHEN descripcion IN ('POR TRANSFERENCIA  DE LCA A CTA VISTA') AND  SI_ABR<>1 THEN 'Traspaso desde LCA' ELSE 'OTROS ABONOS'
            END ELSE ''
        END AS descripcion_abono,

        CASE
            WHEN tmo_tipotra='D' THEN
                CASE
                    WHEN descripcion IN ('COMPRA NACIONAL') THEN 'Compras Redcompra'
                    WHEN descripcion IN ('COMPRA NACIONAL MCD') THEN 'Compras Redcompra MCD'
                    WHEN descripcion IN ('COMPRA INTERNACIONAL') THEN 'Compras Internacionales'
                    WHEN descripcion IN ('COMPRA INTERNACIONAL MCD') THEN 'Compras Internacionales MCD'
                    WHEN descripcion IN ('CARGO POR PEC') THEN 'PEC'
                    WHEN descripcion IN ('GIRO CAJERO AUTOMATICO') THEN 'Giros ATM'
                    WHEN descripcion IN ('GIRO ATM INTERNACIONAL MCD') then 'Giros internacional MCD'
                    WHEN descripcion IN ('GIRO ATM NACIONAL MCD') then 'Giros ATM MCD'
                    WHEN descripcion IN ('GIRO POR CAJA') THEN 'Giros Caja'
                    WHEN descripcion IN ('GIRO INTERNACIONAL') THEN 'Giro Internacional'
                    WHEN descripcion IN ('TRANSFERENCIA A OTROS BANCOS') THEN 'TEF emitidas Otros Bancos'
                    WHEN descripcion IN ('PAGO TARJETA DE CREDITO') THEN 'Pago de Tarjeta'
                    WHEN descripcion IN ('A CUENTA BANCO RIPLEY','POR TRASPASO A CUENTA')  THEN 'Pago LCA'
                    WHEN descripcion IN ('COSTO DE MANTENCION MENSUAL CUENTA VISTA') then 'Comision planes'
                    else 'OTROS CARGOS'
            end else ''
        END AS descripcion_cargo
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_mvtos_det_temp
    ;

    -- --------------------------------------------------------------------------------------------------;
    --  [03.2] Pegar Marca de Funcionario;
    -- --------------------------------------------------------------------------------------------------;


    CREATE TABLE schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios as
    SELECT
        a.*,
    CASE
        WHEN b.rut IS NOT NULL THEN 1 ELSE 0
    END AS si_funcionario
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_mvtos_det as a
    LEFT JOIN schm_data_analytics.clts_dotacion as b
    on (a.rut=b.rut)
    ;



    -- --------------------------------------------------------------------------------------------------;
    --  [03.3] Dejar tabla en duro;
    -- --------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada as	/*	VALIDADO	*/
    SELECT *
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios
    ;

    -- ==================================================================================================;
    --  [04] Base de Suscritos Abono de remuneraciones (desde bases control comercial);
    -- ==================================================================================================;

    -- --------------------------------------------------------------------------------------------------;
    --  [04.1] Generar Tabla de Core de Ventas;
    -- --------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_core_venta AS
    SELECT distinct
    *,
    t1.fecha as fec_num
    FROM schm_data_analytics.ppff_capta_salida t1
    /*inner join GEDCRE_CREDITO.CORE_VENTA t2 on t1.RUT_CLIENTE=t2.RUT_CLIENTE */
        WHERE
            t1.COD_PROD=4 /*AND t1.PRODUCTO = ('CUENTA VISTA')*/
        AND T1.fecha::date >= v_fecha_inicio
        AND T1.fecha::date <= v_fecha_fin
    ;

    -- --------------------------------------------------------------------------------------------------;
    -- [04.2] Suscritos en CV segun control de seguimiento;
    -- --------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_sb_suscritos_cv as
    SELECT
          a.nro_solicitud
        , a.prd_cac_det_prd
        , b.rut_cliente as rut
    FROM (
        SELECT DISTINCT
            ps.prd_cod_nro_sol_k as nro_solicitud
           ,ps.prd_cac_det_prd
        FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol ps
        WHERE
            ps.prd_cod_tip_prd_k like '%04%') a
    INNER JOIN schm_workspace.ppff_core_venta as b
            ON (a.nro_solicitud=b.nro_solicitud)
    ;

    -- --------------------------------------------------------------------------------------------------;
    --  [04.3] Pegar Marca de Funcionario;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_sb_suscritos_cv_funcionario as
    SELECT
         a.*
        ,CASE
            WHEN b.rut IS NOT NULL THEN 1
            ELSE 0
        END AS si_funcionario
    FROM schm_workspace.ppff_sb_suscritos_cv as a
    LEFT JOIN schm_data_analytics.clts_dotacion as b
           ON a.rut = b.rut
    ;

    -- --------------------------------------------------------------------------------------------------;
    --  [04.4] Dejar tabla en duro;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_sb_suscritos_cv_validado as 	/*	VALIDADO	*/
    SELECT *
    FROM schm_workspace.ppff_sb_suscritos_cv_funcionario
    ;

    -- ==================================================================================================;
    --  [05] Informacion de Captaciones de CtaVta segun control comercial;
    -- ==================================================================================================;


    /*Pendiente identificar*/



    -- ==================================================================================================;
    -- [06] Comenzar a Generar Salidas de cara al panel de cuenta Vista;
    -- ==================================================================================================;


    -- --------------------------------------------------------------------------------------------------;
    --  [05.1] Total;
    -- --------------------------------------------------------------------------------------------------;
    CREATE TABLE schm_workspace.ppff_sb_salida_panel_ctavta as
    SELECT
        '001.00' as nro_fila
       ,'Clientes Totales' as observacion
       ,'----------------------' as categoria
       ,max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario >= 0

    UNION

    SELECT
        '001.01' as nro_fila
       ,'Clientes Totales' as observacion
       ,'Stock' as categoria
       ,max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario >= 0

    UNION

    SELECT
          '001.02' as Nro_Fila
        ,'Clientes Totales' as Observacion
        ,'Stock CV Inicio de Periodo' as Categoria
        ,sum(si_stock_anterior) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario >= 0

    UNION

    SELECT
        '001.03' as nro_fila,
        'Clientes Totales' as observacion,
        'Captacion' as categoria,
        sum(si_captado_periodo) as valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario >= 0

    UNION

    SELECT
        '001.04' as nro_fila
        ,'Clientes Totales' as observacion
        ,'Cierre' as categoria
         ,sum(si_fugado_periodo) as valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario >= 0

    union

    SELECT
        '001.05' as Nro_Fila
       ,'Clientes Totales' as Observacion
       ,'Stock CV Final de periodo' as Categoria
       ,max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '001.06' as nro_fila
       ,'Clientes Totales' as observacion
       ,'Tasa de cierre' as categoria
       ,max(0) as valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    /*Bloque2: Informacion de uso CV*/
    SELECT
        '002.00' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '002.01' as nro_fila
        ,'Clientes Totales' as observacion
        ,'Informacion de uso CV' as categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    union

    SELECT
        '002.02' as nro_fila
        ,'Clientes Totales' as observacion
        ,'# de Cuentas con Movimientos cargos o abonos' as categoria
        ,count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE
            si_funcionario >= 0
        AND (descripcion_abono in (
            'Depósitos en Efectivo',
            'Depósitos con Documento',
            'TEF Recibidas',
            'Abono de Remuneraciones',
            'Otros (pago proveedores)',
            'Traspaso desde LCA',
            'Avance desde Tarjeta Ripley',
            'OTROS ABONOS')
        OR Descripcion_Cargo in (
            'Comision planes',
            'Compras Internacionales',
            'Compras Internacionales MCD',
            'Compras Redcompra',
            'Compras Redcompra MCD',
            'Giro Internacional',
            'Giros ATM',
            'Giros Caja',
            'PEC',
            'Pago LCA',
            'Pago de Tarjeta',
            'TEF emitidas Otros Bancos',
            'Giros internacional MCD',
            'Giros ATM MCD',
            'OTROS CARGOS'))

    union

    SELECT
        '002.03' as nro_fila
        ,'Clientes Totales' as observacion
        ,'# de Cuentas con Cargos' as categoria
        ,count(distinct cuenta) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE
        si_funcionario>=0
    AND (descripcion_cargo in (
            'Comision planes',
            'Compras Internacionales',
            'Compras Redcompra',
            'Compras Internacionales MCD',
            'Compras Redcompra MCD',
            'Giro Internacional',
            'Giros ATM',
            'Giros Caja',
            'PEC',
            'Pago LCA',
            'Pago de Tarjeta',
            'TEF emitidas Otros Bancos',
            'Giros internacional MCD',
            'Giros ATM MCD',
            'OTROS CARGOS'))
    UNION

    SELECT
        '002.04' as nro_fila
        ,'Clientes Totales' as observacion
        ,'Cuentas con compras' as categoria
        ,count(distinct cuenta) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE
        si_funcionario>=0
    AND (Descripcion_Cargo in (
        'Compras Internacionales',
        'Compras Redcompra',
        'Compras Internacionales MCD',
        'Compras Redcompra MCD'))

    UNION

    SELECT
        '002.05' as nro_fila
       ,'Clientes Totales' as observacion
       ,'Cuentas con Giros' as categoria
       ,count(distinct cuenta) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
        'Giro Internacional',
        'Giros ATM',
        'Giros Caja',
        'Giros internacional MCD',
        'Giros ATM MCD'))

    UNION

    SELECT
        '002.06' as nro_fila,
        'Clientes Totales' as observacion,
        'Cuentas con TEF' as categoria,
        count(distinct cuenta) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
        'TEF emitidas Otros Bancos'))

    UNION

    SELECT
        '002.07' as nro_fila,
        'Clientes Totales' as observacion,
        'Cuentas con Pago' as categoria,
        count(distinct cuenta) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
      AND (Descripcion_Cargo in (
            'Pago de Tarjeta'
            ,'Pago LCA'))

    UNION

    SELECT
        '002.08' as nro_fila,
        'Clientes Totales' as observacion,
        'Cuentas con uso Internacional' as categoria,
        count(distinct cuenta) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
      AND (Descripcion_Cargo in (
        'Giro Internacional'
        ,'Giros internacional MCD'))

    union

    SELECT
        '002.09' as nro_fila,
        'Clientes Totales' as observacion,
        '# Cuentas con  Abonos' as categoria,
        count(distinct cuenta) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE
        si_funcionario >= 0
    AND (Descripcion_Abono in (
        'Abono de Remuneraciones'
       ,'Avance desde Tarjeta Ripley'
       ,'Depósitos con Documento'
       ,'Depósitos en Efectivo'
       ,'OTROS ABONOS'
       ,'Otros (pago proveedores)'
       ,'TEF Recibidas'
       ,'Traspaso desde LCA'))

    union

    SELECT
        '002.10' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Depósitos en Efectivo' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE
        si_funcionario>=0
    AND (descripcion_abono in (
        'Depósitos en Efectivo'))

    union

    SELECT
        '002.11' as nro_fila,
        'Clientes Totales' as observacion,
        'Depósitos con Documento' as categoria,
        count(distinct cuenta) as valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
        'Depósitos con Documento'))

    UNION

    SELECT
        '002.12' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'TEF Recibidas' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'TEF Recibidas'))

    UNION

    SELECT
        '002.13' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Abono de Remuneraciones' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
        'Abono de Remuneraciones'))

    UNION

    SELECT
        '002.14' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Otros (pago proveedores)' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Otros (pago proveedores)'))

    UNION

    SELECT
        '002.15' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Traspaso desde LCA' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
        'Traspaso desde LCA'))

    UNION

    SELECT
        '002.16' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Avance desde Tarjeta Ripley' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Avance desde Tarjeta Ripley'))

    UNION

    SELECT
        '002.17' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'OTROS ABONOS' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'OTROS ABONOS'))

    UNION

    /*Bloque3: Informacion de uso CV %*/
    SELECT
        '003.00' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.01' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Informacion de uso CV %' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
    '003.02' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '% de Cuentas con movimiento o abonos' as Categoria,
    max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.03' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '% de Cuentas con Cargos' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.04' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cuentas con compras' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.05' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cuentas con Giros' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.06' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cuentas con TEF' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.07' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cuentas con uso Internacional' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.08' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '% Cuentas con Abonos' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.09' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Depósitos en Efectivo' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.10' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Depósitos con Documento' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.11' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'TEF Recibidas' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.12' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Abono de Remuneraciones' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.13' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Otros (pago proveedores)' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.14' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Traspaso desde LCA' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.15' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Avance desde Tarjeta Ripley' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '003.16' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'OTROS ABONOS' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    /*Bloque4: Informacion de ABR*/
    SELECT
        '004.00' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '004.01' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Informacion de ABR' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '004.02' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# de Cuentas Distintas Total Abonos >= $270.000' as Categoria,
        count(distinct cuenta) as Valor
    FROM (
    SELECT cuenta,sum(Monto) as SUM_Monto
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE
        si_funcionario>=0
    AND GLS_TRANSAC='ABONO'
    AND Descripcion_Abono NOT IN ('Traspaso desde LCA','Abono de Remuneraciones','Avance desde Tarjeta Ripley')
    AND SI_ABR=0
    group by cuenta
    ) as X
    WHERE SUM_Monto>=270000


    UNION

    SELECT
        '004.03' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# de Cuentas Distintas con ABR' as Categoria,
        count(distinct cuenta) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND SI_ABR=1

    UNION

    SELECT
        '004.04' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '% de ABR vigentes' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '004.05' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# de ABR suscritos de los Captados' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_suscritos_cv_validado
    WHERE si_funcionario>=0

    UNION

    SELECT
        '004.06' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Tasa de cruce de ABR en Captacion' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '004.07' as Nro_Fila,
        'Clientes NF' as Observacion,
        '% de ABR con Cargo' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario=0

    UNION

    /*Bloque5: Informacion de uso CV/por cuenta*/
    SELECT
        '005.00' as Nro_Fila,
        'Clientes NF' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario=0

    UNION

    SELECT
        '005.01' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Informacion de uso CV/por cuenta' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.02' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# de movimiento por cuenta cargo y abono' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    union

    SELECT
        '005.03' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# de cargos por cuenta' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.04' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# de compras por cuenta' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0


    UNION

    SELECT
        '005.05' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# de Giros por cuenta' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
    '005.06' as Nro_Fila,
    'Clientes Totales' as Observacion,
    '# de TEF por cuenta' as Categoria,
    max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.07' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# uso internacional por cuenta' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.08' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# Abonos por cuenta' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0


    UNION

    SELECT
        '005.09' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# Depósitos en Efectivo' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.10' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# Depósitos con Documento' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.11' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# TEF Recibidas' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.12' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# Abono de Remuneraciones' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.13' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# Otros (pago proveedores)' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
            '005.14' as Nro_Fila,
            'Clientes Totales' as Observacion,
            '# Traspaso desde LCA' as Categoria,
            max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '005.15' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '# Avance desde Tarjeta Ripley' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0


    UNION

    /*Bloque6: Informacion de Saldo*/
    SELECT
        '006.00' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>=0

    UNION

    SELECT
        '006.01' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Informacion de Saldo' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>=0

    UNION

    SELECT
        '006.02' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cuentas con Saldo >$1' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>=0
    AND Nro_Dias_Saldo_mayor_1>0

    UNION

    SELECT
        '006.03' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cuentas con Saldo >$1 EOP' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>=0
    AND Ultimo_Saldo>1

    UNION

    SELECT
        '006.04' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Saldo Total Promedio Mes (MM$)' as Categoria,
        sum(
                SUM_SALDO_FECHA/(SELECT max(DATE_PART(day, ACP_FECHA::date))
                                 FROM schm_workspace.ppff_sb_saldos_cuenta_vista))/1000000 as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>=0
    AND Nro_Dias_Saldo_mayor_1>0

    UNION

    SELECT
        '006.05' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Saldo Total EOP (MM$)' as Categoria,
        sum(Ultimo_Saldo)/1000000 as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>=0

    UNION

    SELECT
        '006.06' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Saldo Promedio por cuenta Activa ($)' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>=0

    UNION

    /*Bloque7: Informacion de Saldo %*/
    SELECT
        '007.00' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '007.01' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Informacion de Saldo %' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int)) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '007.02' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '% de Cuentas con Saldo' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    /*Bloque8: Movimientos ($)*/
    SELECT
        '008.00' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '008.01' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Movimientos ($)' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '008.02' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cargos' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
        'Comision planes',
        'Compras Internacionales',
        'Compras Redcompra',
        'Compras Internacionales MCD',
        'Compras Redcompra MCD',
        'Giro Internacional',
        'Giros ATM',
        'Giros Caja',
        'OTROS CARGOS',
        'PEC',
        'Pago LCA',
        'Pago de Tarjeta',
        'TEF emitidas Otros Bancos',
        'Giros internacional MCD',
        'Giros ATM MCD'))

    UNION

    SELECT
        '008.03' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
            'Compras Redcompra',
            'Compras Internacionales',
            'Compras Internacionales MCD',
            'Compras Redcompra MCD',
            'PEC'))

    UNION

    SELECT
        '008.04' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras Redcompra' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in ('Compras Redcompra'))

    UNION

    SELECT
        '008.05' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras  Redcompra Tienda' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in ('Compras Redcompra')) AND COMPRA_RIPLEY='COMPRA_RIPLEY'

    UNION

    SELECT
        '008.06' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras Redcompra no Tienda' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in ('Compras Redcompra')) AND COMPRA_RIPLEY<>'COMPRA_RIPLEY'

    UNION

    SELECT
        '008.07' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras Internacionales' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in ('Compras Internacionales'))

    UNION

    SELECT
        '008.08' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'PEC' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in ('PEC'))


    UNION

    SELECT
        '008.09' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Giros' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Giros ATM',
    'Giros Caja',
    'Giro Internacional',
    'Giros internacional MCD',
    'Giros ATM MCD'
    ))

    UNION

    SELECT
        '008.10' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'ATM' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Giros ATM'
    ))

    UNION

    SELECT
        '008.11' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Caja' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Giros Caja'
    ))

    UNION

    SELECT
        '008.12' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Internacional' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Giro Internacional'
    ))

    UNION

    SELECT
        '008.13' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'TEF emitidas' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'TEF emitidas Otros Bancos'
    ))

    UNION

    SELECT
        '008.14' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Otros Bancos' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'TEF emitidas Otros Bancos'
    ))

    UNION

    SELECT
        '008.15' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Pagos' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Pago de Tarjeta',
    'Pago LCA'
    ))

    UNION

    SELECT
        '008.16' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Pago de Tarjeta' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Pago de Tarjeta'
    ))

    UNION

    SELECT
        '008.17' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Pago LCA' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Pago LCA'
    ))

    UNION

    SELECT
        '008.18' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cobro Mantenci�n Cuenta Vista' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Comision planes'
    ))

    UNION

    SELECT
        '008.19' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'OTROS CARGOS' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'OTROS CARGOS'
    ))

    UNION

    SELECT
        '008.20' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Abonos' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Abono de Remuneraciones',
    'Avance desde Tarjeta Ripley',
    'Depósitos con Documento',
    'Depósitos en Efectivo',
    'OTROS ABONOS',
    'Otros (pago proveedores)',
    'TEF Recibidas',
    'Traspaso desde LCA'
    ))

    UNION

    SELECT
        '008.21' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Depósitos en Efectivo' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Depósitos en Efectivo'))

    UNION

    SELECT
        '008.22' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Depósitos con Documento' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Depósitos con Documento'))

    UNION

    SELECT
        '008.23' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'TEF Recibidas' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'TEF Recibidas'))

    UNION

    SELECT
        '008.24' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Abono de Remuneraciones' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE (Descripcion_Abono in (
    'Abono de Remuneraciones'))

    UNION

    SELECT
        '008.25' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Otros (pago proveedores)' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Otros (pago proveedores)'))

    UNION

    SELECT
        '008.26' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Traspaso desde LCA' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Traspaso desde LCA'))

    UNION

    SELECT
        '008.27' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Avance desde Tarjeta Ripley' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Avance desde Tarjeta Ripley'))

    UNION

    SELECT
        '008.28' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'OTROS ABONOS' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'OTROS ABONOS'))

    UNION

    /*Bloque9: Movimientos (Tx)*/
    SELECT
        '009.00' as Nro_Fila,
        'Clientes Totales' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '009.01' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Movimientos (#)' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0

    UNION

    SELECT
        '009.02' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Movimientos (#) (Cargos y Abonos)' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Comision planes',
    'Compras Internacionales',
    'Compras Redcompra',
    'Compras Internacionales MCD',
    'Compras Redcompra MCD',
    'Giro Internacional',
    'Giros ATM',
    'Giros Caja',
    'OTROS CARGOS',
    'PEC',
    'Pago LCA',
    'Pago de Tarjeta',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'TEF emitidas Otros Bancos'
    ) or Descripcion_Abono in (
    'Abono de Remuneraciones',
    'Avance desde Tarjeta Ripley',
    'Depósitos con Documento',
    'Depósitos en Efectivo',
    'OTROS ABONOS',
    'Otros (pago proveedores)',
    'TEF Recibidas',
    'Traspaso desde LCA'
    ))

    UNION

    SELECT
        '009.03' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cargos' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Comision planes',
    'Compras Internacionales',
    'Compras Redcompra',
    'Compras Internacionales MCD',
    'Compras Redcompra MCD',
    'Giro Internacional',
    'Giros ATM',
    'Giros Caja',
    'OTROS CARGOS',
    'PEC',
    'Pago LCA',
    'Pago de Tarjeta',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'TEF emitidas Otros Bancos'
    ))

    UNION

    SELECT
        '009.04' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Compras Redcompra',
    'Compras Internacionales',
    'Compras Redcompra MCD',
    'Compras Internacionales MCD',
    'PEC'
    ))

    UNION

    SELECT
        '009.05' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras Redcompra' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Compras Redcompra'
    ))

    UNION

    SELECT
        '009.06' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras  Redcompra Tienda' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Compras Redcompra'
    )) AND COMPRA_RIPLEY='COMPRA_RIPLEY'

    UNION

    SELECT
        '009.07' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras Redcompra no Tienda' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Compras Redcompra'
    )) AND COMPRA_RIPLEY<>'COMPRA_RIPLEY'

    UNION

    SELECT
        '009.08' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Compras Internacionales' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Compras Internacionales'
    ))

    UNION

    SELECT
        '009.09' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'PEC' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'PEC'
    ))

    UNION

    SELECT
        '009.10' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Giros' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Giros ATM',
    'Giros Caja',
    'Giros internacional MCD',
    'Giros ATM MCD',
    'Giro Internacional'
    ))

    UNION

    SELECT
        '009.11' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'ATM' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Giros ATM'
    ))

    UNION

    SELECT
        '009.12' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Caja' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Giros Caja'
    ))

    UNION

    SELECT
        '009.13' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Internacional' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Giro Internacional'
    ))

    UNION

    SELECT
        '009.14' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'TEF emitidas' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'TEF emitidas Otros Bancos'
    ))

    UNION

    SELECT
        '009.15' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Otros Bancos' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'TEF emitidas Otros Bancos'
    ))

    UNION

    SELECT
        '009.16' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Pagos' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Pago de Tarjeta',
    'Pago LCA'
    ))

    UNION

    SELECT
        '009.17' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Pago de Tarjeta' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Pago de Tarjeta'
    ))

    UNION

    SELECT
        '009.18' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Pago LCA' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Pago LCA'
    ))

    UNION

    SELECT
        '009.19' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Cobro Mantenci�n Cuenta Vista' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'Comision planes'
    ))

    UNION

    SELECT
        '009.20' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'OTROS CARGOS' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Cargo in (
    'OTROS CARGOS'
    ))

    UNION

    SELECT
        '009.21' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Abonos' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Abono de Remuneraciones',
    'Avance desde Tarjeta Ripley',
    'Depósitos con Documento',
    'Depósitos en Efectivo',
    'OTROS ABONOS',
    'Otros (pago proveedores)',
    'TEF Recibidas',
    'Traspaso desde LCA'
    ))

    UNION

    SELECT
        '009.22' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Depósitos en Efectivo' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Depósitos en Efectivo'))

    UNION

    SELECT
        '009.23' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Depósitos con Documento' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Depósitos con Documento'))

    UNION

    SELECT
        '009.24' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'TEF Recibidas' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'TEF Recibidas'))

    UNION

    SELECT
        '009.25' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Abono de Remuneraciones' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Abono de Remuneraciones'))

    UNION

    SELECT
        '009.26' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Otros (pago proveedores)' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Otros (pago proveedores)'))

    UNION

    SELECT
        '009.27' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Traspaso desde LCA' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Traspaso desde LCA'))

    UNION

    SELECT
        '009.28' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'Avance desde Tarjeta Ripley' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'Avance desde Tarjeta Ripley'))

    UNION

    SELECT
        '009.29' as Nro_Fila,
        'Clientes Totales' as Observacion,
        'OTROS ABONOS' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>=0
    AND (Descripcion_Abono in (
    'OTROS ABONOS'))



    UNION

    SELECT
        '009.29' as Nro_Fila,
        'Clientes F' as Observacion,
        'OTROS ABONOS' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>0
    AND (Descripcion_Abono in ('OTROS ABONOS'))

    UNION

    SELECT
        '010.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0

    UNION

    SELECT
        '010.01' as Nro_Fila,
        'Clientes F' as Observacion,
        '$ Compras Redcompra MCD' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>0
    AND (Descripcion_Cargo in (
    'Compras Redcompra MCD'
    ))

    UNION

    SELECT
        '010.02' as Nro_Fila,
        'Clientes F' as Observacion,
        '$ Compras  Redcompra MCD Tienda' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>0
    AND (Descripcion_Cargo in (
    'Compras Redcompra MCD'
    )) AND COMPRA_RIPLEY='COMPRA_RIPLEY'

    UNION

    SELECT
        '010.03' as Nro_Fila,
        'Clientes F' as Observacion,
        '$ Compras Redcompra MCD no Tienda' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>0
    AND (Descripcion_Cargo in (
    'Compras Redcompra MCD'
    )) AND COMPRA_RIPLEY<>'COMPRA_RIPLEY'

    UNION

    SELECT
        '010.04' as Nro_Fila,
        'Clientes F' as Observacion,
        '$ Compras Internacionales MCD' as Categoria,
        sum(MONTO) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>0
    AND (Descripcion_Cargo in (
    'Compras Internacionales MCD'
    ))

    UNION

    SELECT
        '011.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0

    UNION

    SELECT
        '011.01' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Compras Redcompra MCD' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>0
    AND (Descripcion_Cargo in (
    'Compras Redcompra MCD'
    ))

    UNION

    SELECT
        '011.02' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Compras  Redcompra MCD Tienda' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>0
    AND (Descripcion_Cargo in (
    'Compras Redcompra MCD'
    )) AND COMPRA_RIPLEY='COMPRA_RIPLEY'


    UNION

    SELECT
        '011.03' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Compras Redcompra MCD no Tienda' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>0
    AND (Descripcion_Cargo in (
    'Compras Redcompra MCD'
    )) AND COMPRA_RIPLEY<>'COMPRA_RIPLEY'


    UNION

    SELECT
        '011.04' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Compras Internacionales MCD' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario>0
    AND (Descripcion_Cargo in (
    'Compras Internacionales MCD'
    ))

    UNION

    SELECT
        '012.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0

    UNION

    SELECT
        '012.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Captacion PWA' as Categoria,
        sum(case when tipo_capta='PWA' then SI_Captado_Periodo end) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0

    UNION

    SELECT
        '012.02' as Nro_Fila,
        'Clientes F' as Observacion,
        'Captacion Online' as Categoria,
        sum(case when tipo_capta='CAPTA_ONLINE' then SI_Captado_Periodo end) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0

    UNION

    SELECT
        '012.03' as Nro_Fila,
        'Clientes F' as Observacion,
        'Captacion Presencial' as Categoria,
        sum(case when tipo_capta='PRESENCIAL' then SI_Captado_Periodo end) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0

    UNION

    SELECT
        '013.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>0

    UNION

    SELECT
        '013.01' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Cuentas con Saldo >$1' as Categoria,
        count(case when ultimo_saldo>1 then cuenta end) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>0

    UNION

    SELECT
        '013.02' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Cuentas con Saldo >$1.000' as Categoria,
        count(case when ultimo_saldo>1000 then cuenta end) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>0

    UNION

    SELECT
        '013.03' as Nro_Fila,
        'Clientes F' as Observacion,
        '# Cuentas con Saldo >$100.000' as Categoria,
        count(case when ultimo_saldo>100000 then cuenta end) as Valor
    FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
    WHERE si_funcionario>0

    UNION
    SELECT
        '014.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0

    UNION

    SELECT
        '014.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock MAESTRO' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0
    AND tipo_plastico='MAESTRO'

    UNION

    SELECT
        '014.02' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock CV Inicio de Periodo MAESTRO' as Categoria,
        sum(SI_Stock_Anterior) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0 AND tipo_plastico='MAESTRO'

    UNION

    SELECT
        '014.03' as Nro_Fila,
        'Clientes F' as Observacion,
        'Captacion MAESTRO' as Categoria,
        sum(SI_Captado_Periodo) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0 AND tipo_plastico='MAESTRO'

    UNION

    SELECT
        '014.04' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cierre MAESTRO' as Categoria,
        sum(SI_Fugado_Periodo) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0 AND tipo_plastico='MAESTRO'

    UNION

    SELECT
        '014.05' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock CV Final de periodo MAESTRO' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0 AND tipo_plastico='MAESTRO'

    UNION

    SELECT
        '015.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0

    UNION

    SELECT
        '015.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock MCD' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0
    AND tipo_plastico='MCD'

    UNION

    SELECT
        '015.02' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock CV Inicio de Periodo MCD' as Categoria,
        sum(SI_Stock_Anterior) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0 AND tipo_plastico='MCD'

    UNION

    SELECT
        '015.03' as Nro_Fila,
        'Clientes F' as Observacion,
        'Captacion MCD' as Categoria,
        sum(SI_Captado_Periodo) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0 AND tipo_plastico='MCD'

    UNION

    SELECT
        '015.04' as Nro_Fila,
        'Clientes F ' as Observacion,
        'Cierre MCD' as Categoria,
        sum(SI_Fugado_Periodo) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0 AND tipo_plastico='MCD'

    UNION

    SELECT
        '015.05' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock CV Final de periodo MCD' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0 AND tipo_plastico='MCD'

    UNION

    SELECT
        '016.00' as Nro_Fila,
        'Clientes F' as Observacion,
        '----------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0

    UNION

    SELECT
        '016.01' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock MAESTRO a MCD' as Categoria,
        max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0
    AND tipo_plastico='MAESTRO a MCD'

    UNION

    SELECT
        '016.02' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock CV Inicio de Periodo MAESTRO a MCD' as Categoria,
        sum(SI_Stock_Anterior) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0 AND tipo_plastico='MAESTRO a MCD'

    UNION

    SELECT
        '016.03' as Nro_Fila,
        'Clientes F' as Observacion,
        'Captacion MAESTRO a MCD' as Categoria,
        sum(SI_Captado_Periodo) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0 AND tipo_plastico='MAESTRO a MCD'

    UNION

    SELECT
        '016.04' as Nro_Fila,
        'Clientes F' as Observacion,
        'Cierre MAESTRO a MCD' as Categoria,
        sum(SI_Fugado_Periodo) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0 AND tipo_plastico='MAESTRO a MCD'

    UNION

    SELECT
        '016.05' as Nro_Fila,
        'Clientes F' as Observacion,
        'Stock CV Final de periodo MAESTRO a MCD' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
    WHERE si_funcionario>0 AND tipo_plastico='MAESTRO a MCD'


    UNION

    SELECT
        '017.01' as Nro_Fila,
        'Clientes NF' as Observacion,
        '---------------------' as Categoria,
        max(0) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada


    UNION

    SELECT
        '017.02' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Monto Giros ATM MCD' as Categoria,
        sum(monto) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario=0
    AND (Descripcion_Cargo in ('Giros ATM MCD'))

    UNION

    SELECT
        '017.03' as Nro_Fila,
        'Clientes NF' as Observacion,
        'Monto Giros internacional MCD' as Categoria,
        sum(monto) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario=0
    AND (Descripcion_Cargo in ('Giros internacional MCD'))

    UNION

    SELECT
        '017.04' as Nro_Fila,
        'Clientes NF' as Observacion,
        'TRX Giros ATM MCD' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario=0
    AND (Descripcion_Cargo in ('Giros ATM MCD'))

    UNION

    SELECT
        '017.05' as Nro_Fila,
        'Clientes NF' as Observacion,
        'TRX Giros internacional MCD' as Categoria,
        count(*) as Valor
    FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
    WHERE si_funcionario=0
    AND (Descripcion_Cargo in ('Giros internacional MCD'))
    ;


  INSERT INTO schm_workspace.ppff_sb_salida_panel_ctavta
  SELECT
            '001.00' as Nro_Fila,
            'Clientes NF' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '001.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Stock' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '001.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Stock CV Inicio de Periodo' as Categoria,
            sum(SI_Stock_Anterior) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '001.03' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Captacion' as Categoria,
            sum(SI_Captado_Periodo) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '001.04' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cierre' as Categoria,
            sum(SI_Fugado_Periodo) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '001.05' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Stock CV Final de periodo' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '001.06' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Tasa de cierre' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        /*Bloque2: Informacion de uso CV*/
        SELECT
            '002.00' as Nro_Fila,
            'Clientes NF' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '002.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Informacion de uso CV' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '002.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# de Cuentas con Movimientos cargos o abonos' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in (
        'Dep�sitos en Efectivo',
        'Dep�sitos con Documento',
        'TEF Recibidas',
        'Abono de Remuneraciones',
        'Otros (pago proveedores)',
        'Traspaso desde LCA',
        'Avance desde Tarjeta Ripley',

        'OTROS ABONOS'
        )
        or
        Descripcion_Cargo in (
        'Comision planes',
        'Compras Internacionales',
        'Compras Internacionales MCD',
        'Compras Redcompra',
        'Compras Redcompra MCD',
        'Giro Internacional',
        'Giros ATM',
        'Giros Caja',
        'PEC',
        'Pago LCA',
        'Pago de Tarjeta',
        'TEF emitidas Otros Bancos',
        'Giros internacional MCD',
        'Giros ATM MCD',
        'OTROS CARGOS'
        ))

        UNION

        SELECT
            '002.03' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# de Cuentas con Cargos' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Comision planes',
        'Compras Internacionales',
        'Compras Redcompra',
        'Compras Internacionales MCD',
        'Compras Redcompra MCD',
        'Giro Internacional',
        'Giros ATM',
        'Giros Caja',
        'PEC',
        'Pago LCA',
        'Pago de Tarjeta',
        'TEF emitidas Otros Bancos',
        'Giros internacional MCD',
        'Giros ATM MCD',
        'OTROS CARGOS'
        ))

        UNION

        SELECT
            '002.04' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cuentas con compras' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Compras Internacionales',
        'Compras Redcompra',
        'Compras Internacionales MCD',
        'Compras Redcompra MCD'
        ))

        UNION

        SELECT
            '002.05' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cuentas con Giros' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Giro Internacional',
        'Giros ATM',
        'Giros internacional MCD',
        'Giros ATM MCD',
        'Giros Caja'
        ))

        UNION

        SELECT
            '002.06' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cuentas con TEF' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'TEF emitidas Otros Bancos'
        ))

        UNION

        SELECT
            '002.07' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cuentas con Pago' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Pago de Tarjeta',
        'Pago LCA'
        ))

        UNION

        SELECT
            '002.08' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cuentas con uso Internacional' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Giro Internacional','Giros internacional MCD'))

        UNION

        SELECT
            '002.09' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# Cuentas con  Abonos' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in (
        'Abono de Remuneraciones',
        'Avance desde Tarjeta Ripley',
        'Dep�sitos con Documento',
        'Dep�sitos en Efectivo',
        'OTROS ABONOS',
        'Otros (pago proveedores)',
        'TEF Recibidas',
        'Traspaso desde LCA'
        ))

        UNION

        SELECT
            '002.10' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Dep�sitos en Efectivo' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ("Depositos en Efectivo"))

        UNION

        SELECT
            '002.11' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Dep�sitos con Documento' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in (
        'Dep�sitos con Documento'))

        UNION

        SELECT
            '002.12' as Nro_Fila,
            'Clientes NF' as Observacion,
            'TEF Recibidas' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in (
        'TEF Recibidas'))

        UNION

        SELECT
            '002.13' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Abono de Remuneraciones' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in (
        'Abono de Remuneraciones'))

        UNION

        SELECT
            '002.14' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Otros (pago proveedores)' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in (
        'Otros (pago proveedores)'))

        UNION

        SELECT
            '002.15' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Traspaso desde LCA' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in (
        'Traspaso desde LCA'))

        UNION

        SELECT
            '002.16' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Avance desde Tarjeta Ripley' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in (
        'Avance desde Tarjeta Ripley'))

        UNION

        SELECT
            '002.17' as Nro_Fila,
            'Clientes NF' as Observacion,
            'OTROS ABONOS' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in (
        'OTROS ABONOS'))

        UNION

        /*Bloque3: Informacion de uso CV %*/
        SELECT
            '003.00' as Nro_Fila,
            'Clientes NF' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '003.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Informacion de uso CV %' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '003.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            '% de Cuentas con movimiento o abonos' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '003.03' as Nro_Fila,
            'Clientes NF' as Observacion,
            '% de Cuentas con Cargos' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '003.04' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cuentas con compras' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '003.05' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cuentas con Giros' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '003.06' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cuentas con TEF' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '003.07' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cuentas con uso Internacional' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '003.08' as Nro_Fila,
            'Clientes NF' as Observacion,
            '% Cuentas con Abonos' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '003.09' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Dep�sitos en Efectivo' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '003.10' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Dep�sitos con Documento' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '003.11' as Nro_Fila,
            'Clientes NF' as Observacion,
            'TEF Recibidas' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '003.12' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Abono de Remuneraciones' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '003.13' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Otros (pago proveedores)' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '003.14' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Traspaso desde LCA' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '003.15' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Avance desde Tarjeta Ripley' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '003.16' as Nro_Fila,
            'Clientes NF' as Observacion,
            'OTROS ABONOS' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        /*Bloque4: Informacion de ABR*/
        SELECT
            '004.00' as Nro_Fila,
            'Clientes NF' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '004.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Informacion de ABR' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '004.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# de Cuentas Distintas Total Abonos >= $270.000' as Categoria,
            count(distinct cuenta) as Valor
        FROM (
            SELECT
                cuenta,sum(Monto) as SUM_Monto
            FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
            WHERE SI_Funcionario=0
            AND GLS_TRANSAC='ABONO'
            AND Descripcion_Abono NOT IN ('Traspaso desde LCA','Abono de Remuneraciones','Avance desde Tarjeta Ripley')
            AND SI_ABR=0
            group by cuenta
        ) as X
        WHERE SUM_Monto>=270000

        UNION

        SELECT
            '004.03' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# de Cuentas Distintas con ABR' as Categoria,
            count(distinct cuenta) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND SI_ABR=1

        UNION

        SELECT
            '004.04' as Nro_Fila,
            'Clientes NF' as Observacion,
            '% de ABR vigentes' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '004.05' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# de ABR suscritos de los Captados' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_suscritos_cv_validado
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '004.06' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Tasa de cruce de ABR en Captacion' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '004.07' as Nro_Fila,
            'Clientes NF' as Observacion,
            '% de ABR con Cargo' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        /*Bloque5: Informacion de uso CV/por cuenta*/
        SELECT
            '005.00' as Nro_Fila,
            'Clientes NF' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '005.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Informacion de uso CV/por cuenta' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '005.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# de movimiento por cuenta cargo y abono' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '005.03' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# de cargos por cuenta' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '005.04' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# de compras por cuenta' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '005.05' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# de Giros por cuenta' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '005.06' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# de TEF por cuenta' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '005.07' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# uso internacional por cuenta' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '005.08' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# Abonos por cuenta' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '005.09' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# Dep�sitos en Efectivo' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '005.10' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# Dep�sitos con Documento' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '005.11' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# TEF Recibidas' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '005.12' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# Abono de Remuneraciones' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '005.13' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# Otros (pago proveedores)' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '005.14' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# Traspaso desde LCA' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '005.15' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# Avance desde Tarjeta Ripley' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        /*Bloque6: Informacion de Saldo*/
        SELECT
            '006.00' as Nro_Fila,
            'Clientes NF' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '006.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Informacion de Saldo' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '006.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cuentas con Saldo >$1' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        WHERE SI_Funcionario=0
        AND Nro_Dias_Saldo_mayor_1>0

        UNION

        SELECT
            '006.03' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cuentas con Saldo >$1 EOP' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        WHERE SI_Funcionario=0
        AND Ultimo_Saldo>1

        UNION

        SELECT
            '006.04' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Saldo Total Promedio Mes (MM$)' as Categoria,
            sum(SUM_SALDO_FECHA/(SELECT max(DATE_PART(day, ACP_FECHA::date))FROM schm_workspace.ppff_sb_saldos_cuenta_vista))/1000000 as Valor
        FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        WHERE SI_Funcionario=0
        AND Nro_Dias_Saldo_mayor_1>0

        UNION

        SELECT
            '006.05' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Saldo Total EOP (MM$)' as Categoria,
            sum(Ultimo_Saldo)/1000000 as Valor
        FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '006.06' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Saldo Promedio por cuenta Activa ($)' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        WHERE SI_Funcionario=0

        UNION

        /*Bloque7: Informacion de Saldo %*/
        SELECT
            '007.00' as Nro_Fila,
            'Clientes NF' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '007.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Informacion de Saldo %' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int)) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '007.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            '% de Cuentas con Saldo' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        /*Bloque8: Movimientos ($)*/
        SELECT
            '008.00' as Nro_Fila,
            'Clientes NF' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '008.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Movimientos ($)' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '008.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cargos' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Comision planes',
        'Compras Internacionales',
        'Compras Redcompra',
        'Compras Internacionales MCD',
        'Compras Redcompra MCD',
        'Giro Internacional',
        'Giros ATM',
        'Giros Caja',
        'OTROS CARGOS',
        'PEC',
        'Pago LCA',
        'Pago de Tarjeta',
        'Giros internacional MCD',
        'Giros ATM MCD',
        'TEF emitidas Otros Bancos'
        ))

        UNION

        SELECT
            '008.03' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Compras' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Compras Redcompra',
        'Compras Internacionales',
        'Compras Internacionales MCD',
        'Compras Redcompra MCD',
        'PEC'
        ))

        UNION

        SELECT
            '008.04' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Compras Redcompra' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Compras Redcompra'
        ))

        UNION

        SELECT
            '008.05' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Compras  Redcompra Tienda' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Compras Redcompra'
        )) AND COMPRA_RIPLEY='COMPRA_RIPLEY'

        UNION

        SELECT
            '008.06' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Compras Redcompra no Tienda' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Compras Redcompra'
        )) AND COMPRA_RIPLEY<>'COMPRA_RIPLEY'

        UNION

        SELECT
            '008.07' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Compras Internacionales' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Compras Internacionales'
        ))

        UNION

        SELECT
            '008.08' as Nro_Fila,
            'Clientes NF' as Observacion,
            'PEC' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'PEC'
        ))

        UNION

        SELECT
            '008.09' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Giros' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Giros ATM',
        'Giros Caja',
        'Giros internacional MCD',
        'Giros ATM MCD',
        'Giro Internacional'
        ))

        UNION

        SELECT
            '008.10' as Nro_Fila,
            'Clientes NF' as Observacion,
            'ATM' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Giros ATM'
        ))

        UNION

        SELECT
            '008.11' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Caja' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Giros Caja'
        ))

        UNION

        SELECT
            '008.12' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Internacional' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Giro Internacional'
        ))

        UNION

        SELECT
            '008.13' as Nro_Fila,
            'Clientes NF' as Observacion,
            'TEF emitidas' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'TEF emitidas Otros Bancos'
        ))

        UNION

        SELECT
            '008.14' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Otros Bancos' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('TEF emitidas Otros Bancos'))

        UNION

        SELECT
            '008.15' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Pagos' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Pago de Tarjeta','Pago LCA'))

        UNION

        SELECT
            '008.16' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Pago de Tarjeta' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Pago de Tarjeta'))

        UNION

        SELECT
            '008.17' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Pago LCA' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Pago LCA'))

        UNION

        SELECT
            '008.18' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cobro Mantenci�n Cuenta Vista' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Comision planes'))

        UNION

        SELECT
            '008.19' as Nro_Fila,
            'Clientes NF' as Observacion,
            'OTROS CARGOS' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('OTROS CARGOS'))

        UNION

        SELECT
            '008.20' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Abonos' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in (
        'Abono de Remuneraciones',
        'Avance desde Tarjeta Ripley',
        'Dep�sitos con Documento',
        'Dep�sitos en Efectivo',
        'OTROS ABONOS',
        'Otros (pago proveedores)',
        'TEF Recibidas',
        'Traspaso desde LCA'))

        UNION

        SELECT
            '008.21' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Dep�sitos en Efectivo' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ('Dep�sitos en Efectivo'))

        UNION

        SELECT
            '008.22' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Dep�sitos con Documento' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ('Dep�sitos con Documento'))

        UNION

        SELECT
            '008.23' as Nro_Fila,
            'Clientes NF' as Observacion,
            'TEF Recibidas' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ('TEF Recibidas'))

        UNION

        SELECT
            '008.24' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Abono de Remuneraciones' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ('Abono de Remuneraciones'))

        UNION

        SELECT
            '008.25' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Otros (pago proveedores)' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ('Otros (pago proveedores)'))

        UNION

        SELECT
            '008.26' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Traspaso desde LCA' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ('Traspaso desde LCA'))

        UNION

        SELECT
            '008.27' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Avance desde Tarjeta Ripley' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ('Avance desde Tarjeta Ripley'))

        UNION

        SELECT
            '008.28' as Nro_Fila,
            'Clientes NF' as Observacion,
            'OTROS ABONOS' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ('OTROS ABONOS'))

        UNION

        /*Bloque9: Movimientos (Tx)*/
        SELECT
            '009.00' as Nro_Fila,
            'Clientes NF' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '009.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Movimientos (#)' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '009.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Movimientos (#) (Cargos y Abonos)' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Comision planes',
        'Compras Internacionales',
        'Compras Redcompra',
        'Compras Internacionales MCD',
        'Compras Redcompra MCD',
        'Giro Internacional',
        'Giros ATM',
        'Giros Caja',
        'OTROS CARGOS',
        'PEC',
        'Pago LCA',
        'Giros internacional MCD',
        'Giros ATM MCD',
        'Pago de Tarjeta',
        'TEF emitidas Otros Bancos'
        ) or Descripcion_Abono in (
        'Abono de Remuneraciones',
        'Avance desde Tarjeta Ripley',
        'Dep�sitos con Documento',
        'Dep�sitos en Efectivo',
        'OTROS ABONOS',
        'Otros (pago proveedores)',
        'TEF Recibidas',
        'Traspaso desde LCA'))

        UNION

        SELECT
            '009.03' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cargos' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Comision planes',
        'Compras Internacionales',
        'Compras Redcompra',
        'Compras Internacionales MCD',
        'Compras Redcompra MCD',
        'Giro Internacional',
        'Giros ATM',
        'Giros Caja',
        'OTROS CARGOS',
        'PEC',
        'Pago LCA',
        'Giros internacional MCD',
        'Giros ATM MCD',
        'Pago de Tarjeta',
        'TEF emitidas Otros Bancos'))

        UNION

        SELECT
            '009.04' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Compras' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Compras Redcompra',
        'Compras Internacionales',
        'Compras Redcompra MCD',
        'Compras Internacionales MCD',
        'PEC'))

        UNION

        SELECT
            '009.05' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Compras Redcompra' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Compras Redcompra'))

        UNION

        SELECT
            '009.06' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Compras  Redcompra Tienda' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Compras Redcompra'))
        AND COMPRA_RIPLEY='COMPRA_RIPLEY'

        UNION

        SELECT
            '009.07' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Compras Redcompra no Tienda' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Compras Redcompra'))
        AND COMPRA_RIPLEY<>'COMPRA_RIPLEY'

        UNION

        SELECT
            '009.08' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Compras Internacionales' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Compras Internacionales'))

        UNION

        SELECT
            '009.09' as Nro_Fila,
            'Clientes NF' as Observacion,
            'PEC' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('PEC'))

        UNION

        SELECT
            '009.10' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Giros' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Giros ATM',
        'Giros Caja',
        'Giros internacional MCD',
        'Giros ATM MCD',
        'Giro Internacional'))

        UNION

        SELECT
            '009.11' as Nro_Fila,
            'Clientes NF' as Observacion,
            'ATM' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Giros ATM'))

        UNION

        SELECT
            '009.12' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Caja' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Giros Caja'))

        UNION

        SELECT
            '009.13' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Internacional' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Giro Internacional'))

        UNION

        SELECT
            '009.14' as Nro_Fila,
            'Clientes NF' as Observacion,
            'TEF emitidas' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('TEF emitidas Otros Bancos'))

        UNION

        SELECT
            '009.15' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Otros Bancos' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('TEF emitidas Otros Bancos'))

        UNION

        SELECT
            '009.16' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Pagos' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Pago de Tarjeta',
        'Pago LCA'))

        UNION

        SELECT
            '009.17' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Pago de Tarjeta' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Pago de Tarjeta'))

        UNION

        SELECT
            '009.18' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Pago LCA' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Pago LCA'))

        UNION

        SELECT
            '009.19' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cobro Mantenci�n Cuenta Vista' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Comision planes'))

        UNION

        SELECT
            '009.20' as Nro_Fila,
            'Clientes NF' as Observacion,
            'OTROS CARGOS' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('OTROS CARGOS'))

        UNION

        SELECT
            '009.21' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Abonos' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in (
            'Abono de Remuneraciones',
            'Avance desde Tarjeta Ripley',
            'Dep�sitos con Documento',
            'Dep�sitos en Efectivo',
            'OTROS ABONOS',
            'Otros (pago proveedores)',
            'TEF Recibidas',
            'Traspaso desde LCA'))

        UNION

        SELECT
            '009.22' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Dep�sitos en Efectivo' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ('Dep�sitos en Efectivo'))

        UNION

        SELECT
            '009.23' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Dep�sitos con Documento' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ('Dep�sitos con Documento'))

        UNION

        SELECT
            '009.24' as Nro_Fila,
            'Clientes NF' as Observacion,
            'TEF Recibidas' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ('TEF Recibidas'))

        UNION

        SELECT
            '009.25' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Abono de Remuneraciones' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ('Abono de Remuneraciones'))

        UNION

        SELECT
            '009.26' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Otros (pago proveedores)' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ('Otros (pago proveedores)'))

        UNION

        SELECT
            '009.27' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Traspaso desde LCA' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ('Traspaso desde LCA'))

        UNION

        SELECT
            '009.28' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Avance desde Tarjeta Ripley' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ('Avance desde Tarjeta Ripley'))

        UNION

        SELECT
            '009.29' as Nro_Fila,
            'Clientes NF' as Observacion,
            'OTROS ABONOS' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Abono in ('OTROS ABONOS'))

        UNION

        SELECT
            '010.00' as Nro_Fila,
            'Clientes NF' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '010.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            '$ Compras Redcompra MCD' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Compras Redcompra MCD'
        ))

        UNION

        SELECT
            '010.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            '$ Compras  Redcompra MCD Tienda' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Compras Redcompra MCD'
        )) AND COMPRA_RIPLEY='COMPRA_RIPLEY'

        UNION

        SELECT
            '010.03' as Nro_Fila,
            'Clientes NF' as Observacion,
            '$ Compras Redcompra MCD no Tienda' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Compras Redcompra MCD'
        )) AND COMPRA_RIPLEY<>'COMPRA_RIPLEY'

        UNION

        SELECT
            '010.04' as Nro_Fila,
            'Clientes NF' as Observacion,
            '$ Compras Internacionales MCD' as Categoria,
            sum(MONTO) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Compras Internacionales MCD'))

        UNION

        SELECT
            '011.00' as Nro_Fila,
            'Clientes NF' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '011.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# Compras Redcompra MCD' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Compras Redcompra MCD'))

        UNION

        SELECT
            '011.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# Compras  Redcompra MCD Tienda' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Compras Redcompra MCD'))
        AND COMPRA_RIPLEY='COMPRA_RIPLEY'


        UNION

        SELECT
            '011.03' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# Compras Redcompra MCD no Tienda' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Compras Redcompra MCD')) AND COMPRA_RIPLEY<>'COMPRA_RIPLEY'


        UNION

        SELECT
            '011.04' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# Compras Internacionales MCD' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in (
        'Compras Internacionales MCD'
        ))

        UNION

        SELECT
            '012.00' as Nro_Fila,
            'Clientes NF' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '012.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Captacion PWA' as Categoria,
            sum(case when tipo_capta='PWA' then SI_Captado_Periodo end) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '012.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Captacion Online' as Categoria,
            sum(case when tipo_capta='CAPTA_ONLINE' then SI_Captado_Periodo end) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '012.03' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Captacion Presencial' as Categoria,
            sum(case when tipo_capta='PRESENCIAL' then SI_Captado_Periodo end) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '013.00' as Nro_Fila,
            'Clientes NF' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '013.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# Cuentas con Saldo >$1' as Categoria,
            count(case when ultimo_saldo>1 then cuenta end) as Valor
        FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '013.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# Cuentas con Saldo >$1.000' as Categoria,
            count(case when ultimo_saldo>1000 then cuenta end) as Valor
        FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '013.03' as Nro_Fila,
            'Clientes NF' as Observacion,
            '# Cuentas con Saldo >$100.000' as Categoria,
            count(case when ultimo_saldo>100000 then cuenta end) as Valor
        FROM schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        WHERE SI_Funcionario=0

        UNION
        SELECT
            '014.00' as Nro_Fila,
            'Clientes NF' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '014.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Stock MAESTRO' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0
        AND tipo_plastico='MAESTRO'

        UNION

        SELECT
            '014.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Stock CV Inicio de Periodo MAESTRO' as Categoria,
            sum(SI_Stock_Anterior) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0 AND tipo_plastico='MAESTRO'

        UNION

        SELECT
            '014.03' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Captacion MAESTRO' as Categoria,
            sum(SI_Captado_Periodo) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0 AND tipo_plastico='MAESTRO'

        UNION

        SELECT
            '014.04' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cierre MAESTRO' as Categoria,
            sum(SI_Fugado_Periodo) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0 AND tipo_plastico='MAESTRO'

        UNION

        SELECT
            '014.05' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Stock CV Final de periodo MAESTRO' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0 AND tipo_plastico='MAESTRO'

        UNION

        SELECT
            '015.00' as Nro_Fila,
            'Clientes NF' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0

        UNION

        SELECT
            '015.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Stock MCD' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0
        AND tipo_plastico='MCD'

        UNION

        SELECT
            '015.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Stock CV Inicio de Periodo MCD' as Categoria,
            sum(SI_Stock_Anterior) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0 AND tipo_plastico='MCD'

        UNION

        SELECT
            '015.03' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Captacion MCD' as Categoria,
            sum(SI_Captado_Periodo) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0 AND tipo_plastico='MCD'

        UNION

        SELECT
            '015.04' as Nro_Fila,
            'Clientes NF ' as Observacion,
            'Cierre MCD' as Categoria,
            sum(SI_Fugado_Periodo) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0 AND tipo_plastico='MCD'

        UNION

        SELECT
            '015.05' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Stock CV Final de periodo MCD' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0 AND tipo_plastico='MCD'

        UNION

        SELECT
            '016.00' as Nro_Fila,
            'Clientes NF' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0
        

        UNION

        SELECT
            '016.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Stock MAESTRO a MCD' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0
        AND tipo_plastico='MAESTRO a MCD'

        UNION

        SELECT
            '016.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Stock CV Inicio de Periodo MAESTRO a MCD' as Categoria,
            sum(SI_Stock_Anterior) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0 AND tipo_plastico='MAESTRO a MCD'
        
        UNION

        SELECT
            '016.03' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Captacion MAESTRO a MCD' as Categoria,
            sum(SI_Captado_Periodo) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0 AND tipo_plastico='MAESTRO a MCD'

        UNION

        SELECT
            '016.04' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Cierre MAESTRO a MCD' as Categoria,
            sum(SI_Fugado_Periodo) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0 AND tipo_plastico='MAESTRO a MCD'

        UNION

        SELECT
            '016.05' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Stock CV Final de periodo MAESTRO a MCD' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_stock_cuenta_vista_validada
        WHERE SI_Funcionario=0 AND tipo_plastico='MAESTRO a MCD'

        UNION

        SELECT
            '017.01' as Nro_Fila,
            'Clientes NF' as Observacion,
            '---------------------' as Categoria,
            max(0) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada


        UNION

        SELECT
            '017.02' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Monto Giros ATM MCD' as Categoria,
            sum(monto) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Giros ATM MCD'))

        UNION

        SELECT
            '017.03' as Nro_Fila,
            'Clientes NF' as Observacion,
            'Monto Giros internacional MCD' as Categoria,
            sum(monto) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Giros internacional MCD'))

        UNION

        SELECT
            '017.04' as Nro_Fila,
            'Clientes NF' as Observacion,
            'TRX Giros ATM MCD' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND (Descripcion_Cargo in ('Giros ATM MCD'))

       
        UNION

        SELECT
            '017.05' as Nro_Fila,
            'Clientes NF' as Observacion,
            'TRX Giros internacional MCD' as Categoria,
            count(*) as Valor
        FROM schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        WHERE SI_Funcionario=0
        AND Descripcion_Cargo in ('Giros internacional MCD')
       ;

    -- --------------------------------------------------------------------------------------------------;
    --  [05.3] Funcionario;
    -- --------------------------------------------------------------------------------------------------;
    INSERT INTO schm_workspace.ppff_sb_salida_panel_ctavta
    SELECT
            '001.00' as Nro_Fila,
            'Clientes F' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '001.01' as Nro_Fila,
            'Clientes F' as Observacion,
            'Stock' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '001.02' as Nro_Fila,
            'Clientes F' as Observacion,
            'Stock CV Inicio de Periodo' as Categoria,
            sum(SI_Stock_Anterior) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '001.03' as Nro_Fila,
            'Clientes F' as Observacion,
            'Captacion' as Categoria,
            sum(SI_Captado_Periodo) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '001.04' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cierre' as Categoria,
            sum(SI_Fugado_Periodo) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '001.05' as Nro_Fila,
            'Clientes F' as Observacion,
            'Stock CV Final de periodo' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '001.06' as Nro_Fila,
            'Clientes F' as Observacion,
            'Tasa de cierre' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        /*Bloque2: Informacion de uso CV*/
        select
            '002.00' as Nro_Fila,
            'Clientes F' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '002.01' as Nro_Fila,
            'Clientes F' as Observacion,
            'Informacion de uso CV' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '002.02' as Nro_Fila,
            'Clientes F' as Observacion,
            '# de Cuentas con Movimientos cargos o abonos' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
        'Depósitos en Efectivo',
        'Depósitos con Documento',
        'TEF Recibidas',
        'Abono de Remuneraciones',
        'Otros (pago proveedores)',
        'Traspaso desde LCA',
        'Avance desde Tarjeta Ripley',
        'OTROS ABONOS'
        )
        or
        Descripcion_Cargo in (
        'Comision planes',
        'Compras Internacionales',
        'Compras Internacionales MCD',
        'Compras Redcompra',
        'Compras Redcompra MCD',
        'Giro Internacional',
        'Giros ATM',
        'Giros Caja',
        'PEC',
        'Pago LCA',
        'Pago de Tarjeta',
        'Giros internacional MCD',
        'Giros ATM MCD',
        'TEF emitidas Otros Bancos',
        'OTROS CARGOS'))

        UNION

        select
            '002.03' as Nro_Fila,
            'Clientes F' as Observacion,
            '# de Cuentas con Cargos' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Comision planes',
        'Compras Internacionales',
        'Compras Redcompra',
        'Compras Internacionales MCD',
        'Compras Redcompra MCD',
        'Giro Internacional',
        'Giros ATM',
        'Giros Caja',
        'PEC',
        'Pago LCA',
        'Pago de Tarjeta',
        'Giros internacional MCD',
        'Giros ATM MCD',
        'TEF emitidas Otros Bancos',
        'OTROS CARGOS'))

        UNION

        select
            '002.04' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cuentas con compras' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Compras Internacionales',
        'Compras Redcompra',
        'Compras Internacionales MCD',
        'Compras Redcompra MCD'
        ))

        UNION

        select
            '002.05' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cuentas con Giros' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Giro Internacional',
        'Giros ATM',
        'Giros internacional MCD',
        'Giros ATM MCD',
        'Giros Caja'
        ))

        UNION

        select
            '002.06' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cuentas con TEF' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'TEF emitidas Otros Bancos'
        ))

        UNION

        select
            '002.07' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cuentas con Pago' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Pago de Tarjeta',
        'Pago LCA'
        ))

        UNION

        select
            '002.08' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cuentas con uso Internacional' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Giro Internacional',
        'Giros internacional MCD'
        ))

        UNION

        select
            '002.09' as Nro_Fila,
            'Clientes F' as Observacion,
            '# Cuentas con  Abonos' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
        'Abono de Remuneraciones',
        'Avance desde Tarjeta Ripley',
        'Depósitos con Documento',
        'Depósitos en Efectivo',
        'OTROS ABONOS',
        'Otros (pago proveedores)',
        'TEF Recibidas',
        'Traspaso desde LCA'
        ))

        UNION

        select
            '002.10' as Nro_Fila,
            'Clientes F' as Observacion,
            'Depósitos en Efectivo' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in ('Depósitos en Efectivo'))

        UNION

        select
            '002.11' as Nro_Fila,
            'Clientes F' as Observacion,
            'Depósitos con Documento' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in ('Depósitos con Documento'))

        UNION

        select
            '002.12' as Nro_Fila,
            'Clientes F' as Observacion,
            'TEF Recibidas' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
        'TEF Recibidas'))

        UNION

        select
            '002.13' as Nro_Fila,
            'Clientes F' as Observacion,
            'Abono de Remuneraciones' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
        'Abono de Remuneraciones'))

        UNION

        select
            '002.14' as Nro_Fila,
            'Clientes F' as Observacion,
            'Otros (pago proveedores)' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
        'Otros (pago proveedores)'))

        UNION

        select
            '002.15' as Nro_Fila,
            'Clientes F' as Observacion,
            'Traspaso desde LCA' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
        'Traspaso desde LCA'))

        UNION

        select
            '002.16' as Nro_Fila,
            'Clientes F' as Observacion,
            'Avance desde Tarjeta Ripley' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
        'Avance desde Tarjeta Ripley'))

        UNION

        select
            '002.17' as Nro_Fila,
            'Clientes F' as Observacion,
            'OTROS ABONOS' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
        'OTROS ABONOS'))

        UNION

        /*Bloque3: Informacion de uso CV %*/
        select
            '003.00' as Nro_Fila,
            'Clientes F' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '003.01' as Nro_Fila,
            'Clientes F' as Observacion,
            'Informacion de uso CV %' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '003.02' as Nro_Fila,
            'Clientes F' as Observacion,
            '% de Cuentas con movimiento o abonos' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '003.03' as Nro_Fila,
            'Clientes F' as Observacion,
            '% de Cuentas con Cargos' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '003.04' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cuentas con compras' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '003.05' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cuentas con Giros' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '003.06' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cuentas con TEF' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '003.07' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cuentas con uso Internacional' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '003.08' as Nro_Fila,
            'Clientes F' as Observacion,
            '% Cuentas con Abonos' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '003.09' as Nro_Fila,
            'Clientes F' as Observacion,
            'Depósitos en Efectivo' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '003.10' as Nro_Fila,
            'Clientes F' as Observacion,
            'Depósitos con Documento' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '003.11' as Nro_Fila,
            'Clientes F' as Observacion,
            'TEF Recibidas' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '003.12' as Nro_Fila,
            'Clientes F' as Observacion,
            'Abono de Remuneraciones' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '003.13' as Nro_Fila,
            'Clientes F' as Observacion,
            'Otros (pago proveedores)' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '003.14' as Nro_Fila,
            'Clientes F' as Observacion,
            'Traspaso desde LCA' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '003.15' as Nro_Fila,
            'Clientes F' as Observacion,
            'Avance desde Tarjeta Ripley' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '003.16' as Nro_Fila,
            'Clientes F' as Observacion,
            'OTROS ABONOS' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        /*Bloque4: Informacion de ABR*/
        select
            '004.00' as Nro_Fila,
            'Clientes F' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '004.01' as Nro_Fila,
            'Clientes F' as Observacion,
            'Informacion de ABR' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '004.02' as Nro_Fila,
            'Clientes F' as Observacion,
            '# de Cuentas Distintas Total Abonos >= $270.000' as Categoria,
            count(distinct cuenta) as Valor
        from (
            select
                cuenta,sum(Monto) as SUM_Monto
            from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
            where SI_Funcionario>0
            and GLS_TRANSAC='ABONO'
            and Descripcion_Abono NOT IN ('Traspaso desde LCA','Abono de Remuneraciones','Avance desde Tarjeta Ripley')
            and SI_ABR=0
            group by cuenta
        ) as X
        where SUM_Monto>=270000

        UNION

        select
            '004.03' as Nro_Fila,
            'Clientes F' as Observacion,
            '# de Cuentas Distintas con ABR' as Categoria,
            count(distinct cuenta) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and SI_ABR=1

        UNION

        select
            '004.04' as Nro_Fila,
            'Clientes F' as Observacion,
            '% de ABR vigentes' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '004.05' as Nro_Fila,
            'Clientes F' as Observacion,
            '# de ABR suscritos de los Captados' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_suscritos_cv_validado
        where SI_Funcionario>0

        UNION

        select
            '004.06' as Nro_Fila,
            'Clientes F' as Observacion,
            'Tasa de cruce de ABR en Captacion' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '004.07' as Nro_Fila,
            'Clientes F' as Observacion,
            '% de ABR con Cargo' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        /*Bloque5: Informacion de uso CV/por cuenta*/
        select
            '005.00' as Nro_Fila,
            'Clientes F' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        where SI_Funcionario>0

        UNION

        select
            '005.01' as Nro_Fila,
            'Clientes F' as Observacion,
            'Informacion de uso CV/por cuenta' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '005.02' as Nro_Fila,
            'Clientes F' as Observacion,
            '# de movimiento por cuenta cargo y abono' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '005.03' as Nro_Fila,
            'Clientes F' as Observacion,
            '# de cargos por cuenta' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '005.04' as Nro_Fila,
            'Clientes F' as Observacion,
            '# de compras por cuenta' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '005.05' as Nro_Fila,
            'Clientes F' as Observacion,
            '# de Giros por cuenta' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '005.06' as Nro_Fila,
            'Clientes F' as Observacion,
            '# de TEF por cuenta' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '005.07' as Nro_Fila,
            'Clientes F' as Observacion,
            '# uso internacional por cuenta' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '005.08' as Nro_Fila,
            'Clientes F' as Observacion,
            '# Abonos por cuenta' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '005.09' as Nro_Fila,
            'Clientes F' as Observacion,
            '# Depósitos en Efectivo' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '005.10' as Nro_Fila,
            'Clientes F' as Observacion,
            '# Depósitos con Documento' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '005.11' as Nro_Fila,
            'Clientes F' as Observacion,
            '# TEF Recibidas' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '005.12' as Nro_Fila,
            'Clientes F' as Observacion,
            '# Abono de Remuneraciones' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '005.13' as Nro_Fila,
            'Clientes F' as Observacion,
            '# Otros (pago proveedores)' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '005.14' as Nro_Fila,
            'Clientes F' as Observacion,
            '# Traspaso desde LCA' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '005.15' as Nro_Fila,
            'Clientes F' as Observacion,
            '# Avance desde Tarjeta Ripley' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        /*Bloque6: Informacion de Saldo*/
        select
            '006.00' as Nro_Fila,
            'Clientes F' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        where SI_Funcionario>0

        UNION

        select
            '006.01' as Nro_Fila,
            'Clientes F' as Observacion,
            'Informacion de Saldo' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        where SI_Funcionario>0

        UNION

        select
            '006.02' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cuentas con Saldo >$1' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        where SI_Funcionario>0
        and Nro_Dias_Saldo_mayor_1>0

        UNION

        select
            '006.03' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cuentas con Saldo >$1 EOP' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        where SI_Funcionario>0
        and Ultimo_Saldo>1

        UNION

        select
            '006.04' as Nro_Fila,
            'Clientes F' as Observacion,
            'Saldo Total Promedio Mes (MM$)' as Categoria,
            sum(SUM_SALDO_FECHA/(SELECT max(DATE_PART(day, ACP_FECHA::date))FROM schm_workspace.ppff_sb_saldos_cuenta_vista))/1000000 as Valor
        from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        where SI_Funcionario>0
        and Nro_Dias_Saldo_mayor_1>0

        UNION

        select
            '006.05' as Nro_Fila,
            'Clientes F' as Observacion,
            'Saldo Total EOP (MM$)' as Categoria,
            sum(Ultimo_Saldo)/1000000 as Valor
        from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        where SI_Funcionario>0

        UNION

        select
            '006.06' as Nro_Fila,
            'Clientes F' as Observacion,
            'Saldo Promedio por cuenta Activa ($)' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        where SI_Funcionario>0

        UNION

        /*Bloque7: Informacion de Saldo %*/
        select
            '007.00' as Nro_Fila,
            'Clientes F' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '007.01' as Nro_Fila,
            'Clientes F' as Observacion,
            'Informacion de Saldo %' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int)) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '007.02' as Nro_Fila,
            'Clientes F' as Observacion,
            '% de Cuentas con Saldo' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        /*Bloque8: Movimientos ($)*/
        select
            '008.00' as Nro_Fila,
            'Clientes F' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '008.01' as Nro_Fila,
            'Clientes F' as Observacion,
            'Movimientos ($)' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '008.02' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cargos' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
            'Comision planes',
            'Compras Internacionales',
            'Compras Redcompra',
            'Compras Internacionales MCD',
            'Compras Redcompra MCD',
            'Giro Internacional',
            'Giros ATM',
            'Giros Caja',
            'OTROS CARGOS',
            'PEC',
            'Pago LCA',
            'Giros internacional MCD',
            'Giros ATM MCD',
            'Pago de Tarjeta',
            'TEF emitidas Otros Bancos'
        ))

        UNION

        select
            '008.03' as Nro_Fila,
            'Clientes F' as Observacion,
            'Compras' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Compras Redcompra',
        'Compras Internacionales',
        'Compras Internacionales MCD',
        'Compras Redcompra MCD',
        'PEC'
        ))

        UNION

        select
            '008.04' as Nro_Fila,
            'Clientes F' as Observacion,
            'Compras Redcompra' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Compras Redcompra'
        ))

        UNION

        select
            '008.05' as Nro_Fila,
            'Clientes F' as Observacion,
            'Compras  Redcompra Tienda' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Compras Redcompra'
        )) and COMPRA_RIPLEY='COMPRA_RIPLEY'

        UNION

        select
            '008.06' as Nro_Fila,
            'Clientes F' as Observacion,
            'Compras Redcompra no Tienda' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Compras Redcompra'
        )) and COMPRA_RIPLEY<>'COMPRA_RIPLEY'

        UNION

        select
            '008.07' as Nro_Fila,
            'Clientes F' as Observacion,
            'Compras Internacionales' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Compras Internacionales'
        ))

        UNION

        select
            '008.08' as Nro_Fila,
            'Clientes F' as Observacion,
            'PEC' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'PEC'
        ))

        UNION

        select
            '008.09' as Nro_Fila,
            'Clientes F' as Observacion,
            'Giros' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
            'Giros ATM',
            'Giros Caja',
            'Giros internacional MCD',
            'Giros ATM MCD',
            'Giro Internacional'
        ))

        UNION

        select
            '008.10' as Nro_Fila,
            'Clientes F' as Observacion,
            'ATM' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Giros ATM'
        ))

        UNION

        select
            '008.11' as Nro_Fila,
            'Clientes F' as Observacion,
            'Caja' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Giros Caja'
        ))

        UNION

        select
            '008.12' as Nro_Fila,
            'Clientes F' as Observacion,
            'Internacional' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Giro Internacional'
        ))

        UNION

        select
            '008.13' as Nro_Fila,
            'Clientes F' as Observacion,
            'TEF emitidas' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'TEF emitidas Otros Bancos'
        ))

        UNION

        select
            '008.14' as Nro_Fila,
            'Clientes F' as Observacion,
            'Otros Bancos' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'TEF emitidas Otros Bancos'
        ))

        UNION

        select
            '008.15' as Nro_Fila,
            'Clientes F' as Observacion,
            'Pagos' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Pago de Tarjeta',
        'Pago LCA'
        ))

        UNION

        select
            '008.16' as Nro_Fila,
            'Clientes F' as Observacion,
            'Pago de Tarjeta' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Pago de Tarjeta'
        ))

        UNION

        select
            '008.17' as Nro_Fila,
            'Clientes F' as Observacion,
            'Pago LCA' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Pago LCA'
        ))

        UNION

        select
            '008.18' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cobro Mantenci�n Cuenta Vista' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Comision planes'
        ))

        UNION

        select
            '008.19' as Nro_Fila,
            'Clientes F' as Observacion,
            'OTROS CARGOS' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'OTROS CARGOS'
        ))

        UNION

        select
            '008.20' as Nro_Fila,
            'Clientes F' as Observacion,
            'Abonos' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
            'Abono de Remuneraciones',
            'Avance desde Tarjeta Ripley',
            'Depósitos con Documento',
            'Depósitos en Efectivo',
            'OTROS ABONOS',
            'Otros (pago proveedores)',
            'TEF Recibidas',
            'Traspaso desde LCA'
        ))

        UNION

        select
            '008.21' as Nro_Fila,
            'Clientes F' as Observacion,
            'Depósitos en Efectivo' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
        'Depósitos en Efectivo'))

        UNION

        select
            '008.22' as Nro_Fila,
            'Clientes F' as Observacion,
            'Depósitos con Documento' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
        'Depósitos con Documento'))

        UNION

        select
            '008.23' as Nro_Fila,
            'Clientes F' as Observacion,
            'TEF Recibidas' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
        'TEF Recibidas'))

        UNION

        select
            '008.24' as Nro_Fila,
            'Clientes F' as Observacion,
            'Abono de Remuneraciones' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
        'Abono de Remuneraciones'))

        UNION

        select
            '008.25' as Nro_Fila,
            'Clientes F' as Observacion,
            'Otros (pago proveedores)' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
        'Otros (pago proveedores)'))

        UNION

        select
            '008.26' as Nro_Fila,
            'Clientes F' as Observacion,
            'Traspaso desde LCA' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
        'Traspaso desde LCA'))

        UNION

        select
            '008.27' as Nro_Fila,
            'Clientes F' as Observacion,
            'Avance desde Tarjeta Ripley' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
        'Avance desde Tarjeta Ripley'))

        UNION

        select
            '008.28' as Nro_Fila,
            'Clientes F' as Observacion,
            'OTROS ABONOS' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
        'OTROS ABONOS'))

        UNION

        /*Bloque9: Movimientos (Tx)*/
        select
            '009.00' as Nro_Fila,
            'Clientes F' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0


        UNION

        select
            '009.01' as Nro_Fila,
            'Clientes F' as Observacion,
            'Movimientos (#)' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0

        UNION

        select
            '009.02' as Nro_Fila,
            'Clientes F' as Observacion,
            'Movimientos (#) (Cargos y Abonos)' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
            'Comision planes',
            'Compras Internacionales',
            'Compras Redcompra',
            'Compras Internacionales MCD',
            'Compras Redcompra MCD',
            'Giro Internacional',
            'Giros ATM',
            'Giros Caja',
            'OTROS CARGOS',
            'PEC',
            'Pago LCA',
            'Giros internacional MCD',
            'Giros ATM MCD',
            'Pago de Tarjeta',
            'TEF emitidas Otros Bancos'
        ) or Descripcion_Abono in (
            'Abono de Remuneraciones',
            'Avance desde Tarjeta Ripley',
            'Depósitos con Documento',
            'Depósitos en Efectivo',
            'OTROS ABONOS',
            'Otros (pago proveedores)',
            'TEF Recibidas',
            'Traspaso desde LCA'
        ))

        UNION

        select
            '009.03' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cargos' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
            'Comision planes',
            'Compras Internacionales',
            'Compras Redcompra',
            'Compras Internacionales MCD',
            'Compras Redcompra MCD',
            'Giro Internacional',
            'Giros ATM',
            'Giros Caja',
            'OTROS CARGOS',
            'PEC',
            'Giros internacional MCD',
            'Giros ATM MCD',
            'Pago LCA',
            'Pago de Tarjeta',
            'TEF emitidas Otros Bancos'
        ))

        UNION

        select
            '009.04' as Nro_Fila,
            'Clientes F' as Observacion,
            'Compras' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
            'Compras Redcompra',
            'Compras Internacionales',
            'Compras Redcompra MCD',
            'Compras Internacionales MCD',
            'PEC'
        ))

        UNION

        select
            '009.05' as Nro_Fila,
            'Clientes F' as Observacion,
            'Compras Redcompra' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Compras Redcompra'
        ))

        UNION

        select
            '009.06' as Nro_Fila,
            'Clientes F' as Observacion,
            'Compras  Redcompra Tienda' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
            'Compras Redcompra'
        )) and COMPRA_RIPLEY='COMPRA_RIPLEY'

        UNION

        select
            '009.07' as Nro_Fila,
            'Clientes F' as Observacion,
            'Compras Redcompra no Tienda' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
            'Compras Redcompra'
        )) and COMPRA_RIPLEY<>'COMPRA_RIPLEY'

        UNION

        select
            '009.08' as Nro_Fila,
            'Clientes F' as Observacion,
            'Compras Internacionales' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Compras Internacionales'
        ))

        UNION

        select
            '009.09' as Nro_Fila,
            'Clientes F' as Observacion,
            'PEC' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
            'PEC'
        ))

        UNION

        select
            '009.10' as Nro_Fila,
            'Clientes F' as Observacion,
            'Giros' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
            'Giros ATM',
            'Giros Caja',
            'Giros internacional MCD',
            'Giros ATM MCD',
            'Giro Internacional'
        ))

        UNION

        select
            '009.11' as Nro_Fila,
            'Clientes F' as Observacion,
            'ATM' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Giros ATM'
        ))

        UNION

        select
            '009.12' as Nro_Fila,
            'Clientes F' as Observacion,
            'Caja' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Giros Caja'
        ))

        UNION

        select
            '009.13' as Nro_Fila,
            'Clientes F' as Observacion,
            'Internacional' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'Giro Internacional'
        ))

        UNION

        select
            '009.14' as Nro_Fila,
            'Clientes F' as Observacion,
            'TEF emitidas' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'TEF emitidas Otros Bancos'
        ))

        UNION

        select
            '009.15' as Nro_Fila,
            'Clientes F' as Observacion,
            'Otros Bancos' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
        'TEF emitidas Otros Bancos'
        ))

        UNION

        select
            '009.16' as Nro_Fila,
            'Clientes F' as Observacion,
            'Pagos' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
            'Pago de Tarjeta',
            'Pago LCA'
        ))

        UNION

        select
            '009.17' as Nro_Fila,
            'Clientes F' as Observacion,
            'Pago de Tarjeta' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
            'Pago de Tarjeta'
        ))

        UNION

        select
            '009.18' as Nro_Fila,
            'Clientes F' as Observacion,
            'Pago LCA' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
            'Pago LCA'
        ))

        UNION

        select
            '009.19' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cobro Mantenci�n Cuenta Vista' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
            'Comision planes'
        ))

        UNION

        select
            '009.20' as Nro_Fila,
            'Clientes F' as Observacion,
            'OTROS CARGOS' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in (
            'OTROS CARGOS'
        ))

        UNION

        select
            '009.21' as Nro_Fila,
            'Clientes F' as Observacion,
            'Abonos' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in (
            'Abono de Remuneraciones',
            'Avance desde Tarjeta Ripley',
            'Depósitos con Documento',
            'Depósitos en Efectivo',
            'OTROS ABONOS',
            'Otros (pago proveedores)',
            'TEF Recibidas',
            'Traspaso desde LCA'
        ))

        UNION

        select
            '009.22' as Nro_Fila,
            'Clientes F' as Observacion,
            'Depósitos en Efectivo' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in ('Depósitos en Efectivo'))

        UNION

        select
            '009.23' as Nro_Fila,
            'Clientes F' as Observacion,
            'Depósitos con Documento' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in ('Depósitos con Documento'))

        UNION

        select
            '009.24' as Nro_Fila,
            'Clientes F' as Observacion,
            'TEF Recibidas' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in ('TEF Recibidas'))

        UNION

        select
            '009.25' as Nro_Fila,
            'Clientes F' as Observacion,
            'Abono de Remuneraciones' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in ('Abono de Remuneraciones'))

        UNION

        select
            '009.26' as Nro_Fila,
            'Clientes F' as Observacion,
            'Otros (pago proveedores)' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in ('Otros (pago proveedores)'))

        UNION

        select
            '009.27' as Nro_Fila,
            'Clientes F' as Observacion,
            'Traspaso desde LCA' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in ('Traspaso desde LCA'))

        UNION

        select
            '009.28' as Nro_Fila,
            'Clientes F' as Observacion,
            'Avance desde Tarjeta Ripley' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in ('Avance desde Tarjeta Ripley'))

        UNION

        select
            '009.29' as Nro_Fila,
            'Clientes F' as Observacion,
            'OTROS ABONOS' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Abono in ('OTROS ABONOS'))

        UNION

        select
            '010.00' as Nro_Fila,
            'Clientes F' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '010.01' as Nro_Fila,
            'Clientes F' as Observacion,
            '$ Compras Redcompra MCD' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in ('Compras Redcompra MCD'))

        UNION

        select
            '010.02' as Nro_Fila,
            'Clientes F' as Observacion,
            '$ Compras  Redcompra MCD Tienda' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in ('Compras Redcompra MCD'))
        and COMPRA_RIPLEY='COMPRA_RIPLEY'

        UNION

        select
            '010.03' as Nro_Fila,
            'Clientes F' as Observacion,
            '$ Compras Redcompra MCD no Tienda' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in ('Compras Redcompra MCD'))
        and COMPRA_RIPLEY<>'COMPRA_RIPLEY'

        UNION

        select
            '010.04' as Nro_Fila,
            'Clientes F' as Observacion,
            '$ Compras Internacionales MCD' as Categoria,
            sum(MONTO) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in ('Compras Internacionales MCD'))

        UNION

        select
            '011.00' as Nro_Fila,
            'Clientes F' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '011.01' as Nro_Fila,
            'Clientes F' as Observacion,
            '# Compras Redcompra MCD' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in ('Compras Redcompra MCD'))

        UNION

        select
            '011.02' as Nro_Fila,
            'Clientes F' as Observacion,
            '# Compras  Redcompra MCD Tienda' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in ('Compras Redcompra MCD'))
        and COMPRA_RIPLEY='COMPRA_RIPLEY'


        UNION

        select
            '011.03' as Nro_Fila,
            'Clientes F' as Observacion,
            '# Compras Redcompra MCD no Tienda' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in ('Compras Redcompra MCD'))
        and COMPRA_RIPLEY<>'COMPRA_RIPLEY'


        UNION

        select
            '011.04' as Nro_Fila,
            'Clientes F' as Observacion,
            '# Compras Internacionales MCD' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in ('Compras Internacionales MCD'))

        UNION

        select
            '012.00' as Nro_Fila,
            'Clientes F' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '012.01' as Nro_Fila,
            'Clientes F' as Observacion,
            'Captacion PWA' as Categoria,
            sum(case when tipo_capta='PWA' then SI_Captado_Periodo end) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '012.02' as Nro_Fila,
            'Clientes F' as Observacion,
            'Captacion Online' as Categoria,
            sum(case when tipo_capta='CAPTA_ONLINE' then SI_Captado_Periodo end) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '012.03' as Nro_Fila,
            'Clientes F' as Observacion,
            'Captacion Presencial' as Categoria,
            sum(case when tipo_capta='PRESENCIAL' then SI_Captado_Periodo end) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '013.00' as Nro_Fila,
            'Clientes F' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        where SI_Funcionario>0

        UNION

        select
            '013.01' as Nro_Fila,
            'Clientes F' as Observacion,
            '# Cuentas con Saldo >$1' as Categoria,
            count(case when ultimo_saldo>1 then cuenta end) as Valor
        from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        where SI_Funcionario>0

        UNION

        select
            '013.02' as Nro_Fila,
            'Clientes F' as Observacion,
            '# Cuentas con Saldo >$1.000' as Categoria,
            count(case when ultimo_saldo>1000 then cuenta end) as Valor
        from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        where SI_Funcionario>0

        UNION

        select
            '013.03' as Nro_Fila,
            'Clientes F' as Observacion,
            '# Cuentas con Saldo >$100.000' as Categoria,
            count(case when ultimo_saldo>100000 then cuenta end) as Valor
        from schm_workspace.ppff_sb_saldos_cuenta_vista2_validado
        where SI_Funcionario>0

        UNION
        select
            '014.00' as Nro_Fila,
            'Clientes F' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0
        

        UNION

        select
            '014.01' as Nro_Fila,
            'Clientes F' as Observacion,
            'Stock MAESTRO' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0
        and tipo_plastico='MAESTRO'

        UNION

        select
            '014.02' as Nro_Fila,
            'Clientes F' as Observacion,
            'Stock CV Inicio de Periodo MAESTRO' as Categoria,
            sum(SI_Stock_Anterior) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0 and tipo_plastico='MAESTRO'

        UNION

        select
            '014.03' as Nro_Fila,
            'Clientes F' as Observacion,
            'Captacion MAESTRO' as Categoria,
            sum(SI_Captado_Periodo) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0 and tipo_plastico='MAESTRO'

        UNION

        select
            '014.04' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cierre MAESTRO' as Categoria,
            sum(SI_Fugado_Periodo) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0 and tipo_plastico='MAESTRO'

        UNION

        select
            '014.05' as Nro_Fila,
            'Clientes F' as Observacion,
            'Stock CV Final de periodo MAESTRO' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0 and tipo_plastico='MAESTRO'

        UNION

        select
            '015.00' as Nro_Fila,
            'Clientes F' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '015.01' as Nro_Fila,
            'Clientes F' as Observacion,
            'Stock MCD' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0
        and tipo_plastico='MCD'

        UNION

        select
            '015.02' as Nro_Fila,
            'Clientes F' as Observacion,
            'Stock CV Inicio de Periodo MCD' as Categoria,
            sum(SI_Stock_Anterior) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0 and tipo_plastico='MCD'

        UNION

        select
            '015.03' as Nro_Fila,
            'Clientes F' as Observacion,
            'Captacion MCD' as Categoria,
            sum(SI_Captado_Periodo) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0 and tipo_plastico='MCD'

        UNION

        select
            '015.04' as Nro_Fila,
            'Clientes F ' as Observacion,
            'Cierre MCD' as Categoria,
            sum(SI_Fugado_Periodo) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0 and tipo_plastico='MCD'

        UNION

        select
            '015.05' as Nro_Fila,
            'Clientes F' as Observacion,
            'Stock CV Final de periodo MCD' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0 and tipo_plastico='MCD'

        UNION

        select
            '016.00' as Nro_Fila,
            'Clientes F' as Observacion,
            '----------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0

        UNION

        select
            '016.01' as Nro_Fila,
            'Clientes F' as Observacion,
            'Stock MAESTRO a MCD' as Categoria,
            max(floor(to_char(v_fecha_inicio, 'YYYYMMDD')::int/100)) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0
        and tipo_plastico='MAESTRO a MCD'

        UNION

        select
            '016.02' as Nro_Fila,
            'Clientes F' as Observacion,
            'Stock CV Inicio de Periodo MAESTRO a MCD' as Categoria,
            sum(SI_Stock_Anterior) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0 and tipo_plastico='MAESTRO a MCD'

        UNION

        select
            '016.03' as Nro_Fila,
            'Clientes F' as Observacion,
            'Captacion MAESTRO a MCD' as Categoria,
            sum(SI_Captado_Periodo) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0 and tipo_plastico='MAESTRO a MCD'

        UNION

        select
            '016.04' as Nro_Fila,
            'Clientes F' as Observacion,
            'Cierre MAESTRO a MCD' as Categoria,
            sum(SI_Fugado_Periodo) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0 and tipo_plastico='MAESTRO a MCD'

        UNION

        select
            '016.05' as Nro_Fila,
            'Clientes F' as Observacion,
            'Stock CV Final de periodo MAESTRO a MCD' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_stock_cuenta_vista_validada
        where SI_Funcionario>0 and tipo_plastico='MAESTRO a MCD'


        UNION

        select
            '017.01' as Nro_Fila,
            'Clientes F' as Observacion,
            '---------------------' as Categoria,
            max(0) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada


        UNION

        select
            '017.02' as Nro_Fila,
            'Clientes F' as Observacion,
            'Monto Giros ATM MCD' as Categoria,
            sum(monto) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in ('Giros ATM MCD'))

        UNION

        select
            '017.03' as Nro_Fila,
            'Clientes F' as Observacion,
            'Monto Giros internacional MCD' as Categoria,
            sum(monto) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in ('Giros internacional MCD'))

        UNION

        select
            '017.04' as Nro_Fila,
            'Clientes F' as Observacion,
            'TRX Giros ATM MCD' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in ('Giros ATM MCD'))


        UNION

        select
            '017.05' as Nro_Fila,
            'Clientes F' as Observacion,
            'TRX Giros internacional MCD' as Categoria,
            count(*) as Valor
        from schm_workspace.ppff_sb_mov_cuenta_vista_funcionarios_validada
        where SI_Funcionario>0
        and (Descripcion_Cargo in ('Giros internacional MCD'))

    ;

    -- --------------------------------------------------------------------------------------------------;
    --  [05.4] Eliminar tablas de paso;
    -- --------------------------------------------------------------------------------------------------;


    -- ==================================================================================================;
    --  [06] Vaciar resultados en tabla entregable;
    --m==================================================================================================;
    CREATE TABLE schm_workspace.ppff_panel_ctavta as /*	VALIDADO	*/
    SELECT
        current_date as fecha_proceso
        ,to_char(v_fecha_inicio, 'YYYYMMDD')::int as anomesdia_desde
        ,to_char(v_fecha_fin, 'YYYYMMDD')::int as anomesdia_hasta
        ,*
    from schm_workspace.ppff_sb_salida_panel_ctavta;

    -- ==================================================================================================;
    -- [07] Consolidar Resultados en tabla agrupada (solo si se ingresa periodo);
    -- ==================================================================================================;
    /*eliminar de la tabla previamente periodo que se va a insertar para evitar duplicidad*/

    DELETE FROM schm_data_analytics.ppff_panel_ctavta_consolidado WHERE periodo = v_periodo;

    INSERT INTO schm_data_analytics.ppff_panel_ctavta_consolidado
    (fecha_proceso ,anomesdia_desde ,anomesdia_hasta ,nro_fila ,observacion ,categoria ,valor ,periodo)
    SELECT
        fecha_proceso
         ,anomesdia_desde
         ,anomesdia_hasta
         ,nro_fila
         ,observacion
         ,categoria
         ,valor
        ,v_periodo as periodo
    from schm_workspace.ppff_panel_ctavta
    ;


    -- ==================================================================================================;
    --  [08] Borrado de las tablas de paso;
    -- t==================================================================================================;
    DROP TABLE IF EXISTS schm_workspace.ppff_core_venta;
    DROP TABLE IF EXISTS schm_workspace.ppff_dotacion;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_saldos_cuenta_vista;
    DROP TABLE IF EXISTS schm_workspace.ppff_sb_salida_panel_ctavta;

END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sj_test_onb_3m(v_period_6 int4, v_period int4)
	LANGUAGE plpgsql
AS $$
	
	
	
	
BEGIN
	
	DROP TABLE IF EXISTS schm_workspace.clts_captados;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_2;
	DROP TABLE IF EXISTS schm_workspace.clts_spos; --spos_fin
	DROP TABLE IF EXISTS schm_workspace.clts_movimientos_debito; --spos_cv_cc
	DROP TABLE IF EXISTS schm_workspace.clts_tda;
	DROP TABLE IF EXISTS schm_workspace.clts_logeo_int;
	DROP TABLE IF EXISTS schm_workspace.clts_epu;
	DROP TABLE IF EXISTS schm_workspace.clts_pagos;
	DROP TABLE IF EXISTS schm_workspace.clts_mov_tda_spos;
	DROP TABLE IF EXISTS schm_workspace.retiro_plastico_tc;
	DROP TABLE IF EXISTS schm_workspace.retiro_plastico_cdp;
	DROP TABLE IF EXISTS schm_workspace.retiro_debito;
	DROP TABLE IF EXISTS schm_workspace.curse_cc;
	DROP TABLE IF EXISTS schm_workspace.base_limpio;
	DROP TABLE IF EXISTS schm_workspace.retiro_ctacte1;
	DROP TABLE IF EXISTS schm_workspace.retiro_ctacte_2;
	DROP TABLE IF EXISTS schm_workspace.retiro_plastico_tc_2;
	DROP TABLE IF EXISTS schm_workspace.retiro_plastico_cdp_2;
	DROP TABLE IF EXISTS schm_workspace.retiro_ctacte_3;
	DROP TABLE IF EXISTS schm_workspace.retiro_debito_2;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_3;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_4;
	DROP TABLE IF EXISTS schm_workspace.enrolamiento;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_5;
	DROP TABLE IF EXISTS schm_workspace.spos_fin_1;
	DROP TABLE IF EXISTS schm_workspace.spos_fin_2;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_6;
	DROP TABLE IF EXISTS schm_workspace.cod_camp;
	DROP TABLE IF EXISTS schm_workspace.planes_tbl_plan_cliente;
	DROP TABLE IF EXISTS schm_workspace.clts_onboarding_3m_paso;
	DROP TABLE IF EXISTS schm_workspace.clts_colapso;

--- total de captados en el periodo

	CREATE TABLE schm_workspace.clts_captados AS
	SELECT 
		ROW_NUMBER() OVER() AS ind,
		*
	FROM 
		(SELECT
		rut_cliente AS rut,
		producto,
		fecha,
		codent,
		centalta,
		cuenta,
		nro_solicitud,
		id_oferta,
		cod_sucursal,
		via
	FROM
		schm_data_analytics.ppff_capta_salida
	WHERE
		periodo = v_period_6 --mirar 6 meses hacia atras
	ORDER BY
		rut_cliente)
		;
	
-- marca de 30, 60 y 90 días	
	
	CREATE TABLE schm_workspace.clts_captados_2 AS 
	SELECT 
	*
	,dateadd(DAY,+30,fecha)::date AS dia_30
	,dateadd(DAY,+60,fecha)::date AS dia_60
	,dateadd(DAY,+90,fecha)::date AS dia_90
	,CASE
		WHEN producto IN ('CUENTA VISTA') THEN 'CV'
		WHEN producto IN ('CUENTA CORRIENTE') THEN 'CTACTE'
		ELSE 'TC'
	END AS producto2
	FROM
	schm_workspace.clts_captados
	ORDER BY
	rut
	;

-- extracción de venta spos TC

	CREATE TABLE schm_workspace.clts_spos AS 
	SELECT 
	    a.periodo, 
		a.rut,
		a.fecha,
		a.hora,
		a.codact,
		a.venta_tarjeta,
		a.nombre_comercio
	FROM
		schm_data_analytics.spos_aut AS a
	INNER JOIN (SELECT 
	DISTINCT rut 
	FROM schm_workspace.clts_captados_2
	WHERE producto2='TC') AS b
	ON
		(a.rut = b.rut)
	WHERE
		a.periodo BETWEEN v_period AND to_char(date_add('month',4,to_date(v_period,'YYYYMMdd')),'YYYYmm')::int
	;

-- extraccion de venta td +cc

	CREATE TABLE schm_workspace.clts_movimientos_debito AS 
	SELECT
	    a.periodo,
		a.rut,
		a.tipo,
		a.fecha,
		a.codact,
		a.venta_tarjeta,
		a.nombre_comercio,
		a.tipo_compra
	FROM
		schm_data_analytics.mpdg_movimientos_debito a
	INNER JOIN (SELECT DISTINCT rut 
	FROM schm_workspace.clts_captados_2
	WHERE producto2<>'TC' ) AS b
		ON
			(a.rut = b.rut)
	WHERE
		a.periodo BETWEEN v_period AND to_char(date_add('month',4,to_date(v_period,'YYYYMMdd')),'YYYYmm')::int
	;
	
	/*TDA TC*/

	CREATE TABLE schm_workspace.clts_tda AS 
	SELECT
		DISTINCT 
		a.periodo,
		a.rut,
		a.fecha
	FROM
		schm_data_analytics.tnda_tda_itf AS a
	INNER JOIN (SELECT 
	DISTINCT rut 
	FROM schm_workspace.clts_captados_2
	WHERE producto2='TC') AS b
	ON
		(a.rut = b.rut)
	WHERE
		a.capital>0
		AND a.periodo BETWEEN v_period AND to_char(date_add('month',4,to_date(v_period,'YYYYMMdd')),'YYYYmm')::int
	;

	
	/*LOGEO_DIGITAL*/
	CREATE TABLE schm_workspace.clts_logeo_int AS 
	SELECT
		DISTINCT 
		a.periodo,
		a.rut,
		a.fecha
	FROM
		schm_data_analytics.dgtl_logueos_internet AS a
	INNER JOIN (SELECT DISTINCT rut FROM schm_workspace.clts_captados_2) AS b
	ON
		(a.rut = b.rut)
	WHERE
		a.DISPOSITIVO IN ('DESKTOP', 'APP' , 'APP_1')
		AND a.periodo BETWEEN v_period AND to_char(date_add('month',4,to_date(v_period,'YYYYMMdd')),'YYYYmm')::int
	;
	
	/*EPU COBRO*/
	CREATE TABLE schm_workspace.clts_epu AS 
	SELECT
		DISTINCT 
		a.periodo,
		a.rut,
		a.fecfac AS fecha
	FROM
		schm_data_analytics.mdpg_epu_mes_actual AS a
	INNER JOIN (SELECT 
	DISTINCT rut 
	FROM schm_workspace.clts_captados_2
	WHERE producto2='TC') AS b
	ON
		(a.rut = b.rut)
	WHERE
		 a.periodo BETWEEN v_period AND to_char(date_add('month',4,to_date(v_period,'YYYYMMdd')),'YYYYmm')::int
	;
	
	/*PAGO DIGITAL*/
	CREATE TABLE schm_workspace.clts_pagos AS 
	SELECT
		DISTINCT 
		a.rut,
		a.fecfac AS fecha,
		a.periodo
	FROM schm_data_analytics.mdpg_pagos_digitales AS a
	INNER JOIN (SELECT 
	DISTINCT rut 
	FROM schm_workspace.clts_captados_2
	WHERE producto2='TC') AS b
	ON
		(a.rut = b.rut)
	WHERE
		a.nomcomred IN ('HB_SERV', 'UNIRED', 'Khipu', 'SANTANDER')
		AND espago=1
		AND 
		 a.periodo BETWEEN v_period AND to_char(date_add('month',4,to_date(v_period,'YYYYMMdd')),'YYYYmm')::int
	;
	
	/*unificar bases de uso y generar indices correspondientes*/

	CREATE TABLE schm_workspace.clts_mov_tda_spos AS 
	SELECT
		rut,
		fecha,
		to_char(fecha, 'yyyyMMdd')::integer AS fecha_numero,
		producto2,
		tipo_compra,
		periodo
	FROM
		(
		SELECT
			rut,
			fecha,
			'TC' AS producto2,
			'SPOS' AS tipo_compra,
			periodo
		FROM schm_workspace.clts_spos --credito 
	UNION ALL
		SELECT
			rut,
			fecha,
			'TC' AS producto2,
			'TNDA' AS tipo_compra,
			periodo
		FROM schm_workspace.clts_tda --credtio
	UNION ALL 
		SELECT
			rut,
			fecha,
			CASE WHEN tipo='CTA CTE' THEN 'CTACTE' ELSE 'CV' END  AS producto2,
			tipo_compra,
			periodo
		FROM
			schm_workspace.clts_movimientos_debito
	)
	ORDER BY
		rut
	;

	CREATE TABLE schm_workspace.retiro_plastico_tc AS 
	SELECT
		sol.sol_nro_inn_ide,
		tar.tar_cac_nro_ctt_k numero_contrato,
		tar.tar_cac_nro_pan_k numero_tarjeta,
		sol.sol_cod_ide_cli rut_cliente,
		sol.sol_fch_alt_sol fecha_solicitud,
		sol.sol_cod_nro_sol_k numero_solicitud,
		sol.sol_cod_est_sol estado,
		trunc(mae.pcom_fch_k) AS fecha_retiro,
		mae.pcom_gls_usr_crc,
		det.pcom_coc_suc codigo_suc
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol sol
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar tar
	ON
		tar.tar_cod_nro_sol_k = sol.sol_cod_nro_sol_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_mae_reg_evt mae
	ON
		sol.sol_nro_inn_ide = mae.pcom_cod_ide_cli_k
		AND mae.pcom_cod_evt_k IN (15, 80, 230)
		AND mae.pcom_desc_doc = sol.sol_cod_ide_cli
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_det_reg_evt det
	ON
		mae.pcom_nro_seq_k = det.pcom_nro_seq_k
		AND det.pcom_cod_evt_k IN (15, 80, 230)
		AND det.pcom_nro_ctt = substring(tar_cac_nro_ctt_k,1,4) || '-' || substring(tar_cac_nro_ctt_k,5,4) || '-' || substring(tar_cac_nro_ctt_k,9,12)
	WHERE
		substring(tar.tar_cod_tip_prd_k,1,2) = '01'
		AND sol.sol_fch_crc_sol 
		BETWEEN to_date(v_period,'YYYYMMDD') AND last_day(dateadd('month',4,to_date(v_period,'YYYYMMDD')))
	AND (sol.sol_cod_cll_act = 14
	OR sol.sol_cod_cll_ant = 14)
	AND sol.sol_cod_cll_adm = 2
	AND EXISTS (
	SELECT
		btc_cod_nro_sol_k
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
	WHERE
		btc_cod_nro_sol_k = sol.sol_cod_nro_sol_k
		AND btc_cod_tip_reg_k = 1
		AND btc_cod_eta_k = 102
		AND btc_cod_evt_k = 30)
	AND EXISTS (
	SELECT
		t.cuenta
	FROM
		br_dm_prod_bigdata_reporitf_db.mpdt009 t
	WHERE t.cuenta = substring(tar_cac_nro_ctt_k,9,12) and t.codent = substring(tar_cac_nro_ctt_k,1,4) and 
	t.centalta = substring(tar_cac_nro_ctt_k,5,4) and t.numbencta = 1 and t.numplastico > 0)
	order by  sol.sol_cod_nro_sol_k ASC
	;
	

	CREATE TABLE schm_workspace.retiro_plastico_cdp AS 
	SELECT *
	FROM (
	SELECT 
		sol.sol_nro_inn_ide,
		tar.tar_cac_nro_ctt_k numero_contrato,
		tar.tar_cac_nro_pan_k numero_tarjeta,
		sol.sol_cod_ide_cli rut_cliente,
		sol.sol_fch_alt_sol fecha_solicitud,
		sol.sol_cod_nro_sol_k numero_solicitud,
		sol.sol_cod_est_sol estado,
		trunc(mae.pcom_fch_k) AS fecha_retiro,
		mae.pcom_gls_usr_crc,
		det.pcom_coc_suc codigo_suc
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol sol
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar tar
	ON
		tar.tar_cod_nro_sol_k = sol.sol_cod_nro_sol_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe ofe
	ON
		ofe.ofe_cod_nro_sol_k = sol.sol_cod_nro_sol_k
		AND ofe.ofe_cod_ind_sol = 1
		AND ofe.ofe_cod_ind_drm = 1
		AND substring(ofe.ofe_cod_prd_ofe_k,1,2) = '01'
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_mae_reg_evt mae
	ON
		sol.sol_nro_inn_ide = mae.pcom_cod_ide_cli_k
		AND mae.pcom_cod_evt_k IN (15, 80, 230)
		AND mae.pcom_desc_doc = sol.sol_cod_ide_cli
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_det_reg_evt det
	ON
		mae.pcom_nro_seq_k = det.pcom_nro_seq_k
		AND det.pcom_cod_evt_k in (15, 80, 230)
		and det.pcom_nro_ctt = substring(tar_cac_nro_ctt_k,1,4) || '-' || substring(tar_cac_nro_ctt_k,5,4) || '-' || substring(tar_cac_nro_ctt_k,9,12)
	WHERE substring(tar.tar_cod_tip_prd_k,1,2) = '01'
	AND sol_fch_crc_sol BETWEEN to_date(v_period,'YYYYMMDD') AND last_day(dateadd('month',4,to_date(v_period,'YYYYMMDD')))
	AND (sol.sol_cod_cll_act = 14
	OR sol.sol_cod_cll_ant = 14)
	AND sol.sol_cod_cll_adm = 2
	AND EXISTS (
	SELECT
		btc_cod_nro_sol_k
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
	WHERE btc_cod_nro_sol_k = sol.sol_cod_nro_sol_k
		AND btc_cod_tip_reg_k = 1
		AND btc_cod_eta_k = 102
		AND btc_cod_evt_k = 30
		)
	AND EXISTS (
	SELECT
		t.Cuenta
	FROM
		br_dm_prod_bigdata_reporitf_db.mpdt009 t
	WHERE
		t.cuenta = substring(TAR_CAC_NRO_CTT_K,9,12)
		AND t.codent = substring(TAR_CAC_NRO_CTT_K,1,4)
		AND t.centalta = substring(TAR_CAC_NRO_CTT_K,5,4)
		AND trim(t.pan) = trim(TAR.TAR_CAC_NRO_PAN_K)
		)
	) WHERE fecha_retiro BETWEEN to_date(v_period,'YYYYMMDD') AND last_day(dateadd('month',4,to_date(v_period,'YYYYMMDD')))
	;

	
	CREATE TABLE schm_workspace.retiro_debito AS 
	SELECT * 
	FROM 
	(SELECT
		DISTINCT 
		mae.pcom_cod_ide_cli_k,
		tar.tar_cac_nro_ctt_k numero_contrato,
		tar.tar_cac_nro_pan_k numero_tarjeta,
		substring(prd.prd_cac_nro_ctt,9) numero_cuenta_vista,
		sol.sol_cod_ide_cli rut_cliente,
		per.per_cac_ide_cli_dv dv,
		sol.sol_fch_alt_sol fecha_solicitud,
		sol.sol_cod_nro_sol_k numero_solicitud,
		sol.sol_cod_est_sol estado,
		trunc(mae.pcom_fch_k) fecha_retiro,
		mae.pcom_gls_usr_crc,
		det.pcom_coc_suc codigo_suc
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol sol
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar tar
	   ON
		tar.tar_cod_nro_sol_k = sol.sol_cod_nro_sol_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol prd
	   ON
		tar.tar_cod_nro_sol_k = prd.prd_cod_nro_sol_k
		AND tar.tar_cod_tip_prd_k = prd.prd_cod_tip_prd_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_dat_per per
	   ON
		prd.prd_cod_nro_sol_k = per.per_cod_nro_sol_k
		AND sol.sol_cod_ide_cli = per.per_cod_ide_cli_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_mae_reg_evt mae
	 ON
		sol.sol_nro_inn_ide = mae.pcom_cod_ide_cli_k
		AND mae.pcom_cod_evt_k = 257
		AND mae.pcom_desc_doc = sol.sol_cod_ide_cli
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_det_reg_evt det
	ON
		mae.pcom_nro_seq_k = det.pcom_nro_seq_k
		AND
	det.pcom_cod_evt_k = 257 and 
	(det.pcom_nro_ctt = substring(tar_cac_nro_ctt_k,1,4) || '-' || substring(tar_cac_nro_ctt_k,5,4) || '-' || substring(tar_cac_nro_ctt_k,9,12) or 
	det.pcom_nro_ctt = substring(tar_cac_nro_ctt_k,9,12))
	WHERE 
	 substring(tar.tar_cod_tip_prd_k,1,2) = '04'
	and (sol.sol_cod_cll_act = 14 or sol.sol_cod_cll_ant = 14)
	and sol.sol_cod_cll_adm = 2
	and sol.sol_fch_crc_sol 
	BETWEEN to_date(v_period,'YYYYMMDD') AND last_day(dateadd('month',4,to_date(v_period,'YYYYMMDD')))
	AND EXISTS (
	SELECT
		btc_cod_nro_sol_k
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
	WHERE
		btc_cod_nro_sol_k = sol.sol_cod_nro_sol_k
		AND btc_cod_tip_reg_k = 1
		AND btc_cod_eta_k = 102
		AND btc_cod_evt_k = 30)
	AND EXISTS (
	SELECT
		t.cuenta
	FROM
		br_dm_prod_bigdata_reporitf_db.mpdt009 t
	WHERE
		t.cuenta = substring(tar_cac_nro_ctt_k,9,12)
		AND t.codent = substring(tar_cac_nro_ctt_k,	1,4)
		AND t.centalta = substring(tar_cac_nro_ctt_k,5,4)
		AND t.numbencta = 1
		AND t.numplastico > 1)
	ORDER BY
	sol.sol_cod_nro_sol_k ASC
	)
	WHERE 
	fecha_retiro BETWEEN to_date(v_period,'YYYYMMDD') AND last_day(dateadd('month',4,to_date(v_period,'YYYYMMDD')))
	;
	
	
	CREATE TABLE schm_workspace.CURSE_CC AS
	SELECT * FROM 
	(
		SELECT 
		tar.tar_cac_nro_ctt_k numero_contrato,
		tar.tar_cac_nro_pan_k numero_tarjeta,
		substring(prd.prd_cac_nro_ctt,9) numero_cuenta,
		sol.sol_cod_ide_cli rut_cliente,
		per.per_cac_ide_cli_dv dv,
		sol.sol_fch_alt_sol fecha_solicitud,
		sol.sol_cod_nro_sol_k numero_solicitud,
		sol.sol_cod_est_sol estado
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol sol
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe ofe /* nuevo */
		ON
		sol.sol_cod_nro_sol_k = ofe.ofe_cod_nro_sol_k /* nuevo */
		AND substring(ofe.ofe_cod_prd_ofe_k ,1,2) = '21' /* nuevo - codigo de ctacte*/
		AND ofe.ofe_cod_ind_ngc = 1 /* nuevo - indicador de negociacion*/
		AND ofe.ofe_cod_ind_alt = 1 /* nuevo - referencia a la alta del producto */
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar tar
		ON
	tar.tar_cod_nro_sol_k = sol.sol_cod_nro_sol_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol prd
		ON
	tar.tar_cod_nro_sol_k = prd.prd_cod_nro_sol_k
	AND tar.tar_cod_tip_prd_k = prd.prd_cod_tip_prd_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_dat_per per
		ON
	prd.prd_cod_nro_sol_k = per.per_cod_nro_sol_k
	AND sol.sol_cod_ide_cli = per.per_cod_ide_cli_k
	WHERE
		substring(tar.tar_cod_tip_prd_k,1,2) IN ('21')
	AND (sol.sol_cod_cll_act = 14
		OR sol.sol_cod_cll_ant = 14)
	AND sol.sol_cod_cll_adm = 2
	AND sol.sol_fch_crc_sol 
	BETWEEN to_date(v_period,'YYYYMMDD') AND last_day(dateadd('month',4,to_date(v_period,'YYYYMMDD')))
	AND EXISTS (
	SELECT
		btc_cod_nro_sol_k
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
	WHERE
		btc_cod_nro_sol_k = sol.sol_cod_nro_sol_k
		AND btc_cod_tip_reg_k = 1
		AND btc_cod_eta_k = 102
		AND btc_cod_evt_k = 30)
	ORDER BY
	sol.sol_cod_nro_sol_k ASC
	)
	;
	
	
	CREATE TABLE schm_workspace.base_limpio AS 
	SELECT DISTINCT 
		numero_contrato,
		numero_tarjeta,
		numero_cuenta,
		rut_cliente::integer AS rut,
		dv,
		fecha_solicitud AS fecha,
		estado
	FROM schm_workspace.curse_cc
	;
	
	
	CREATE TABLE schm_workspace.retiro_ctacte1 AS 
	SELECT * 
	FROM
	(SELECT DISTINCT 
		mae.pcom_cod_ide_cli_k, 
		 tar.tar_cac_nro_ctt_k numero_contrato,
		det.pcom_pan numero_tarjeta,  
		substring(prd.prd_cac_nro_ctt,9) numero_cuenta,
		sol.sol_cod_ide_cli rut_cliente, 
		per.per_cac_ide_cli_dv dv, 
		sol.sol_fch_alt_sol fecha_solicitud,
		sol.sol_cod_nro_sol_k numero_solicitud, 
		sol.sol_cod_est_sol estado,
		trunc(mae.pcom_fch_k) fecha_retiro, 
		mae.pcom_gls_usr_crc, 
		det.pcom_coc_suc codigo_suc
	FROM
	br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol sol
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe ofe /* nuevo */
	       ON
	sol.sol_cod_nro_sol_k = ofe.ofe_cod_nro_sol_k /* nuevo */
	AND substring(ofe.ofe_cod_prd_ofe_k ,1,2) = '21' /* nuevo - codigo de ctacte*/
	AND ofe.ofe_cod_ind_ngc = 1 /* nuevo - indicador de negociacion*/
	AND ofe.ofe_cod_ind_alt = 1 /* nuevo -referencia a la alta del producto */
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar tar
		   ON
	tar.tar_cod_nro_sol_k = sol.sol_cod_nro_sol_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol prd
		   ON
	tar.tar_cod_nro_sol_k = prd.prd_cod_nro_sol_k
	AND tar.tar_cod_tip_prd_k = prd.prd_cod_tip_prd_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_dat_per per
		   ON
	prd.prd_cod_nro_sol_k = per.per_cod_nro_sol_k
	AND sol.sol_cod_ide_cli = per.per_cod_ide_cli_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_mae_reg_evt mae
		 ON
	sol.sol_nro_inn_ide = mae.pcom_cod_ide_cli_k
	AND mae.pcom_cod_evt_k = 257
	AND mae.pcom_desc_doc = sol.sol_cod_ide_cli
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_det_reg_evt det
		ON	mae.pcom_nro_seq_k = det.pcom_nro_seq_k
	AND det.pcom_cod_evt_k = 257
	AND
		(det.pcom_nro_ctt = substring(tar_cac_nro_ctt_k,1,4) || '-' || substring(tar_cac_nro_ctt_k,5,4) || '-' || substring(tar_cac_nro_ctt_k,9,12) or 
		det.pcom_nro_ctt = substring(tar_cac_nro_ctt_k,9,12))
		where 
		 substring(tar.tar_cod_tip_prd_k,1,2) = '21'
		and (sol.sol_cod_cll_act = 14 or sol.sol_cod_cll_ant = 14)
		and sol.sol_cod_cll_adm = 2
		and sol.sol_fch_crc_sol BETWEEN to_date(v_period,'YYYYMMDD') AND last_day(dateadd('month',4,to_date(v_period,'YYYYMMDD')))
		AND EXISTS
		(
	SELECT
		btc_cod_nro_sol_k
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
	WHERE
		btc_cod_nro_sol_k = sol.sol_cod_nro_sol_k
		AND btc_cod_tip_reg_k = 1
		AND btc_cod_eta_k = 102
		AND btc_cod_evt_k = 30)
	AND EXISTS (
	SELECT
		t.cuenta
	FROM
		br_dm_prod_bigdata_reporitf_db.mpdt009 t
	WHERE 
		t.cuenta = substring(tar_cac_nro_ctt_k,9,12)
		AND 
		t.codent = substring(tar_cac_nro_ctt_k,1,4)
		AND 
		t.centalta = substring(tar_cac_nro_ctt_k,5,4)
		AND t.numbencta = 1
		AND t.numplastico > 1)
	ORDER BY sol.sol_cod_nro_sol_k ASC
	) 
	WHERE fecha_retiro BETWEEN to_date(v_period,'YYYYMMDD') AND last_day(dateadd('month',4,to_date(v_period,'YYYYMMDD')))
	;
	
	
	CREATE TABLE schm_workspace.retiro_ctacte_2 AS 
		SELECT DISTINCT
		b.*
	FROM
		schm_workspace.base_limpio AS a
	LEFT JOIN schm_workspace.retiro_ctacte1 AS b
	ON
		(a.NUMERO_CUENTA = b.numero_cuenta)
	WHERE
		b.numero_cuenta IS NOT NULL
		AND a.estado IN (8, 9, 11, 50)
	;
	
	CREATE TABLE schm_workspace.retiro_plastico_tc_2 AS 
	   SELECT
		DISTINCT  
	   rut_cliente::integer AS rut,
		max(fecha_retiro) AS fecha
	FROM
		schm_workspace.retiro_plastico_tc
	GROUP BY
		rut
	;
	
	CREATE TABLE schm_workspace.retiro_plastico_cdp_2 AS 
	   SELECT DISTINCT 
		rut_cliente AS rut,
		max(fecha_retiro) AS fecha
	FROM
		schm_workspace.retiro_plastico_cdp
	GROUP BY
		rut
	;
	
	CREATE TABLE schm_workspace.retiro_ctacte_3 AS 
	   SELECT
		DISTINCT 
		rut_cliente AS rut,
		max(fecha_retiro) AS fecha
	FROM
		schm_workspace.retiro_ctacte_2
	GROUP BY
		rut
	;
	
	CREATE TABLE schm_workspace.retiro_debito_2 AS 
	   SELECT DISTINCT 
		rut_cliente AS rut,
		max(fecha_retiro) AS fecha
	FROM
		schm_workspace.retiro_debito
	GROUP BY
		rut
	;

-- marcaje de uso

	CREATE TABLE schm_workspace.clts_captados_3 AS 
		SELECT DISTINCT
		a.*,
		max((CASE WHEN (b.rut IS NOT NULL) AND (b.fecha BETWEEN a.fecha AND a.dia_30) THEN 1  
		ELSE 0 END)) AS concreta_30_T,
		max((CASE WHEN (b.rut IS NOT NULL) AND (b.fecha BETWEEN a.fecha AND a.dia_60) THEN 1 
		ELSE 0 END )) AS concreta_60_T,
		max((CASE WHEN (b.rut IS NOT NULL) AND (b.fecha BETWEEN a.fecha AND a.dia_90) THEN 1  
		ELSE 0 END )) AS concreta_90_T,
		max(CASE WHEN b.tipo_compra ='SPOS' AND b.fecha BETWEEN a.fecha AND a.dia_30 THEN 1 ELSE 0 END) AS concreta_30_SPOS,
		max(CASE WHEN b.tipo_compra ='SPOS' AND b.fecha BETWEEN a.fecha AND a.dia_60 THEN 1 ELSE 0 END) AS concreta_60_SPOS,
		max(CASE WHEN b.tipo_compra ='SPOS' AND b.fecha BETWEEN a.fecha AND a.dia_90 THEN 1 ELSE 0 END) AS concreta_90_SPOS,
		max(CASE WHEN b.tipo_compra ='TNDA' AND b.fecha BETWEEN a.fecha AND a.dia_30 THEN 1 ELSE 0 END) AS concreta_30_tda,
		max(CASE WHEN b.tipo_compra ='TNDA' AND b.fecha BETWEEN a.fecha AND a.dia_60 THEN 1 ELSE 0 END ) AS concreta_60_tda,
		max(CASE WHEN b.tipo_compra ='TNDA' AND b.fecha BETWEEN a.fecha AND a.dia_90 THEN 1 ELSE 0 END ) AS concreta_90_tda,
		min(CASE WHEN b.tipo_compra ='SPOS' AND b.fecha BETWEEN a.fecha AND a.dia_90 THEN b.fecha_numero END) AS fecha_concreta_SPOS,
		min(CASE WHEN b.tipo_compra ='TNDA' AND b.fecha BETWEEN a.fecha AND a.dia_90 THEN b.fecha_numero END ) AS fecha_concreta_tda
	FROM schm_workspace.clts_captados_2 AS a
	LEFT JOIN schm_workspace.clts_mov_tda_spos AS b
	ON (a.rut = b.rut)
	AND (a.producto2 = b.producto2)
	AND b.fecha>=a.fecha
	GROUP BY 
	a.ind,
	a.rut,
	a.producto,
	a.producto2,
	a.fecha,
	a.dia_30,
	a.dia_60,
	a.dia_90,
	a.codent,
	a.centalta,
	a.cuenta,
	a.nro_solicitud,
	a.cod_sucursal,
	a.via,
	a.id_oferta
	;


	CREATE TABLE schm_workspace.clts_captados_4 AS 
	SELECT DISTINCT
		a.*,
		max(CASE WHEN h.rut is not NULL and (a.producto2='TC') 
		and h.fecha BETWEEN a.fecha and a.dia_30 THEN 1 ELSE 0 END) as concreta_30_epu,
		max(CASE WHEN h.rut is not NULL and (a.producto2='TC') 
		and h.fecha BETWEEN a.fecha and a.dia_60 THEN 1 ELSE 0 END) as concreta_60_epu,
		max(CASE WHEN h.rut is not NULL and (a.producto2='TC') 
		and h.fecha BETWEEN a.fecha and a.dia_90 THEN 1 ELSE 0 END) as concreta_90_epu,
		max(CASE WHEN (i.rut is not NULL) and (i.fecha BETWEEN a.fecha and a.dia_30) THEN 1 ELSE 0 END) as concreta_30_log,
		max(CASE WHEN (i.rut is not NULL) and (i.fecha BETWEEN a.fecha and a.dia_60) THEN 1 ELSE 0 END) as concreta_60_log,
		max(CASE WHEN (i.rut is not NULL) and (i.fecha BETWEEN a.fecha and a.dia_90) THEN 1 ELSE 0 END) as concreta_90_log,
		--CASE WHEN  a.producto2='TC' and (j1.rut is not null or j2.rut is not null) and 
		--(j1.fecha BETWEEN a.fecha and a.dia_30 or j2.fecha BETWEEN a.fecha and a.dia_30) THEN 1 
		--WHEN a.producto2='CV' and (j3.rut is not null ) and (j3.fecha BETWEEN a.fecha and a.dia_30 ) THEN 1 
		--WHEN a.producto2='CTACTE' and (j4.rut is not null) and (j4.fecha BETWEEN a.fecha and a.dia_30 ) THEN 1 
		--ELSE 0 end as concreta_30_retira_T,
		--CASE WHEN a.producto2='TC' and (j1.rut is not null or j2.rut is not null)
		--and (j1.fecha BETWEEN a.fecha and a.dia_60 or j2.fecha BETWEEN a.fecha and a.dia_60) THEN 1 
		--WHEN a.producto2='CV' and (j3.rut is not null) and (j3.fecha BETWEEN a.fecha and a.dia_60 ) THEN 1 
		--WHEN a.producto2='CTACTE' and (j4.rut is not null) and (j4.fecha BETWEEN a.fecha and a.dia_60) THEN 1 
		--ELSE 0 end as concreta_60_retira_T,
		--CASE WHEN a.producto2='TC' and (j1.rut is not null or j2.rut is not null) and 
		--(j1.fecha BETWEEN a.fecha and a.dia_90 or j2.fecha BETWEEN a.fecha and a.dia_90) THEN 1 
		--WHEN a.producto2='CV' and (j3.rut is not null) and (j3.fecha BETWEEN a.fecha and a.dia_90) THEN 1 
		--WHEN a.producto2='CTACTE' and (j4.rut is not null ) and (j4.fecha BETWEEN a.fecha	and a.dia_90 ) THEN 1 
		--ELSE 0 end as concreta_90_retira_T,
		max(CASE WHEN (k.rut is not NULL) and (a.producto2='TC') 
		and (k.fecha BETWEEN a.fecha and a.dia_30) THEN 1 ELSE 0 END) as concreta_30_pagos,
		max(CASE WHEN (k.rut is not NULL) and (a.producto2='TC') 
		and (k.fecha BETWEEN a.fecha and a.dia_60) THEN 1 ELSE 0 END) as concreta_60_pagos,
		max(CASE WHEN (k.rut is not NULL) and (a.producto2='TC') 
		and (k.fecha BETWEEN a.fecha and a.dia_90) THEN 1 ELSE 0 END) as concreta_90_pagos,
		min(CASE WHEN (h.rut is not NULL) and (a.producto2='TC') 
		and (h.fecha BETWEEN a.fecha and a.dia_90) THEN TO_CHAR(h.fecha, 'yyyyMMdd')::integer ELSE 0 end) as fecha_concreta_epu,
		min(CASE WHEN (i.rut is not NULL) and (i.fecha BETWEEN a.fecha and a.dia_90) THEN TO_CHAR(i.fecha, 'yyyyMMdd')::integer ELSE 0 end) as fecha_concreta_log,
		--min(CASE WHEN a.producto2='TC' and (j1.rut is not null or j2.rut is not null) and 
		--j1.fecha BETWEEN a.fecha and a.dia_90 or j2.fecha BETWEEN a.fecha and a.dia_90) 
		--THEN coalesce(j1.fecha,j2.fecha) 
		--WHEN a.producto2='CV' and (j3.rut is not null ) and (j3.fecha BETWEEN a.fecha and a.dia_90 ) THEN j3.fecha 
		--WHEN  a.producto2='CTACTE' and (j4.rut is not null ) and (j4.fecha BETWEEN a.fecha and a.dia_90 ) 
		--THEN j4.fecha ELSE 0 end ) as fecha_concreta_retira_T,
		min(CASE WHEN k.rut is not NULL and (a.producto2='TC') 
		and k.fecha BETWEEN a.fecha and a.dia_90 THEN TO_CHAR(k.fecha, 'yyyyMMdd')::integer ELSE 0 end) as fecha_concreta_pagos
	FROM schm_workspace.clts_captados_3 AS a
	LEFT JOIN schm_workspace.clts_epu AS h ON
	(a.rut = h.rut)
	LEFT JOIN schm_workspace.clts_logeo_int AS i ON
	(a.rut = i.rut)
	--left join schm_workspace.retiro_plastico_tc_2 as j1 on(a.rut=j1.rut)
	--left join schm_workspace.RETIRO_PLASTICO_cdp_2 as j2 on(a.rut=j2.rut)
	--left join schm_workspace.retiro_ctacte_3 as j4 on(a.rut=j4.rut)
	--left join schm_workspace.retiro_debito_2  as j3 on(a.rut=j3.rut)	
	LEFT JOIN schm_workspace.clts_pagos AS k ON 
	(a.rut = k.rut)
	GROUP BY
	a.ind
	,a.rut
	,a.producto
	,a.fecha
	,a.codent
	,a.centalta
	,a.cuenta
	,a.nro_solicitud
	,a.id_oferta
	,a.cod_sucursal
	,a.via
	,a.dia_30
	,a.dia_60
	,a.dia_90
	,a.producto2
	,a.concreta_30_t
	,a.concreta_60_t
	,a.concreta_90_t
	,a.concreta_30_spos
	,a.concreta_60_spos
	,a.concreta_90_spos
	,a.concreta_30_tda
	,a.concreta_60_tda
	,a.concreta_90_tda
	,a.fecha_concreta_spos
	,a.fecha_concreta_tda
	;
	
--SELECT 'ANT' AS tipo, count(1) AS total FROM schm_workspace.clts_captados_3 UNION SELECT 'ACT' AS tipo, count(1) AS total FROM schm_workspace.clts_captados_4
	
	CREATE TABLE schm_workspace.enrolamiento AS 
	SELECT DISTINCT 
		substring(identificador_usuario,1,length(identificador_usuario)-1)::integer AS rut
		,inicio_enrolamiento AS fecha
		,to_char(inicio_enrolamiento,'YYYYMM')::INTEGER AS periodo
	FROM
		br_dm_prod_bigdata_idnow_db.reporte_enrolamientos
	WHERE
		periodo BETWEEN v_period AND to_char(date_add('month',4,to_date(v_period,'YYYYMMdd')),'YYYYmm')::int
		AND estado_final = 'R'
		AND rut IS NOT NULL
		AND sistema_operativo IN ('ANDROID', 'IOS')
	GROUP BY
		rut,
		inicio_enrolamiento
	;

--SELECT * FROM br_dm_prod_bigdata_idnow_db.reporte_enrolamientos LIMIT 100;
	
	
	CREATE TABLE schm_workspace.clts_captados_5 as 
	SELECT DISTINCT
	a.*,
	max(CASE WHEN h.rut is not null and h.fecha BETWEEN a.fecha and a.dia_30 THEN 1 ELSE 0 end) as concreta_30_RPASS,
	max(CASE WHEN h.rut is not null and h.fecha BETWEEN a.fecha and a.dia_60 THEN 1 ELSE 0 end ) as concreta_60_RPASS,
	max(CASE WHEN h.rut is not NULL and h.fecha BETWEEN a.fecha and a.dia_90 THEN 1 ELSE 0 end ) as concreta_90_RPASS,
	min(CASE WHEN h.rut is not null and h.fecha BETWEEN a.fecha	and a.dia_90 THEN TO_CHAR(h.fecha, 'yyyyMMdd')::integer ELSE 0 end ) as fecha_concreta_RPASS
	FROM schm_workspace.clts_captados_4 as a 
	LEFT JOIN schm_workspace.enrolamiento as h on(a.rut=h.rut)
	GROUP BY 
	a.ind
	,a.rut
	,a.producto
	,a.fecha
	,a.codent
	,a.centalta
	,a.cuenta
	,a.nro_solicitud
	,a.id_oferta
	,a.cod_sucursal
	,a.via
	,a.dia_30
	,a.dia_60
	,a.dia_90
	,a.producto2
	,a.concreta_30_t
	,a.concreta_60_t
	,a.concreta_90_t
	,a.concreta_30_spos
	,a.concreta_60_spos
	,a.concreta_90_spos
	,a.concreta_30_tda
	,a.concreta_60_tda
	,a.concreta_90_tda
	,a.fecha_concreta_spos
	,a.fecha_concreta_tda
	,a.concreta_30_epu
	,a.concreta_60_epu
	,a.concreta_90_epu
	,a.concreta_30_log
	,a.concreta_60_log
	,a.concreta_90_log
	,a.concreta_30_pagos
	,a.concreta_60_pagos
	,a.concreta_90_pagos
	,a.fecha_concreta_epu
	,a.fecha_concreta_log
	,a.fecha_concreta_pagos
	;
	

	/*primera compra spos*/
	CREATE TABLE schm_workspace.spos_fin_1 AS 
	SELECT
		DISTINCT a.*
	FROM
		schm_workspace.clts_spos AS a
	INNER JOIN schm_workspace.clts_captados_3 AS b
	ON (a.rut = b.rut) 
	AND (to_char(a.fecha, 'yyyyMMdd')::integer = b.fecha_concreta_SPOS) 
	WHERE b.producto2= 'TC'
	;
	
	--DROP TABLE IF EXISTS schm_workspace.spos_fin_2;
	CREATE TABLE schm_workspace.spos_fin_2 AS 
	SELECT
		a.*
		,'TC' AS producto2
	FROM
		schm_workspace.spos_fin_1 AS a
	INNER JOIN 
	(	SELECT
			rut,
			Fecha,
			min(Hora) AS hora
		FROM
			schm_workspace.spos_fin_1
		GROUP BY
			rut,
			fecha) AS b
	ON (a.rut = b.rut)
		AND (a.fecha = b.fecha)
		AND (a.hora = b.hora)
		--and (a.producto2=b.producto2)
	;
	

	CREATE TABLE schm_workspace.clts_captados_6 AS 
	SELECT
		DISTINCT 
	a.*,
		max(CASE WHEN b.rut IS NOT NULL THEN b.codact END) AS codact ,
		max(CASE WHEN b.rut IS NOT NULL THEN b.venta_tarjeta ELSE 0 END) AS venta_tarjeta_spos ,
		max(CASE WHEN b.rut IS NOT NULL THEN b.nombre_comercio END) AS nombre_comercio_spos
	FROM
		schm_workspace.clts_captados_5 AS a
	LEFT JOIN schm_workspace.spos_fin_2 AS b
	ON
		(a.rut = b.rut)
		AND (to_char(b.fecha,'yyyyMMdd')::integer = a.fecha_concreta_SPOS)
		AND (a.producto2 = b.producto2)
	GROUP BY
	a.ind
	,a.rut
	,a.producto
	,a.fecha
	,a.codent
	,a.centalta
	,a.cuenta
	,a.nro_solicitud
	,a.id_oferta
	,a.cod_sucursal
	,a.via
	,a.dia_30
	,a.dia_60
	,a.dia_90
	,a.producto2
	,a.concreta_30_t
	,a.concreta_60_t
	,a.concreta_90_t
	,a.concreta_30_spos
	,a.concreta_60_spos
	,a.concreta_90_spos
	,a.concreta_30_tda
	,a.concreta_60_tda
	,a.concreta_90_tda
	,a.fecha_concreta_spos
	,a.fecha_concreta_tda
	,a.concreta_30_epu
	,a.concreta_60_epu
	,a.concreta_90_epu
	,a.concreta_30_log
	,a.concreta_60_log
	,a.concreta_90_log
	,a.concreta_30_pagos
	,a.concreta_60_pagos
	,a.concreta_90_pagos
	,a.fecha_concreta_epu
	,a.fecha_concreta_log
	,a.fecha_concreta_pagos
	,a.concreta_30_rpass
	,a.concreta_60_rpass
	,a.concreta_90_rpass
	,a.fecha_concreta_rpass
	;
	
	
	CREATE TABLE schm_workspace.cod_camp AS   
		SELECT 
		camp_id_ofe_k,
		camp_cod_camp_fk,
		camp_rut_cli,
		camp_dv_cli,
		camp_cod_tip_prod,
		camp_cod_cnd_prod,
		camp_cod_ori_base
	FROM br_dm_prod_bigdata_camreport_db.cbcamp_mae_ofertas 
	WHERE CAMP_ID_OFE_K IN( SELECT id_oferta FROM schm_workspace.clts_captados_6 WHERE id_oferta IS NOT null)
	;
	
	/*
	CREATE TABLE cod_camp AS   
	SELECT 
	CAMP_ID_OFE_K,
	CAMP_COD_CAMP_FK,
	CAMP_RUT_CLI,
	CAMP_DV_CLI,
	CAMP_COD_TIP_PROD,
	CAMP_COD_CND_PROD,
	CAMP_COD_ORI_BASE 
	FROM CAMPHIS_ADM.cbcamp_mae_ofertas_HIST  
	where CAMP_ID_OFE_K in ( &Listado. )
	) A 
	;*/
	
	
	CREATE TABLE schm_workspace.planes_tbl_plan_cliente AS 
	SELECT *,
		substring(identificador_cliente, 1, length(identificador_cliente)-1)::integer AS rut   
	FROM br_dm_prod_bigdata_reporitf_db.planes_tbl_plan_cliente
	WHERE estado = 'ENABLED'
	;

	-- hacer delete e insert hacia la tabla clts_onboarding_3m, agregarle campo periodo para la eliminación de los 6 meses hacia atrás
	-- cada vez que corra deben correr los 6 meses hacia atrás
	CREATE TABLE schm_workspace.clts_onboarding_3m_paso AS 
		SELECT
	DISTINCT
		a.*,
		v_period_6 AS periodo,
		b.camp_cod_camp_fk AS cod_camp_oferta,
		b.camp_cod_tip_prod AS cod_tip_prod,
		b.camp_cod_cnd_prod AS cod_cnd_prod,
		b.camp_cod_ori_base,
	--c.detalle,
		CASE
		WHEN b.camp_cod_ori_base IN 
		('102', '108', '201', '207', '302') THEN 'NUEVO'
		ELSE 'REVIGENTEADO'
	END AS tipo_cliente,
		(CASE
		WHEN max(CASE WHEN a.concreta_30_SPOS>0 THEN 1 ELSE 0 END)= 1 THEN 'SPOS'
		ELSE ' '
	END || '-' ||
		CASE
		WHEN max(CASE WHEN a.concreta_30_tda>0 THEN 1 ELSE 0 END)= 1 THEN 'TDA'
		ELSE ' '
	END || '-' ||
		CASE
		WHEN max(CASE WHEN a.concreta_30_epu>0 THEN 1 ELSE 0 END)= 1 THEN 'EPU COBRO'
		ELSE ' '
	END || '-' ||
		CASE
		WHEN max(CASE WHEN a.concreta_30_log>0 THEN 1 ELSE 0 END)= 1 THEN 'LOGUEO'
		ELSE ' '
	END || '-' ||
		CASE
		WHEN max(CASE WHEN a.concreta_30_pagos>0 THEN 1 ELSE 0 END)= 1 THEN 'PAGOS'
		ELSE ' '
	END || '-' ||
		CASE
		WHEN max(CASE WHEN a.concreta_30_RPASS>0 THEN 1 ELSE 0 END)= 1 THEN 'RPASS'
		ELSE ' '
	END
	--CASE WHEN max(CASE WHEN concreta_30_retira_T>0 and COD_SUCURSAL=39 and VIA='HOMEBAN' THEN 1 ELSE 0 end)=1 THEN 'RETIRA TARJ' ELSE ' ' 
		) AS combinatoria,
		a.fecha_concreta_spos AS concreta_spos_sas, 
		a.fecha_concreta_tda AS concreta_tda_sas, 
		a.fecha_concreta_epu AS concreta_epu_sas, 
		a.fecha_concreta_log AS concreta_log_sas,
	--fecha_concreta_retira_T as concreta_retira_T_SAS, 
		a.fecha_concreta_pagos AS concreta_pagos_sas, 
		a.fecha_concreta_rpass AS concreta_rpass_sas,
		CASE
		WHEN a.fecha_concreta_SPOS>0 
		THEN EXTRACT(DAY FROM((a.fecha_concreta_spos::varchar)::date))
		ELSE 999
	END AS dias_SPOS,
		CASE
		WHEN a.fecha_concreta_tda>0 
		THEN EXTRACT(DAY FROM((a.fecha_concreta_tda::varchar)::date))
		ELSE 999
	END AS dias_tda,
		CASE
		WHEN a.fecha_concreta_epu>0 
		THEN EXTRACT(DAY FROM((a.fecha_concreta_epu::varchar)::date))
		ELSE 999
	END AS dias_epu,
		CASE
		WHEN a.fecha_concreta_log>0 
		THEN EXTRACT(DAY FROM((a.fecha_concreta_log::varchar)::date))
		ELSE 999
	END AS dias_log,
	--CASE WHEN fecha_concreta_retira_T>0 THEN EXTRACT(DAY FROM ((fecha_concreta_retira_T::varchar)::date)) ELSE 999 end as dias_RETIRA,
		CASE
		WHEN a.fecha_concreta_pagos>0 
		THEN EXTRACT(DAY FROM((a.fecha_concreta_pagos::varchar)::date))
		ELSE 999
	END AS dias_pagos,
		CASE
		WHEN a.fecha_concreta_RPASS>0 
		THEN EXTRACT(DAY FROM((a.fecha_concreta_RPASS::varchar)::date))
		ELSE 999
	END AS dias_RPASS,
		d.plan_id,
		CASE
		WHEN d.plan_id = 1 
		THEN 'PLAN LIGHT'
		WHEN d.plan_id = 2 THEN 'PLAN PRO'
		WHEN d.plan_id = 3 THEN 'PLAN BLACK'
		ELSE 'NO APLICA'
	END AS Plan
	FROM schm_workspace.clts_captados_6 AS a 
	LEFT JOIN schm_workspace.cod_camp AS b ON(a.id_oferta=b.CAMP_ID_OFE_K)
	--left join pmunoz.tipo_cliente_camp as c on(input(b.CAMP_COD_ORI_BASE,best.)=c.codigo)
	LEFT JOIN schm_workspace.planes_tbl_plan_cliente AS d ON(a.rut=d.rut)
	GROUP BY
	a.ind
	,a.rut
	,a.producto
	,a.fecha
	,a.codent
	,a.centalta
	,a.cuenta
	,a.nro_solicitud
	,a.id_oferta
	,a.cod_sucursal
	,a.via
	,a.dia_30
	,a.dia_60
	,a.dia_90
	,a.producto2
	,a.concreta_30_t
	,a.concreta_60_t
	,a.concreta_90_t
	,a.concreta_30_spos
	,a.concreta_60_spos
	,a.concreta_90_spos
	,a.concreta_30_tda
	,a.concreta_60_tda
	,a.concreta_90_tda
	,a.fecha_concreta_spos
	,a.fecha_concreta_tda
	,a.concreta_30_epu
	,a.concreta_60_epu
	,a.concreta_90_epu
	,a.concreta_30_log
	,a.concreta_60_log
	,a.concreta_90_log
	,a.concreta_30_pagos
	,a.concreta_60_pagos
	,a.concreta_90_pagos
	,a.fecha_concreta_epu
	,a.fecha_concreta_log
	,a.fecha_concreta_pagos
	,a.concreta_30_rpass
	,a.concreta_60_rpass
	,a.concreta_90_rpass
	,a.fecha_concreta_rpass
	,a.codact
	,a.venta_tarjeta_spos
	,a.nombre_comercio_spos
	,b.camp_cod_camp_fk
	,b.camp_cod_tip_prod
	,b.camp_cod_cnd_prod
	,b.camp_cod_ori_base
	,d.plan_id
	,v_period_6
	;

	DELETE FROM schm_data_analytics.clts_onboarding_3m WHERE periodo >= v_period_6;


	INSERT INTO schm_data_analytics.clts_onboarding_3m
	SELECT *
	FROM schm_workspace.clts_onboarding_3m_paso
	WHERE periodo = v_period_6; 
	
	

	DROP TABLE IF EXISTS schm_workspace.clts_captados;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_2;
	DROP TABLE IF EXISTS schm_workspace.clts_spos; --spos_fin
	DROP TABLE IF EXISTS schm_workspace.clts_movimientos_debito; --spos_cv_cc
	DROP TABLE IF EXISTS schm_workspace.clts_tda;
	DROP TABLE IF EXISTS schm_workspace.clts_logeo_int;
	DROP TABLE IF EXISTS schm_workspace.clts_epu;
	DROP TABLE IF EXISTS schm_workspace.clts_pagos;
	DROP TABLE IF EXISTS schm_workspace.clts_mov_tda_spos;
	DROP TABLE IF EXISTS schm_workspace.retiro_plastico_tc;
	DROP TABLE IF EXISTS schm_workspace.retiro_plastico_cdp;
	DROP TABLE IF EXISTS schm_workspace.retiro_debito;
	DROP TABLE IF EXISTS schm_workspace.curse_cc;
	DROP TABLE IF EXISTS schm_workspace.base_limpio;
	DROP TABLE IF EXISTS schm_workspace.retiro_ctacte1;
	DROP TABLE IF EXISTS schm_workspace.retiro_ctacte_2;
	DROP TABLE IF EXISTS schm_workspace.retiro_plastico_tc_2;
	DROP TABLE IF EXISTS schm_workspace.retiro_plastico_cdp_2;
	DROP TABLE IF EXISTS schm_workspace.retiro_ctacte_3;
	DROP TABLE IF EXISTS schm_workspace.retiro_debito_2;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_3;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_4;
	DROP TABLE IF EXISTS schm_workspace.enrolamiento;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_5;
	DROP TABLE IF EXISTS schm_workspace.spos_fin_1;
	DROP TABLE IF EXISTS schm_workspace.spos_fin_2;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_6;
	DROP TABLE IF EXISTS schm_workspace.cod_camp;
	DROP TABLE IF EXISTS schm_workspace.planes_tbl_plan_cliente;
	DROP TABLE IF EXISTS schm_workspace.clts_onboarding_3m_paso;
	DROP TABLE IF EXISTS schm_workspace.clts_colapso;

END;




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sj_test_onb_3m_2(v_period_6 int4)
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN


DROP TABLE IF EXISTS  schm_workspace.clts_colapso_sj;

CREATE TABLE schm_workspace.clts_colapso_sj AS
		SELECT 
		v_period_6 AS periodo,
		producto,
		tipo_cliente,
		combinatoria,
		CASE
			WHEN cod_sucursal = 39
			AND via = 'HOMEBAN' THEN 'DIGITAL'
		ELSE 'PRESENCIAL' END AS tipo_captacion,
		count(rut) AS captados,
		sum(concreta_30_t) AS con_30_t,
		sum(concreta_60_t) AS con_60_t,
		sum(concreta_90_t) AS con_90_t,
		con_60_t- con_30_t AS con_t_diff1, 
		con_90_t- con_60_t AS con_t_diff2, 
		sum(concreta_30_spos) AS con_30_spos,
		sum(concreta_60_spos) AS con_60_spos,
		sum(concreta_90_spos) AS con_90_spos,
		con_60_spos- con_30_spos AS con_spos_diff1, 
		con_90_spos- con_60_spos AS con_spos_diff2,
		sum(concreta_30_tda) AS con_30_tda,
		sum(concreta_60_tda) AS con_60_tda,
		sum(concreta_90_tda) AS con_90_tda,
		con_60_tda- con_30_tda AS con_tda_diff1, 
		con_90_tda- con_60_tda AS con_tda_diff2,
		count(CASE WHEN concreta_30_tda>0 AND concreta_30_spos>0 THEN rut END) AS con_30_tda_spos,
		count(CASE WHEN concreta_60_tda>0 AND concreta_60_spos>0 THEN rut END) AS con_60_tda_spos,
		count(CASE WHEN concreta_90_tda>0 AND concreta_90_spos>0 THEN rut END) AS con_90_tda_spos,
		con_60_tda_spos- con_30_tda_spos AS con_tda_spos_diff1, 
		con_90_tda_spos- con_60_tda_spos AS con_tda_spos_diff2,
		count(CASE WHEN concreta_30_tda>0 AND concreta_30_spos = 0 THEN rut END) AS con_30_solo_tda,
		count(CASE WHEN concreta_60_tda>0 AND concreta_60_spos = 0 THEN rut END) AS con_60_solo_tda,
		count(CASE WHEN concreta_90_tda>0 AND concreta_90_spos = 0 THEN rut END) AS con_90_solo_tda,
		con_60_solo_tda- con_30_solo_tda AS con_solo_tda_diff1, 
		con_90_solo_tda- con_60_solo_tda AS con_solo_tda_diff2,
		count(CASE WHEN concreta_30_tda = 0 AND concreta_30_spos>0 THEN rut END) AS con_30_solo_spos,
		count(CASE WHEN concreta_60_tda = 0 AND concreta_60_spos>0 THEN rut END) AS con_60_solo_spos,
		count(CASE WHEN concreta_90_tda = 0 AND concreta_90_spos>0 THEN rut END) AS con_90_solo_spos,
		con_60_solo_spos- con_30_solo_spos AS con_solo_spos_diff1, 
		con_90_solo_spos- con_60_solo_spos AS con_solo_spos_diff2,
		sum(concreta_30_epu) AS con_30_epu,
		sum(concreta_60_epu) AS con_60_epu,
		sum(concreta_90_epu) AS con_90_epu,
		con_60_epu- con_30_epu AS con_epu_diff1, 
		con_90_epu- con_60_epu AS con_epu_diff2,
		sum(concreta_30_log) AS con_30_log,
		sum(concreta_60_log) AS con_60_log,
		sum(concreta_90_log) AS con_90_log,
		con_60_log- con_30_log AS con_log_diff1, 
		con_90_log- con_60_log AS con_log_diff2,
		--sum(case when cod_sucursal=39 and 	via='homeban' then concreta_30_retira_t else 0 end) as con_30_retira_t,
		--sum(case when cod_sucursal=39 and 	via='homeban' then  concreta_60_retira_t else 0 end) as con_60_retira_t,
		--sum(case when cod_sucursal=39 and 	via='homeban' then concreta_90_retira_t else 0 end) as con_90_retira_t,
		--con_60_retira_t- con_30_retira_t as con_retira_t_diff1, 
		--con_90_retira_t- con_60_retira_t as con_retira_t_diff2,
		sum(concreta_30_pagos) AS con_30_pagos,
		sum(concreta_60_pagos) AS con_60_pagos,
		sum(concreta_90_pagos) AS con_90_pagos,
		con_60_pagos- con_30_pagos AS con_pagos_diff1, 
		con_90_pagos- con_60_pagos AS con_pagos_diff2,
		sum(concreta_30_rpass) AS con_30_rpass,
		sum(concreta_60_rpass) AS con_60_rpass,
		sum(concreta_90_rpass) AS con_90_rpass,
		con_60_rpass- con_30_rpass AS con_rpass_diff1, 
		con_90_rpass- con_60_rpass AS con_rpass_diff2,
		0 AS con_30_retira_t,
		0 AS con_60_retira_t,
		0 AS con_90_retira_t,
		0 AS con_retira_t_diff1,
		0 AS con_retira_t_diff2,
		'00.NO APLICA' AS dias_retira,
		CASE
			WHEN dias_spos <= 30
			AND dias_spos<10 THEN '0' || dias_spos || '.' || dias_spos
			WHEN dias_spos <= 30
			AND dias_spos >= 10 THEN dias_spos || '.' || dias_spos
			WHEN dias_spos BETWEEN 31 AND 40 THEN '31.[31,40]'
			WHEN dias_spos BETWEEN 41 AND 50 THEN '32.[41,50]'
			WHEN dias_spos BETWEEN 51 AND 60 THEN '33.[51,60]'
			WHEN dias_spos BETWEEN 61 AND 70 THEN '34.[61,70]'
			WHEN dias_spos BETWEEN 71 AND 80 THEN '35.[71,80]'
			WHEN dias_spos BETWEEN 81 AND 70 THEN '36.[81,90]'
			ELSE '00.NO APLICA'
		END AS dias_spos,
		CASE
			WHEN dias_tda <= 30
			AND dias_tda<10 THEN '0' || dias_tda || '.' || dias_tda
			WHEN dias_tda <= 30
			AND dias_tda >= 10 THEN dias_tda || '.' || dias_tda
			WHEN dias_tda BETWEEN 31 AND 40 THEN '31.[31,40]'
			WHEN dias_tda BETWEEN 41 AND 50 THEN '32.[41,50]'
			WHEN dias_tda BETWEEN 51 AND 60 THEN '33.[51,60]'
			WHEN dias_tda BETWEEN 61 AND 70 THEN '34.[61,70]'
			WHEN dias_tda BETWEEN 71 AND 80 THEN '35.[71,80]'
			WHEN dias_tda BETWEEN 81 AND 70 THEN '36.[81,90]'
			ELSE '00.NO APLICA'
		END AS dias_tda,
		CASE
			WHEN dias_epu <= 30
			AND dias_epu<10 THEN '0' || dias_epu || '.' || dias_epu
			WHEN dias_epu <= 30
			AND dias_epu >= 10 THEN dias_epu || '.' || dias_epu
			WHEN dias_epu BETWEEN 31 AND 40 THEN '31.[31,40]'
			WHEN dias_epu BETWEEN 41 AND 50 THEN '32.[41,50]'
			WHEN dias_epu BETWEEN 51 AND 60 THEN '33.[51,60]'
			WHEN dias_epu BETWEEN 61 AND 70 THEN '34.[61,70]'
			WHEN dias_epu BETWEEN 71 AND 80 THEN '35.[71,80]'
			WHEN dias_epu BETWEEN 81 AND 70 THEN '36.[81,90]'
			ELSE '00.NO APLICA'
		END AS dias_epu,
		CASE
			WHEN dias_log <= 30
			AND dias_log<10 THEN '0' || dias_log || '.' || dias_log
			WHEN dias_log <= 30
			AND dias_log >= 10 THEN dias_log || '.' || dias_log
			WHEN dias_log BETWEEN 31 AND 40 THEN '31.[31,40]'
			WHEN dias_log BETWEEN 41 AND 50 THEN '32.[41,50]'
			WHEN dias_log BETWEEN 51 AND 60 THEN '33.[51,60]'
			WHEN dias_log BETWEEN 61 AND 70 THEN '34.[61,70]'
			WHEN dias_log BETWEEN 71 AND 80 THEN '35.[71,80]'
			WHEN dias_log BETWEEN 81 AND 70 THEN '36.[81,90]'
			ELSE '00.NO APLICA'
		END AS dias_log,
	--case when dias_retira<=30 and dias_retira<10 then '0'||dias_retira||'.'||dias_retira
	--when dias_retira<=30 and dias_retira>=10 then dias_retira||'.'||dias_retira
	--when dias_retira between 31 and 40 then  '31.[31,40]'
	--when dias_retira between 41 and 50 then  '32.[41,50]'
	--when dias_retira between 51 and 60 then  '33.[51,60]'
	--when dias_retira between 61 and 70 then  '34.[61,70]'
	--when dias_retira between 71 and 80 then  '35.[71,80]'
	--when dias_retira between 81 and 70 then  '36.[81,90]'
	--else '00.no aplica' end as dias_retira,
		CASE
			WHEN dias_pagos <= 30
			AND dias_pagos<10 THEN '0' || dias_pagos || '.' || dias_pagos
			WHEN dias_pagos <= 30
			AND dias_pagos >= 10 THEN dias_pagos || '.' || dias_pagos
			WHEN dias_pagos BETWEEN 31 AND 40 THEN '31.[31,40]'
			WHEN dias_pagos BETWEEN 41 AND 50 THEN '32.[41,50]'
			WHEN dias_pagos BETWEEN 51 AND 60 THEN '33.[51,60]'
			WHEN dias_pagos BETWEEN 61 AND 70 THEN '34.[61,70]'
			WHEN dias_pagos BETWEEN 71 AND 80 THEN '35.[71,80]'
			WHEN dias_pagos BETWEEN 81 AND 70 THEN '36.[81,90]'
			ELSE '00.NO APLICA'
		END AS dias_pagos,
		CASE
			WHEN dias_rpass <= 30
			AND dias_rpass<10 THEN '0' || dias_rpass || '.' || dias_rpass
			WHEN dias_rpass <= 30
			AND dias_rpass >= 10 THEN dias_rpass || '.' || dias_rpass
			WHEN dias_rpass BETWEEN 31 AND 40 THEN '31.[31,40]'
			WHEN dias_rpass BETWEEN 41 AND 50 THEN '32.[41,50]'
			WHEN dias_rpass BETWEEN 51 AND 60 THEN '33.[51,60]'
			WHEN dias_rpass BETWEEN 61 AND 70 THEN '34.[61,70]'
			WHEN dias_rpass BETWEEN 71 AND 80 THEN '35.[71,80]'
			WHEN dias_rpass BETWEEN 81 AND 70 THEN '36.[81,90]'
			ELSE '00.NO APLICA'
		END AS dias_rpass,
		CASE
			WHEN venta_tarjeta_spos>0 THEN COALESCE(b.rubro_gestion,'OTROS RUBROS SPOS')
			ELSE 'NO APLICA'
		END AS rubro_spos,
		sum(venta_tarjeta_spos) AS monto_spos,
		nombre_comercio_spos,
		plan_id,
		plan
	FROM schm_data_analytics.clts_onboarding_3m as a 
	left JOIN (SELECT cod_act, max(categorias_ripley) as rubro_gestion
	FROM br_dm_prod_bigdata_sasdata_db.sas_tabla_arbol /*Tabla de asignacion de rubros*/
	group by 
	cod_act) as b
	on(a.codact=b.cod_act)
	WHERE periodo = v_period_6
	group by 
	periodo,
	producto,
	tipo_cliente,
	tipo_captacion,
	combinatoria,
	plan_id,
	plan,
	dias_spos,
	dias_tda,
	dias_epu,
	dias_log,
	--dias_retira,
	dias_pagos,
	dias_rpass,
	rubro_spos,
	nombre_comercio_spos
	;


END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_bitr_act_tr(v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
	
	

BEGIN

	DROP TABLE IF EXISTS schm_workspace.actividad_tr;
	DROP TABLE IF EXISTS schm_workspace.actividad_tr_ini;
	DROP TABLE IF EXISTS schm_workspace.actividad_tr2b;
	DROP TABLE IF EXISTS schm_workspace.actividad_tr3;
	DROP TABLE IF EXISTS schm_workspace.actividad_tr3b;
	DROP TABLE IF EXISTS schm_workspace.uso_spos;
	DROP TABLE IF EXISTS schm_workspace.trxs_spos;
	DROP TABLE IF EXISTS schm_workspace.uso_spos_cc;
	DROP TABLE IF EXISTS schm_workspace.trxs_spos_cc;
	DROP TABLE IF EXISTS schm_workspace.uso_tda;
	DROP TABLE IF EXISTS schm_workspace.trxs_tda;
	DROP TABLE IF EXISTS schm_workspace.uso_som;
	DROP TABLE IF EXISTS schm_workspace.trxs_seguros;
	DROP TABLE IF EXISTS schm_workspace.uso_av;
	DROP TABLE IF EXISTS schm_workspace.trxs_av;
	DROP TABLE IF EXISTS schm_workspace.uso_sav;
	DROP TABLE IF EXISTS schm_workspace.trxs_sav;
	DROP TABLE IF EXISTS schm_workspace.rutero_movs_tc_i;
	DROP TABLE IF EXISTS schm_workspace.rutero_movs_tc_c2;
	DROP TABLE IF EXISTS schm_workspace.rutero_movs_tc_c;
	DROP TABLE IF EXISTS schm_workspace.actividad_tr2;
	DROP TABLE IF EXISTS schm_workspace.contrato_rut;
	DROP TABLE IF EXISTS schm_workspace.contrato_rut2 ;
	DROP TABLE IF EXISTS schm_workspace.actividad_tr3;
	DROP TABLE IF EXISTS schm_workspace.actividad_tr4;
	DROP TABLE IF EXISTS schm_data_analytics.bitr_actividad_tr_revision;

	--------------------------------------------------------------------------------------------------
	-- [01.0] trear toda la venta de los ultimos 36 meses
	--------------------------------------------------------------------------------------------------
	--Se trae los VU del Periodo
	CREATE TABLE schm_workspace.actividad_tr_ini AS
	SELECT
		rut
		,CASE 
			WHEN vu_c='VU' THEN 1 
			ELSE 0 
		 END AS vu_riesgo
		,vu_c AS marca_riesgo
		,vu_c_prima AS vu_c_prima
		,saldo_insoluto AS saldo_contable
		,0 AS saldo_ff_contable
		,COALESCE(saldos,0) AS saldo_total
		,marca_base
		,periodo
	FROM br_dm_prod_bigdata_mis_db.vu
	WHERE periodo = (schm_artifacts.f_period_add_n_months((v_periodo+1),-1));

	--Rutero de Spos despues del 202210, se usara el cierre generado por BI
	CREATE TABLE schm_workspace.uso_spos AS
	SELECT
		rut
		,periodo
		,(SUM(venta_tarjeta)) AS sum_monto
	FROM schm_data_analytics.spos_aut
	WHERE periodo <= (schm_artifacts.f_period_add_n_months((v_periodo+1),-1))
		AND periodo>=(schm_artifacts.f_period_add_n_months((v_periodo+1),-36))
		AND periodo>=202210
	GROUP BY rut, periodo
	;

	CREATE TABLE schm_workspace.trxs_spos AS
	SELECT
		a.rut
		,a.periodo
		,a.fecha
		,a.venta_tarjeta AS monto
	FROM schm_data_analytics.spos_aut  a
		INNER JOIN schm_workspace.uso_spos b
		ON (a.rut=b.rut AND a.periodo=b.periodo AND b.sum_monto>0)
	;

	--Rutero de Spos antes del 202210, cambia a cierre de Control Comercial
	CREATE TABLE schm_workspace.uso_spos_cc AS
	SELECT
		rut_cliente AS rut
		,periodo
		,(SUM(venta_tarjeta)) AS sum_monto
	FROM schm_data_analytics.spos_autom
	WHERE periodo <= (schm_artifacts.f_period_add_n_months((v_periodo+1),-1))
		AND periodo>=(schm_artifacts.f_period_add_n_months((v_periodo+1),-36))
		AND periodo<202210
	GROUP BY rut_cliente, periodo
	;

	CREATE TABLE schm_workspace.trxs_spos_cc AS
	SELECT
		a.rut_cliente AS rut
		,a.periodo
		,a.fecha_trunc AS fecha
		,a.venta_tarjeta AS monto
	FROM schm_data_analytics.spos_autom  a
		INNER JOIN schm_workspace.uso_spos_cc b
		ON (a.rut_cliente=b.rut AND a.periodo=b.periodo AND b.sum_monto>0)
;

	--Rutero de TDA  aun no esta en AWS
	CREATE TABLE schm_workspace.uso_tda AS
	SELECT
		rut
		,periodo
		,(SUM(capital+pie)) AS sum_monto
	FROM schm_data_analytics.tnda_tda_itf
	WHERE periodo <= (schm_artifacts.f_period_add_n_months((v_periodo+1),-1))
		AND periodo>=(schm_artifacts.f_period_add_n_months((v_periodo+1),-36))
	GROUP BY rut, periodo
	;

	CREATE TABLE schm_workspace.trxs_tda AS
	SELECT
		a.rut
		,a.periodo
		,fecha
		,a.capital AS monto
	FROM schm_data_analytics.tnda_tda_itf a
		INNER JOIN schm_workspace.uso_tda b
		ON (a.rut=b.rut AND a.periodo=b.periodo AND b.sum_monto>0)
;

	--Rutero de Seguro
	CREATE TABLE schm_workspace.uso_som AS
	SELECT
		rut
		,periodo
		,(SUM(monto_recaudado)) AS sum_monto
		FROM schm_data_analytics.spos_trx_seguros
	WHERE periodo <= (schm_artifacts.f_period_add_n_months((v_periodo+1),-1))
		AND periodo>=(schm_artifacts.f_period_add_n_months((v_periodo+1),-36))
	GROUP BY rut, periodo
	;

	CREATE TABLE schm_workspace.trxs_seguros AS
	SELECT
		a.rut
		,a.periodo
		,a.fecmov
		,a.monto_recaudado AS monto
	FROM schm_data_analytics.spos_trx_seguros a
		INNER JOIN schm_workspace.uso_som b
		ON (a.rut=b.rut AND a.periodo=b.periodo AND b.sum_monto>0)
		AND a.tipo_seguro='SEGUROS OPEN MARKET' AND a.codconrec NOT IN ('S201','S083','170')
	;

	--Rutero de AV
	CREATE TABLE schm_workspace.uso_av AS
	SELECT
		rut
		,periodo
		,(SUM(capital)) AS sum_monto
	FROM schm_data_analytics.ppff_trx_av
	WHERE periodo <= (schm_artifacts.f_period_add_n_months((v_periodo+1),-1))
		AND periodo>=(schm_artifacts.f_period_add_n_months((v_periodo+1),-36))
	GROUP BY rut, periodo
	;

	CREATE TABLE schm_workspace.trxs_av AS
	SELECT
		a.rut
		,a.periodo
		,a.FECFAC AS fecha
		,a.capital AS monto
	FROM schm_data_analytics.ppff_trx_av a
		INNER JOIN schm_workspace.USO_AV b
		ON (a.rut=b.rut AND a.periodo=b.periodo AND b.sum_monto>0)
	;

	--Rutero de SAV
	CREATE TABLE schm_workspace.uso_sav AS
	SELECT
		rut
		,periodo
		,(SUM(capital)) AS sum_monto
	FROM schm_data_analytics.ppff_trx_sav
	WHERE periodo <= (schm_artifacts.f_period_add_n_months((v_periodo+1),-1))
		AND periodo>=(schm_artifacts.f_period_add_n_months((v_periodo+1),-36))
	GROUP BY rut, periodo
	;

	CREATE TABLE schm_workspace.trxs_sav AS
	SELECT
		a.rut
		,a.periodo
		,a.fecfac AS fecha
		,a.capital AS monto
	FROM schm_data_analytics.ppff_trx_sav a
		INNER JOIN schm_workspace.uso_sav b
		ON (a.rut=b.rut AND a.periodo=b.periodo AND b.sum_monto>0)
	;

	--Unificar todos los ruteros en un unico rutero de la iteracion (_I)
	CREATE TABLE schm_workspace.rutero_movs_tc_i AS
	SELECT
		rut
		,periodo
		,1 AS f_meses
		,MAX(fecha) AS max_fecha
	FROM (
		SELECT  * FROM schm_workspace.trxs_spos 
			UNION
		SELECT  * FROM schm_workspace.trxs_spos_cc 
			UNION
		SELECT  * FROM schm_workspace.trxs_tda
			UNION
		SELECT  * FROM schm_workspace.trxs_seguros
			UNION
		SELECT  * FROM schm_workspace.trxs_av
			UNION
		SELECT  * FROM schm_workspace.trxs_sav
	) AS x
	GROUP BY rut, periodo
	;

	--Crear tabla de paso intermedia, unificando consolidado con Iteracion
	CREATE TABLE schm_workspace.rutero_movs_tc_c2 AS
	SELECT
		rut
		,SUM(f_meses) AS f_meses
		,MAX(periodo) AS max_periodo
		,MAX(max_fecha) AS max_fecha
	FROM (
		SELECT  *
		FROM schm_workspace.rutero_movs_tc_i
	) AS x
	GROUP BY rut
	;

	--------------------------------------------------------------------------------------------------
	-- [02.2] Calcular otros indicadores (Fechas y Recencias)
	--------------------------------------------------------------------------------------------------
	CREATE TABLE schm_workspace.rutero_movs_tc_c AS
	SELECT
		rut
		,f_meses
		,max_fecha
		,max_periodo
		/*,DATEDIFF(months,max_fecha,schm_artifacts.f_first_day(GETDATE()::DATE)-1) AS r_meses*/
		,DATEDIFF(months,max_fecha,schm_artifacts.f_last_day_given_period(v_periodo)) AS r_meses
	FROM schm_workspace.rutero_movs_tc_c2
	;

	--------------------------------------------------------------------------------------------------
	-- [02.3] Pegar indicadores
	--------------------------------------------------------------------------------------------------
	CREATE TABLE schm_workspace.actividad_tr2 AS
	SELECT
		a.*
		,DATE_PART(year,b.max_fecha)*10000+DATE_PART(month,b.max_fecha)*100+DATE_PART(day,b.max_fecha) AS fecha_aaaammdd_ult_compra
		,b.max_periodo AS periodo_ult_compra
		,b.max_fecha AS fecha_ult_compra
		,b.r_meses AS recencia_tr
		,b.f_meses AS frecuencia
	FROM schm_workspace.actividad_tr_ini AS a
		LEFT JOIN schm_workspace.rutero_movs_tc_c AS b
		ON a.rut=b.rut
	;

	--==================================================================================================
	-- [03] Agregar/Calcular otras variables/indicadores/marcas
	--==================================================================================================
	----------------------------------------------------------------------------------------------------
	-- [03.1] Agregar P_Aprobacion y P_Activacion
	----------------------------------------------------------------------------------------------------
	--Cruzar tablas creando Tabla unificada
	CREATE TABLE schm_workspace.contrato_rut AS
	SELECT
		a.codent
		,a.cuenta
		,a.centalta
		,c.pemid_gls_nro_dct_ide_k AS rut
		,CASE
			WHEN a.fecalta::VARCHAR(10)<>'0001-12-30' then A.fecalta
			end AS fecalta --Fecha de alta de la cuenta de tarjeta--> revisar si esta bien el formato
		,CASE
			WHEN b.fecacuser::VARCHAR(10)<>'0001-12-30' then B.fecacuser
			end AS fecacuser --Fecha acuse de recibo
	FROM br_dm_prod_bigdata_reporitf_db.mpdt007 AS a
		LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt008 AS b
		ON a.codent=b.codent AND a.centalta=b.centalta AND a.cuenta=b.cuenta
		LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide AS c
		ON CAST(a.identcli AS BIGINT) = c.pemid_nro_inn_ide
	;

	--Agrupar a Nivel de rut Unico calculando Variables
	CREATE TABLE schm_workspace.contrato_rut2 AS
	SELECT
		rut
		/*,MIN(CASE WHEN schm_artifacts.f_period(fecalta::DATE)<=schm_artifacts.f_period(schm_artifacts.f_first_day(GETDATE()::DATE)-1) then schm_artifacts.f_period(fecalta::DATE) END) AS p_aprobacion*/
		,MIN(CASE WHEN schm_artifacts.f_period(fecalta::DATE)<=v_periodo then schm_artifacts.f_period(fecalta::DATE) END) AS p_aprobacion
		/*,MIN(CASE WHEN schm_artifacts.f_period(fecacuser::DATE)<=schm_artifacts.f_period(schm_artifacts.f_first_day(GETDATE()::DATE)-1) then schm_artifacts.f_period(fecacuser::DATE) END) AS p_activacion*/
		,MIN(CASE WHEN schm_artifacts.f_period(fecacuser::DATE)<=v_periodo then schm_artifacts.f_period(fecacuser::DATE) END) AS p_activacion
	FROM schm_workspace.contrato_rut
	GROUP BY rut
	;

	--Pegar en tabla
	CREATE TABLE schm_workspace.actividad_tr2b AS
	SELECT
		a.*
		,b.p_aprobacion
		,b.p_activacion
	FROM schm_workspace.actividad_tr2 AS a
	LEFT JOIN schm_workspace.contrato_rut2 AS b
	ON a.rut=b.rut
	;

	----------------------------------------------------------------------------------------------------;
	-- [03.2] Calcular Marca de Actividad;
	----------------------------------------------------------------------------------------------------;
	CREATE TABLE schm_workspace.actividad_tr3 AS
	SELECT
		*
		,CASE
			WHEN COALESCE(recencia_tr,999)<=2  THEN 'ACTIVO' --ultimos 3 meses
			WHEN COALESCE(recencia_tr,999)<=11 THEN 'SEMIACTIVO' --ultimos 12 meses
			WHEN COALESCE(recencia_tr,999)<=23 THEN 'DORMIDO BLANDO' --ultimos 24 meses
			WHEN COALESCE(saldo_contable,0)>0  THEN 'OTROS CON SALDO' --con saldo >0
			WHEN (COALESCE(periodo_ult_compra,0)=0 or (COALESCE(periodo_ult_compra,0))<(COALESCE(p_aprobacion,0) ))
				AND  p_aprobacion>=200804 --Por que???!!
				AND  p_activacion>=(schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(GETDATE()::DATE),-12))
				AND  p_activacion<=(schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(GETDATE()::DATE),-1))
				--en ultimos 12 meses
				THEN 'NUEVO SIN USO'
			WHEN periodo_ult_compra IS NULL
				AND  p_activacion>=(schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(GETDATE()::DATE),-12))
				AND  p_activacion<=(schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(GETDATE()::DATE),-1))
				--en ultimos 12 meses
				THEN 'NUEVO SIN USO'
			WHEN COALESCE(periodo_ult_compra,0)=0
				AND  p_activacion IS NULL
				AND  p_aprobacion>=(schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(GETDATE()::DATE),-12))
				AND  p_aprobacion<=(schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(GETDATE()::DATE),-1))
				--en ultimos 12 meses
				THEN 'NUEVO SIN USO'
			WHEN COALESCE(periodo_ult_compra,0)<>0 THEN 'DORMIDO DURO' --No hay ventana de tiempo para dormido duro
				--else 'ANTIGUO SIN USO' -->valor por default de proceso antiguo
				ELSE 'DORMIDO DURO' --valor por default
		END AS actividad_tr
	FROM schm_workspace.actividad_tr2B
	;

	--El "CASE when" anterior es exacto al del proceso original (no ha sido optimizado)
	--Notar que la diferencia entre el "dormido duro" y el "antiguo sin uso" es practicamente nula
	--no hay un corte de recencia claramente definido para diferenciar ambas marcas
	--El dormido duro, por definicion, es aquel sin movimientos en los ultimos 2 años
	--Para efectos practicos se dejara una sola marca (dormido duro)

	--------------------------------------------------------------------------------------------------;
	-- [03.3] Calcular Marca de VU_IC;
	--------------------------------------------------------------------------------------------------;
	CREATE TABLE schm_workspace.actividad_tr3b AS
	SELECT
		*
		,CASE
			WHEN actividad_tr IN ('ACTIVO','SEMIACTIVO','OTROS CON SALDO','DORMIDO BLANDO')
			AND vu_riesgo=1
			THEN 1
			ELSE 0
		END AS vu_ic --es un VU con movimientos en los ultimos 2 años
	FROM schm_workspace.actividad_tr3
	;

	--------------------------------------------------------------------------------------------------
	-- [03.4] Pegar Observacion desde Marca Riesgo del Periodo Correspondiente
	--------------------------------------------------------------------------------------------------
	--desde 201907 donde hay tablas de marca riesgo,hacia atras habria que sacarlo de publicin.ACT_TR_',&Periodo,'
	CREATE TABLE schm_workspace.actividad_tr4 AS
	SELECT
		a.*
		,b.observacion
	FROM schm_workspace.actividad_tr3b AS a
		LEFT JOIN schm_data_analytics.bitr_marca_riesgo AS b
		ON (a.rut = b.rut AND b.periodo = (schm_artifacts.f_period_add_n_months((v_periodo+1),-1)))
	;

	--==================================================================================================;
	-- [04] Guardar Tabla entregable en formato correspondiente;
	--==================================================================================================;
	--------------------------------------------------------------------------------------------------;
	-- [04.1] Guardar Actividad en Tabla entregable con campos en orden;
	--------------------------------------------------------------------------------------------------;
    DELETE
        FROM schm_data_analytics.bitr_actividad_tr
    WHERE
        periodo = v_periodo;

    INSERT INTO schm_data_analytics.bitr_actividad_tr
        (act_tr,rut,vu_riesgo,vu_ic,vu_c_prima,actividad_tr,marca_cartera,marca_riesgo,fecha_aaaammdd_ult_compra,periodo_ult_compra,fecha_ult_compra,p_aprobacion,p_activacion,saldo_contable,saldo_ff_contable,saldo_total,imprime_tr,marca_base,recencia_tr,frecuencia,observacion,periodo)
    SELECT 
		'1' AS act_tr
		,rut
		,vu_riesgo
		,vu_ic
		,vu_c_prima
		,actividad_tr
		,0 AS marca_cartera
		,marca_riesgo
		,fecha_aaaammdd_ult_compra
		,periodo_ult_compra
		,fecha_ult_compra
		,p_aprobacion
		,p_activacion
		,saldo_contable
		,saldo_ff_contable
		,saldo_total
		,0 AS imprime_tr
		,marca_base
		,recencia_tr
		,frecuencia
		,observacion
		,(schm_artifacts.f_period_add_n_months((v_periodo+1),-1)) AS periodo
	FROM schm_workspace.actividad_tr4
    ;
   
	--------------------------------------------------------------------------------------------------;
	-- [04.2] Guardar Tabla de Validacion/revision resultados Actividad;
	--------------------------------------------------------------------------------------------------;
	CREATE TABLE schm_data_analytics.bitr_actividad_tr_revision AS
	SELECT
		v_periodo
		,COALESCE(vu_riesgo,0) AS vu_riesgo
		,COALESCE(vu_ic,0) AS vu_ic
		,COALESCE(vu_c_prima,'0') AS vu_c_prima
		,actividad_tr
		,marca_riesgo
		,CASE WHEN COALESCE(recencia_tr,999)=0 THEN 1 ELSE 0 END AS con_uso_mes
		,CASE WHEN saldo_contable>0 THEN 1 ELSE 0 END AS con_saldo
		,CASE WHEN marca_base LIKE ('%TAM%') THEN 'TAM' ELSE 'TR' END AS tipo_tc
		,COUNT(*) AS nro_clientes
		,SUM(saldo_contable) AS sum_saldo_contable
	FROM schm_data_analytics.bitr_actividad_tr
	WHERE periodo = v_periodo
	GROUP BY
		COALESCE(vu_riesgo,0)
		,COALESCE(vu_ic,0)
		,COALESCE(vu_c_prima,'0')
		,actividad_tr
		,marca_riesgo
		,CASE
			WHEN COALESCE(recencia_tr,999)=0 THEN 1 ELSE 0
			END
		,CASE
			WHEN saldo_contable>0 THEN 1 ELSE 0
			END
		,CASE
			WHEN marca_base LIKE ('%TAM%') THEN 'TAM' ELSE 'TR'
			END
	ORDER BY 1,2,3,4,5,6,7,8,9,10
	;

	/*DROP TABLE IF EXISTS schm_workspace.actividad_tr;
	DROP TABLE IF EXISTS schm_workspace.actividad_tr_ini;
	DROP TABLE IF EXISTS schm_workspace.actividad_tr2b;
	DROP TABLE IF EXISTS schm_workspace.actividad_tr3;
	DROP TABLE IF EXISTS schm_workspace.actividad_tr3b;
	DROP TABLE IF EXISTS schm_workspace.uso_spos;
	DROP TABLE IF EXISTS schm_workspace.trxs_spos;
	DROP TABLE IF EXISTS schm_workspace.uso_spos_cc;
	DROP TABLE IF EXISTS schm_workspace.trxs_spos_cc;
	DROP TABLE IF EXISTS schm_workspace.uso_tda;
	DROP TABLE IF EXISTS schm_workspace.trxs_tda;
	DROP TABLE IF EXISTS schm_workspace.uso_som;
	DROP TABLE IF EXISTS schm_workspace.trxs_seguros;
	DROP TABLE IF EXISTS schm_workspace.uso_av;
	DROP TABLE IF EXISTS schm_workspace.trxs_av;
	DROP TABLE IF EXISTS schm_workspace.uso_sav;
	DROP TABLE IF EXISTS schm_workspace.trxs_sav;
	DROP TABLE IF EXISTS schm_workspace.rutero_movs_tc_i;
	DROP TABLE IF EXISTS schm_workspace.rutero_movs_tc_c2;
	DROP TABLE IF EXISTS schm_workspace.rutero_movs_tc_c;
	DROP TABLE IF EXISTS schm_workspace.actividad_tr2;
	DROP TABLE IF EXISTS schm_workspace.contrato_rut;
	DROP TABLE IF EXISTS schm_workspace.contrato_rut2 ;
	DROP TABLE IF EXISTS schm_workspace.actividad_tr3;
	DROP TABLE IF EXISTS schm_workspace.actividad_tr4;
	DROP TABLE IF EXISTS schm_workspace.actividad_tr_revision;*/

/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-12-07	-- v06	--	David Vásquez	--	Se actualiza código apuntando a tablas ya no de sasdata, sino de dana_analytics.
	2023-11-09	-- v05	--	David Vásquez	--	Versión validada OK en AWS Redshift
	2023-09-28	-- v04	--	David Vásquez	--	Actualizados los pendientes, manejo fechas.
	2023-09-27	-- v03	--	David y Ale		--	Validado OK!!
	2023-09-26	-- v02	--	David Vásquez	--	Orden del código y automatización.
	2023-08-02	-- v01	--	Ale Marinao		--	Versión original.

	=== Información adicional:
	Actividad de los clientes
	===========================================================================================================
*/

END



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_bitr_dvn_test(v_1 varchar, v_user varchar, v_fecha varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN

	DROP TABLE IF EXISTS schm_arquitectura.bitr_act_tr_dvn;
	
    CREATE TABLE schm_arquitectura.bitr_act_tr_dvn AS
    SELECT
    		act_tr,rut,vu_riesgo,vu_ic,vu_c_prima,actividad_tr,marca_cartera,marca_riesgo,fecha_aaaammdd_ult_compra,periodo_ult_compra,fecha_ult_compra,p_aprobacion,p_activacion,saldo_contable,saldo_ff_contable,saldo_total,imprime_tr,marca_base,recencia_tr,frecuencia,observacion,periodo
    FROM  schm_artifacts.sp_bitr_act_tr WHERE periodo = 202306 AND rut = 17457765
    ;

   EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/earq/david/' || v_1 || '_' || v_fecha || '_0-' || v_user || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
   RETURN;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-09-11	-- v01	--	David Vásquez	--	Versión original.

	=== Información adicional:
	Proceso que X
	===========================================================================================================
*/

END;




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_bitr_lca(v_period int4)
	LANGUAGE plpgsql
AS $$
	
	
	 
BEGIN
	
	DROP TABLE IF EXISTS schm_workspace.rut_for_lca;
	DROP TABLE IF EXISTS schm_workspace.pre_lca;
	DROP TABLE IF EXISTS schm_workspace.pre_lca_2;

	CREATE TABLE schm_workspace.rut_for_lca AS 
	SELECT
		a.codent,
		a.centalta,
		a.cuenta,
		b.pemid_gls_nro_dct_ide_k AS rut
	FROM
		br_dm_prod_bigdata_reporitf_db.mpdt007 AS a
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide b
	ON (a.identcli::integer = b.pemid_nro_inn_ide)
	;
 
	CREATE TABLE schm_workspace.pre_lca AS 
	SELECT
		*,
		v_period AS periodo
	FROM
		br_dm_prod_bigdata_mis_db.lca
	;
	 
	CREATE TABLE schm_workspace.pre_lca_2 AS 
	SELECT
			t2.rut, 
			t1.limcrelna, 
			t1.linea, 
			t1.cuenta, 
			t1.centalta, 
			t1.codent,
			t1.periodo
	FROM
		schm_workspace.pre_lca t1
	INNER JOIN schm_workspace.rut_for_lca t2 ON
		t1.codent = t2.codent
		AND t1.centalta = t2.centalta
		AND t1.cuenta = t2.cuenta
	;
	
	DELETE
	FROM
		schm_data_analytics.bitr_lca
	WHERE
		periodo = v_period
	;

	INSERT INTO schm_data_analytics.bitr_lca
	(rut, limcrelna, linea, cuenta, centalta, codent, periodo)
	select rut, limcrelna, linea, cuenta, centalta, codent, periodo
	FROM schm_workspace.pre_lca_2;
	
	--SELECT max(periodo) FROM schm_data_analytics.bitr_lca;

	DROP TABLE IF EXISTS schm_workspace.rut_for_lca;
	DROP TABLE IF EXISTS schm_workspace.pre_lca;
	DROP TABLE IF EXISTS schm_workspace.pre_lca_2;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-11-16	-- v01	--	Sergio Jara	--	Versión original refactorizada en AWS Redshift.

	=== Información adicional:
	Proceso que nos trae información de LCA, desde área Riesgo MIS que la genera.
	===========================================================================================================
*/

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_bitr_maestra_sucursales()
	LANGUAGE plpgsql
AS $$
	
BEGIN 

	DROP TABLE schm_data_analytics.bitr_maestra_sucursales;

	CREATE TABLE schm_data_analytics.bitr_maestra_sucursales AS 
	SELECT
		tgmsu_cod_suc_k AS cod_suc,
		tgmsu_nom_suc AS nombre_tienda,
	case 
	when tgmsu_cod_suc_k in (10,23,32,45,46,76,79,88,97,99,542) then 'Centro'
	when tgmsu_cod_suc_k in ( 3,21,25,26,37,41,49,51,69,84,85,510,558,559,584) then 'NORTE'
	when tgmsu_cod_suc_k in (2,4,9,11,14,22,28,47,68,72,74,78,96,98,512,530) then 'SUR'
	when tgmsu_cod_suc_k in (0,7,12,16,18,19,29,34,48,57,71,557) then 'Santiago'
	else '' end as zona_retail,
	case 
	when tgmsu_cod_suc_k in (0,7,12,16,18,19,29,34,45,46,48,57,71,88,97,99,502,517,536,557) then 'Centro'
	when tgmsu_cod_suc_k in ( 3,10,21,25,26,37,41,49,51,69,79,84,85,510,558,559,584) then 'NORTE'
	when tgmsu_cod_suc_k in (2,4,9,11,14,22,23,28,32,47,68,72,74,76,78,96,98,512,529,530,542,543) then 'SUR'
	else '' end as zona,
	case 
	when tgmsu_cod_suc_k=0 then 'Santiago'
	when tgmsu_cod_suc_k=2 then 'Concepcion'
	when tgmsu_cod_suc_k=3 then 'Viña del Mar'
	when tgmsu_cod_suc_k=4 then 'Temuco'
	when tgmsu_cod_suc_k=7 then 'Las Condes'
	when tgmsu_cod_suc_k=9 then 'Concepcion'
	when tgmsu_cod_suc_k=10 then 'Los Andes'
	when tgmsu_cod_suc_k=11 then 'Concepcion'
	when tgmsu_cod_suc_k=12 then 'Las Condes'
	when tgmsu_cod_suc_k=14 then 'Puerto Montt'
	when tgmsu_cod_suc_k=16 then 'La Florida'
	when tgmsu_cod_suc_k=18 then 'Santiago'
	when tgmsu_cod_suc_k=19 then 'Santiago'
	when tgmsu_cod_suc_k=21 then 'Arica'
	when tgmsu_cod_suc_k=22 then 'Chillan'
	when tgmsu_cod_suc_k=23 then 'San Fernando'
	when tgmsu_cod_suc_k=25 then 'Valparaiso'
	when tgmsu_cod_suc_k=26 then 'Antofagasta'
	when tgmsu_cod_suc_k=28 then 'Talcahuano'
	when tgmsu_cod_suc_k=29 then 'Las Condes'
	when tgmsu_cod_suc_k=32 then 'Rancagua'
	when tgmsu_cod_suc_k=34 then 'Providencia'
	when tgmsu_cod_suc_k=37 then 'Viña del Mar'
	when tgmsu_cod_suc_k=41 then 'La Serena'
	when tgmsu_cod_suc_k=45 then 'Cerrillos'
	when tgmsu_cod_suc_k=46 then 'Puente Alto'
	when tgmsu_cod_suc_k=47 then 'Punta Arenas'
	when tgmsu_cod_suc_k=48 then 'Huechuraba'
	when tgmsu_cod_suc_k=49 then 'Iquique'
	when tgmsu_cod_suc_k=51 then 'Calama'
	when tgmsu_cod_suc_k=57 then 'La Florida'
	when tgmsu_cod_suc_k=68 then 'Temuco'
	when tgmsu_cod_suc_k=69 then 'Coquimbo'
	when tgmsu_cod_suc_k=71 then 'Las Reina'
	when tgmsu_cod_suc_k=72 then 'Los Angeles'
	when tgmsu_cod_suc_k=74 then 'Talca'
	when tgmsu_cod_suc_k=76 then 'Curico'
	when tgmsu_cod_suc_k=78 then 'Puerto Montt'
	when tgmsu_cod_suc_k=79 then 'La Calera'
	when tgmsu_cod_suc_k=84 then 'Copiapo'
	when tgmsu_cod_suc_k=85 then 'Quilpue'
	when tgmsu_cod_suc_k=88 then 'Maipú'
	when tgmsu_cod_suc_k=96 then 'Punta Arenas'
	when tgmsu_cod_suc_k=97 then 'Estacion Central'
	when tgmsu_cod_suc_k=98 then 'Valdivia'
	when tgmsu_cod_suc_k=99 then 'San Bernardo'
	when tgmsu_cod_suc_k=502 then 'Santiago'
	when tgmsu_cod_suc_k=510 then 'Iquique'
	when tgmsu_cod_suc_k=512 then 'Temuco'
	when tgmsu_cod_suc_k=517 then 'Las Condes'
	when tgmsu_cod_suc_k=529 then 'Talca'
	when tgmsu_cod_suc_k=530 then 'Valdivia'
	when tgmsu_cod_suc_k=536 then 'Santiago'
	when tgmsu_cod_suc_k=542 then 'Curico'
	when tgmsu_cod_suc_k=543 then 'Osorno'
	when tgmsu_cod_suc_k=557 then 'Las Condes'
	when tgmsu_cod_suc_k=558 then 'Coquimbo'
	when tgmsu_cod_suc_k=559 then 'Arica'
	when tgmsu_cod_suc_k=584 then 'Copiapo'
	else '' end as Comuna,
	case 
	when tgmsu_cod_suc_k=0 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=2 then 'REGION DEL BIO BIO'
	when tgmsu_cod_suc_k=3 then 'REGION DE VALPARAISO'
	when tgmsu_cod_suc_k=4 then 'REGION DE LA ARAUCANIA'
	when tgmsu_cod_suc_k=7 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=9 then 'REGION DEL BIO BIO'
	when tgmsu_cod_suc_k=10 then 'REGION DE VALPARAISO'
	when tgmsu_cod_suc_k=11 then 'REGION DEL BIO BIO'
	when tgmsu_cod_suc_k=12 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=14 then 'REGION DE LOS LAGOS'
	when tgmsu_cod_suc_k=16 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=18 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=19 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=21 then 'REGION DE ARICA Y PARINACOTA'
	when tgmsu_cod_suc_k=22 then 'REGION DE ÑUBLE'
	when tgmsu_cod_suc_k=23 then 'REGION DE O´HIGGINS'
	when tgmsu_cod_suc_k=25 then 'REGION DE VALPARAISO'
	when tgmsu_cod_suc_k=26 then 'REGION DE ANTOFAGASTA'
	when tgmsu_cod_suc_k=28 then 'REGION DEL BIO BIO'
	when tgmsu_cod_suc_k=29 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=32 then 'REGION DE O´HIGGINS'
	when tgmsu_cod_suc_k=34 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=37 then 'REGION DE VALPARAISO'
	when tgmsu_cod_suc_k=41 then 'REGION DE COQUIMBO'
	when tgmsu_cod_suc_k=45 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=46 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=47 then 'REGION DE MAGALLANES'
	when tgmsu_cod_suc_k=48 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=49 then 'REGION DE TARAPACA'
	when tgmsu_cod_suc_k=51 then 'REGION DE ANTOFAGASTA'
	when tgmsu_cod_suc_k=57 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=68 then 'REGION DE LA ARAUCANIA'
	when tgmsu_cod_suc_k=69 then 'REGION DE COQUIMBO'
	when tgmsu_cod_suc_k=71 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=72 then 'REGION DEL BIO BIO'
	when tgmsu_cod_suc_k=74 then 'REGION DEL MAULE'
	when tgmsu_cod_suc_k=76 then 'REGION DEL MAULE'
	when tgmsu_cod_suc_k=78 then 'REGION DE LOS LAGOS'
	when tgmsu_cod_suc_k=79 then 'REGION DE VALPARAISO'
	when tgmsu_cod_suc_k=84 then 'REGION DE ATACAMA'
	when tgmsu_cod_suc_k=85 then 'REGION DE VALPARAISO'
	when tgmsu_cod_suc_k=88 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=96 then 'REGION DE MAGALLANES'
	when tgmsu_cod_suc_k=97 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=98 then 'REGION DE LOS RIOS'
	when tgmsu_cod_suc_k=99 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=502 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=510 then 'REGION DE TARAPACA'
	when tgmsu_cod_suc_k=512 then 'REGION DE LA ARAUCANIA'
	when tgmsu_cod_suc_k=517 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=529 then 'REGION DEL MAULE'
	when tgmsu_cod_suc_k=530 then 'REGION DE LOS RIOS'
	when tgmsu_cod_suc_k=536 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=542 then 'REGION DEL MAULE'
	when tgmsu_cod_suc_k=543 then 'REGION DE LOS LAGOS'
	when tgmsu_cod_suc_k=557 then 'REGION METROPOLITANA'
	when tgmsu_cod_suc_k=558 then 'REGION DE COQUIMBO'
	when tgmsu_cod_suc_k=559 then 'REGION DE ARICA Y PARINACOTA'
	when tgmsu_cod_suc_k=584 then 'REGION DE ATACAMA'
	else '' end as region_suc
	FROM br_dm_prod_bigdata_reporitf_db.botgen_mae_suc
	ORDER BY tgmsu_cod_suc_k ASC;


END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_bitr_marca_riesgo(v_period int4)
	LANGUAGE plpgsql
AS $$
	
	
BEGIN
	
	DROP TABLE IF EXISTS schm_workspace.pre_marca_riesgo;

	CREATE TABLE schm_workspace.pre_marca_riesgo AS 
		SELECT
		rut,
		vu_c,
		marca_base,
		observacion,
		periodo
	FROM
		br_dm_prod_bigdata_mis_db.marca_riesgo
	WHERE
		periodo = v_period
	;

	DELETE
	FROM
		schm_data_analytics.bitr_marca_riesgo
	WHERE
		periodo = v_period
	;

	INSERT
		INTO
		schm_data_analytics.bitr_marca_riesgo
	(rut,
		vu_c,
		marca_base,
		observacion,
		periodo)
	SELECT
		rut,
		vu_c,
		marca_base,
		observacion,
		periodo
	FROM
		br_dm_prod_bigdata_mis_db.marca_riesgo
	WHERE
		periodo = v_period;

	--SELECT max(periodo) FROM schm_data_analytics.bitr_marca_riesgo;
	
	DROP TABLE IF EXISTS schm_workspace.pre_marca_riesgo;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-11-16	-- v01	--	Sergio Jara	--	Versión original refactorizada en AWS Redshift.

	=== Información adicional:
	Proceso que nos trae información de Marca_Riesgo, desde área Riesgo MIS que la genera.
	===========================================================================================================
*/

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_camp_cumple_email(v_proceso varchar, v_fecha int4, v_user varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
	

BEGIN
	DROP TABLE IF EXISTS schm_workspace.camp_datos_demograficos;
	DROP TABLE IF EXISTS schm_workspace.camp_prueba;
	DROP TABLE IF EXISTS schm_workspace.camp_diacumple2;
	DROP TABLE IF EXISTS schm_data_analytics.camp_base_birthday_campaign;
	DROP TABLE IF EXISTS schm_workspace.camp_cumple_email;

	CREATE TABLE schm_workspace.camp_datos_demograficos AS
	SELECT
        a.rut
        ,a.nombres
        ,a.paterno
        ,a.materno
        ,b.fecha_nacimiento
        ,b.edad
        ,b.sexo
	FROM schm_data_analytics.ctbl_base_nombres a
	INNER JOIN schm_data_analytics.ctbl_demo_basket b
	ON a.rut=b.rut
	WHERE b.periodo=(schm_artifacts.f_period(current_date) -1)
	;

	CREATE TABLE schm_workspace.camp_prueba AS
	SELECT
        rut
        ,fecha_nacimiento
        ,to_char(fecha_nacimiento, 'MMdd')::integer AS fecha_nacimiento0
        ,current_date AS fecha_hoy
        ,to_char(current_date, 'MMdd')::integer AS fecha_hoy0
        ,sexo
        ,nombres
        ,paterno
        ,materno
	FROM schm_workspace.camp_datos_demograficos
	WHERE to_char(fecha_nacimiento, 'MMdd')::integer=to_char(current_date, 'MMdd')::integer
	;

	CREATE TABLE schm_workspace.camp_diacumple2 AS
	SELECT
		a.*
		,b.email
		,c.telefono
		,CASE
			WHEN a.rut = b.rut
			AND b.email IS NOT NULL THEN 1
			ELSE 0
		END AS T_EMAIL
		,CASE
			WHEN b.rut = c.clirut
			AND c.telefono IS NOT NULL THEN 1
			ELSE 0
		END AS T_FONO
	FROM schm_workspace.camp_prueba a
	LEFT JOIN schm_data_analytics.ctbl_base_trabajo_email AS b ON (a.rut = b.rut)
	LEFT JOIN schm_data_analytics.fonos_movil_final AS c ON (a.rut = c.clirut)
	ORDER BY b.email DESC
	;

	CREATE TABLE schm_data_analytics.camp_base_birthday_campaign AS
	SELECT
		DISTINCT a.*
		,CASE
			WHEN a.rut IN (SELECT DISTINCT rut FROM schm_data_analytics.ctbl_lnegro_car) THEN 1
			ELSE 0 END AS t_lnegro_car
		,CASE
			WHEN a.telefono IN (SELECT fono FROM schm_data_analytics.ctbl_lnegro_sms) THEN 1
			ELSE 0 END AS t_lnegro_sms
		,CASE
			WHEN UPPER(a.email) IN (SELECT UPPER(email) FROM schm_data_analytics.ctbl_lnegro_email) THEN 1
			ELSE 0
		END AS t_lnegro_email
	FROM schm_workspace.camp_diacumple2 a
	WHERE t_lnegro_car=0 AND t_lnegro_sms=0 AND t_lnegro_email=0
	;

	CREATE TABLE schm_workspace.camp_cumple_email (
        "campana-campcode" varchar(20)
        ,"campana-area"varchar(20)
        ,"campana-producto" varchar(20)
        ,"campana-campana" varchar(20)
        ,"campana-fecha"varchar(38)
        ,"campana-customerid" integer
        ,"cliente-email"varchar(50)
        ,"cliente-nombre" varchar(50)
        ,"campana-canal" varchar(50)
        ,"campana-id_usuario" integer
        ,"cliente-id_usuario" integer
        ,"campana-ind_rut_dup_camp" integer
	);

	INSERT INTO schm_workspace.camp_cumple_email
	(
        "campana-campcode"
        ,"campana-area"
        ,"campana-producto"
        ,"campana-campana"
        ,"campana-fecha"
        ,"campana-customerid"
        ,"cliente-email"
        ,"cliente-nombre"
        ,"campana-canal"
        ,"campana-id_usuario"
        ,"cliente-id_usuario"
        ,"campana-ind_rut_dup_camp")
	SELECT
        to_char(current_date, 'YYYYMMDD')||'ALZSGT'
        ,'ALZ'
        ,'SGT'
        ,'HAPPY_BIRTHDAY'
        ,to_char(current_date, 'MM/dd/YYYY')
        ,rut
        ,email
        ,nombres
        ,'email'
        ,rut
        ,rut
        ,0
	FROM schm_data_analytics.camp_base_birthday_campaign
	WHERE email IS NOT NULL
	;

    DROP TABLE IF EXISTS schm_workspace.camp_datos_demograficos;
	DROP TABLE IF EXISTS schm_workspace.camp_prueba;
	DROP TABLE IF EXISTS schm_workspace.camp_diacumple2;

	EXECUTE
	'UNLOAD('
	|| quote_literal(v_query)
	|| ') to ''s3://br-dm-prod-us-east-1-837538682169-raw/bigdata/campaign/'
	|| v_proceso
	|| '/'
	|| v_proceso
	|| '_'
	|| v_fecha
	|| '_0-'
	|| v_user
	|| ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER
	ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
	RETURN;

	/*	===========================================================================================================
		=== Control de versiones visual ===
		2024-01-16	-- v01	--	David Vásquez     --	Se actualiza fuente de sasdata a data_analytics.
	
		=== Información adicional:
		Proceso que...
		===========================================================================================================
	*/

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_camp_export(v_proceso varchar, v_fecha int4, v_user varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
BEGIN
	EXECUTE
	'UNLOAD('
	|| quote_literal(v_query)
	|| ') to ''s3://br-dm-prod-us-east-1-837538682169-raw/bigdata/campaign/'
	|| v_proceso
	|| '/'
	|| v_proceso
	|| '_'
	|| v_fecha
	|| '_0-'
	|| v_user
	|| ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER 
	ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
	RETURN;
	
END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_camp_onb_spos_aut()
	LANGUAGE plpgsql
AS $$
	
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.spos_spos_aut_sin_corr;
    DROP TABLE IF EXISTS schm_workspace.spos_spos_aut;
    DELETE FROM schm_data_analytics.spos_input_tr_transac_spos_user_bi_spos_aut;

    CREATE TABLE schm_workspace.spos_spos_aut_sin_corr AS
    SELECT
        x.cod_fecha as fecha
        , floor(x.cod_fecha/100) as periodo
        , x.nomcom as nombre_comercio
        , x.rubro as actividad_comercio
        , x.rut_cliente as rut
        , x.venta_tarjeta
        , x.codpais
        , CASE
            WHEN x.producto IN ('07','05','06','TARJETA M') THEN 'TC_Mastercard'
            WHEN x.producto IN ('Credi2000','01','03','TARJETA R') THEN 'TC_Ripley'
            WHEN x.producto = '08' THEN 'DEBITO'
        END AS tipo_tarjeta
    FROM (
        SELECT
            b.pemid_gls_nro_dct_ide_k
            , cast(b.pemid_gls_nro_dct_ide_k as integer) AS rut_cliente
            , c.codpais
            , c.localidad
            , c.fectrn
            , replace(c.fectrn,'-','') AS cod_fecha
            , d.desact AS rubro
            , c.codcom
            , cast(c.codcom as bigint) AS codigo_comercio
            , c.nomcom
            , sum(c.imptrn) AS venta_tarjeta
            , c.tipfran
            , a.producto
            , c.tipofac
        FROM br_dm_prod_bigdata_reporitf_db.mpdt004 AS c,
            br_dm_prod_bigdata_reporitf_db.mpdt007 AS a,
            br_dm_prod_bigdata_reporitf_db.bopers_mae_ide AS b,
            br_dm_prod_bigdata_reporitf_db.mpdt039 AS d
        WHERE cast(a.identcli as bigint) = cast(b.pemid_nro_inn_ide as bigint)
            AND c.codact = d.codact
            AND a.cuenta = c.cuenta
            AND c.codact <> 6011
            AND c.tipofac IN (1053,1350,1353,5250,1050,1650,5050,5150,5350,2750,2350,2050,6050,3010,2777,3050)
            AND c.codrespu = '000'
            AND tipfran <> 4
            AND cast(replace(fectrn,'-','') as integer) between to_char(dateadd(day,-3,current_date),'YYYYMMDD') and to_char(dateadd(day,-1,current_date),'YYYYMMDD')
            AND producto IN ('07','05','06','TARJETA M','Credi2000','01','03','TARJETA R')
        GROUP BY
            b.pemid_gls_nro_dct_ide_k
            , c.codpais
            , c.localidad
            , c.fectrn
            , d.desact
            , c.codcom
            , c.nomcom
            , c.tipfran
            , a.producto
            , c.tipofac
    ) AS x;

    CREATE TABLE schm_workspace.spos_spos_aut AS
    SELECT
        row_number() over(partition by rut order by to_date(fecha, 'YYYYMMDD') asc) as num_transaccion_spos
        , to_date(fecha, 'YYYYMMDD') AS fecha_transaccion
        , periodo as periodo
        , nombre_comercio as nombre_comercio
        , actividad_comercio as actividad_comercio
        , rut as id_usuario
        , venta_tarjeta as monto_transaccion
        , codpais as codpais
        , tipo_tarjeta as tipo_tc_transaccion
    FROM schm_workspace.spos_spos_aut_sin_corr
    ORDER BY
        rut
        , fecha;

    INSERT INTO schm_data_analytics.spos_input_tr_transac_spos_user_bi_spos_aut
    SELECT * FROM schm_workspace.spos_spos_aut;

    DROP TABLE IF EXISTS schm_workspace.spos_spos_aut_sin_corr;
    DROP TABLE IF EXISTS schm_workspace.spos_spos_aut;

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_camp_onb_tda_itf(v_nombre_campaing varchar, v_user varchar, v_fecha varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	

BEGIN

    DROP TABLE IF EXISTS schm_workspace.camp_sin_cuotas;
    DROP TABLE IF EXISTS schm_workspace.camp_con_cuotas;
    DROP TABLE IF EXISTS schm_workspace.camp_sin_cuotas_2;
    DROP TABLE IF EXISTS schm_workspace.camp_con_cuotas_2;
    DROP TABLE IF EXISTS schm_workspace.camp_tda_itf;
    DROP TABLE IF EXISTS schm_workspace.camp_base_tda;
    DROP TABLE IF EXISTS schm_workspace.camp_base_tda_2;
    DROP TABLE IF EXISTS schm_data_analytics.tr_transac_tda;

    CREATE TABLE schm_workspace.camp_sin_cuotas AS
    SELECT
        a.pan,
        a.codent,
        a.centalta,
        a.cuenta,
        c.pemid_gls_nro_dct_ide_k AS rut,
        (round(case when rtrim(d.signo) = '+' then 1 else -1 end)*a.impfac)::INTEGER as capital,
        0::numeric AS pie,
        0::numeric AS cuotas,
        a.fecfac AS fecha,
        a.numboleta AS dcto,
        a.codcom::integer AS comercio,
        substring(a.sucursal, 1, 4)::integer AS sucursal,
        substring(a.sucursal, 5, 4)::integer AS caja,
        0::numeric AS diferido,
        0::numeric AS mgfin,
        0::numeric AS tasa,
        0::numeric AS tasa_dif,
        to_char(a.fecfac, 'yyyymm') AS periodo
    FROM
        br_dm_prod_bigdata_reporitf_db.mpdt012 AS a
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt044 d
    ON
        (a.tipofac = d.tipofac)
        AND (a.indnorcor = d.indnorcor)
    LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 b
    ON
        (a.codent = b.codent
            AND a.centalta = b.centalta
            AND a.cuenta = b.cuenta)
    LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide c
    ON
        (b.identcli::integer = c.pemid_nro_inn_ide)
    WHERE
        a.linea = '0050'
        AND a.codcom = '000000000000001'
        AND indmovanu = 0
        AND a.numopecuo = 0
        AND (substring(sucursal, 1, 4))::integer NOT IN (901, 910, 990, 991)
        AND a.tipofac IN (3010, 1750, 2750, 1450, 2050, 1150, 1250, 3050, 2850, 1850)
    ;

   CREATE TABLE schm_workspace.camp_sin_cuotas_2 AS
   SELECT *
   ,CASE WHEN substring(pan, 1, 6) IN ('628156') THEN 'CERRADA'
            WHEN substring(pan, 1, 4) IN ('6392') THEN 'CUENTA VISTA'
            WHEN substring(pan, 1, 6) IN ('549070')
            AND (substring(pan, 1, 7))::integer >= 5490702
            THEN 'TAM CHIP'
            WHEN substring(pan, 1, 6) IN ('549070')
            AND (substring(pan, 1, 7))::integer <5490702 THEN 'TAM'
            ELSE 'CERRADA'
        END AS tipo_tr
   FROM schm_workspace.camp_sin_cuotas
   ;

    CREATE TABLE schm_workspace.camp_con_cuotas AS
    SELECT
        a.pan,
        a.codent,
        a.centalta,
        a.cuenta,
        pemid_gls_nro_dct_ide_k::integer AS rut,
        a.impfac::INTEGER AS capital,
        a.entrada AS pie,
        totcuotas AS cuotas,
        fecfac AS fecha,
        a.numboleta AS dcto,
        a.codcom::integer AS comercio,
        substring(a.sucursal, 1, 4)::integer AS sucursal,
        substring(a.sucursal, 5, 4)::integer AS caja,
        d.nummescar AS diferido,
        impinttotal AS mgfin,
        porint AS tasa,
        porintcar AS tasa_dif,
        to_char(a.fecfac, 'yyyymm') AS periodo
    FROM
        br_dm_prod_bigdata_reporitf_db.mpdt205 AS a
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt206 d
    ON
        (a.codent = d.codent
            AND a.centalta = d.centalta
            AND a.cuenta = d.cuenta
            AND a.codtipc = d.codtipc
            AND a.numopecuo = d.numopecuo)
    LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 b
    ON
        (a.codent = b.codent
            AND a.centalta = b.centalta
            AND a.cuenta = b.cuenta)
    LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide c
    ON
        (b.identcli::integer = c.pemid_nro_inn_ide)
    WHERE
        linea = '0050'
        AND codcom = '000000000000001'
        AND (substring(sucursal, 1, 4))::integer NOT IN (901, 910, 990, 991)
        AND a.tipofac NOT IN (2951, 1950, 1951, 1952, 1954, 1957, 1956, 130, 67)
    ;

   CREATE TABLE schm_workspace.camp_con_cuotas_2 AS
   SELECT *
  ,CASE WHEN substring(pan, 1, 6) IN ('628156') THEN 'CERRADA'
            WHEN substring(pan, 1, 4) IN ('6392') THEN 'CUENTA VISTA'
            WHEN substring(pan, 1, 6) IN ('549070')
            AND (substring(pan, 1, 7))::integer >= 5490702
            THEN 'TAM CHIP'
            WHEN substring(pan, 1, 6) IN ('549070')
            AND (substring(pan, 1, 7))::integer <5490702 THEN 'TAM'
            ELSE 'CERRADA'
        END AS tipo_tr
   FROM schm_workspace.camp_con_cuotas
   WHERE pan NOT IN (SELECT min(pan) FROM schm_workspace.camp_con_cuotas)
   ;

    CREATE TABLE schm_workspace.camp_tda_itf AS
    SELECT
        *
    FROM schm_workspace.camp_sin_cuotas_2
    UNION
    SELECT
        *
    FROM schm_workspace.camp_con_cuotas_2
    ;

    CREATE TABLE schm_workspace.camp_base_tda AS
    SELECT
        rut AS id_usuario,
        'TIENDA' AS tipo_transaccion,
        capital AS monto_transaccion,
        (to_char(fecha, 'yyyymmdd'))::integer AS fecha_transaccion,
        CASE
            WHEN tipo_tr IN ('TAM' , 'TAM CHIP') THEN 'TC_Mastercard'
            WHEN tipo_tr IN ('CERRADA') THEN 'TC_Ripley'
            ELSE 'REVISAR'
        END AS tipo_tc_transaccion
    FROM schm_workspace.camp_tda_itf
    WHERE
        tipo_tr <> 'CUENTA VISTA'
        AND fecha > schm_artifacts.f_first_day(dateadd(DAY,-3,getdate())::date)
    ORDER BY
        rut,
        fecha
    ;

    CREATE TABLE schm_workspace.camp_base_tda_2 AS
    SELECT
        *,
        ROW_NUMBER() OVER (PARTITION BY id_usuario
    ORDER BY
        fecha_transaccion) AS num_transaccion_tda
    FROM schm_workspace.camp_base_tda;

    CREATE TABLE schm_data_analytics.tr_transac_tda AS
    SELECT
        *
    FROM schm_workspace.camp_base_tda_2;

    DROP TABLE IF EXISTS schm_workspace.camp_sin_cuotas;
    DROP TABLE IF EXISTS schm_workspace.camp_con_cuotas;
    DROP TABLE IF EXISTS schm_workspace.camp_sin_cuotas_2;
    DROP TABLE IF EXISTS schm_workspace.camp_con_cuotas_2;
    DROP TABLE IF EXISTS schm_workspace.camp_tda_itf;
    DROP TABLE IF EXISTS schm_workspace.camp_base_tda;
    DROP TABLE IF EXISTS schm_workspace.camp_base_tda_2;

    EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-raw/bigdata/campaign/CAMPAIGN_INPUT_TR_TRANSAC_TDA/' || v_nombre_campaing || '_' || v_fecha || '_0-' || v_user || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
    RETURN;


END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_camp_onb_tr_tarjetas(v_nombre_campaing varchar, v_user varchar, v_fecha varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
	
	

BEGIN

	DROP TABLE IF EXISTS schm_workspace.ppff_captados;
	DROP TABLE IF EXISTS schm_workspace.ppff_mov_Cuenta_Corriente;
	DROP TABLE IF EXISTS schm_workspace.ppff_max_fecha;
	DROP TABLE IF EXISTS schm_workspace.ppff_abono;
	DROP TABLE IF EXISTS schm_workspace.ppff_abono2;
	DROP TABLE IF EXISTS schm_workspace.ppff_mpdt666;
	DROP TABLE IF EXISTS schm_workspace.ppff_captados1;
	DROP TABLE IF EXISTS schm_workspace.ppff_tabla_final;
	DROP TABLE IF EXISTS schm_workspace.ppff_estado_cc;
	DROP TABLE IF EXISTS schm_workspace.ppff_final2;
	DROP TABLE IF EXISTS schm_workspace.ppff_retiro_debito;
	DROP TABLE IF EXISTS schm_workspace.ppff_retiro_plastico_tc;
	DROP TABLE IF EXISTS schm_workspace.ppff_final3;
	DROP TABLE IF EXISTS schm_workspace.ppff_panes;
	DROP TABLE IF EXISTS schm_workspace.ppff_tr_tarjetas;
	DROP TABLE IF EXISTS schm_data_analytics.ppff_tr_tarjetas;


	CREATE TABLE schm_workspace.ppff_captados as
	SELECT
		rut_cliente AS rut
		,cuenta
		,producto
		,codent
		,centalta
		,CASE
			WHEN cod_sucursal=39 AND via IN ('HOMEBANKING','HOMEBAN') THEN 'ONLINE' ELSE 'PRESENCIAL'
		END	AS tipo_capta
		,FECHA AS fecha_captacion
	FROM br_dm_prod_bigdata_sftp_db.capta_salida
	WHERE producto IN ('TAM','TAM_CERRADA','TAM_CUOTAS','CAMBIO DE PRODUCTO','MASTERCARD_BLACK','CUENTA CORRIENTE')
			AND FECHA >= DATEADD(mm,-3,current_date)::date
			AND cod_sucursal <> 105
	GROUP BY
		rut_cliente
		,cuenta
		,producto
		,codent
		,centalta
		,fecha
		,cod_sucursal
		,via
	ORDER BY
		rut_cliente
	;

	CREATE TABLE schm_workspace.ppff_mov_Cuenta_Corriente as
	SELECT
		*
		,CASE
			WHEN tmo_tipotra='C' THEN
			CASE
				WHEN DESCRIPCION IN ('VALOR EFECTIVO','EN EFECTIVO') AND GLS_TRANSAC ='DEPOSITO' AND  SI_ABR<>1  THEN 'DepÃ³sitos en Efectivo'
				WHEN DESCRIPCION IN ('CON DOCUMENTOS') AND GLS_TRANSAC ='DEPOSITO' AND SI_ABR<>1 THEN 'DepÃ³sitos con Documento'
				WHEN DESCRIPCION IN ('TRANSFERENCIA DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas'
				WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas'
				WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR=1 THEN 'Abono de Remuneraciones'
				WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 and DESC_NEGOCIO LIKE '%Proveedores%' THEN 'TEF Recibidas'
				WHEN DESCRIPCION IN ('POR REGULARIZACION') AND  SI_ABR<>1 THEN 'Otros (pago proveedores)'
				WHEN DESCRIPCION IN ('DESDE LINEA DE CREDITO') AND GLS_TRANSAC ='TRASPASO DE FONDOS' AND  SI_ABR<>1 THEN 'Traspaso desde LCA'
				WHEN DESCRIPCION IN ('AVANCE DESDE TARJETA DE CREDITO BANCO RIPLEY') AND  SI_ABR<>1 THEN 'Avance desde Tarjeta Ripley'
				WHEN DESCRIPCION IN ('DEVOLUCION COMISION') AND  SI_ABR<>1 THEN 'DEVOLUCION COMISION'
				WHEN DESCRIPCION IN ('TRANSFERENCIA DESDE CREDITO') AND  SI_ABR<>1 THEN 'Traspaso desde LCA'
				ELSE 'OTROS ABONOS'
			END ELSE ''
		END AS Descripcion_Abono
		,CASE
			WHEN tmo_tipotra='D' THEN
			CASE
				WHEN DESCRIPCION IN ('COMPRA NACIONAL CTA CTE') THEN 'Compras Redcompra'
				WHEN DESCRIPCION IN ('COMPRA INTERNACIONAL CTA CTE') THEN 'Compras Internacionales'
				WHEN DESCRIPCION IN ('CARGO POR PEC') THEN 'PEC'
				WHEN DESCRIPCION IN ('GIRO ATM INTERNACIONAL CTA CTE') then 'Giros internacional CTA CTE'
				WHEN DESCRIPCION IN ('GIRO ATM NACIONAL CTA CTE') then 'Giros ATM CTA CTE'
				WHEN DESCRIPCION IN ('GIRO POR CAJA') THEN 'Giros Caja'
				WHEN DESCRIPCION IN ('TRANSFERENCIA A OTROS BANCOS') THEN 'TEF emitidas Otros Bancos'
				WHEN DESCRIPCION IN ('PAGO TARJETA DE CREDITO') THEN 'Pago de Tarjeta'
				WHEN DESCRIPCION IN ('A CUENTA BANCO RIPLEY','POR TRASPASO A CUENTA')  THEN 'Pago LCA'
				WHEN  DESCRIPCION IN ('COSTO DE MANTENCION MENSUAL CTA CTE') then 'Comision planes'
				WHEN DESCRIPCION IN ('IVA COSTO DE MANTENCION MENSUAL CTA CTE') then 'IVA Com cta cte'
				ELSE 'OTROS CARGOS'
			END ELSE ''
		END AS Descripcion_Cargo
	FROM (
		SELECT
			c2.cli_identifica AS rut
			,c2.cli_identifica_dv AS dv
			,cast(schm_artifacts.f_period(DATEADD(month, 0, c1.tmo_fechcon)::DATE) as integer) as Periodo_Cont
			,cast(schm_artifacts.f_period(DATEADD(month, 0, c1.tmo_fech)::DATE) as integer) as Periodo_trx
			,c1.tmo_numcue AS CUENTA
			,c1.tmo_fechcon AS FECHACON
			,c1.tmo_fech AS FECHA
			,c1.rub_desc AS DESCRIPCION
			,c1.tmo_val AS MONTO
			,c1.con_libre AS Desc_negocio
			,c1.tmo_codmod
			,c1.tmo_tipotra
			,c1.tmo_rubro
			,c1.tmo_numtra
			,c1.tmo_numcue
			,c1.tmo_codusr
			,c1.tmo_sec
			,c1.tmo_codtra
			,( 	SELECT
					cod_destra
				FROM br_dm_prod_bigdata_fisa_db.tgen_codtrans
				WHERE
					cod_tra = tmo_codtra
					AND cod_mod = tmo_codmod
			) AS gls_transac
			,CASE
				WHEN c1.tmo_tipotra='D' THEN 'CARGO'
				WHEN c1.tmo_tipotra='C' THEN 'ABONO'
			END AS Tipo_Movimiento
			,CASE
				WHEN c1.tmo_tipotra='C'
				AND c1.rub_desc='DESDE OTROS BANCOS'
				AND ( 	c1.con_libre LIKE '%Remuneraciones%' OR
						c1.con_libre LIKE '%Anticipos%' OR
						c1.con_libre LIKE '%Sueldos%'
					)  THEN 1
				ELSE 0
			END AS SI_ABR
			,CASE
				WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS'
					AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre LIKE '%Sueldos%')
					AND c1.con_libre LIKE '%BANCO RIPLEY%' THEN 'BANCO RIPLEY'
				WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS'
					AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre LIKE '%Sueldos%')
					AND c1.con_libre LIKE '%CAR S.A.%' THEN 'CAR'
				WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS'
					AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre LIKE '%Sueldos%')
				 	AND c1.con_libre LIKE '%RIPLEY STORE%' THEN 'RIPLEY STORE'
				WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS'
					and ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre LIKE '%Sueldos%')
				 	AND (	c1.con_libre NOT LIKE ('%RIPLEY STORE%') OR
							c1.con_libre NOT LIKE ('%CAR S.A.%') OR
							c1.con_libre NOT LIKE ('%BANCO RIPLEY%')
						) THEN 'OTROS BANCOS'
				ELSE ''
			END AS Descripcion_ABR
			,CASE
				WHEN c1.tmo_tipotra='D'
					AND (c1.con_libre LIKE '%Ripley%' OR c1.con_libre LIKE '%RIPLEY%')
					AND  c1.con_libre NOT LIKE '%PAGO%'
				THEN 'COMPRA_RIPLEY'
				ELSE ''
			END AS COMPRA_RIPLEY
		FROM (	SELECT
					*
				FROM  br_dm_prod_bigdata_fisa_db.tcap_tramon /*base de movimientos*/
		   			, br_dm_prod_bigdata_fisa_db.TGEN_TRANRUBRO /*base descriptiva (para complementar movimientos)*/
		   			, br_dm_prod_bigdata_fisa_db.tcap_concepto /*base descriptiva (para complementar movimientos)*/
					WHERE rub_mod    = tmo_codmod /*unificacion de base de movs con rubro*/
					AND rub_tra      = tmo_codtra /*unificacion de base de movs con rubro*/
					AND rub_rubro    = tmo_rubro /*unificacion de base de movs con rubro*/
					AND con_modulo(+)  = tmo_codmod /*unificacion de base de movs con con_*/
					AND con_rubro(+)   = tmo_rubro /*unificacion de base de movs con con_*/
					AND con_numtran(+) = tmo_numtra /*unificacion de base de movs con con_*/
					AND con_cuenta (+) = tmo_numcue /*unificacion de base de movs con con_*/
					AND con_codusr(+)  = tmo_codusr /*unificacion de base de movs con con_*/
					AND con_sec(+)     = tmo_sec /*unificacion de base de movs con con_*/
					AND con_transa(+)  = tmo_codtra /*unificacion de base de movs con con_*/
					/*FILTROS DE MOVIMIENTOS*/
					AND tmo_tipotra IN ('D','C') /*D=Cargo, C=Abono*/
					AND tmo_codmod=4
					AND tmo_codpro = 1
					AND tmo_codtip = 1
					AND tmo_modo = 'N'
					AND tmo_val >= 1 /*solo montos mayores a 1 peso (mov de prueba)*/
					AND tmo_fechcon >= DATEADD(mm,-3,current_date)::date
					AND tmo_fechcon <= DATEADD(d,-1,current_date)::date
				/*FINAL: QUERY DESDE OPERACIONES*/
				)  C1
		LEFT JOIN (	SELECT DISTINCT
						cli_identifica
						,cli_identifica_dv
						,vis_numcue
					FROM br_dm_prod_bigdata_fisa_db.tcli_persona /*MAESTRA DE CLIENTES BANCO*/
						,br_dm_prod_bigdata_fisa_db.tcap_vista /*SALDOS CUENTAS VISTAS */
					WHERE cli_codigo=vis_codcli
						AND vis_mod=4/*cuenta vista, CUENTA */
						AND (VIS_PRO=1/*CC*/  )
						AND vis_tip=1  /*persona no juridica*/
						AND (vis_status='2' OR vis_status='9') /*solo aquellas con estado vigente o cerrado*/
				) C2
			ON (c1.tmo_numcue=c2.vis_numcue)
	)
	;

	CREATE TABLE schm_workspace.ppff_max_fecha AS
	SELECT DISTINCT
		rut
		,cuenta
		,max(fecha) AS fecha
	FROM schm_workspace.ppff_mov_Cuenta_Corriente
	WHERE tipo_movimiento='ABONO'
	GROUP BY
		rut
		,cuenta
	;

	CREATE TABLE schm_workspace.ppff_abono AS
	SELECT DISTINCT
		rut
		,monto AS monto_abono
		,cuenta
		,fecha
	FROM schm_workspace.ppff_mov_Cuenta_Corriente
	WHERE tipo_movimiento = 'ABONO'
	;

	CREATE TABLE schm_workspace.ppff_abono2 AS
	SELECT DISTINCT
		a.rut
		,a.cuenta
		,a.fecha
		,sum(b.monto_abono) AS monto_abono
	FROM schm_workspace.ppff_max_fecha AS a
	LEFT JOIN schm_workspace.ppff_abono AS b
		ON (a.cuenta = b.cuenta) AND (a.fecha = b.fecha)
	WHERE a.rut IS NOT NULL
	GROUP BY
		a.rut
		,a.cuenta
		,a.fecha ;

	CREATE TABLE schm_workspace.ppff_mpdt666 AS
	SELECT DISTINCT
		codent1
		,centalta1
		,cuenta1 AS cc
		,cuenta2
	FROM br_dm_prod_bigdata_reporitf_db.mpdt666
	;

	CREATE TABLE schm_workspace.ppff_captados1 AS
	SELECT DISTINCT
		a.*
		,b.cc
	FROM schm_workspace.ppff_captados AS a
	LEFT JOIN schm_workspace.ppff_mpdt666 AS b
		ON (a.cuenta = b.cc)
	;

	CREATE TABLE schm_workspace.ppff_tabla_final AS
	SELECT DISTINCT
		a.rut AS id_usuario
		,a.producto AS tipo_tarjeta
		,a.tipo_capta AS tipo_captacion
		,a.fecha_captacion
		,CASE
			WHEN a.producto = 'CUENTA CORRIENTE' AND a.rut IS NOT NULL AND b.monto_abono IS NOT NULL THEN b.monto_abono
			ELSE 0
		END AS abono_monto
		,b.fecha AS fecha_ultimo_abono
		,a.codent
		,a.centalta
		,a.cuenta
		,a.cc
	FROM schm_workspace.ppff_captados1 AS a
	LEFT JOIN schm_workspace.ppff_abono2 AS b
		ON (a.rut = b.rut) --AND (a.cc = b.cuenta) ESTA CUENTA ES DISTINTA A LA OTRA!!!!!!
	GROUP BY
		a.rut
		,a.producto
		,a.tipo_capta
		,a.fecha_captacion
		,b.fecha
		,a.codent
		,a.centalta
		,a.cuenta
		,b.monto_abono
		,a.cc
	;

	CREATE TABLE schm_workspace.ppff_estado_cc AS
	SELECT DISTINCT
		rut
	FROM schm_data_analytics.ppff_stock_cc
	WHERE estado_cuenta = 'vigente'
	;

	CREATE TABLE schm_workspace.ppff_final2 AS
	SELECT
		a.*
		,CASE
			WHEN a.tipo_tarjeta='CUENTA CORRIENTE' AND b.rut IS NOT NULL THEN 'vigente'
			WHEN a.tipo_tarjeta='CUENTA CORRIENTE' AND b.rut IS NULL THEN 'cerrada'
			WHEN a.tipo_tarjeta<>'CUENTA CORRIENTE' THEN 'sin_cc'
		END AS estado
	FROM schm_workspace.ppff_tabla_final AS a
	LEFT JOIN schm_workspace.ppff_estado_cc AS b
		ON (a.id_usuario = b.rut)
	;

	-- CUENTA CORRIENTE --
	CREATE TABLE schm_workspace.ppff_retiro_debito AS
	SELECT DISTINCT
		mae.pcom_cod_ide_cli_k
		,tar.tar_cac_nro_ctt_k AS numero_contrato
		,det.pcom_pan AS numero_tarjeta
		,SUBSTRING(prd.prd_cac_nro_ctt,9) AS numero_cuenta
		,sol.sol_cod_ide_cli AS rut_cliente
		,per.per_cac_ide_cli_dv AS dv
		,sol.sol_fch_alt_sol AS fecha_solicitud
		,sol.sol_cod_nro_sol_k AS numero_solicitud
		,sol.sol_cod_est_sol AS estado
		,trunc(mae.pcom_fch_k) AS  fecha_retiro
		,mae.pcom_gls_usr_crc
		,det.pcom_coc_suc AS codigo_suc
	FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol AS sol
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe AS ofe/* nuevo */
	    ON sol.sol_cod_nro_sol_k = ofe.ofe_cod_nro_sol_k /* nuevo */
	    AND  SUBSTRING(ofe.ofe_cod_prd_ofe_k ,1,2) = '21' /* nuevo - codigo de ctacte*/
	    AND ofe.ofe_cod_ind_ngc = 1 /* nuevo - indicador de negociacion*/
	    AND ofe.ofe_cod_ind_alt = 1 /* nuevo - referencia a la alta del producto */
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar AS tar
		ON tar.tar_cod_nro_sol_k = sol.sol_cod_nro_sol_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol AS prd
		ON tar.tar_cod_nro_sol_k = prd.prd_cod_nro_sol_k
		AND tar.tar_cod_tip_prd_k = prd.prd_cod_tip_prd_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_dat_per AS per
		ON prd.prd_cod_nro_sol_k = per.per_cod_nro_sol_k
		AND sol.sol_cod_ide_cli = per.per_cod_ide_cli_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_mae_reg_evt AS mae
		ON sol.sol_nro_inn_ide  = mae.pcom_cod_ide_cli_k
		AND mae.pcom_cod_evt_k = 257
		AND  mae.pcom_desc_doc = sol.sol_cod_ide_cli
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_det_reg_evt AS det
		ON mae.pcom_nro_seq_k = det.pcom_nro_seq_k AND
		det.pcom_cod_evt_k = 257 AND
		(det.pcom_nro_ctt = SUBSTRING(tar.tar_cac_nro_ctt_k,1,4) || '-' || SUBSTRING(tar.tar_cac_nro_ctt_k,5,4) || '-' || SUBSTRING(tar.tar_cac_nro_ctt_k,9,12) OR
		det.pcom_nro_ctt = SUBSTRING(tar.tar_cac_nro_ctt_k,9,12))
	WHERE
		 SUBSTRING(tar.tar_cod_tip_prd_k,1,2) = '21'
		AND (sol.sol_cod_cll_act = 14 or sol.sol_cod_cll_ant = 14)
		AND sol.sol_cod_cll_adm = 2
		AND sol.sol_fch_crc_sol >= DATEADD(mm,-3,current_date)::date
		AND sol.sol_fch_crc_sol <= DATEADD(d,-1,current_date)::date
		AND EXISTS (SELECT
						btc_cod_nro_sol_k
		            FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
		            WHERE
		            	btc_cod_nro_sol_k = sol.sol_cod_nro_sol_k
		            	AND btc_cod_tip_reg_k = 1
		            	AND btc_cod_eta_k = 102
		            	AND btc_cod_evt_k = 30)
		AND EXISTS (SELECT
						t.cuenta
					FROM br_dm_prod_bigdata_reporitf_db.mpdt009 t
					WHERE
						t.cuenta = SUBSTRING(tar_cac_nro_ctt_k,9,12)
						AND t.codent = SUBSTRING(tar_cac_nro_ctt_k,1,4)
						AND t.centalta = SUBSTRING(tar_cac_nro_ctt_k,5,4)
						AND t.numbencta = 1
						AND t.numplastico > 1)
	ORDER BY  sol.sol_cod_nro_sol_k ASC
	;

	CREATE TABLE schm_workspace.ppff_retiro_plastico_tc AS
	SELECT DISTINCT
		sol.sol_nro_inn_ide,
		TAR.TAR_CAC_NRO_CTT_K NUMERO_CONTRATO,
		TAR.TAR_CAC_NRO_PAN_K NUMERO_TARJETA,
		SOL.SOL_COD_IDE_CLI RUT_CLIENTE,
		SOL.SOL_FCH_ALT_SOL FECHA_SOLICITUD,
		SOL.SOL_COD_NRO_SOL_K NUMERO_SOLICITUD,
		sol.sol_cod_est_sol ESTADO,
		TRUNC(MAE.PCOM_FCH_K) as fecha_retiro,
		MAE.PCOM_GLS_USR_CRC,
		DET.PCOM_COC_SUC CODIGO_SUC
	FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol AS SOL
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar AS tar
		ON (tar.tar_cod_nro_sol_k = sol.sol_cod_nro_sol_k)
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_mae_reg_evt AS mae
		ON sol.sol_nro_inn_ide  = mae.pcom_cod_ide_cli_k
		AND MAE.PCOM_COD_EVT_K in (15, 80, 230)
		and  mae.PCOM_DESC_DOC = sol.sol_cod_ide_cli
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_det_reg_evt AS det
		ON mae.pcom_nro_seq_k = det.pcom_nro_seq_k AND
		det.pcom_cod_evt_k in (15, 80, 230) AND
		(det.pcom_nro_ctt = SUBSTRING(tar.tar_cac_nro_ctt_k,1,4) || '-' || SUBSTRING(tar.tar_cac_nro_ctt_k,5,4) || '-' || SUBSTRING(tar.tar_cac_nro_ctt_k,9,12) OR
		det.pcom_nro_ctt = SUBSTRING(tar.tar_cac_nro_ctt_k,9,12))
	WHERE
		SUBSTRING(TAR.TAR_COD_TIP_PRD_K,1,2) = '01'
		and sol.sol_fch_crc_sol >= DATEADD(mm,-3,current_date)::date
		and sol.sol_fch_crc_sol <= DATEADD(d,-1,current_date)::date
		AND (SOL.SOL_COD_CLL_ACT = 14 OR SOL.SOL_COD_CLL_ANT = 14)
		AND SOL.SOL_COD_CLL_ADM = 2
		AND EXISTS (SELECT BTC_COD_NRO_SOL_K
					FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
					WHERE BTC_COD_NRO_SOL_K = SOL.SOL_COD_NRO_SOL_K
						AND BTC_COD_TIP_REG_K = 1
						AND BTC_COD_ETA_K = 102
						AND BTC_COD_EVT_K = 30)
		AND EXISTS (SELECT t.cuenta
					FROM br_dm_prod_bigdata_reporitf_db.mpdt009 t
					WHERE
						t.cuenta = SUBSTRING(tar_cac_nro_ctt_k,9,12)
						AND t.codent = SUBSTRING(tar_cac_nro_ctt_k,1,4)
						AND t.centalta = SUBSTRING(tar_cac_nro_ctt_k,5,4)
						AND t.numbencta = 1
						AND t.numplastico > 0)
	ORDER BY  sol.sol_cod_nro_sol_k ASC
	;

	CREATE TABLE schm_workspace.ppff_final3 AS
	SELECT DISTINCT
		a.*
		,CASE
			WHEN a.tipo_captacion='PRESENCIAL' THEN 1
			WHEN a.tipo_tarjeta='CUENTA CORRIENTE' AND a.tipo_captacion='ONLINE' AND b.rut_cliente IS NOT NULL THEN 1
			WHEN a.tipo_tarjeta='CUENTA CORRIENTE' AND a.tipo_captacion='ONLINE' AND b.rut_cliente IS NULL THEN 0
			WHEN a.tipo_tarjeta<>'CUENTA CORRIENTE' AND a.tipo_captacion='ONLINE' AND c.rut_cliente IS NOT NULL THEN 1
			WHEN a.tipo_tarjeta<>'CUENTA CORRIENTE' AND a.tipo_captacion='ONLINE' AND c.rut_cliente IS NULL THEN 0
		END AS retiro_plastico
	FROM schm_workspace.ppff_final2 AS a
	LEFT JOIN schm_workspace.ppff_retiro_debito AS b
		ON a.id_usuario = b.rut_cliente
	LEFT JOIN schm_workspace.ppff_retiro_plastico_tc AS c
		ON a.id_usuario = c.rut_cliente
	;

	CREATE TABLE schm_workspace.ppff_panes AS
	SELECT DISTINCT
		rut
		,codent
		,centalta
		,cuenta
		,tipo_tarjeta
		,CONVERT(varchar,feccadtar*100+01) AS fec_ven
		,codblq
		,motivo_bloqueo
		,t_tr_vig
		,pan
	FROM schm_data_analytics.clts_universo_panes
	WHERE
		indulttar = 'S'
		AND indsittar = 5
		AND calpart = 'TI'
	;

	CREATE TABLE schm_workspace.ppff_tr_tarjetas AS
	SELECT DISTINCT
		a.id_usuario
		,a.tipo_tarjeta
		,a.tipo_captacion
		,to_char(a.fecha_captacion, 'MM/dd/yyyy')::varchar AS fecha_captacion
		,a.abono_monto
		,to_char(a.fecha_ultimo_abono, 'MM/dd/yyyy')::varchar AS fecha_ultimo_abono
		,a.retiro_plastico
		,CASE
			WHEN a.estado<>'sin_cc' THEN a.estado
			WHEN a.estado='sin_cc' AND b.codblq<>0 THEN b.motivo_bloqueo
			WHEN a.estado='sin_cc' AND b.codblq=0 THEN 'sin_bloqueo'
		END AS estado
		,to_char(CONVERT(datetime, b.fec_ven), 'MM/dd/yyyy') AS fecha_vencimiento
	FROM schm_workspace.ppff_final3 AS a
	LEFT JOIN schm_workspace.ppff_panes AS b
		ON a.cuenta=b.cuenta AND a.id_usuario=b.rut
	;

	CREATE TABLE schm_data_analytics.ppff_tr_tarjetas AS
	SELECT *
    FROM schm_workspace.ppff_tr_tarjetas;

	DROP TABLE IF EXISTS schm_workspace.ppff_captados;
	DROP TABLE IF EXISTS schm_workspace.ppff_mov_Cuenta_Corriente;
	DROP TABLE IF EXISTS schm_workspace.ppff_max_fecha;
	DROP TABLE IF EXISTS schm_workspace.ppff_abono;
	DROP TABLE IF EXISTS schm_workspace.ppff_abono2;
	DROP TABLE IF EXISTS schm_workspace.ppff_mpdt666;
	DROP TABLE IF EXISTS schm_workspace.ppff_captados1;
	DROP TABLE IF EXISTS schm_workspace.ppff_tabla_final;
	DROP TABLE IF EXISTS schm_workspace.ppff_estado_cc;
	DROP TABLE IF EXISTS schm_workspace.ppff_final2;
	DROP TABLE IF EXISTS schm_workspace.ppff_retiro_debito;
	DROP TABLE IF EXISTS schm_workspace.ppff_retiro_plastico_tc;
	DROP TABLE IF EXISTS schm_workspace.ppff_final3;
	DROP TABLE IF EXISTS schm_workspace.ppff_panes;
	DROP TABLE IF EXISTS schm_workspace.ppff_tr_tarjetas;

    EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-raw/bigdata/campaign/CAMPAIGN_INPUT_TR_TARJETAS/' || v_nombre_campaing || '_' || v_fecha || '_0-' || v_user || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
    RETURN;

END




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_camp_push_cupon_capta(v_id_beneficio varchar, v_nombre_campaing varchar, v_user varchar, v_fecha varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.capta_ayer;
    DROP TABLE IF EXISTS schm_workspace.capta_ayer_dv;
    DROP TABLE IF EXISTS schm_data_analytics.cupon_capta ;

    CREATE TABLE schm_workspace.capta_ayer AS
    SELECT
    	rut_cliente
    	,1 AS campana_ind_rut_dup_camp
    	,fecha
    	,v_id_beneficio AS campana_id_beneficio
    	,via
    	,producto
    FROM
    	br_dm_prod_bigdata_sftp_db.capta_salida
    WHERE
    	fecha >= (dateadd(DAY,-1,current_date))
    AND via = 'HOMEBANKING'
    AND producto IN('CAMBIO DE PRODUCTO', 'MASTERCARD_BLACK', 'TAM', 'TAM_CERRADA', 'TAM_CUOTAS', 'TR')
    ORDER BY
    fecha
    ;


    CREATE TABLE schm_workspace.capta_ayer_dv AS
    SELECT
    	a.rut_cliente
    	,a.rut_cliente || b.pemid_dvr_nro_dct_ide AS cliente_id_usuario_dv
    	,a.fecha
    	,a.campana_ind_rut_dup_camp
    	,a.campana_id_beneficio
    	,via
    	,producto
    FROM
    	schm_workspace.capta_ayer a
    INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide b
    ON
    	a.rut_cliente = b.pemid_gls_nro_dct_ide_k::integer
    ;

    --SELECT * FROM schm_workspace.capta_ayer_dv;

    CREATE TABLE schm_data_analytics.cupon_capta
    ( "CAMPANA-CAMPCODE" VARCHAR(20)
    	,"CAMPANA-AREA" VARCHAR(20)
    	,"CAMPANA-PRODUCTO" VARCHAR(20)
    	,"CAMPANA-CAMPANA" VARCHAR(20)
    	,"CAMPANA-FECHA" VARCHAR(38)
    	,"CAMPANA-CUSTOMERID" INTEGER
    	,"CAMPANA-CANAL" VARCHAR(50)
    	,"CAMPANA-RUT_PUSH" VARCHAR(38)
    	,"CAMPANA-ID_USUARIO" INTEGER
    	,"CLIENTE-ID_USUARIO" INTEGER
    	,"CAMPANA-IND_RUT_DUP_CAMP" INTEGER
    	,"CAMPANA-ID_BENEFICIO" VARCHAR(200)
    	);

    INSERT INTO schm_data_analytics.cupon_capta
    ("CAMPANA-CAMPCODE"
    ,"CAMPANA-AREA"
    ,"CAMPANA-PRODUCTO"
    ,"CAMPANA-CAMPANA"
    ,"CAMPANA-FECHA"
    ,"CAMPANA-CUSTOMERID"
    ,"CAMPANA-CANAL"
    ,"CAMPANA-RUT_PUSH"
    ,"CAMPANA-ID_USUARIO"
    ,"CLIENTE-ID_USUARIO"
    ,"CAMPANA-IND_RUT_DUP_CAMP"
    ,"CAMPANA-ID_BENEFICIO")

    VALUES('20231115CPTBNF','CPT','BNF','CAPTA CUPON','05/15/2023',19422704,'PUSH','194227043',19422704,19422704,0,'jqK13atEC8dfIXxxu9OP;');

    --CALL schm_artifacts.sp_camp_push_cupon_capta('jqK13atEC8dfIXxxu9OP','CAMPAIGN_INPUT_FIREBASE_CUPON_CAPTA','SJARAM',schm_artifacts.f_period(getdate()::DATE),'select * from schm_workspace.cupon_capta')
    
    EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-raw/bigdata/campaign/CAMPAIGN_INPUT_FIREBASE_CUPON_CAPTA/' || v_nombre_campaing || '_' || v_fecha || '_0-' || v_user || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER REMOVEQUOTES ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
    RETURN;

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_camp_reporte_journeys(v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
	
	
     BEGIN

	DROP TABLE IF EXISTS schm_workspace.camp_enviados_journey;
	DROP TABLE IF EXISTS schm_workspace.camp_abiertos_journey;
	DROP TABLE IF EXISTS schm_workspace.camp_sup;
	DROP TABLE IF EXISTS schm_workspace.camp_desuscritos;
	DROP TABLE IF EXISTS schm_workspace.camp_rebotes;
	DROP TABLE IF EXISTS schm_workspace.camp_spam;
	DROP TABLE IF EXISTS schm_workspace.camp_ctr;
	DROP TABLE IF EXISTS schm_workspace.camp_toda;
	DROP TABLE IF EXISTS schm_data_analytics.reporte_journeys;

-- tabla enviados
	CREATE TABLE schm_workspace.camp_enviados_journey AS
	SELECT
	    mailing_name
	    ,id_usuario
	    ,codigo
	    ,producto
	    ,periodo
	    ,event_type
	    ,b.nombre_programa
	    ,b.nombre_step_acoustic
	    ,min(event_timestamp) fecha_envio
	FROM
	    br_dm_prod_bigdata_campaign_db.campaign_output_email AS a
	INNER JOIN schm_campanas.flujos_journey AS b 
	ON
	    a.mailing_name = b.nombre_envio
	WHERE
	    periodo >= v_periodo
	    --Puede ser Parámetro
	    AND event_type in ('Sent','Suppressed')
	GROUP BY
	    1,2,3,4,5,6,7,8
	;
	
	-- TABLA ABIERTOS
	CREATE TABLE schm_workspace.camp_abiertos_journey AS
	SELECT
	    mailing_name
	    ,id_usuario
	    ,min(event_timestamp) fecha_apertura
	FROM
	    br_dm_prod_bigdata_campaign_db.campaign_output_email AS a
	INNER JOIN schm_campanas.flujos_journey AS b 
	ON
	    a.mailing_name = b.nombre_envio
	WHERE
	    periodo >= v_periodo
	    AND event_type = 'Open'
	GROUP BY
	    1,2
	;
	
	-- TABLA Suppressed
	CREATE TABLE schm_workspace.camp_sup AS
	SELECT
	    mailing_name
	    ,id_usuario 
	    ,min(event_timestamp) fecha_suppressed
	FROM
	    br_dm_prod_bigdata_campaign_db.campaign_output_email AS a
	INNER JOIN schm_campanas.flujos_journey AS b 
	ON
	    a.mailing_name = b.nombre_envio
	WHERE
	    periodo >= v_periodo
	    AND event_type = 'Suppressed'
	GROUP BY
	    1,2
	;
	
	-- TABLA DESUSCRITOS
	CREATE TABLE schm_workspace.camp_desuscritos AS
	SELECT
	    mailing_name
	    ,id_usuario 
	    ,min(event_timestamp) fecha_desuscrito
	FROM
	    br_dm_prod_bigdata_campaign_db.campaign_output_email AS a
	INNER JOIN schm_campanas.flujos_journey AS b 
	ON
	    a.mailing_name = b.nombre_envio
	WHERE
	    periodo >= v_periodo
	    AND event_type = 'Opt Out'
	GROUP BY
	    1,2
	;
	
	-- TABLA REBOTES
	CREATE TABLE schm_workspace.camp_rebotes AS
	SELECT
	    mailing_name
	    ,id_usuario 
	    ,min (event_timestamp) fecha_rebote
	FROM
	    br_dm_prod_bigdata_campaign_db.campaign_output_email AS a
	INNER JOIN schm_campanas.flujos_journey AS b 
	ON
	    a.mailing_name = b.nombre_envio
	WHERE
	    periodo >= v_periodo
	    AND event_type IN ('Hard Bounce', 'Soft Bounce')
	GROUP BY
	    1,2
	;
	
	-- TABLA SPAM
	CREATE TABLE schm_workspace.camp_spam AS
	SELECT
	    mailing_name
	    ,id_usuario 
	    ,min(event_timestamp) fecha_spam
	FROM
	    br_dm_prod_bigdata_campaign_db.campaign_output_email AS a
	INNER JOIN schm_campanas.flujos_journey AS b 
	ON
	    a.mailing_name = b.nombre_envio
	WHERE
	    periodo >= v_periodo
	    AND event_type IN ('Reply Abuse', 'Reply Mail Block')
	GROUP BY
	    1,2
	;
	
	-- TABLA Click Through
	CREATE TABLE schm_workspace.camp_ctr AS
	SELECT
	    mailing_name
	    ,id_usuario 
	    ,min (event_timestamp) fecha_ctr
	FROM
	    br_dm_prod_bigdata_campaign_db.campaign_output_email AS a
	INNER JOIN schm_campanas.flujos_journey AS b 
	ON
	    a.mailing_name = b.nombre_envio
	WHERE
	    periodo >= v_periodo
	    AND event_type = 'Click Through'
	GROUP BY
	    1,2
	;
	
	--UNION TABLAS
	CREATE TABLE schm_workspace.camp_toda AS 
	SELECT
	    a.mailing_name 
	    ,a.id_usuario 
	    ,a.codigo
	    ,a.producto 
	    ,a.periodo
	    ,a.Fecha_envio
	    ,a.nombre_programa
	    ,a.nombre_step_acoustic
	    ,fecha_apertura
	    ,fecha_ctr
	    ,fecha_spam
	    ,fecha_rebote
	    ,fecha_desuscrito
	    ,fecha_suppressed
	FROM 
	    schm_workspace.camp_enviados_journey AS a
	LEFT JOIN 
	    schm_workspace.camp_abiertos_journey AS b
	ON 
	    a.id_usuario = b.id_usuario
	    AND 
	    a.mailing_name = b.mailing_name
	    AND 
	    a.fecha_envio <= b.fecha_apertura
	LEFT JOIN 
	    schm_workspace.camp_sup AS c
	ON 
	    a.id_usuario = c.id_usuario
	    AND 
	    a.mailing_name = c.mailing_name
	    AND 
	    a.fecha_envio <= c.fecha_suppressed
	LEFT JOIN 
	    schm_workspace.camp_desuscritos AS d
	ON 
	    a.id_usuario = d.id_usuario
	    AND 
	    a.mailing_name = d.mailing_name
	    AND 
	    a.fecha_envio <= d.fecha_desuscrito
	LEFT JOIN 
	    schm_workspace.camp_rebotes AS e
	ON 
	    a.id_usuario = e.id_usuario
	    AND 
	    a.mailing_name = e.mailing_name
	    AND 
	    a.fecha_envio <= e.fecha_rebote
	LEFT JOIN 
	    schm_workspace.camp_spam AS f
	ON 
	    a.id_usuario = f.id_usuario
	    AND 
	    a.mailing_name = f.mailing_name
	    AND 
	    a.fecha_envio <= f.fecha_spam
	LEFT JOIN 
	    schm_workspace.camp_ctr AS g
	ON
	    a.id_usuario = g.id_usuario
	    AND a.mailing_name = g.mailing_name
	    AND a.fecha_envio <= g.fecha_ctr
	;
	
	--TABLA RESUMEN
	
	CREATE TABLE schm_data_analytics.reporte_journeys AS
	SELECT
	    mailing_name
	    ,codigo
	    ,producto
	    ,periodo
	    ,fecha_envio
	    ,nombre_programa
	    ,nombre_step_acoustic
	    ,count(DISTINCT id_usuario) n_cli
	    ,count(DISTINCT id_usuario) enviados
	    ,sum(CASE WHEN fecha_apertura IS NOT NULL THEN 1 ELSE 0 END) abiertos
	    ,sum(CASE WHEN fecha_ctr IS NOT NULL THEN 1 ELSE 0 END) ctr
	    ,sum(CASE WHEN fecha_spam IS NOT NULL THEN 1 ELSE 0 END) spam
	    ,sum(CASE WHEN fecha_rebote IS NOT NULL THEN 1 ELSE 0 END) rebotes
	    ,sum(CASE WHEN fecha_desuscrito IS NOT NULL THEN 1 ELSE 0 END) desuscritos
	    ,sum(CASE WHEN fecha_suppressed IS NOT NULL THEN 1 ELSE 0 END) suppressed
	FROM
	    schm_workspace.camp_toda
	GROUP BY
	    1,2,3,4,5,6,7
	ORDER BY
	    1,2,3,4,5,6,7
	;
	
	DROP TABLE IF EXISTS schm_workspace.camp_enviados_journey;
	DROP TABLE IF EXISTS schm_workspace.camp_abiertos_journey;
	DROP TABLE IF EXISTS schm_workspace.camp_sup;
	DROP TABLE IF EXISTS schm_workspace.camp_desuscritos;
	DROP TABLE IF EXISTS schm_workspace.camp_rebotes;
	DROP TABLE IF EXISTS schm_workspace.camp_spam;
	DROP TABLE IF EXISTS schm_workspace.camp_ctr;
	DROP TABLE IF EXISTS schm_workspace.camp_toda;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-11-08	-- v02	--	Natalia Vargas    -- Cambio en el conteo de envios para evitar mostrar duplicidad envio.
	2023-00-00	-- v01	--	Fernanda Martinez -- Versión original.

	=== Información adicional:
	Proceso que alimenta panel reporte journeys. Utiliza tablas resultantes email para entender KPI de envios, aperturas, rebotes y otras.
	===========================================================================================================
*/


END;




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_camp_rmkt_tcchek(v_proceso varchar, v_fecha int4, v_user varchar, v_query varchar, v_period int4)
	LANGUAGE plpgsql
AS $$
	 
BEGIN

DROP TABLE IF EXISTS schm_workspace.stock_tc_chek;
DROP TABLE IF exists schm_workspace.stock_flujotc_1;
DROP TABLE IF exists schm_workspace.stock_flujotc_2;
DROP TABLE IF exists schm_workspace.stock_flujotc_3;
DROP TABLE IF EXISTS schm_workspace.flujotc;
DROP TABLE IF EXISTS schm_workspace.filtros_hig;
DROP TABLE IF EXISTS schm_workspace.rg_basepaso ;
DROP TABLE IF exists schm_campanas.rmkt_tcchek;	

CREATE TABLE schm_workspace.stock_tc_chek AS (
    SELECT 
    	nationalid, 
    	contract
    FROM br_dm_prod_bigdata_chekapp_db.access
    WHERE type='credito-chek-mastercard');   
   
CREATE TABLE schm_workspace.stock_flujotc_1 AS (  
 SELECT
	    user_id,
	    event_name,
	    to_char(to_date(event_date, 'YYYYMMDD'), 'YYYY-MM-DD')::date as event_date
	FROM "br_dm_prod_bigdata_analytics_digital_db"."chek_google_analytics"
	WHERE (1=1)
	    AND event_name in ('modal_captacion_tc_enter')
	    AND to_char(to_date(event_date, 'YYYYMMDD'), 'YYYY-MM-DD')::date >=  TO_CHAR(GETDATE() - INTERVAL '1 days', 'YYYY-MM-DD')
	    AND to_char(to_date(event_date, 'YYYYMMDD'), 'YYYY-MM-DD')::date <=  current_date);
	   
CREATE TABLE schm_workspace.stock_flujotc_2 AS ( 	   
	SELECT
	    user_id,
	    event_name,
	    to_char(to_date(event_date, 'YYYYMMDD'), 'YYYY-MM-DD')::date as event_date
	FROM "br_dm_prod_bigdata_analytics_digital_db"."chek_google_analytics_intraday"
	WHERE (1=1)
	    AND event_name in ('modal_captacion_tc_enter')
	    AND to_char(to_date(event_date, 'YYYYMMDD'), 'YYYY-MM-DD')::date >=  TO_CHAR(GETDATE() - INTERVAL '1 days', 'YYYY-MM-DD')
	    AND to_char(to_date(event_date, 'YYYYMMDD'), 'YYYY-MM-DD')::date <=  current_date);

CREATE TABLE schm_workspace.stock_flujotc_3 AS ( 
	select 
		user_id,
		event_name,
		event_date
	from schm_workspace.stock_flujotc_1   
	UNION
	select 
		user_id,
		event_name,
		event_date
	from schm_workspace.stock_flujotc_2);

CREATE TABLE schm_workspace.flujotc as
	SELECT 
		distinct a.user_id,
		regexp_replace(b.nationalid, '[^0-9K]+', '') as nationalid,
    	a.event_date
	FROM schm_workspace.stock_flujotc_3 a
	LEFT JOIN "br_dm_prod_bigdata_chekapp_db"."chek_users" b
	    ON (a.user_id = b.id)
	    AND length(b.nationalid) > 2
	LEFT JOIN schm_workspace.stock_tc_chek c
	    ON b.nationalid = c.nationalid
	WHERE (1=1)
	    AND (CASE WHEN c.nationalid IS NULL THEN 0 ELSE 1 END) = 0 
	    AND b.nationalid is not null;  

CREATE TABLE schm_workspace.filtros_hig as
SELECT DISTINCT 
rut,
1 AS lnegra_rut
 FROM (
SELECT rut FROM schm_data_analytics.ctbl_lnegro_call
UNION
SELECT rut FROM schm_data_analytics.ctbl_lnegro_car
UNION
SELECT rut FROM schm_data_analytics.ctbl_lnegro_email)
;

CREATE TABLE schm_workspace.rg_basepaso AS
SELECT DISTINCT 
t1.nationalid,
t2.email
FROM schm_workspace.flujotc t1
INNER JOIN schm_digital.dgtl_chek_master t2
on(t1.nationalid= t2.nationalid)
LEFT JOIN schm_workspace.filtros_hig t3
on(cast(trim(substring(t1.nationalid,1,length(t1.nationalid)-1)) as numeric) =t3.rut)
WHERE t3.rut is null;  

	CREATE TABLE schm_campanas.rmkt_tcchek
			("campana-campcode" varchar(50)
			,"campana-area"varchar(50)
			,"campana-producto" varchar(50)
			,"campana-campana" varchar(50)
			,"campana-fecha"varchar(38)
			,"campana-customerid" integer --OK
			,"cliente-email"varchar(50)
			,"cliente-nombre" varchar(50)
			,"campana-canal" varchar(50)
			,"campana-id_usuario" integer
			,"cliente-id_usuario" integer
			,"campana-ind_rut_dup_camp" integer
			);		
		INSERT INTO schm_campanas.rmkt_tcchek
			("campana-campcode"
			,"campana-area"
			,"campana-producto"
			,"campana-campana"
			,"campana-fecha"
			,"campana-customerid"
			,"cliente-email"
			,"cliente-nombre"
			,"campana-canal"
			,"campana-id_usuario"
			,"cliente-id_usuario"
			,"campana-ind_rut_dup_camp"
			)
			SELECT 
				to_char(current_date, 'YYYYMMDD')||'TDA',
				'CHEK',
				'CHEK',
				'EMAIL_RMKT_TCCHEK',
				to_char(current_date,'MM/dd/YYYY'),
				cast(substring(nationalid,1,length(nationalid) - 1) as INTEGER),
				email,
				'',
				'email',
				cast(substring(nationalid,1,length(nationalid) - 1) as INTEGER),
				cast(substring(nationalid,1,length(nationalid) - 1) as INTEGER),
				0
			FROM schm_workspace.rg_basepaso ;

DROP TABLE IF EXISTS schm_workspace.stock_tc_chek;
DROP TABLE IF exists schm_workspace.stock_flujotc_1;
DROP TABLE IF exists schm_workspace.stock_flujotc_2;
DROP TABLE IF exists schm_workspace.stock_flujotc_3;
DROP TABLE IF EXISTS schm_workspace.flujotc;
DROP TABLE IF EXISTS schm_workspace.filtros_hig;
DROP TABLE IF EXISTS schm_workspace.rg_basepaso ;

EXECUTE
	'UNLOAD('
	|| quote_literal(v_query)
	|| ') to ''s3://br-dm-prod-us-east-1-837538682169-raw/bigdata/campaign/'
	|| v_proceso
	|| '/'
	|| v_proceso
	|| '_'
	|| v_fecha
	|| '_0-'
	|| v_user
	|| ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER	ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
RETURN;

END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_camp_rpass(v_proceso varchar, v_fecha int4, v_user varchar, v_query varchar, v_period int4)
	LANGUAGE plpgsql
AS $$
	 

	BEGIN	
	
	DROP TABLE IF EXISTS schm_workspace.captados_temp;
	DROP TABLE IF EXISTS schm_workspace.noenrolados_temp;
	DROP TABLE IF EXISTS schm_workspace.filtros_hig;
	DROP TABLE IF EXISTS schm_workspace.enviofin;
	DROP TABLE IF exists schm_campanas.camp_rpass;
	
	
	CREATE TABLE schm_workspace.captados_temp as
	SELECT DISTINCT 
		t1.rut_cliente,
		t2.email
	FROM br_dm_prod_bigdata_sftp_db.capta_salida t1 --ok
	inner join schm_data_analytics.ctbl_base_trabajo_email t2 --ok
		on (t1.rut_cliente = t2.rut)
	WHERE t1.fecha >= TO_CHAR(GETDATE() - INTERVAL '21 days', 'YYYY-MM-DD') 
		and t1.fecha <= TO_CHAR(GETDATE() - INTERVAL '14 days', 'YYYY-MM-DD');
	
	CREATE TABLE schm_workspace.noenrolados_temp as
	select  
		distinct trim(substring(identificador_usuario,1,length(identificador_usuario)-1)) AS rut
	FROM "br_dm_prod_bigdata_idnow_db"."reporte_enrolamientos"
	where tipo_enrolamiento in ('RIPLEY CHILE PIN','RIPLEY RE ENROLL PIN') 
		and nombre_paso = 'FINALIZAR ENROLAMIENTO' and estado_paso='A';
	
	
	CREATE TABLE schm_workspace.filtros_hig as
	SELECT DISTINCT 
		rut, 
		1 AS lnegra_rut
	FROM (
		SELECT rut FROM schm_data_analytics.ctbl_lnegro_call
		UNION
		SELECT rut FROM schm_data_analytics.ctbl_lnegro_car
		UNION
		SELECT rut FROM schm_data_analytics.ctbl_lnegro_email
		);
	
	CREATE TABLE schm_workspace.enviofin AS
	SELECT DISTINCT 
		t1.rut_cliente AS rut,
		t1.email, 
		t4.nombres 
	FROM schm_workspace.captados_temp t1
	LEFT JOIN schm_workspace.noenrolados_temp t2
		on (t1.rut_cliente::varchar=t2.rut)
	LEFT JOIN schm_workspace.filtros_hig t3
		on (t1.rut_cliente=t3.rut)
	left join schm_data_analytics.ctbl_base_nombres t4
		on (t1.rut_cliente=t4.rut)
	WHERE t2.rut IS NULL
		AND t3.rut IS null;


	CREATE TABLE schm_campanas.camp_rpass
		("campana-campcode" varchar(50)
		,"campana-area"varchar(50)
		,"campana-producto" varchar(50)
		,"campana-campana" varchar(50)
		,"campana-fecha"varchar(38)
		,"campana-customerid" integer --OK
		,"cliente-email"varchar(50)
		,"cliente-nombre" varchar(50)
		,"campana-canal" varchar(50)
		,"campana-id_usuario" integer
		,"cliente-id_usuario" integer
		,"campana-ind_rut_dup_camp" integer
		);		
	
	INSERT INTO schm_campanas.camp_rpass
		("campana-campcode"
		,"campana-area"
		,"campana-producto"
		,"campana-campana"
		,"campana-fecha"
		,"campana-customerid"
		,"cliente-email"
		,"cliente-nombre"
		,"campana-canal"
		,"campana-id_usuario"
		,"cliente-id_usuario"
		,"campana-ind_rut_dup_camp"
		)
		SELECT 
			to_char(current_date, 'YYYYMMDD')||'TDA',
			'CHEK',
			'CHEK',
			'EMAIL_RPASS',
			to_char(current_date,'MM/dd/YYYY'),
			rut,
			email,
			nombres,
			'email',
			rut ,
			rut ,
			0
		FROM schm_workspace.enviofin ;

	DROP TABLE IF EXISTS schm_workspace.captados_temp;
	DROP TABLE IF EXISTS schm_workspace.noenrolados_temp;
	DROP TABLE IF EXISTS schm_workspace.filtros_hig;
	DROP TABLE IF EXISTS schm_workspace.enviofin;

EXECUTE
	'UNLOAD('
	|| quote_literal(v_query)
	|| ') to ''s3://br-dm-prod-us-east-1-837538682169-raw/bigdata/campaign/'
	|| v_proceso
	|| '/'
	|| v_proceso
	|| '_'
	|| v_fecha
	|| '_0-'
	|| v_user
	|| ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER	ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
RETURN;

END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_camp_score(v_periodo int4)
	LANGUAGE plpgsql
AS $$
	


     BEGIN

DROP TABLE IF EXISTS schm_workspace.camp_Enviados;
DROP TABLE IF EXISTS schm_workspace.camp_Abiertos;
DROP TABLE IF EXISTS schm_workspace.camp_Enviados_Abiertos;
DROP TABLE IF EXISTS schm_workspace.camp_tabla1;
DROP TABLE IF EXISTS schm_workspace.camp_tabla2;
DROP TABLE IF EXISTS schm_workspace.camp_MinMax;
DROP TABLE IF EXISTS schm_workspace.camp_Resultado;
DROP TABLE IF EXISTS schm_workspace.camp_faltantes;
DROP TABLE IF EXISTS schm_workspace.camp_clientes_vu;
DROP TABLE IF EXISTS schm_data_analytics.camp_deciles;

-- TABLA ENVIADOS
CREATE  TABLE schm_workspace.camp_Enviados as
    SELECT
        email,
        report_id,
        mailing_id,
        mailing_name,
        id_usuario,
        periodo,
        event_type,
        recipient_id ,
        min(event_timestamp)Fecha_envio
    FROM
        br_dm_prod_bigdata_campaign_db.campaign_output_email
    WHERE
        periodo >= v_periodo
    --event_timestamp >='2023-01-01' --and event_timestamp <='2023-07-23'
    AND
        event_type IN ('Sent','Suppressed')--Correccion
    GROUP BY 1,2,3,4,5,6,7,8;

-- TABLA ABIERTOS
CREATE TABLE schm_workspace.camp_Abiertos AS
    SELECT
        email,
        report_id,
        mailing_id,
        mailing_name,
        id_usuario,
        periodo,
        event_type,
        recipient_id,
        min(event_timestamp)Fecha_Apertura
    FROM
        br_dm_prod_bigdata_campaign_db.campaign_output_email
    WHERE
        periodo >= v_periodo
    AND
        event_type = 'Open'
    GROUP BY
        1,2,3,4,5,6,7,8;

--UNION AMBAS TABLAS
CREATE TABLE schm_workspace.camp_Enviados_Abiertos as
    SELECT
        a.email,
        a.report_id,
        a.mailing_name,
        a.mailing_id,
        a.id_usuario,
        a.periodo,
        a.Fecha_envio,
        a.recipient_id,
        b.Fecha_Apertura,
        b.event_type
    FROM
        schm_workspace.camp_Enviados as a
    LEFT JOIN
        schm_workspace.camp_Abiertos as b
    ON
        a.id_usuario= b.id_usuario
    AND
        a.mailing_name = b.mailing_name
    AND
        a.periodo = b.periodo
    AND
        a.report_id=b.report_id
    AND
        a.mailing_id=b.mailing_id
    AND
        a.recipient_id=b.recipient_id;


--TABLA QUE CALCULA LA FRECUENCIA Y FECHA DE APERTURA
CREATE TABLE schm_workspace.camp_tabla1 as
    SELECT
        email,
        id_usuario,
        sum(case when Fecha_Apertura is not null then 1 else 0 end) Frecuencia_Apertura,
        max(Fecha_Apertura) fecha
    FROM
        schm_workspace.camp_Enviados_Abiertos
    WHERE
        DATEDIFF(DAY, cast(Fecha_envio AS date), cast(Fecha_Apertura AS date)) <= 7
    AND
        Fecha_Apertura >= Fecha_envio
    GROUP BY
        email,
        id_usuario;

--TABLA QUE CUENTA LOS ENVIADOS Y CREA MARCA DE CONTACTO CON BASE A LOS ENVIADOS
CREATE TABLE schm_workspace.camp_tabla2 as
    SELECT
        email,
        count(1) Enviados,
        CASE WHEN Enviados > 1 THEN 1 ELSE 0 END AS marca_contacto
    FROM
        schm_workspace.camp_Enviados_Abiertos
    GROUP BY
        email;

--TABLA QUE CREA EL MINIMO Y EL MAXIMO PARA LAS COLUMNAS FRECUENCIAS Y FECHA
CREATE TABLE schm_workspace.camp_MinMax AS
    SELECT
        min(DATEDIFF(DAY, GETDATE(),fecha)) as MinDiferenciaDias,
        max(DATEDIFF(DAY, GETDATE(),fecha)) as MaxDiferenciaDias,
        min(Frecuencia_Apertura) as MinFrec,
        max(Frecuencia_Apertura) as MaxFrec
    FROM
        schm_workspace.camp_tabla1;

--TABLA QUE CREA LAS COLUMNAS NORMALIZADAS Y LA SUMA DE ESTAS (SCORE)
CREATE TABLE schm_workspace.camp_Resultado AS
    SELECT
        t1.email,
        t1.Frecuencia_Apertura,
        t1.fecha,
        t1.id_usuario,
        t2.Enviados,
        t2.marca_contacto,
        DATEDIFF(DAY,GETDATE(), t1.fecha) AS Recencia_Apertura,
        cast((t1.Frecuencia_Apertura - m.MinFrec) AS decimal) / cast((m.MaxFrec - m.MinFrec) AS decimal) AS NormalizedFrec,
        cast((DATEDIFF(DAY,  GETDATE(),t1.fecha) - m.MinDiferenciaDias) AS decimal) / cast((m.MaxDiferenciaDias - m.MinDiferenciaDias) AS decimal) AS NormalizedDiferenciaDias,
        cast((t1.Frecuencia_Apertura - m.MinFrec) AS decimal) / cast((m.MaxFrec - m.MinFrec) AS decimal) + cast((DATEDIFF(DAY, GETDATE(),t1.fecha) - m.MinDiferenciaDias) AS decimal) / cast((m.MaxDiferenciaDias - m.MinDiferenciaDias) AS decimal) AS Score_Apertura
    FROM
        schm_workspace.camp_tabla1 t1
    LEFT JOIN
        schm_workspace.camp_tabla2 t2 ON t1.email = t2.email
    CROSS JOIN
        schm_workspace.camp_MinMax m;

--TABLA QUE TRAE CLIENTES QUE ESTAN EN LA DATAMASTER Y NO EN LA OUTPUT_EMAIL
CREATE TABLE  schm_workspace.camp_faltantes AS
    SELECT
        t1.rut,
        t1.email
    FROM schm_data_analytics.data_master t1
    LEFT JOIN br_dm_prod_bigdata_campaign_db.campaign_output_email t2 ON t1.rut = t2.id_usuario AND t2.id_usuario <> 'Chek@chek.cl'
    WHERE t2.id_usuario IS NULL;


--TABLA QUE CALCULA LOS DECILES
CREATE TABLE schm_data_analytics.camp_deciles as
    SELECT
        *,
        NTILE(10) OVER(ORDER BY Score_Apertura) AS Decil_Apertura
    FROM
        schm_workspace.camp_Resultado
    WHERE id_usuario NOT LIKE '%@%';


--SE INSERTAN CLIENTES QUE NO ESTAN EN LA OUTPUT EMAIL PERO QUE SI ESTAN EN LA DATAMASTER CON DECIL 11
INSERT INTO schm_data_analytics.camp_deciles
SELECT
    email,
    0 AS frecuencia_apertura ,
    NULL AS fecha,
    rut AS id_usuario,
    0 AS enviados,
    0 AS marca_contacto ,
    0 AS recencia_apertura,
    0 as normalizedfrec,
    0 AS normalizeddiferenciadias,
    0 AS score_apertura,
    11 AS decil_apertura
FROM schm_workspace.camp_faltantes;

--TABLA QUE TRAE CLIENTES VU CON CORREO
CREATE TABLE schm_workspace.camp_clientes_vu AS
    SELECT DISTINCT a.rut,b.email
        FROM (            SELECT rut
            FROM  schm_data_analytics.bitr_actividad_tr
            WHERE
                vu_c_prima='VU'
            AND periodo = (SELECT max(periodo) FROM schm_data_analytics.bitr_actividad_tr ) )AS a
    LEFT JOIN schm_data_analytics.ctbl_base_trabajo_email AS b
    ON
        a.rut = b.rut
    LEFT JOIN  schm_data_analytics.camp_deciles  as c
    ON a.rut:: varchar = trim(c.id_usuario)
    WHERE
        b.email IS NOT null and c.id_usuario is null;

--SE INSERTA EN LA TABLA DECILES LOS CLIENTES VU CON CORREO ELECTRONICO EN DECIL 12
INSERT INTO schm_data_analytics.camp_deciles
SELECT
    email,
    0 AS frecuencia_apertura ,
    NULL AS fecha,
    rut AS id_usuario,
    0 AS enviados,
    0 AS marca_contacto ,
    0 AS recencia_apertura,
    0 as normalizedfrec,
    0 AS normalizeddiferenciadias,
    0 AS score_apertura,
    12 AS decil_apertura
FROM schm_workspace.camp_clientes_vu;

DROP TABLE IF EXISTS schm_workspace.camp_Enviados;
DROP TABLE IF EXISTS schm_workspace.camp_Abiertos;
DROP TABLE IF EXISTS schm_workspace.camp_Enviados_Abiertos;
DROP TABLE IF EXISTS schm_workspace.camp_tabla1;
DROP TABLE IF EXISTS schm_workspace.camp_tabla2;
DROP TABLE IF EXISTS schm_workspace.camp_MinMax;
DROP TABLE IF EXISTS schm_workspace.camp_Resultado;
DROP TABLE IF EXISTS schm_workspace.camp_faltantes;
DROP TABLE IF EXISTS schm_workspace.camp_clientes_vu;

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_camp_tr_pagos_tc(v_nombre_campaing varchar, v_user varchar, v_fecha varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.onb_pagos_base;
    DROP TABLE IF EXISTS schm_workspace.onb_pagos;
    DROP TABLE IF EXISTS schm_workspace.onb_pagos_dvn;
    DROP TABLE IF EXISTS schm_workspace.onb_pagos_ruts;
    DROP TABLE IF EXISTS schm_workspace.onb_pagos_for_pagos;
    DROP TABLE IF EXISTS schm_workspace.onb_pagos_for_for_pagos;
    DROP TABLE IF EXISTS schm_data_analytics.input_tr_pagos_tc;

    create table schm_workspace.onb_pagos_base as
    select
        a.rut_cliente as id_usuario,
        a.producto as tipo_tc,
        a.fecha as fecha_captacion
    from schm_data_analytics.ppff_capta_salida as a
    where
        a.producto in('TR','TAM','TAM_CERRADA','TAM_CUOTAS','CAMBIO DE PRODUCTO','MASTERCARD_BLACK')
    AND a.FECHA >= dateadd(DAY,-3,current_date)
    ;

    CREATE TABLE schm_workspace.onb_pagos AS
    SELECT
        codent,
        centalta,
        cuenta,
        impapl AS monto_pagado,
        fecapl AS fecha_pago,
        fecemimov AS fecha_facturacion,
        fecvenmov AS fecha_vencimiento_pago
    FROM br_dm_prod_bigdata_reporitf_db.mpdt072
    WHERE
        fecapl >= dateadd(MONTH,-3,current_date)
    ;

    CREATE TABLE schm_workspace.onb_pagos_dvn AS
    SELECT
        codent,
        centalta,
        cuenta,
        monto_pagado,
        fecha_pago,
        fecha_vencimiento_pago,
        fecha_facturacion
    FROM schm_workspace.onb_pagos
    ;

    CREATE TABLE schm_workspace.onb_pagos_ruts AS
    SELECT
        a.codent,
        a.centalta,
        a.cuenta,
        b.pemid_gls_nro_dct_ide_k AS rut
    FROM br_dm_prod_bigdata_reporitf_db.mpdt007 a
    INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide AS b
            ON a.identcli = b.pemid_nro_inn_ide
    ;

    CREATE TABLE schm_workspace.onb_pagos_for_pagos AS
    SELECT
        b.rut AS id_usuario,
        a.monto_pagado,
        a.fecha_pago,
        a.fecha_vencimiento_pago,
        a.fecha_facturacion
    FROM schm_workspace.onb_pagos_dvn AS a
    LEFT JOIN schm_workspace.onb_pagos_ruts AS b
           ON a.codent = b.codent
          AND (a.centalta = b.centalta)
          AND (a.cuenta = b.cuenta)
    ;

    CREATE TABLE schm_workspace.onb_pagos_for_for_pagos AS
    SELECT
        a.id_usuario,
        a.monto_pagado,
        a.fecha_pago,
        a.fecha_vencimiento_pago,
        a.fecha_facturacion
    FROM schm_workspace.onb_pagos_for_pagos AS a
    INNER JOIN schm_workspace.onb_pagos_base AS b
            ON a.id_usuario = b.id_usuario
    ORDER BY a.id_usuario, a.fecha_pago
    ;

    CREATE TABLE schm_data_analytics.input_tr_pagos_tc AS
    SELECT
        id_usuario,
        ROW_NUMBER() OVER(PARTITION BY id_usuario
    ORDER BY fecha_pago) AS num_transaccion,
        monto_pagado,
        fecha_pago,
        fecha_vencimiento_pago,
        fecha_facturacion
    FROM schm_workspace.onb_pagos_for_for_pagos
    ;


    EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-raw/bigdata/campaign/CAMPAIGN_INPUT_TR_PAGOS_TC/' || v_nombre_campaing || '_' || v_fecha || '_0-' || v_user || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
    RETURN;

END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_clts_baja_cupo(v_period int4, v_nombre_campaing varchar, v_user varchar, v_fecha varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
	
		
	BEGIN
		
	DROP TABLE IF EXISTS schm_workspace.clts_baja_cupo_final;
	DROP TABLE IF EXISTS schm_workspace.clts_baja_cupo_base_1;
	DROP TABLE IF EXISTS schm_workspace.baja_cupo_mora;
	DROP TABLE IF EXISTS schm_workspace.baja_cupo_Dormidos;
	DROP TABLE IF EXISTS schm_workspace.baja_cupo;
	DROP TABLE IF EXISTS schm_workspace.cuenta;
	DROP TABLE IF EXISTS schm_workspace.base_limpia;
	DROP TABLE IF EXISTS schm_workspace.baja_cupo_mora_carta;
	DROP TABLE IF EXISTS schm_workspace.baja_cupo_dormidos_carta;
	DROP TABLE IF EXISTS schm_workspace.camp_baja_cupo;
	
	--Se debe modificar el from según el nombre de la tabla de riesgo y el periodo
	--FROM br_dm_prod_bigdata_riesgo_analytics_sql_db.ajustecupoproc_202311

	CREATE TABLE schm_workspace.clts_baja_cupo_final AS  
	    SELECT
		DISTINCT 
	    t1.*,
		t1.rut * 2-1599 AS id,
		a.segmento_final,
		b.actividad_tr,
		c.nombres,
		c.paterno,
		c.materno,
		d.calle,
		d.numero,
		d.resto,
		d.comuna,
		d.region,
		CASE
			WHEN d.rut IS NOT NULL THEN 1
			ELSE 0
		END AS t_direccion,
		CASE WHEN f.email NOT IN (SELECT email FROM schm_data_analytics.ctbl_lnegro_email WHERE email IS NOT null)
		AND t1.rut NOT IN (SELECT rut FROM schm_data_analytics.ctbl_lnegro_email WHERE rut IS NOT null) THEN f.email END AS email,
		CASE
			WHEN f.rut IS NOT NULL THEN 1
			ELSE 0
		END AS t_email, 
			CASE
			WHEN t1.rut IN (
			SELECT
				rut
			FROM
				schm_data_analytics.ctbl_lnegro_car) THEN 1
			ELSE 0
		END AS lnegro
	FROM
		br_dm_prod_bigdata_riesgo_analytics_sql_db.ajustecupoproc t1 --modificar según nombre del archivo
		LEFT JOIN br_dm_prod_analytics_ripley_puntos_db.segmento_comercial_diario a ON
		t1.rut = a.rut
	LEFT JOIN schm_data_analytics.bitr_actividad_tr b ON
		t1.rut = b.rut
	LEFT JOIN schm_data_analytics.ctbl_base_nombres c ON
		t1.rut = c.rut
	LEFT JOIN schm_data_analytics.ctbl_direcciones d ON
		t1.rut = d.rut
	LEFT JOIN schm_data_analytics.ctbl_base_trabajo_email f ON
		t1.rut = f.rut
	WHERE
		a.fecha_ejecucion = (dateadd(DAY,-1,getdate())::date)
		AND 
	    b.periodo = v_period --modificar según periodo
	      ;

	CREATE TABLE schm_workspace.clts_baja_cupo_base_1 AS
	SELECT
		*,
		CASE
			WHEN Tipo_Disminucion IN ('Mora Externa', 'Salida Inmediata')
	THEN 'Mora Externa'
			WHEN Tipo_Disminucion LIKE 'Contingente' THEN 'Dormidos'
		END AS Base,
		CASE
			WHEN lower(marca_comunicado) LIKE '%carta%'
			AND calle IS NOT NULL THEN 'Carta'
			WHEN lower(marca_comunicado) LIKE '%carta%'
			AND calle IS NULL
			AND email IS NOT NULL THEN 'Email'
			WHEN lower(marca_comunicado) LIKE '%carta%'
			AND calle IS NULL
			AND email IS NULL THEN 'No Comunicar'
			WHEN lower(marca_comunicado) LIKE '%email%'
			AND email IS NOT NULL THEN 'Email'
			WHEN lower(marca_comunicado) LIKE '%email%'
			AND email IS NULL
			AND calle IS NOT NULL THEN 'Carta'
			WHEN lower(marca_comunicado) LIKE '%email%'
			AND email IS NULL
			AND calle IS NULL THEN 'No Comunicar'
			ELSE 'revisar'
		END AS Base2
	FROM
		schm_workspace.clts_baja_cupo_final
	;
	
	
	CREATE TABLE schm_workspace.baja_cupo_mora AS
	SELECT
		*
	FROM
		schm_workspace.clts_baja_cupo_base_1
	WHERE
		base = 'Mora Externa'
		AND lnegro = 0
		AND (segmento_final IS NULL
			OR segmento_final = 'RIPLEY_BAJA')
		AND actividad_tr IN ('DORMIDO DURO', 'DORMIDO BLANDO')
		AND base2 NOT IN ('No Comunicar')
	;
	
	CREATE TABLE schm_workspace.baja_cupo_Dormidos AS
	SELECT
		*
	FROM
		schm_workspace.clts_baja_cupo_base_1
	WHERE
		base = 'Dormidos'
		AND lnegro = 0
		AND (segmento_final IS NULL
			OR segmento_final = 'RIPLEY_BAJA')
		AND actividad_tr IN ('DORMIDO DURO', 'DORMIDO BLANDO')
		AND base2 NOT IN ('No Comunicar')
	;
	
	CREATE TABLE schm_workspace.baja_cupo AS
	SELECT
		*,
		'MORA' AS VAR_CAMP_TXT_1
	FROM
		schm_workspace.baja_cupo_mora
	UNION
	SELECT
		*,
		'DORMIDO' AS VAR_CAMP_TXT_1
	FROM
		schm_workspace.baja_cupo_Dormidos
	;
	
	create table schm_workspace.cuenta as
	select 
	base,
	sum(case when lnegro=1 then 1 else 0 end) as Lnegro,
	sum(case when lnegro=0 and (segmento_final is null or segmento_final='RIPLEY_BAJA')
	and actividad_tr in ('DORMIDO DURO','DORMIDO BLANDO') and base2 = 'Carta' then 1 else 0 end) as  Carta,
	sum(case when lnegro=0 and (segmento_final is null or segmento_final='RIPLEY_BAJA')
	and actividad_tr in ('DORMIDO DURO','DORMIDO BLANDO') and base2 = 'Email' then 1 else 0 end) as Email,
	sum(case when lnegro=0 and (segmento_final is null or segmento_final='RIPLEY_BAJA')
	and actividad_tr in ('DORMIDO DURO','DORMIDO BLANDO') and base2 = 'No Comunicar' then 1 else 0 end) as No_comunicable,
	sum(case when lnegro=0 and ((segmento_final is not null and segmento_final <> 'RIPLEY_BAJA')
	or actividad_tr not in ('DORMIDO DURO','DORMIDO BLANDO'))  then 1 else 0 end) as no_aplica
	from schm_workspace.clts_baja_cupo_base_1 
	group by base
	;
	
	CREATE TABLE schm_workspace.base_limpia AS
	SELECT
		*
	FROM
		schm_workspace.clts_baja_cupo_base_1
	WHERE
		lnegro = 0
		AND (segmento_final IS NULL
			OR segmento_final = 'RIPLEY_BAJA')
		AND actividad_tr IN ('DORMIDO DURO', 'DORMIDO BLANDO')
		AND base2 NOT IN ('No Comunicar') 
	;

	DELETE FROM schm_data_analytics.clts_baja_cupo
	WHERE periodo = schm_artifacts.f_period(current_date) -- modificar manual según el nombre del archivo
	;

	INSERT INTO schm_data_analytics.clts_baja_cupo 
	SELECT *	
	FROM schm_workspace.base_limpia
	WHERE periodo = schm_artifacts.f_period(current_date) -- modificar manual según el nombre del archivo
	;
	
	CREATE TABLE schm_workspace.baja_cupo_mora_carta AS 
	SELECT
		rut,
		id,
		nombres || ' ' ||paterno|| ' ' || materno AS destinatario,
		calle || ' ' || numero || ', ' || resto AS direccion,
		comuna,
		region
	FROM
		schm_workspace.baja_cupo_mora
	WHERE
		base2 = 'Carta'  
	;
	
	CREATE TABLE schm_workspace.baja_cupo_dormidos_carta AS 
	SELECT 	
		rut,
		id,
		nombres || ' ' || paterno || ' ' || materno AS destinatario,
		calle || ' ' || numero || ', ' || resto AS direccion,
		comuna,
		region
	FROM
		schm_workspace.baja_cupo_Dormidos
	WHERE
		base2 = 'Carta'  
	;
	
	--schm_workspace.baja_cupo_mora_carta, CARTA_MORA.xlsx
	--schm_workspace.baja_cupo_dormidos_carta, CARTA_DORMIDOS.xlsx
	
	CALL schm_artifacts.sp_unload_baja_cupo('carta_mora','select * from schm_workspace.baja_cupo_mora_carta');
	CALL schm_artifacts.sp_unload_baja_cupo('carta_dormidos','select * from schm_workspace.baja_cupo_dormidos_carta');
	CALL schm_artifacts.sp_unload_baja_cupo('baja_cupo','select * from schm_workspace.base_limpia');


	CREATE TABLE schm_workspace.camp_baja_cupo (
        "campana-campcode" varchar(20)
        ,"campana-area"varchar(20)
        ,"campana-producto" varchar(20)
        ,"campana-campana" varchar(20)
        ,"campana-fecha"varchar(38)
        ,"campana-customerid" integer
        ,"cliente-email"varchar(50)
        ,"cliente-nombre" varchar(50)
        ,"campana-id_usuario" integer
        ,"cliente-id_usuario" integer
        ,"campana-ind_rut_dup_camp" integer
        ,"campana-var_camp_txt_1" varchar(50)
	);

	INSERT INTO schm_workspace.camp_baja_cupo
	(
        "campana-campcode"
        ,"campana-area"
        ,"campana-producto"
        ,"campana-campana"
        ,"campana-fecha"
        ,"campana-customerid"
        ,"cliente-email"
        ,"cliente-nombre"
        ,"campana-id_usuario"
        ,"cliente-id_usuario"
        ,"campana-ind_rut_dup_camp"
        ,"campana-var_camp_txt_1" )
	SELECT
        to_char(current_date, 'YYYYMMDD')||'ALZSGT'
        ,'ALZ'
        ,'SGT'
        ,'BAJA_CUPO'
        ,to_char(current_date, 'MM/dd/YYYY')
        ,rut
        ,email
        ,nombres
        ,rut
        ,rut
        ,0
        ,var_camp_txt_1
	FROM schm_workspace.baja_cupo
	WHERE base2='Email'
	;

	EXECUTE
	'UNLOAD('
	|| quote_literal(v_query)
	|| ') to ''s3://br-dm-prod-us-east-1-837538682169-raw/bigdata/campaign/'
	|| v_nombre_campaing
	|| '/'
	|| v_nombre_campaing
	|| '_'
	|| v_fecha
	|| '_0-'
	|| v_user
	|| ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER
	ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
	RETURN;

	DROP TABLE IF EXISTS schm_workspace.clts_baja_cupo_final;
	DROP TABLE IF EXISTS schm_workspace.clts_baja_cupo_base_1;
	DROP TABLE IF EXISTS schm_workspace.baja_cupo_mora;
	DROP TABLE IF EXISTS schm_workspace.baja_cupo_Dormidos;
	DROP TABLE IF EXISTS schm_workspace.baja_cupo;
	DROP TABLE IF EXISTS schm_workspace.cuenta;
	DROP TABLE IF EXISTS schm_workspace.base_limpia;
	DROP TABLE IF EXISTS schm_workspace.baja_cupo_mora_carta;
	DROP TABLE IF EXISTS schm_workspace.baja_cupo_dormidos_carta;
	DROP TABLE IF EXISTS schm_workspace.camp_baja_cupo;
	
	END;
	


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_clts_cierres_rptos()
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN

	--SALDO DE PUNTOS y ENROLADO RPTOS
	insert into schm_clientes.clts_saldo_puntos 
	select *, date_part(year,DATEADD(month,-1, current_date))*100+date_part(month,DATEADD(month,-1, current_date)) as periodo
	from br_dm_prod_bigdata_sqldwarehouse_db.loyalty_saldo_puntos
	;

	--PUNTOS POR VENCER 
	insert into schm_clientes.clts_vencimiento_puntos 
	select *,  date_part(year,DATEADD(month,-1, current_date))*100+date_part(month,DATEADD(month,-1, current_date)) as periodo
	from br_dm_prod_bigdata_sqldwarehouse_db.loyalty_vencimiento_puntos
	;

	/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-12-20	-- v01	--	Nicole Lagos	--	Versión automatizada en AWS Redshift.

	=== Información adicional:
	Proceso que..
	===========================================================================================================
	*/

END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_clts_cliente_unico_uso_corte(v_periodo int4)
	LANGUAGE plpgsql
AS $$
	

DECLARE

v_corte INTEGER;

BEGIN


	DROP TABLE IF EXISTS schm_workspace.clts_vista;
	DROP TABLE IF EXISTS schm_workspace.clts_llenado;
	DROP TABLE IF EXISTS schm_workspace.clts_cliente_unico_uso_corte;
	DROP TABLE IF EXISTS schm_workspace.clts_clientes;
	DROP TABLE IF EXISTS schm_workspace.clts_clientes1;
	DROP TABLE IF EXISTS schm_workspace.clts_clientes2;
	DROP TABLE IF EXISTS schm_workspace.clts_colapso;


	CREATE TABLE schm_workspace.clts_vista
		(ind INTEGER
		,corte INTEGER);

 
	INSERT INTO schm_workspace.clts_vista VALUES
		(1,5)
		,(2,10)
		,(3,15)
		,(4,18)
		,(5,20)
		,(6,25)
		,(7,30)
		,(8,31);

 
	CREATE TABLE schm_workspace.clts_llenado
		(periodo INTEGER
		,corte VARCHAR(10)
		,combinatoria VARCHAR(20)
		,total INTEGER);

 
	CREATE TABLE schm_workspace.clts_cliente_unico_uso_corte
		(periodo INTEGER
		,corte VARCHAR(10)
		,combinatoria VARCHAR(20)
		,total INTEGER);


	FOR i IN 1..8 LOOP


		SELECT
			INTO v_corte corte
		FROM schm_workspace.clts_vista

		WHERE ind=i;

	
		CREATE TABLE schm_workspace.clts_clientes AS

		SELECT
			rut
			,tipo
		FROM (


			SELECT
				rut
				,SUM(capital) + SUM(pie) AS monto
				,'TDA' AS tipo
			FROM schm_data_analytics.tnda_tda_itf
			WHERE DATE_PART(DAY, fecha) <= v_corte
				AND periodo = v_periodo
			GROUP BY rut
			HAVING SUM(capital) + SUM(pie) > 0

			UNION

			SELECT
				rut
				,monto
				,tipo
			FROM (
				SELECT
					rut
					,SUM(venta_tarjeta) AS monto
					,'SPOS' AS tipo
				FROM schm_data_analytics.spos_aut
				WHERE DATE_PART(DAY, fecha) <= v_corte
					AND periodo = v_periodo
				GROUP BY rut
				HAVING SUM(venta_tarjeta) > 0)

				UNION

				SELECT
					rut
					,SUM(capital) AS monto
					,'PPFF' AS tipo
				FROM schm_data_analytics.ppff_trx_av
				WHERE DATE_PART(DAY, fecfac) <= v_corte
					AND periodo = v_periodo
				GROUP BY rut

				UNION

				SELECT
					rut
					,SUM(capital) AS monto
					,'PPFF' AS tipo
				FROM schm_data_analytics.ppff_trx_sav
				WHERE DATE_PART(DAY, fecfac) <= v_corte
					AND periodo = v_periodo
				GROUP BY rut

				UNION

				SELECT
					rut
					,SUM(monto_recaudado) AS monto
					,'SEGUROS' AS tipo
				FROM schm_data_analytics.spos_trx_seguros
				WHERE DATE_PART(DAY, fecproces) <= v_corte
					AND tipo_seguro = 'SEGUROS OPEN MARKET'
					AND codconrec NOT IN ('S201','S083','S170')
					AND periodo = v_periodo
				GROUP BY rut

			)
		GROUP BY rut, tipo;


		CREATE TABLE schm_workspace.clts_clientes1 AS
		SELECT
			rut,
			MAX(CASE WHEN tipo = 'TDA' THEN 1 ELSE 0 END ) AS tda,
			MAX(CASE WHEN tipo = 'SPOS' THEN 1 ELSE 0 END ) AS spos,
			MAX(CASE WHEN tipo = 'PPFF' THEN 1 ELSE 0 END) AS ppff,
			MAX(CASE WHEN tipo = 'SEGUROS' THEN 1 ELSE 0 END) AS seguros
		FROM schm_workspace.clts_clientes
		GROUP BY rut;


		CREATE TABLE schm_workspace.clts_clientes2 AS
		SELECT
			*
			,CASE
				WHEN MAX(CASE WHEN tda = 1 THEN 1 ELSE 0 END) = 1 THEN 'TDA'
				ELSE '' END || ' ' ||
			CASE
				WHEN MAX(CASE WHEN spos = 1 THEN 1 ELSE 0 END) = 1 THEN 'SPOS'
				ELSE '' END || ' ' ||
			CASE
				WHEN MAX(CASE WHEN ppff = 1 THEN 1 ELSE 0 END) = 1 THEN 'PPFF'
				ELSE '' END || ' ' ||
			CASE
				WHEN MAX(CASE WHEN seguros = 1 THEN 1 ELSE 0 END) = 1 THEN 'SEG'
				ELSE '' END AS combinatoria
		FROM schm_workspace.clts_clientes1
		GROUP BY rut, tda, spos, ppff, seguros;


		CREATE TABLE schm_workspace.clts_colapso AS
		SELECT
			v_periodo AS periodo,
			CASE
				WHEN v_corte = 5 THEN 'A.05'
				WHEN v_corte = 10 THEN 'B.10'
				WHEN v_corte = 15 THEN 'C.15'
				WHEN v_corte = 18 THEN 'D.18'
				WHEN v_corte = 20 THEN 'E.20'
				WHEN v_corte = 25 THEN 'F.25'
				WHEN v_corte = 30 THEN 'G.30'
				WHEN v_corte = 31 THEN 'H.CIERRE'
			END AS corte,
			combinatoria,
			COUNT(rut) AS TOTAL
		FROM schm_workspace.clts_clientes2
		GROUP BY combinatoria;

	
		INSERT INTO schm_workspace.clts_llenado
			SELECT
				*
			FROM schm_workspace.clts_colapso;


		DROP TABLE IF EXISTS schm_workspace.clts_clientes;
		DROP TABLE IF EXISTS schm_workspace.clts_clientes1;
		DROP TABLE IF EXISTS schm_workspace.clts_clientes2;
		DROP TABLE IF EXISTS schm_workspace.clts_colapso;


	END LOOP;


	DELETE
	FROM schm_workspace.clts_cliente_unico_uso_corte
	WHERE periodo = v_periodo
		AND combinatoria IS NOT NULL;

 
	INSERT INTO schm_workspace.clts_cliente_unico_uso_corte
		SELECT
			*
		FROM schm_workspace.clts_llenado;


	DELETE
	FROM schm_data_analytics.clts_cliente_unico_uso_corte
	WHERE periodo = v_periodo
		AND combinatoria IS NOT NULL;


	INSERT INTO schm_data_analytics.clts_cliente_unico_uso_corte
		SELECT
			*
		FROM schm_workspace.clts_cliente_unico_uso_corte;


	DROP TABLE IF EXISTS schm_workspace.clts_vista;
	DROP TABLE IF EXISTS schm_workspace.clts_llenado;
	DROP TABLE IF EXISTS schm_workspace.clts_cliente_unico_uso_corte;
	DROP TABLE IF EXISTS schm_workspace.clts_clientes;
	DROP TABLE IF EXISTS schm_workspace.clts_clientes1;
	DROP TABLE IF EXISTS schm_workspace.clts_clientes2;
	DROP TABLE IF EXISTS schm_workspace.clts_colapso;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-10-11	-- v01	--	Esteban Pino     --	Versión refactorizada.

	=== Información adicional:
	Proceso que...
	===========================================================================================================
*/

END



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_clts_onboarding_3m(v_period_6 int4, v_period int4)
	LANGUAGE plpgsql
AS $$
	
	
	
	
	
BEGIN
	
	DROP TABLE IF EXISTS schm_workspace.clts_captados;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_2;
	DROP TABLE IF EXISTS schm_workspace.clts_spos; --spos_fin
	DROP TABLE IF EXISTS schm_workspace.clts_movimientos_debito; --spos_cv_cc
	DROP TABLE IF EXISTS schm_workspace.clts_tda;
	DROP TABLE IF EXISTS schm_workspace.clts_logeo_int;
	DROP TABLE IF EXISTS schm_workspace.clts_epu;
	DROP TABLE IF EXISTS schm_workspace.clts_pagos;
	DROP TABLE IF EXISTS schm_workspace.clts_mov_tda_spos;
	DROP TABLE IF EXISTS schm_workspace.retiro_plastico_tc;
	DROP TABLE IF EXISTS schm_workspace.retiro_plastico_cdp;
	DROP TABLE IF EXISTS schm_workspace.retiro_debito;
	DROP TABLE IF EXISTS schm_workspace.curse_cc;
	DROP TABLE IF EXISTS schm_workspace.base_limpio;
	DROP TABLE IF EXISTS schm_workspace.retiro_ctacte1;
	DROP TABLE IF EXISTS schm_workspace.retiro_ctacte_2;
	DROP TABLE IF EXISTS schm_workspace.retiro_plastico_tc_2;
	DROP TABLE IF EXISTS schm_workspace.retiro_plastico_cdp_2;
	DROP TABLE IF EXISTS schm_workspace.retiro_ctacte_3;
	DROP TABLE IF EXISTS schm_workspace.retiro_debito_2;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_3;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_4;
	DROP TABLE IF EXISTS schm_workspace.enrolamiento;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_5;
	DROP TABLE IF EXISTS schm_workspace.spos_fin_1;
	DROP TABLE IF EXISTS schm_workspace.spos_fin_2;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_6;
	DROP TABLE IF EXISTS schm_workspace.cod_camp;
	DROP TABLE IF EXISTS schm_workspace.planes_tbl_plan_cliente;
	DROP TABLE IF EXISTS schm_workspace.clts_onboarding_3m_paso;
	DROP TABLE IF EXISTS schm_workspace.clts_colapso;

--- total de captados en el periodo

	CREATE TABLE schm_workspace.clts_captados AS
	SELECT 
		ROW_NUMBER() OVER() AS ind,
		*
	FROM 
		(SELECT
		rut_cliente AS rut,
		producto,
		fecha,
		codent,
		centalta,
		cuenta,
		nro_solicitud,
		id_oferta,
		cod_sucursal,
		via
	FROM
		schm_data_analytics.ppff_capta_salida
	WHERE
		periodo = v_period_6 --mirar 6 meses hacia atras
	ORDER BY
		rut_cliente)
		;
	
-- marca de 30, 60 y 90 días	
	
	CREATE TABLE schm_workspace.clts_captados_2 AS 
	SELECT 
	*
	,dateadd(DAY,+30,fecha)::date AS dia_30
	,dateadd(DAY,+60,fecha)::date AS dia_60
	,dateadd(DAY,+90,fecha)::date AS dia_90
	,CASE
		WHEN producto IN ('CUENTA VISTA') THEN 'CV'
		WHEN producto IN ('CUENTA CORRIENTE') THEN 'CTACTE'
		ELSE 'TC'
	END AS producto2
	FROM
	schm_workspace.clts_captados
	ORDER BY
	rut
	;

-- extracción de venta spos TC

	CREATE TABLE schm_workspace.clts_spos AS 
	SELECT 
	    a.periodo, 
		a.rut,
		a.fecha,
		a.hora,
		a.codact,
		a.venta_tarjeta,
		a.nombre_comercio
	FROM
		schm_data_analytics.spos_aut AS a
	INNER JOIN (SELECT 
	DISTINCT rut 
	FROM schm_workspace.clts_captados_2
	WHERE producto2='TC') AS b
	ON
		(a.rut = b.rut)
	WHERE
		a.periodo BETWEEN v_period AND to_char(date_add('month',4,to_date(v_period,'YYYYMMdd')),'YYYYmm')::int
	;

-- extraccion de venta td +cc

	CREATE TABLE schm_workspace.clts_movimientos_debito AS 
	SELECT
	    a.periodo,
		a.rut,
		a.tipo,
		a.fecha,
		a.codact,
		a.venta_tarjeta,
		a.nombre_comercio,
		a.tipo_compra
	FROM
		schm_data_analytics.mpdg_movimientos_debito a
	INNER JOIN (SELECT DISTINCT rut 
	FROM schm_workspace.clts_captados_2
	WHERE producto2<>'TC' ) AS b
		ON
			(a.rut = b.rut)
	WHERE
		a.periodo BETWEEN v_period AND to_char(date_add('month',4,to_date(v_period,'YYYYMMdd')),'YYYYmm')::int
	;
	
	/*TDA TC*/

	CREATE TABLE schm_workspace.clts_tda AS 
	SELECT
		DISTINCT 
		a.periodo,
		a.rut,
		a.fecha
	FROM
		schm_data_analytics.tnda_tda_itf AS a
	INNER JOIN (SELECT 
	DISTINCT rut 
	FROM schm_workspace.clts_captados_2
	WHERE producto2='TC') AS b
	ON
		(a.rut = b.rut)
	WHERE
		a.capital>0
		AND a.periodo BETWEEN v_period AND to_char(date_add('month',4,to_date(v_period,'YYYYMMdd')),'YYYYmm')::int
	;

	
	/*LOGEO_DIGITAL*/
	CREATE TABLE schm_workspace.clts_logeo_int AS 
	SELECT
		DISTINCT 
		a.periodo,
		a.rut,
		a.fecha
	FROM
		schm_data_analytics.dgtl_logueos_internet AS a
	INNER JOIN (SELECT DISTINCT rut FROM schm_workspace.clts_captados_2) AS b
	ON
		(a.rut = b.rut)
	WHERE
		a.DISPOSITIVO IN ('DESKTOP', 'APP' , 'APP_1')
		AND a.periodo BETWEEN v_period AND to_char(date_add('month',4,to_date(v_period,'YYYYMMdd')),'YYYYmm')::int
	;
	
	/*EPU COBRO*/
	CREATE TABLE schm_workspace.clts_epu AS 
	SELECT
		DISTINCT 
		a.periodo,
		a.rut,
		a.fecfac AS fecha
	FROM
		schm_data_analytics.mdpg_epu_mes_actual AS a
	INNER JOIN (SELECT 
	DISTINCT rut 
	FROM schm_workspace.clts_captados_2
	WHERE producto2='TC') AS b
	ON
		(a.rut = b.rut)
	WHERE
		 a.periodo BETWEEN v_period AND to_char(date_add('month',4,to_date(v_period,'YYYYMMdd')),'YYYYmm')::int
	;
	
	/*PAGO DIGITAL*/
	CREATE TABLE schm_workspace.clts_pagos AS 
	SELECT
		DISTINCT 
		a.rut,
		a.fecfac AS fecha,
		a.periodo
	FROM schm_data_analytics.mdpg_pagos_digitales AS a
	INNER JOIN (SELECT 
	DISTINCT rut 
	FROM schm_workspace.clts_captados_2
	WHERE producto2='TC') AS b
	ON
		(a.rut = b.rut)
	WHERE
		a.nomcomred IN ('HB_SERV', 'UNIRED', 'Khipu', 'SANTANDER')
		AND espago=1
		AND 
		 a.periodo BETWEEN v_period AND to_char(date_add('month',4,to_date(v_period,'YYYYMMdd')),'YYYYmm')::int
	;
	
	/*unificar bases de uso y generar indices correspondientes*/

	CREATE TABLE schm_workspace.clts_mov_tda_spos AS 
	SELECT
		rut,
		fecha,
		to_char(fecha, 'yyyyMMdd')::integer AS fecha_numero,
		producto2,
		tipo_compra,
		periodo
	FROM
		(
		SELECT
			rut,
			fecha,
			'TC' AS producto2,
			'SPOS' AS tipo_compra,
			periodo
		FROM schm_workspace.clts_spos --credito 
	UNION ALL
		SELECT
			rut,
			fecha,
			'TC' AS producto2,
			'TNDA' AS tipo_compra,
			periodo
		FROM schm_workspace.clts_tda --credtio
	UNION ALL 
		SELECT
			rut,
			fecha,
			CASE WHEN tipo='CTA CTE' THEN 'CTACTE' ELSE 'CV' END  AS producto2,
			tipo_compra,
			periodo
		FROM
			schm_workspace.clts_movimientos_debito
	)
	ORDER BY
		rut
	;

	CREATE TABLE schm_workspace.retiro_plastico_tc AS 
	SELECT
		sol.sol_nro_inn_ide,
		tar.tar_cac_nro_ctt_k numero_contrato,
		tar.tar_cac_nro_pan_k numero_tarjeta,
		sol.sol_cod_ide_cli rut_cliente,
		sol.sol_fch_alt_sol fecha_solicitud,
		sol.sol_cod_nro_sol_k numero_solicitud,
		sol.sol_cod_est_sol estado,
		trunc(mae.pcom_fch_k) AS fecha_retiro,
		mae.pcom_gls_usr_crc,
		det.pcom_coc_suc codigo_suc
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol sol
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar tar
	ON
		tar.tar_cod_nro_sol_k = sol.sol_cod_nro_sol_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_mae_reg_evt mae
	ON
		sol.sol_nro_inn_ide = mae.pcom_cod_ide_cli_k
		AND mae.pcom_cod_evt_k IN (15, 80, 230)
		AND mae.pcom_desc_doc = sol.sol_cod_ide_cli
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_det_reg_evt det
	ON
		mae.pcom_nro_seq_k = det.pcom_nro_seq_k
		AND det.pcom_cod_evt_k IN (15, 80, 230)
		AND det.pcom_nro_ctt = substring(tar_cac_nro_ctt_k,1,4) || '-' || substring(tar_cac_nro_ctt_k,5,4) || '-' || substring(tar_cac_nro_ctt_k,9,12)
	WHERE
		substring(tar.tar_cod_tip_prd_k,1,2) = '01'
		AND sol.sol_fch_crc_sol 
		BETWEEN to_date(v_period,'YYYYMMDD') AND last_day(dateadd('month',4,to_date(v_period,'YYYYMMDD')))
	AND (sol.sol_cod_cll_act = 14
	OR sol.sol_cod_cll_ant = 14)
	AND sol.sol_cod_cll_adm = 2
	AND EXISTS (
	SELECT
		btc_cod_nro_sol_k
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
	WHERE
		btc_cod_nro_sol_k = sol.sol_cod_nro_sol_k
		AND btc_cod_tip_reg_k = 1
		AND btc_cod_eta_k = 102
		AND btc_cod_evt_k = 30)
	AND EXISTS (
	SELECT
		t.cuenta
	FROM
		br_dm_prod_bigdata_reporitf_db.mpdt009 t
	WHERE t.cuenta = substring(tar_cac_nro_ctt_k,9,12) and t.codent = substring(tar_cac_nro_ctt_k,1,4) and 
	t.centalta = substring(tar_cac_nro_ctt_k,5,4) and t.numbencta = 1 and t.numplastico > 0)
	order by  sol.sol_cod_nro_sol_k ASC
	;
	

	CREATE TABLE schm_workspace.retiro_plastico_cdp AS 
	SELECT *
	FROM (
	SELECT 
		sol.sol_nro_inn_ide,
		tar.tar_cac_nro_ctt_k numero_contrato,
		tar.tar_cac_nro_pan_k numero_tarjeta,
		sol.sol_cod_ide_cli rut_cliente,
		sol.sol_fch_alt_sol fecha_solicitud,
		sol.sol_cod_nro_sol_k numero_solicitud,
		sol.sol_cod_est_sol estado,
		trunc(mae.pcom_fch_k) AS fecha_retiro,
		mae.pcom_gls_usr_crc,
		det.pcom_coc_suc codigo_suc
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol sol
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar tar
	ON
		tar.tar_cod_nro_sol_k = sol.sol_cod_nro_sol_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe ofe
	ON
		ofe.ofe_cod_nro_sol_k = sol.sol_cod_nro_sol_k
		AND ofe.ofe_cod_ind_sol = 1
		AND ofe.ofe_cod_ind_drm = 1
		AND substring(ofe.ofe_cod_prd_ofe_k,1,2) = '01'
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_mae_reg_evt mae
	ON
		sol.sol_nro_inn_ide = mae.pcom_cod_ide_cli_k
		AND mae.pcom_cod_evt_k IN (15, 80, 230)
		AND mae.pcom_desc_doc = sol.sol_cod_ide_cli
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_det_reg_evt det
	ON
		mae.pcom_nro_seq_k = det.pcom_nro_seq_k
		AND det.pcom_cod_evt_k in (15, 80, 230)
		and det.pcom_nro_ctt = substring(tar_cac_nro_ctt_k,1,4) || '-' || substring(tar_cac_nro_ctt_k,5,4) || '-' || substring(tar_cac_nro_ctt_k,9,12)
	WHERE substring(tar.tar_cod_tip_prd_k,1,2) = '01'
	AND sol_fch_crc_sol BETWEEN to_date(v_period,'YYYYMMDD') AND last_day(dateadd('month',4,to_date(v_period,'YYYYMMDD')))
	AND (sol.sol_cod_cll_act = 14
	OR sol.sol_cod_cll_ant = 14)
	AND sol.sol_cod_cll_adm = 2
	AND EXISTS (
	SELECT
		btc_cod_nro_sol_k
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
	WHERE btc_cod_nro_sol_k = sol.sol_cod_nro_sol_k
		AND btc_cod_tip_reg_k = 1
		AND btc_cod_eta_k = 102
		AND btc_cod_evt_k = 30
		)
	AND EXISTS (
	SELECT
		t.Cuenta
	FROM
		br_dm_prod_bigdata_reporitf_db.mpdt009 t
	WHERE
		t.cuenta = substring(TAR_CAC_NRO_CTT_K,9,12)
		AND t.codent = substring(TAR_CAC_NRO_CTT_K,1,4)
		AND t.centalta = substring(TAR_CAC_NRO_CTT_K,5,4)
		AND trim(t.pan) = trim(TAR.TAR_CAC_NRO_PAN_K)
		)
	) WHERE fecha_retiro BETWEEN to_date(v_period,'YYYYMMDD') AND last_day(dateadd('month',4,to_date(v_period,'YYYYMMDD')))
	;

	
	CREATE TABLE schm_workspace.retiro_debito AS 
	SELECT * 
	FROM 
	(SELECT
		DISTINCT 
		mae.pcom_cod_ide_cli_k,
		tar.tar_cac_nro_ctt_k numero_contrato,
		tar.tar_cac_nro_pan_k numero_tarjeta,
		substring(prd.prd_cac_nro_ctt,9) numero_cuenta_vista,
		sol.sol_cod_ide_cli rut_cliente,
		per.per_cac_ide_cli_dv dv,
		sol.sol_fch_alt_sol fecha_solicitud,
		sol.sol_cod_nro_sol_k numero_solicitud,
		sol.sol_cod_est_sol estado,
		trunc(mae.pcom_fch_k) fecha_retiro,
		mae.pcom_gls_usr_crc,
		det.pcom_coc_suc codigo_suc
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol sol
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar tar
	   ON
		tar.tar_cod_nro_sol_k = sol.sol_cod_nro_sol_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol prd
	   ON
		tar.tar_cod_nro_sol_k = prd.prd_cod_nro_sol_k
		AND tar.tar_cod_tip_prd_k = prd.prd_cod_tip_prd_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_dat_per per
	   ON
		prd.prd_cod_nro_sol_k = per.per_cod_nro_sol_k
		AND sol.sol_cod_ide_cli = per.per_cod_ide_cli_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_mae_reg_evt mae
	 ON
		sol.sol_nro_inn_ide = mae.pcom_cod_ide_cli_k
		AND mae.pcom_cod_evt_k = 257
		AND mae.pcom_desc_doc = sol.sol_cod_ide_cli
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_det_reg_evt det
	ON
		mae.pcom_nro_seq_k = det.pcom_nro_seq_k
		AND
	det.pcom_cod_evt_k = 257 and 
	(det.pcom_nro_ctt = substring(tar_cac_nro_ctt_k,1,4) || '-' || substring(tar_cac_nro_ctt_k,5,4) || '-' || substring(tar_cac_nro_ctt_k,9,12) or 
	det.pcom_nro_ctt = substring(tar_cac_nro_ctt_k,9,12))
	WHERE 
	 substring(tar.tar_cod_tip_prd_k,1,2) = '04'
	and (sol.sol_cod_cll_act = 14 or sol.sol_cod_cll_ant = 14)
	and sol.sol_cod_cll_adm = 2
	and sol.sol_fch_crc_sol 
	BETWEEN to_date(v_period,'YYYYMMDD') AND last_day(dateadd('month',4,to_date(v_period,'YYYYMMDD')))
	AND EXISTS (
	SELECT
		btc_cod_nro_sol_k
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
	WHERE
		btc_cod_nro_sol_k = sol.sol_cod_nro_sol_k
		AND btc_cod_tip_reg_k = 1
		AND btc_cod_eta_k = 102
		AND btc_cod_evt_k = 30)
	AND EXISTS (
	SELECT
		t.cuenta
	FROM
		br_dm_prod_bigdata_reporitf_db.mpdt009 t
	WHERE
		t.cuenta = substring(tar_cac_nro_ctt_k,9,12)
		AND t.codent = substring(tar_cac_nro_ctt_k,	1,4)
		AND t.centalta = substring(tar_cac_nro_ctt_k,5,4)
		AND t.numbencta = 1
		AND t.numplastico > 1)
	ORDER BY
	sol.sol_cod_nro_sol_k ASC
	)
	WHERE 
	fecha_retiro BETWEEN to_date(v_period,'YYYYMMDD') AND last_day(dateadd('month',4,to_date(v_period,'YYYYMMDD')))
	;
	
	
	CREATE TABLE schm_workspace.CURSE_CC AS
	SELECT * FROM 
	(
		SELECT 
		tar.tar_cac_nro_ctt_k numero_contrato,
		tar.tar_cac_nro_pan_k numero_tarjeta,
		substring(prd.prd_cac_nro_ctt,9) numero_cuenta,
		sol.sol_cod_ide_cli rut_cliente,
		per.per_cac_ide_cli_dv dv,
		sol.sol_fch_alt_sol fecha_solicitud,
		sol.sol_cod_nro_sol_k numero_solicitud,
		sol.sol_cod_est_sol estado
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol sol
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe ofe /* nuevo */
		ON
		sol.sol_cod_nro_sol_k = ofe.ofe_cod_nro_sol_k /* nuevo */
		AND substring(ofe.ofe_cod_prd_ofe_k ,1,2) = '21' /* nuevo - codigo de ctacte*/
		AND ofe.ofe_cod_ind_ngc = 1 /* nuevo - indicador de negociacion*/
		AND ofe.ofe_cod_ind_alt = 1 /* nuevo - referencia a la alta del producto */
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar tar
		ON
	tar.tar_cod_nro_sol_k = sol.sol_cod_nro_sol_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol prd
		ON
	tar.tar_cod_nro_sol_k = prd.prd_cod_nro_sol_k
	AND tar.tar_cod_tip_prd_k = prd.prd_cod_tip_prd_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_dat_per per
		ON
	prd.prd_cod_nro_sol_k = per.per_cod_nro_sol_k
	AND sol.sol_cod_ide_cli = per.per_cod_ide_cli_k
	WHERE
		substring(tar.tar_cod_tip_prd_k,1,2) IN ('21')
	AND (sol.sol_cod_cll_act = 14
		OR sol.sol_cod_cll_ant = 14)
	AND sol.sol_cod_cll_adm = 2
	AND sol.sol_fch_crc_sol 
	BETWEEN to_date(v_period,'YYYYMMDD') AND last_day(dateadd('month',4,to_date(v_period,'YYYYMMDD')))
	AND EXISTS (
	SELECT
		btc_cod_nro_sol_k
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
	WHERE
		btc_cod_nro_sol_k = sol.sol_cod_nro_sol_k
		AND btc_cod_tip_reg_k = 1
		AND btc_cod_eta_k = 102
		AND btc_cod_evt_k = 30)
	ORDER BY
	sol.sol_cod_nro_sol_k ASC
	)
	;
	
	
	CREATE TABLE schm_workspace.base_limpio AS 
	SELECT DISTINCT 
		numero_contrato,
		numero_tarjeta,
		numero_cuenta,
		rut_cliente::integer AS rut,
		dv,
		fecha_solicitud AS fecha,
		estado
	FROM schm_workspace.curse_cc
	;
	
	
	CREATE TABLE schm_workspace.retiro_ctacte1 AS 
	SELECT * 
	FROM
	(SELECT DISTINCT 
		mae.pcom_cod_ide_cli_k, 
		 tar.tar_cac_nro_ctt_k numero_contrato,
		det.pcom_pan numero_tarjeta,  
		substring(prd.prd_cac_nro_ctt,9) numero_cuenta,
		sol.sol_cod_ide_cli rut_cliente, 
		per.per_cac_ide_cli_dv dv, 
		sol.sol_fch_alt_sol fecha_solicitud,
		sol.sol_cod_nro_sol_k numero_solicitud, 
		sol.sol_cod_est_sol estado,
		trunc(mae.pcom_fch_k) fecha_retiro, 
		mae.pcom_gls_usr_crc, 
		det.pcom_coc_suc codigo_suc
	FROM
	br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol sol
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe ofe /* nuevo */
	       ON
	sol.sol_cod_nro_sol_k = ofe.ofe_cod_nro_sol_k /* nuevo */
	AND substring(ofe.ofe_cod_prd_ofe_k ,1,2) = '21' /* nuevo - codigo de ctacte*/
	AND ofe.ofe_cod_ind_ngc = 1 /* nuevo - indicador de negociacion*/
	AND ofe.ofe_cod_ind_alt = 1 /* nuevo -referencia a la alta del producto */
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar tar
		   ON
	tar.tar_cod_nro_sol_k = sol.sol_cod_nro_sol_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol prd
		   ON
	tar.tar_cod_nro_sol_k = prd.prd_cod_nro_sol_k
	AND tar.tar_cod_tip_prd_k = prd.prd_cod_tip_prd_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_dat_per per
		   ON
	prd.prd_cod_nro_sol_k = per.per_cod_nro_sol_k
	AND sol.sol_cod_ide_cli = per.per_cod_ide_cli_k
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_mae_reg_evt mae
		 ON
	sol.sol_nro_inn_ide = mae.pcom_cod_ide_cli_k
	AND mae.pcom_cod_evt_k = 257
	AND mae.pcom_desc_doc = sol.sol_cod_ide_cli
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_det_reg_evt det
		ON	mae.pcom_nro_seq_k = det.pcom_nro_seq_k
	AND det.pcom_cod_evt_k = 257
	AND
		(det.pcom_nro_ctt = substring(tar_cac_nro_ctt_k,1,4) || '-' || substring(tar_cac_nro_ctt_k,5,4) || '-' || substring(tar_cac_nro_ctt_k,9,12) or 
		det.pcom_nro_ctt = substring(tar_cac_nro_ctt_k,9,12))
		where 
		 substring(tar.tar_cod_tip_prd_k,1,2) = '21'
		and (sol.sol_cod_cll_act = 14 or sol.sol_cod_cll_ant = 14)
		and sol.sol_cod_cll_adm = 2
		and sol.sol_fch_crc_sol BETWEEN to_date(v_period,'YYYYMMDD') AND last_day(dateadd('month',4,to_date(v_period,'YYYYMMDD')))
		AND EXISTS
		(
	SELECT
		btc_cod_nro_sol_k
	FROM
		br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
	WHERE
		btc_cod_nro_sol_k = sol.sol_cod_nro_sol_k
		AND btc_cod_tip_reg_k = 1
		AND btc_cod_eta_k = 102
		AND btc_cod_evt_k = 30)
	AND EXISTS (
	SELECT
		t.cuenta
	FROM
		br_dm_prod_bigdata_reporitf_db.mpdt009 t
	WHERE 
		t.cuenta = substring(tar_cac_nro_ctt_k,9,12)
		AND 
		t.codent = substring(tar_cac_nro_ctt_k,1,4)
		AND 
		t.centalta = substring(tar_cac_nro_ctt_k,5,4)
		AND t.numbencta = 1
		AND t.numplastico > 1)
	ORDER BY sol.sol_cod_nro_sol_k ASC
	) 
	WHERE fecha_retiro BETWEEN to_date(v_period,'YYYYMMDD') AND last_day(dateadd('month',4,to_date(v_period,'YYYYMMDD')))
	;
	
	
	CREATE TABLE schm_workspace.retiro_ctacte_2 AS 
		SELECT DISTINCT
		b.*
	FROM
		schm_workspace.base_limpio AS a
	LEFT JOIN schm_workspace.retiro_ctacte1 AS b
	ON
		(a.NUMERO_CUENTA = b.numero_cuenta)
	WHERE
		b.numero_cuenta IS NOT NULL
		AND a.estado IN (8, 9, 11, 50)
	;
	
	CREATE TABLE schm_workspace.retiro_plastico_tc_2 AS 
	   SELECT
		DISTINCT  
	   rut_cliente::integer AS rut,
		max(fecha_retiro) AS fecha
	FROM
		schm_workspace.retiro_plastico_tc
	GROUP BY
		rut
	;
	
	CREATE TABLE schm_workspace.retiro_plastico_cdp_2 AS 
	   SELECT DISTINCT 
		rut_cliente AS rut,
		max(fecha_retiro) AS fecha
	FROM
		schm_workspace.retiro_plastico_cdp
	GROUP BY
		rut
	;
	
	CREATE TABLE schm_workspace.retiro_ctacte_3 AS 
	   SELECT
		DISTINCT 
		rut_cliente AS rut,
		max(fecha_retiro) AS fecha
	FROM
		schm_workspace.retiro_ctacte_2
	GROUP BY
		rut
	;
	
	CREATE TABLE schm_workspace.retiro_debito_2 AS 
	   SELECT DISTINCT 
		rut_cliente AS rut,
		max(fecha_retiro) AS fecha
	FROM
		schm_workspace.retiro_debito
	GROUP BY
		rut
	;

-- marcaje de uso

	CREATE TABLE schm_workspace.clts_captados_3 AS 
		SELECT DISTINCT
		a.*,
		max((CASE WHEN (b.rut IS NOT NULL) AND (b.fecha BETWEEN a.fecha AND a.dia_30) THEN 1  
		ELSE 0 END)) AS concreta_30_T,
		max((CASE WHEN (b.rut IS NOT NULL) AND (b.fecha BETWEEN a.fecha AND a.dia_60) THEN 1 
		ELSE 0 END )) AS concreta_60_T,
		max((CASE WHEN (b.rut IS NOT NULL) AND (b.fecha BETWEEN a.fecha AND a.dia_90) THEN 1  
		ELSE 0 END )) AS concreta_90_T,
		max(CASE WHEN b.tipo_compra ='SPOS' AND b.fecha BETWEEN a.fecha AND a.dia_30 THEN 1 ELSE 0 END) AS concreta_30_SPOS,
		max(CASE WHEN b.tipo_compra ='SPOS' AND b.fecha BETWEEN a.fecha AND a.dia_60 THEN 1 ELSE 0 END) AS concreta_60_SPOS,
		max(CASE WHEN b.tipo_compra ='SPOS' AND b.fecha BETWEEN a.fecha AND a.dia_90 THEN 1 ELSE 0 END) AS concreta_90_SPOS,
		max(CASE WHEN b.tipo_compra ='TNDA' AND b.fecha BETWEEN a.fecha AND a.dia_30 THEN 1 ELSE 0 END) AS concreta_30_tda,
		max(CASE WHEN b.tipo_compra ='TNDA' AND b.fecha BETWEEN a.fecha AND a.dia_60 THEN 1 ELSE 0 END ) AS concreta_60_tda,
		max(CASE WHEN b.tipo_compra ='TNDA' AND b.fecha BETWEEN a.fecha AND a.dia_90 THEN 1 ELSE 0 END ) AS concreta_90_tda,
		min(CASE WHEN b.tipo_compra ='SPOS' AND b.fecha BETWEEN a.fecha AND a.dia_90 THEN b.fecha_numero END) AS fecha_concreta_SPOS,
		min(CASE WHEN b.tipo_compra ='TNDA' AND b.fecha BETWEEN a.fecha AND a.dia_90 THEN b.fecha_numero END ) AS fecha_concreta_tda
	FROM schm_workspace.clts_captados_2 AS a
	LEFT JOIN schm_workspace.clts_mov_tda_spos AS b
	ON (a.rut = b.rut)
	AND (a.producto2 = b.producto2)
	AND b.fecha>=a.fecha
	GROUP BY 
	a.ind,
	a.rut,
	a.producto,
	a.producto2,
	a.fecha,
	a.dia_30,
	a.dia_60,
	a.dia_90,
	a.codent,
	a.centalta,
	a.cuenta,
	a.nro_solicitud,
	a.cod_sucursal,
	a.via,
	a.id_oferta
	;


	CREATE TABLE schm_workspace.clts_captados_4 AS 
	SELECT DISTINCT
		a.*,
		max(CASE WHEN h.rut is not NULL and (a.producto2='TC') 
		and h.fecha BETWEEN a.fecha and a.dia_30 THEN 1 ELSE 0 END) as concreta_30_epu,
		max(CASE WHEN h.rut is not NULL and (a.producto2='TC') 
		and h.fecha BETWEEN a.fecha and a.dia_60 THEN 1 ELSE 0 END) as concreta_60_epu,
		max(CASE WHEN h.rut is not NULL and (a.producto2='TC') 
		and h.fecha BETWEEN a.fecha and a.dia_90 THEN 1 ELSE 0 END) as concreta_90_epu,
		max(CASE WHEN (i.rut is not NULL) and (i.fecha BETWEEN a.fecha and a.dia_30) THEN 1 ELSE 0 END) as concreta_30_log,
		max(CASE WHEN (i.rut is not NULL) and (i.fecha BETWEEN a.fecha and a.dia_60) THEN 1 ELSE 0 END) as concreta_60_log,
		max(CASE WHEN (i.rut is not NULL) and (i.fecha BETWEEN a.fecha and a.dia_90) THEN 1 ELSE 0 END) as concreta_90_log,
		--CASE WHEN  a.producto2='TC' and (j1.rut is not null or j2.rut is not null) and 
		--(j1.fecha BETWEEN a.fecha and a.dia_30 or j2.fecha BETWEEN a.fecha and a.dia_30) THEN 1 
		--WHEN a.producto2='CV' and (j3.rut is not null ) and (j3.fecha BETWEEN a.fecha and a.dia_30 ) THEN 1 
		--WHEN a.producto2='CTACTE' and (j4.rut is not null) and (j4.fecha BETWEEN a.fecha and a.dia_30 ) THEN 1 
		--ELSE 0 end as concreta_30_retira_T,
		--CASE WHEN a.producto2='TC' and (j1.rut is not null or j2.rut is not null)
		--and (j1.fecha BETWEEN a.fecha and a.dia_60 or j2.fecha BETWEEN a.fecha and a.dia_60) THEN 1 
		--WHEN a.producto2='CV' and (j3.rut is not null) and (j3.fecha BETWEEN a.fecha and a.dia_60 ) THEN 1 
		--WHEN a.producto2='CTACTE' and (j4.rut is not null) and (j4.fecha BETWEEN a.fecha and a.dia_60) THEN 1 
		--ELSE 0 end as concreta_60_retira_T,
		--CASE WHEN a.producto2='TC' and (j1.rut is not null or j2.rut is not null) and 
		--(j1.fecha BETWEEN a.fecha and a.dia_90 or j2.fecha BETWEEN a.fecha and a.dia_90) THEN 1 
		--WHEN a.producto2='CV' and (j3.rut is not null) and (j3.fecha BETWEEN a.fecha and a.dia_90) THEN 1 
		--WHEN a.producto2='CTACTE' and (j4.rut is not null ) and (j4.fecha BETWEEN a.fecha	and a.dia_90 ) THEN 1 
		--ELSE 0 end as concreta_90_retira_T,
		max(CASE WHEN (k.rut is not NULL) and (a.producto2='TC') 
		and (k.fecha BETWEEN a.fecha and a.dia_30) THEN 1 ELSE 0 END) as concreta_30_pagos,
		max(CASE WHEN (k.rut is not NULL) and (a.producto2='TC') 
		and (k.fecha BETWEEN a.fecha and a.dia_60) THEN 1 ELSE 0 END) as concreta_60_pagos,
		max(CASE WHEN (k.rut is not NULL) and (a.producto2='TC') 
		and (k.fecha BETWEEN a.fecha and a.dia_90) THEN 1 ELSE 0 END) as concreta_90_pagos,
		min(CASE WHEN (h.rut is not NULL) and (a.producto2='TC') 
		and (h.fecha BETWEEN a.fecha and a.dia_90) THEN TO_CHAR(h.fecha, 'yyyyMMdd')::integer ELSE 0 end) as fecha_concreta_epu,
		min(CASE WHEN (i.rut is not NULL) and (i.fecha BETWEEN a.fecha and a.dia_90) THEN TO_CHAR(i.fecha, 'yyyyMMdd')::integer ELSE 0 end) as fecha_concreta_log,
		--min(CASE WHEN a.producto2='TC' and (j1.rut is not null or j2.rut is not null) and 
		--j1.fecha BETWEEN a.fecha and a.dia_90 or j2.fecha BETWEEN a.fecha and a.dia_90) 
		--THEN coalesce(j1.fecha,j2.fecha) 
		--WHEN a.producto2='CV' and (j3.rut is not null ) and (j3.fecha BETWEEN a.fecha and a.dia_90 ) THEN j3.fecha 
		--WHEN  a.producto2='CTACTE' and (j4.rut is not null ) and (j4.fecha BETWEEN a.fecha and a.dia_90 ) 
		--THEN j4.fecha ELSE 0 end ) as fecha_concreta_retira_T,
		min(CASE WHEN k.rut is not NULL and (a.producto2='TC') 
		and k.fecha BETWEEN a.fecha and a.dia_90 THEN TO_CHAR(k.fecha, 'yyyyMMdd')::integer ELSE 0 end) as fecha_concreta_pagos
	FROM schm_workspace.clts_captados_3 AS a
	LEFT JOIN schm_workspace.clts_epu AS h ON
	(a.rut = h.rut)
	LEFT JOIN schm_workspace.clts_logeo_int AS i ON
	(a.rut = i.rut)
	--left join schm_workspace.retiro_plastico_tc_2 as j1 on(a.rut=j1.rut)
	--left join schm_workspace.RETIRO_PLASTICO_cdp_2 as j2 on(a.rut=j2.rut)
	--left join schm_workspace.retiro_ctacte_3 as j4 on(a.rut=j4.rut)
	--left join schm_workspace.retiro_debito_2  as j3 on(a.rut=j3.rut)	
	LEFT JOIN schm_workspace.clts_pagos AS k ON 
	(a.rut = k.rut)
	GROUP BY
	a.ind
	,a.rut
	,a.producto
	,a.fecha
	,a.codent
	,a.centalta
	,a.cuenta
	,a.nro_solicitud
	,a.id_oferta
	,a.cod_sucursal
	,a.via
	,a.dia_30
	,a.dia_60
	,a.dia_90
	,a.producto2
	,a.concreta_30_t
	,a.concreta_60_t
	,a.concreta_90_t
	,a.concreta_30_spos
	,a.concreta_60_spos
	,a.concreta_90_spos
	,a.concreta_30_tda
	,a.concreta_60_tda
	,a.concreta_90_tda
	,a.fecha_concreta_spos
	,a.fecha_concreta_tda
	;
	
--SELECT 'ANT' AS tipo, count(1) AS total FROM schm_workspace.clts_captados_3 UNION SELECT 'ACT' AS tipo, count(1) AS total FROM schm_workspace.clts_captados_4
	
	CREATE TABLE schm_workspace.enrolamiento AS 
	SELECT DISTINCT 
		substring(identificador_usuario,1,length(identificador_usuario)-1)::integer AS rut
		,inicio_enrolamiento AS fecha
		,to_char(inicio_enrolamiento,'YYYYMM')::INTEGER AS periodo
	FROM
		br_dm_prod_bigdata_idnow_db.reporte_enrolamientos
	WHERE
		periodo BETWEEN v_period AND to_char(date_add('month',4,to_date(v_period,'YYYYMMdd')),'YYYYmm')::int
		AND estado_final = 'R'
		AND rut IS NOT NULL
		AND sistema_operativo IN ('ANDROID', 'IOS')
	GROUP BY
		rut,
		inicio_enrolamiento
	;

--SELECT * FROM br_dm_prod_bigdata_idnow_db.reporte_enrolamientos LIMIT 100;
	
	
	CREATE TABLE schm_workspace.clts_captados_5 as 
	SELECT DISTINCT
	a.*,
	max(CASE WHEN h.rut is not null and h.fecha BETWEEN a.fecha and a.dia_30 THEN 1 ELSE 0 end) as concreta_30_RPASS,
	max(CASE WHEN h.rut is not null and h.fecha BETWEEN a.fecha and a.dia_60 THEN 1 ELSE 0 end ) as concreta_60_RPASS,
	max(CASE WHEN h.rut is not NULL and h.fecha BETWEEN a.fecha and a.dia_90 THEN 1 ELSE 0 end ) as concreta_90_RPASS,
	min(CASE WHEN h.rut is not null and h.fecha BETWEEN a.fecha	and a.dia_90 THEN TO_CHAR(h.fecha, 'yyyyMMdd')::integer ELSE 0 end ) as fecha_concreta_RPASS
	FROM schm_workspace.clts_captados_4 as a 
	LEFT JOIN schm_workspace.enrolamiento as h on(a.rut=h.rut)
	GROUP BY 
	a.ind
	,a.rut
	,a.producto
	,a.fecha
	,a.codent
	,a.centalta
	,a.cuenta
	,a.nro_solicitud
	,a.id_oferta
	,a.cod_sucursal
	,a.via
	,a.dia_30
	,a.dia_60
	,a.dia_90
	,a.producto2
	,a.concreta_30_t
	,a.concreta_60_t
	,a.concreta_90_t
	,a.concreta_30_spos
	,a.concreta_60_spos
	,a.concreta_90_spos
	,a.concreta_30_tda
	,a.concreta_60_tda
	,a.concreta_90_tda
	,a.fecha_concreta_spos
	,a.fecha_concreta_tda
	,a.concreta_30_epu
	,a.concreta_60_epu
	,a.concreta_90_epu
	,a.concreta_30_log
	,a.concreta_60_log
	,a.concreta_90_log
	,a.concreta_30_pagos
	,a.concreta_60_pagos
	,a.concreta_90_pagos
	,a.fecha_concreta_epu
	,a.fecha_concreta_log
	,a.fecha_concreta_pagos
	;
	

	/*primera compra spos*/
	CREATE TABLE schm_workspace.spos_fin_1 AS 
	SELECT
		DISTINCT a.*
	FROM
		schm_workspace.clts_spos AS a
	INNER JOIN schm_workspace.clts_captados_3 AS b
	ON (a.rut = b.rut) 
	AND (to_char(a.fecha, 'yyyyMMdd')::integer = b.fecha_concreta_SPOS) 
	WHERE b.producto2= 'TC'
	;
	
	--DROP TABLE IF EXISTS schm_workspace.spos_fin_2;
	CREATE TABLE schm_workspace.spos_fin_2 AS 
	SELECT
		a.*
		,'TC' AS producto2
	FROM
		schm_workspace.spos_fin_1 AS a
	INNER JOIN 
	(	SELECT
			rut,
			Fecha,
			min(Hora) AS hora
		FROM
			schm_workspace.spos_fin_1
		GROUP BY
			rut,
			fecha) AS b
	ON (a.rut = b.rut)
		AND (a.fecha = b.fecha)
		AND (a.hora = b.hora)
		--and (a.producto2=b.producto2)
	;
	

	CREATE TABLE schm_workspace.clts_captados_6 AS 
	SELECT
		DISTINCT 
	a.*,
		max(CASE WHEN b.rut IS NOT NULL THEN b.codact END) AS codact ,
		max(CASE WHEN b.rut IS NOT NULL THEN b.venta_tarjeta ELSE 0 END) AS venta_tarjeta_spos ,
		max(CASE WHEN b.rut IS NOT NULL THEN b.nombre_comercio END) AS nombre_comercio_spos
	FROM
		schm_workspace.clts_captados_5 AS a
	LEFT JOIN schm_workspace.spos_fin_2 AS b
	ON
		(a.rut = b.rut)
		AND (to_char(b.fecha,'yyyyMMdd')::integer = a.fecha_concreta_SPOS)
		AND (a.producto2 = b.producto2)
	GROUP BY
	a.ind
	,a.rut
	,a.producto
	,a.fecha
	,a.codent
	,a.centalta
	,a.cuenta
	,a.nro_solicitud
	,a.id_oferta
	,a.cod_sucursal
	,a.via
	,a.dia_30
	,a.dia_60
	,a.dia_90
	,a.producto2
	,a.concreta_30_t
	,a.concreta_60_t
	,a.concreta_90_t
	,a.concreta_30_spos
	,a.concreta_60_spos
	,a.concreta_90_spos
	,a.concreta_30_tda
	,a.concreta_60_tda
	,a.concreta_90_tda
	,a.fecha_concreta_spos
	,a.fecha_concreta_tda
	,a.concreta_30_epu
	,a.concreta_60_epu
	,a.concreta_90_epu
	,a.concreta_30_log
	,a.concreta_60_log
	,a.concreta_90_log
	,a.concreta_30_pagos
	,a.concreta_60_pagos
	,a.concreta_90_pagos
	,a.fecha_concreta_epu
	,a.fecha_concreta_log
	,a.fecha_concreta_pagos
	,a.concreta_30_rpass
	,a.concreta_60_rpass
	,a.concreta_90_rpass
	,a.fecha_concreta_rpass
	;
	
	
	CREATE TABLE schm_workspace.cod_camp AS   
		SELECT 
		camp_id_ofe_k,
		camp_cod_camp_fk,
		camp_rut_cli,
		camp_dv_cli,
		camp_cod_tip_prod,
		camp_cod_cnd_prod,
		camp_cod_ori_base
	FROM br_dm_prod_bigdata_camreport_db.cbcamp_mae_ofertas 
	WHERE CAMP_ID_OFE_K IN( SELECT id_oferta FROM schm_workspace.clts_captados_6 WHERE id_oferta IS NOT null)
	;
	
	/*
	CREATE TABLE cod_camp AS   
	SELECT 
	CAMP_ID_OFE_K,
	CAMP_COD_CAMP_FK,
	CAMP_RUT_CLI,
	CAMP_DV_CLI,
	CAMP_COD_TIP_PROD,
	CAMP_COD_CND_PROD,
	CAMP_COD_ORI_BASE 
	FROM CAMPHIS_ADM.cbcamp_mae_ofertas_HIST  
	where CAMP_ID_OFE_K in ( &Listado. )
	) A 
	;*/
	
	
	CREATE TABLE schm_workspace.planes_tbl_plan_cliente AS 
	SELECT *,
		substring(identificador_cliente, 1, length(identificador_cliente)-1)::integer AS rut   
	FROM br_dm_prod_bigdata_reporitf_db.planes_tbl_plan_cliente
	WHERE estado = 'ENABLED'
	;

	-- hacer delete e insert hacia la tabla clts_onboarding_3m, agregarle campo periodo para la eliminación de los 6 meses hacia atrás
	-- cada vez que corra deben correr los 6 meses hacia atrás
	CREATE TABLE schm_workspace.clts_onboarding_3m_paso AS 
		SELECT
	DISTINCT
		a.*,
		v_period_6 AS periodo,
		b.camp_cod_camp_fk AS cod_camp_oferta,
		b.camp_cod_tip_prod AS cod_tip_prod,
		b.camp_cod_cnd_prod AS cod_cnd_prod,
		b.camp_cod_ori_base,
	--c.detalle,
		CASE
		WHEN b.camp_cod_ori_base IN 
		('102', '108', '201', '207', '302') THEN 'NUEVO'
		ELSE 'REVIGENTEADO'
	END AS tipo_cliente,
		(CASE
		WHEN max(CASE WHEN a.concreta_30_SPOS>0 THEN 1 ELSE 0 END)= 1 THEN 'SPOS'
		ELSE ' '
	END || '-' ||
		CASE
		WHEN max(CASE WHEN a.concreta_30_tda>0 THEN 1 ELSE 0 END)= 1 THEN 'TDA'
		ELSE ' '
	END || '-' ||
		CASE
		WHEN max(CASE WHEN a.concreta_30_epu>0 THEN 1 ELSE 0 END)= 1 THEN 'EPU COBRO'
		ELSE ' '
	END || '-' ||
		CASE
		WHEN max(CASE WHEN a.concreta_30_log>0 THEN 1 ELSE 0 END)= 1 THEN 'LOGUEO'
		ELSE ' '
	END || '-' ||
		CASE
		WHEN max(CASE WHEN a.concreta_30_pagos>0 THEN 1 ELSE 0 END)= 1 THEN 'PAGOS'
		ELSE ' '
	END || '-' ||
		CASE
		WHEN max(CASE WHEN a.concreta_30_RPASS>0 THEN 1 ELSE 0 END)= 1 THEN 'RPASS'
		ELSE ' '
	END
	--CASE WHEN max(CASE WHEN concreta_30_retira_T>0 and COD_SUCURSAL=39 and VIA='HOMEBAN' THEN 1 ELSE 0 end)=1 THEN 'RETIRA TARJ' ELSE ' ' 
		) AS combinatoria,
		a.fecha_concreta_spos AS concreta_spos_sas, 
		a.fecha_concreta_tda AS concreta_tda_sas, 
		a.fecha_concreta_epu AS concreta_epu_sas, 
		a.fecha_concreta_log AS concreta_log_sas,
	--fecha_concreta_retira_T as concreta_retira_T_SAS, 
		a.fecha_concreta_pagos AS concreta_pagos_sas, 
		a.fecha_concreta_rpass AS concreta_rpass_sas,
		CASE
		WHEN a.fecha_concreta_SPOS>0 
		THEN EXTRACT(DAY FROM((a.fecha_concreta_spos::varchar)::date))
		ELSE 999
	END AS dias_SPOS,
		CASE
		WHEN a.fecha_concreta_tda>0 
		THEN EXTRACT(DAY FROM((a.fecha_concreta_tda::varchar)::date))
		ELSE 999
	END AS dias_tda,
		CASE
		WHEN a.fecha_concreta_epu>0 
		THEN EXTRACT(DAY FROM((a.fecha_concreta_epu::varchar)::date))
		ELSE 999
	END AS dias_epu,
		CASE
		WHEN a.fecha_concreta_log>0 
		THEN EXTRACT(DAY FROM((a.fecha_concreta_log::varchar)::date))
		ELSE 999
	END AS dias_log,
	--CASE WHEN fecha_concreta_retira_T>0 THEN EXTRACT(DAY FROM ((fecha_concreta_retira_T::varchar)::date)) ELSE 999 end as dias_RETIRA,
		CASE
		WHEN a.fecha_concreta_pagos>0 
		THEN EXTRACT(DAY FROM((a.fecha_concreta_pagos::varchar)::date))
		ELSE 999
	END AS dias_pagos,
		CASE
		WHEN a.fecha_concreta_RPASS>0 
		THEN EXTRACT(DAY FROM((a.fecha_concreta_RPASS::varchar)::date))
		ELSE 999
	END AS dias_RPASS,
		d.plan_id,
		CASE
		WHEN d.plan_id = 1 
		THEN 'PLAN LIGHT'
		WHEN d.plan_id = 2 THEN 'PLAN PRO'
		WHEN d.plan_id = 3 THEN 'PLAN BLACK'
		ELSE 'NO APLICA'
	END AS Plan
	FROM schm_workspace.clts_captados_6 AS a 
	LEFT JOIN schm_workspace.cod_camp AS b ON(a.id_oferta=b.CAMP_ID_OFE_K)
	--left join pmunoz.tipo_cliente_camp as c on(input(b.CAMP_COD_ORI_BASE,best.)=c.codigo)
	LEFT JOIN schm_workspace.planes_tbl_plan_cliente AS d ON(a.rut=d.rut)
	GROUP BY
	a.ind
	,a.rut
	,a.producto
	,a.fecha
	,a.codent
	,a.centalta
	,a.cuenta
	,a.nro_solicitud
	,a.id_oferta
	,a.cod_sucursal
	,a.via
	,a.dia_30
	,a.dia_60
	,a.dia_90
	,a.producto2
	,a.concreta_30_t
	,a.concreta_60_t
	,a.concreta_90_t
	,a.concreta_30_spos
	,a.concreta_60_spos
	,a.concreta_90_spos
	,a.concreta_30_tda
	,a.concreta_60_tda
	,a.concreta_90_tda
	,a.fecha_concreta_spos
	,a.fecha_concreta_tda
	,a.concreta_30_epu
	,a.concreta_60_epu
	,a.concreta_90_epu
	,a.concreta_30_log
	,a.concreta_60_log
	,a.concreta_90_log
	,a.concreta_30_pagos
	,a.concreta_60_pagos
	,a.concreta_90_pagos
	,a.fecha_concreta_epu
	,a.fecha_concreta_log
	,a.fecha_concreta_pagos
	,a.concreta_30_rpass
	,a.concreta_60_rpass
	,a.concreta_90_rpass
	,a.fecha_concreta_rpass
	,a.codact
	,a.venta_tarjeta_spos
	,a.nombre_comercio_spos
	,b.camp_cod_camp_fk
	,b.camp_cod_tip_prod
	,b.camp_cod_cnd_prod
	,b.camp_cod_ori_base
	,d.plan_id
	,v_period_6
	;

	DELETE FROM schm_data_analytics.clts_onboarding_3m 
	WHERE periodo >= v_period_6
	;


	INSERT INTO schm_data_analytics.clts_onboarding_3m
	SELECT *
	FROM schm_workspace.clts_onboarding_3m_paso
	WHERE periodo = v_period_6
	; 

	
	CREATE TABLE schm_workspace.clts_colapso AS
		SELECT 
		v_period_6 AS periodo,
		producto,
		tipo_cliente,
		combinatoria,
		CASE
			WHEN cod_sucursal = 39
			AND via = 'HOMEBANKING' THEN 'DIGITAL'
		ELSE 'PRESENCIAL' END AS tipo_captacion,
		count(rut) AS captados,
		sum(concreta_30_t) AS con_30_t,
		sum(concreta_60_t) AS con_60_t,
		sum(concreta_90_t) AS con_90_t,
		con_60_t- con_30_t AS con_t_diff1, 
		con_90_t- con_60_t AS con_t_diff2, 
		sum(concreta_30_spos) AS con_30_spos,
		sum(concreta_60_spos) AS con_60_spos,
		sum(concreta_90_spos) AS con_90_spos,
		con_60_spos- con_30_spos AS con_spos_diff1, 
		con_90_spos- con_60_spos AS con_spos_diff2,
		sum(concreta_30_tda) AS con_30_tda,
		sum(concreta_60_tda) AS con_60_tda,
		sum(concreta_90_tda) AS con_90_tda,
		con_60_tda- con_30_tda AS con_tda_diff1, 
		con_90_tda- con_60_tda AS con_tda_diff2,
		count(CASE WHEN concreta_30_tda>0 AND concreta_30_spos>0 THEN rut END) AS con_30_tda_spos,
		count(CASE WHEN concreta_60_tda>0 AND concreta_60_spos>0 THEN rut END) AS con_60_tda_spos,
		count(CASE WHEN concreta_90_tda>0 AND concreta_90_spos>0 THEN rut END) AS con_90_tda_spos,
		con_60_tda_spos- con_30_tda_spos AS con_tda_spos_diff1, 
		con_90_tda_spos- con_60_tda_spos AS con_tda_spos_diff2,
		count(CASE WHEN concreta_30_tda>0 AND concreta_30_spos = 0 THEN rut END) AS con_30_solo_tda,
		count(CASE WHEN concreta_60_tda>0 AND concreta_60_spos = 0 THEN rut END) AS con_60_solo_tda,
		count(CASE WHEN concreta_90_tda>0 AND concreta_90_spos = 0 THEN rut END) AS con_90_solo_tda,
		con_60_solo_tda- con_30_solo_tda AS con_solo_tda_diff1, 
		con_90_solo_tda- con_60_solo_tda AS con_solo_tda_diff2,
		count(CASE WHEN concreta_30_tda = 0 AND concreta_30_spos>0 THEN rut END) AS con_30_solo_spos,
		count(CASE WHEN concreta_60_tda = 0 AND concreta_60_spos>0 THEN rut END) AS con_60_solo_spos,
		count(CASE WHEN concreta_90_tda = 0 AND concreta_90_spos>0 THEN rut END) AS con_90_solo_spos,
		con_60_solo_spos- con_30_solo_spos AS con_solo_spos_diff1, 
		con_90_solo_spos- con_60_solo_spos AS con_solo_spos_diff2,
		sum(concreta_30_epu) AS con_30_epu,
		sum(concreta_60_epu) AS con_60_epu,
		sum(concreta_90_epu) AS con_90_epu,
		con_60_epu- con_30_epu AS con_epu_diff1, 
		con_90_epu- con_60_epu AS con_epu_diff2,
		sum(concreta_30_log) AS con_30_log,
		sum(concreta_60_log) AS con_60_log,
		sum(concreta_90_log) AS con_90_log,
		con_60_log- con_30_log AS con_log_diff1, 
		con_90_log- con_60_log AS con_log_diff2,
		--sum(case when cod_sucursal=39 and 	via='homeban' then concreta_30_retira_t else 0 end) as con_30_retira_t,
		--sum(case when cod_sucursal=39 and 	via='homeban' then  concreta_60_retira_t else 0 end) as con_60_retira_t,
		--sum(case when cod_sucursal=39 and 	via='homeban' then concreta_90_retira_t else 0 end) as con_90_retira_t,
		--con_60_retira_t- con_30_retira_t as con_retira_t_diff1, 
		--con_90_retira_t- con_60_retira_t as con_retira_t_diff2,
		sum(concreta_30_pagos) AS con_30_pagos,
		sum(concreta_60_pagos) AS con_60_pagos,
		sum(concreta_90_pagos) AS con_90_pagos,
		con_60_pagos- con_30_pagos AS con_pagos_diff1, 
		con_90_pagos- con_60_pagos AS con_pagos_diff2,
		sum(concreta_30_rpass) AS con_30_rpass,
		sum(concreta_60_rpass) AS con_60_rpass,
		sum(concreta_90_rpass) AS con_90_rpass,
		con_60_rpass- con_30_rpass AS con_rpass_diff1, 
		con_90_rpass- con_60_rpass AS con_rpass_diff2,
		0 AS con_30_retira_t,
		0 AS con_60_retira_t,
		0 AS con_90_retira_t,
		0 AS con_retira_t_diff1,
		0 AS con_retira_t_diff2,
		'00.NO APLICA' AS dias_retira,
		CASE
			WHEN dias_spos <= 30
			AND dias_spos<10 THEN '0' || dias_spos || '.' || dias_spos
			WHEN dias_spos <= 30
			AND dias_spos >= 10 THEN dias_spos || '.' || dias_spos
			WHEN dias_spos BETWEEN 31 AND 40 THEN '31.[31,40]'
			WHEN dias_spos BETWEEN 41 AND 50 THEN '32.[41,50]'
			WHEN dias_spos BETWEEN 51 AND 60 THEN '33.[51,60]'
			WHEN dias_spos BETWEEN 61 AND 70 THEN '34.[61,70]'
			WHEN dias_spos BETWEEN 71 AND 80 THEN '35.[71,80]'
			WHEN dias_spos BETWEEN 81 AND 70 THEN '36.[81,90]'
			ELSE '00.NO APLICA'
		END AS dias_spos,
		CASE
			WHEN dias_tda <= 30
			AND dias_tda<10 THEN '0' || dias_tda || '.' || dias_tda
			WHEN dias_tda <= 30
			AND dias_tda >= 10 THEN dias_tda || '.' || dias_tda
			WHEN dias_tda BETWEEN 31 AND 40 THEN '31.[31,40]'
			WHEN dias_tda BETWEEN 41 AND 50 THEN '32.[41,50]'
			WHEN dias_tda BETWEEN 51 AND 60 THEN '33.[51,60]'
			WHEN dias_tda BETWEEN 61 AND 70 THEN '34.[61,70]'
			WHEN dias_tda BETWEEN 71 AND 80 THEN '35.[71,80]'
			WHEN dias_tda BETWEEN 81 AND 70 THEN '36.[81,90]'
			ELSE '00.NO APLICA'
		END AS dias_tda,
		CASE
			WHEN dias_epu <= 30
			AND dias_epu<10 THEN '0' || dias_epu || '.' || dias_epu
			WHEN dias_epu <= 30
			AND dias_epu >= 10 THEN dias_epu || '.' || dias_epu
			WHEN dias_epu BETWEEN 31 AND 40 THEN '31.[31,40]'
			WHEN dias_epu BETWEEN 41 AND 50 THEN '32.[41,50]'
			WHEN dias_epu BETWEEN 51 AND 60 THEN '33.[51,60]'
			WHEN dias_epu BETWEEN 61 AND 70 THEN '34.[61,70]'
			WHEN dias_epu BETWEEN 71 AND 80 THEN '35.[71,80]'
			WHEN dias_epu BETWEEN 81 AND 70 THEN '36.[81,90]'
			ELSE '00.NO APLICA'
		END AS dias_epu,
		CASE
			WHEN dias_log <= 30
			AND dias_log<10 THEN '0' || dias_log || '.' || dias_log
			WHEN dias_log <= 30
			AND dias_log >= 10 THEN dias_log || '.' || dias_log
			WHEN dias_log BETWEEN 31 AND 40 THEN '31.[31,40]'
			WHEN dias_log BETWEEN 41 AND 50 THEN '32.[41,50]'
			WHEN dias_log BETWEEN 51 AND 60 THEN '33.[51,60]'
			WHEN dias_log BETWEEN 61 AND 70 THEN '34.[61,70]'
			WHEN dias_log BETWEEN 71 AND 80 THEN '35.[71,80]'
			WHEN dias_log BETWEEN 81 AND 70 THEN '36.[81,90]'
			ELSE '00.NO APLICA'
		END AS dias_log,
	--case when dias_retira<=30 and dias_retira<10 then '0'||dias_retira||'.'||dias_retira
	--when dias_retira<=30 and dias_retira>=10 then dias_retira||'.'||dias_retira
	--when dias_retira between 31 and 40 then  '31.[31,40]'
	--when dias_retira between 41 and 50 then  '32.[41,50]'
	--when dias_retira between 51 and 60 then  '33.[51,60]'
	--when dias_retira between 61 and 70 then  '34.[61,70]'
	--when dias_retira between 71 and 80 then  '35.[71,80]'
	--when dias_retira between 81 and 70 then  '36.[81,90]'
	--else '00.no aplica' end as dias_retira,
		CASE
			WHEN dias_pagos <= 30
			AND dias_pagos<10 THEN '0' || dias_pagos || '.' || dias_pagos
			WHEN dias_pagos <= 30
			AND dias_pagos >= 10 THEN dias_pagos || '.' || dias_pagos
			WHEN dias_pagos BETWEEN 31 AND 40 THEN '31.[31,40]'
			WHEN dias_pagos BETWEEN 41 AND 50 THEN '32.[41,50]'
			WHEN dias_pagos BETWEEN 51 AND 60 THEN '33.[51,60]'
			WHEN dias_pagos BETWEEN 61 AND 70 THEN '34.[61,70]'
			WHEN dias_pagos BETWEEN 71 AND 80 THEN '35.[71,80]'
			WHEN dias_pagos BETWEEN 81 AND 70 THEN '36.[81,90]'
			ELSE '00.NO APLICA'
		END AS dias_pagos,
		CASE
			WHEN dias_rpass <= 30
			AND dias_rpass<10 THEN '0' || dias_rpass || '.' || dias_rpass
			WHEN dias_rpass <= 30
			AND dias_rpass >= 10 THEN dias_rpass || '.' || dias_rpass
			WHEN dias_rpass BETWEEN 31 AND 40 THEN '31.[31,40]'
			WHEN dias_rpass BETWEEN 41 AND 50 THEN '32.[41,50]'
			WHEN dias_rpass BETWEEN 51 AND 60 THEN '33.[51,60]'
			WHEN dias_rpass BETWEEN 61 AND 70 THEN '34.[61,70]'
			WHEN dias_rpass BETWEEN 71 AND 80 THEN '35.[71,80]'
			WHEN dias_rpass BETWEEN 81 AND 70 THEN '36.[81,90]'
			ELSE '00.NO APLICA'
		END AS dias_rpass,
		CASE
			WHEN venta_tarjeta_spos>0 THEN COALESCE(b.rubro_gestion,'OTROS RUBROS SPOS')
			ELSE 'NO APLICA'
		END AS rubro_spos,
		sum(venta_tarjeta_spos) AS monto_spos,
		nombre_comercio_spos,
		plan_id,
		plan
	FROM schm_data_analytics.clts_onboarding_3m as a 
	left JOIN (SELECT cod_act, max(categorias_ripley) as rubro_gestion
	FROM br_dm_prod_bigdata_sasdata_db.sas_tabla_arbol /*Tabla de asignacion de rubros*/
	group by 
	cod_act) as b
	on(a.codact=b.cod_act)
	WHERE a.periodo = v_period_6
	group by 
	producto,
	tipo_cliente,
	tipo_captacion,
	combinatoria,
	plan_id,
	plan,
	dias_spos,
	dias_tda,
	dias_epu,
	dias_log,
	dias_retira,
	dias_pagos,
	dias_rpass,
	rubro_spos,
	nombre_comercio_spos
	;


	DELETE FROM schm_data_analytics.clts_colapso_onboarding_3m
	WHERE periodo = v_period_6
	;
	
	INSERT INTO schm_data_analytics.clts_colapso_onboarding_3m
	(periodo, producto, tipo_cliente, combinatoria, tipo_captacion, captados, con_30_t, con_60_t, con_90_t, con_t_diff1, con_t_diff2, con_30_spos, con_60_spos, con_90_spos, con_spos_diff1, con_spos_diff2, con_30_tda, con_60_tda, con_90_tda, con_tda_diff1, con_tda_diff2, con_30_tda_spos, con_60_tda_spos, con_90_tda_spos, con_tda_spos_diff1, con_tda_spos_diff2, con_30_solo_tda, con_60_solo_tda, con_90_solo_tda, con_solo_tda_diff1, con_solo_tda_diff2, con_30_solo_spos, con_60_solo_spos, con_90_solo_spos, con_solo_spos_diff1, con_solo_spos_diff2, con_30_epu, con_60_epu, con_90_epu, con_epu_diff1, con_epu_diff2, con_30_log, con_60_log, con_90_log, con_log_diff1, con_log_diff2, con_30_pagos, con_60_pagos, con_90_pagos, con_pagos_diff1, con_pagos_diff2, con_30_rpass, con_60_rpass, con_90_rpass, con_rpass_diff1, con_rpass_diff2, dias_spos, dias_tda, dias_epu, dias_log, dias_pagos, dias_rpass, rubro_spos, monto_spos, nombre_comercio_spos, plan_id, plan, con_30_retira_t, con_60_retira_t, con_90_retira_t, con_retira_t_diff1, con_retira_t_diff2, dias_retira)
	SELECT 
	periodo, producto, tipo_cliente, combinatoria, tipo_captacion, captados, con_30_t, con_60_t, con_90_t, con_t_diff1, con_t_diff2, con_30_spos, con_60_spos, con_90_spos, con_spos_diff1, con_spos_diff2, con_30_tda, con_60_tda, con_90_tda, con_tda_diff1, con_tda_diff2, con_30_tda_spos, con_60_tda_spos, con_90_tda_spos, con_tda_spos_diff1, con_tda_spos_diff2, con_30_solo_tda, con_60_solo_tda, con_90_solo_tda, con_solo_tda_diff1, con_solo_tda_diff2, con_30_solo_spos, con_60_solo_spos, con_90_solo_spos, con_solo_spos_diff1, con_solo_spos_diff2, con_30_epu, con_60_epu, con_90_epu, con_epu_diff1, con_epu_diff2, con_30_log, con_60_log, con_90_log, con_log_diff1, con_log_diff2, con_30_pagos, con_60_pagos, con_90_pagos, con_pagos_diff1, con_pagos_diff2, con_30_rpass, con_60_rpass, con_90_rpass, con_rpass_diff1, con_rpass_diff2, dias_spos, dias_tda, dias_epu, dias_log, dias_pagos, dias_rpass, rubro_spos, monto_spos, nombre_comercio_spos, plan_id, plan, con_30_retira_t, con_60_retira_t, con_90_retira_t, con_retira_t_diff1, con_retira_t_diff2, dias_retira
	FROM schm_workspace.clts_colapso
	WHERE periodo = v_period_6
	;

	DROP TABLE IF EXISTS schm_workspace.clts_captados;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_2;
	DROP TABLE IF EXISTS schm_workspace.clts_spos;
	DROP TABLE IF EXISTS schm_workspace.clts_movimientos_debito;
	DROP TABLE IF EXISTS schm_workspace.clts_tda;
	DROP TABLE IF EXISTS schm_workspace.clts_logeo_int;
	DROP TABLE IF EXISTS schm_workspace.clts_epu;
	DROP TABLE IF EXISTS schm_workspace.clts_pagos;
	DROP TABLE IF EXISTS schm_workspace.clts_mov_tda_spos;
	DROP TABLE IF EXISTS schm_workspace.retiro_plastico_tc;
	DROP TABLE IF EXISTS schm_workspace.retiro_plastico_cdp;
	DROP TABLE IF EXISTS schm_workspace.retiro_debito;
	DROP TABLE IF EXISTS schm_workspace.curse_cc;
	DROP TABLE IF EXISTS schm_workspace.base_limpio;
	DROP TABLE IF EXISTS schm_workspace.retiro_ctacte1;
	DROP TABLE IF EXISTS schm_workspace.retiro_ctacte_2;
	DROP TABLE IF EXISTS schm_workspace.retiro_plastico_tc_2;
	DROP TABLE IF EXISTS schm_workspace.retiro_plastico_cdp_2;
	DROP TABLE IF EXISTS schm_workspace.retiro_ctacte_3;
	DROP TABLE IF EXISTS schm_workspace.retiro_debito_2;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_3;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_4;
	DROP TABLE IF EXISTS schm_workspace.enrolamiento;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_5;
	DROP TABLE IF EXISTS schm_workspace.spos_fin_1;
	DROP TABLE IF EXISTS schm_workspace.spos_fin_2;
	DROP TABLE IF EXISTS schm_workspace.clts_captados_6;
	DROP TABLE IF EXISTS schm_workspace.cod_camp;
	DROP TABLE IF EXISTS schm_workspace.planes_tbl_plan_cliente;
	DROP TABLE IF EXISTS schm_workspace.clts_onboarding_3m_paso;
	DROP TABLE IF EXISTS schm_workspace.clts_colapso;

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_clts_opex_canjesop()
	LANGUAGE plpgsql
AS $$
	
	
	BEGIN
		
	DROP TABLE IF EXISTS schm_workspace.codigos_opex_canjes;
	DROP TABLE IF EXISTS schm_workspace.opex_canjesop;
	DROP TABLE IF EXISTS schm_workspace.vta_tda_online;
	DROP TABLE IF EXISTS schm_workspace.precios_sku_fecha;
	DROP TABLE IF EXISTS schm_workspace.opex_com;
	DROP TABLE IF EXISTS schm_workspace.opex_canjesop2;
	
	CREATE TABLE schm_workspace.codigos_opex_canjes AS 
	SELECT
		COALESCE(a.codigo,b.codigo) AS codigo,
	CASE WHEN a.codigo IS NOT NULL AND b.codigo IS NOT NULL
		THEN 'CANJE+OPEX'
	WHEN b.codigo IS NOT NULL 
		THEN 'CANJE'
	WHEN a.codigo IS NOT NULL 
		THEN 'OPEX'
	END AS tipo_codigo,
	b.canje_op_ptos, 
	b.canje_op_copago
	FROM(
		SELECT DISTINCT 
		codigo 
		FROM br_dm_prod_bigdata_sftp_db.historico_promociones_opex
		) AS a
	FULL JOIN (
	SELECT
		cod_promo AS codigo,
		max(puntos) AS canje_op_ptos,
		max(copago) AS canje_op_copago
		FROM schm_clientes.codigos_canjesop
		GROUP BY cod_promo
		) AS b 
		ON (a.codigo=b.codigo) 
		ORDER BY tipo_codigo;
	
	CREATE TABLE schm_workspace.opex_canjesop AS
		SELECT  
		a.txmvc_rut_dst AS rut,
		a.txmvc_fch_trn_k AS fecha,
		a.txmvc_cod_suc_k AS codigo_sucursal, 
		cast(TXMVC_COD_SUC_K+10000 as varchar)||' '||cast(date_part(year,txmvc_fch_trn_k)*10000+date_part(month,txmvc_fch_trn_k)*100+date_part(day,txmvc_fch_trn_k) as varchar)||' '||cast(TXMVC_GLS_CAJ_K as varchar)||' '||cast(TXMVC_NRO_DCT_K as varchar) as boleta,
		--|| a.txmvc_nro_trn_k 
		a.txmvc_nro_itm_k AS nro_item,
		a.txmvc_cod_prm_k AS codigo,
		--left(a.txmvc_mnt_dst) as dcto ,
		a.txmvc_mnt_dst AS dcto,
		b.tipo_codigo, /*opex o canje*/
		b.canje_op_ptos,
		b.canje_op_copago 
	FROM
		br_dm_prod_bigdata_sqldwarehouse_db.crbdtx_mov_vta_crz a
	INNER JOIN schm_workspace.codigos_opex_canjes AS b 
		ON
		(a.txmvc_cod_prm_k = b.codigo)
	WHERE
		txmvc_nro_itm_k>0
		AND a.periodo = schm_artifacts.f_period(current_date)
		AND a.txmvc_mnt_dst>0 /*extrañamente algunos registros vienen con dcto=0*/
		;
		--a.txmvc_nro_trn_k 
	
	
	-- [03.1] Extraccion de TRXs de Ripley.com desde Venta Detalle Articulo;
		CREATE TABLE schm_workspace.vta_tda_online AS 
			SELECT 
			rut_cpd AS rut,
			to_date(ddmtd_fch_dia,'yyyyMMdd') AS fecha,
			sucursal as  codigo_sucursal,
			 boleta,
		 nro_item,
			 sku
		FROM schm_data_analytics.mdpg_uso_tr_marca
			
		--br_dm_prod_bigdata_gedcre_db.DCRM_COS_MOV_TRN_DET_VTA_ART
		WHERE

			 tipo_trx = 1 /*solo compras*/
			AND sucursal = 39
			AND to_date(cast(ddmtd_fch_dia AS varchar), 'yyyyMMdd') 
			BETWEEN dateadd(MM,-1,DATE_TRUNC('month', current_date))::date AND last_day(current_Date)
			;
	
	--to_char(ddmtd_fch_dia,'yyyy-MM-dd')::date AS fecha, 
	--to_date(cast(ddmtd_fch_dia AS varchar), 'yyyyMMdd') AS fecha,
	
	/*Se extraen todos los SKUs del Periodo*/
	CREATE TABLE schm_workspace.precios_sku_fecha AS
		SELECT 
		sku,
		fecha_carga AS fecha,
		offer_price AS precio_omp,
		card_price AS precio_tc, 
		offer_price-card_price AS dcto
	FROM
		br_dm_prod_bigdata_sqldwarehouse_db.precios_productos_publicados
	WHERE
		card_price>0
		AND offer_price-card_price>0
		AND periodo = schm_artifacts.f_period(current_date)
		;
	
	CREATE TABLE schm_workspace.opex_com AS
	SELECT DISTINCT 
		a.*,
		b.dcto
	FROM
		schm_workspace.vta_tda_online AS a
	INNER JOIN (
		SELECT 
			fecha,
			sku,
			min(dcto) AS dcto
		FROM
			schm_workspace.precios_sku_fecha
		GROUP BY 
			sku,
			fecha) AS b
				ON(a.sku = b.sku AND a.fecha = b.fecha)
		;
	
	--[03.3] Unificar Tablas (Presencial + .com) adaptando Formato;
	CREATE TABLE schm_workspace.opex_canjesop2 AS 
		SELECT
		*
	FROM
		(SELECT 
			rut,
			fecha,
			codigo_sucursal,
			boleta,
			nro_item,
			codigo,
			dcto,
			tipo_codigo,
			canje_op_ptos,
			canje_op_copago 
		FROM
			schm_workspace.opex_canjesop 
	UNION
		SELECT 
			rut,
			fecha,
			codigo_sucursal,
			boleta,
			nro_item,
			0 AS codigo,
			dcto,
			'OPEX' AS tipo_codigo,
			0 as canje_op_ptos,
			0 as canje_op_copago 
		FROM
			schm_workspace.opex_com 
	) AS x 
		;

	DROP TABLE IF EXISTS schm_data_analytics.clts_opex_canjesop;
	
	CREATE TABLE schm_data_analytics.clts_opex_canjesop AS 
	SELECT 
	current_date as fecha_proceso, 
	*  
	from schm_workspace.opex_canjesop2  
	;
	
	DROP TABLE IF EXISTS schm_workspace.codigos_opex_canjes;
	DROP TABLE IF EXISTS schm_workspace.opex_canjesop;
	DROP TABLE IF EXISTS schm_workspace.vta_tda_online;
	DROP TABLE IF EXISTS schm_workspace.precios_sku_fecha;
	DROP TABLE IF EXISTS schm_workspace.opex_com;
	DROP TABLE IF EXISTS schm_workspace.opex_canjesop2;
	
END;
		

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_clts_opex_canjesop(v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
	
	
	BEGIN

	
	DROP TABLE IF EXISTS schm_workspace.codigos_opex_canjes;
	DROP TABLE IF EXISTS schm_workspace.opex_canjesop;
	DROP TABLE IF EXISTS schm_workspace.vta_tda_online;
	DROP TABLE IF EXISTS schm_workspace.precios_sku_fecha;
	DROP TABLE IF EXISTS schm_workspace.opex_com;
	DROP TABLE IF EXISTS schm_workspace.opex_canjesop2;


	CREATE TABLE schm_workspace.codigos_opex_canjes AS 
	SELECT
		COALESCE(a.codigo,b.codigo) AS codigo,
	CASE WHEN a.codigo IS NOT NULL AND b.codigo IS NOT NULL
		THEN 'CANJE+OPEX'
	WHEN b.codigo IS NOT NULL 
		THEN 'CANJE'
	WHEN a.codigo IS NOT NULL 
		THEN 'OPEX'
	END AS tipo_codigo,
	b.canje_op_ptos, 
	b.canje_op_copago
	FROM(
		SELECT DISTINCT 
		codigo 
		FROM br_dm_prod_bigdata_sftp_db.historico_promociones_opex
		) AS a
	FULL JOIN (
	SELECT
		cod_promo AS codigo,
		max(puntos) AS canje_op_ptos,
		max(copago) AS canje_op_copago
		FROM schm_clientes.codigos_canjesop
		GROUP BY cod_promo
		) AS b 
		ON (a.codigo=b.codigo) 
		ORDER BY tipo_codigo;
	
	CREATE TABLE schm_workspace.opex_canjesop AS
		SELECT  
		a.txmvc_rut_dst AS rut,
		a.txmvc_fch_trn_k AS fecha,
		to_char(a.txmvc_fch_trn_k, 'YYYYMM') ::int AS periodo,
		a.txmvc_cod_suc_k AS codigo_sucursal, 
		cast(TXMVC_COD_SUC_K+10000 as varchar)||' '||cast(date_part(year,txmvc_fch_trn_k)*10000+date_part(month,txmvc_fch_trn_k)*100+date_part(day,txmvc_fch_trn_k) as varchar)||' '||cast(TXMVC_GLS_CAJ_K as varchar)||' '||cast(TXMVC_NRO_DCT_K as varchar) as boleta,
		--|| a.txmvc_nro_trn_k 
		a.txmvc_nro_itm_k AS nro_item,
		a.txmvc_cod_prm_k AS codigo,
		--left(a.txmvc_mnt_dst) as dcto ,
		a.txmvc_mnt_dst AS dcto,
		b.tipo_codigo, /*opex o canje*/
		b.canje_op_ptos,
		b.canje_op_copago 
	FROM
		br_dm_prod_bigdata_sqldwarehouse_db.crbdtx_mov_vta_crz a
	INNER JOIN schm_workspace.codigos_opex_canjes AS b 
		ON
		(a.txmvc_cod_prm_k = b.codigo)
	WHERE
		txmvc_nro_itm_k>0
		AND a.periodo = v_periodo
		AND a.txmvc_mnt_dst>0 /*extrañamente algunos registros vienen con dcto=0*/
		;
		--a.txmvc_nro_trn_k 
	
	
	-- [03.1] Extraccion de TRXs de Ripley.com desde Venta Detalle Articulo;
		CREATE TABLE schm_workspace.vta_tda_online AS 
			SELECT 
			rut_cpd AS rut,
			to_date(ddmtd_fch_dia,'yyyyMMdd') AS fecha,
			sucursal as  codigo_sucursal,
			periodo,
			 boleta,
		 nro_item,
			 sku
		FROM schm_data_analytics.mdpg_uso_tr_marca			
		--br_dm_prod_bigdata_gedcre_db.DCRM_COS_MOV_TRN_DET_VTA_ART
		WHERE
			 tipo_trx = 1 /*solo compras*/
			AND sucursal = 39
			AND periodo = v_periodo
			;
		
	
	--to_char(ddmtd_fch_dia,'yyyy-MM-dd')::date AS fecha, 
	--to_date(cast(ddmtd_fch_dia AS varchar), 'yyyyMMdd') AS fecha,
	
	/*Se extraen todos los SKUs del Periodo*/
	CREATE TABLE schm_workspace.precios_sku_fecha AS
		SELECT 
		sku,
		fecha_carga AS fecha,
		offer_price AS precio_omp,
		card_price AS precio_tc, 
		offer_price-card_price AS dcto
	FROM
		br_dm_prod_bigdata_sqldwarehouse_db.precios_productos_publicados
	WHERE
		card_price>0
		AND offer_price-card_price>0
		AND periodo = v_periodo
		;
	
	CREATE TABLE schm_workspace.opex_com AS
	SELECT DISTINCT 
		a.*,
		b.dcto
	FROM
		schm_workspace.vta_tda_online AS a
	INNER JOIN (
		SELECT 
			fecha,
			sku,
			min(dcto) AS dcto
		FROM
			schm_workspace.precios_sku_fecha
		GROUP BY 
			sku,
			fecha) AS b
				ON(a.sku = b.sku AND a.fecha = b.fecha)
		;
	
	--[03.3] Unificar Tablas (Presencial + .com) adaptando Formato;
	CREATE TABLE schm_workspace.opex_canjesop2 AS 
		SELECT
		*
	FROM
		(SELECT 
			rut,
			fecha,
			periodo,
			codigo_sucursal,
			boleta,
			nro_item,
			codigo,
			dcto,
			tipo_codigo,
			canje_op_ptos,
			canje_op_copago 
		FROM
			schm_workspace.opex_canjesop 
	UNION
		SELECT 
			rut,
			fecha,
			periodo,
			codigo_sucursal,
			boleta,
			nro_item,
			0 AS codigo,
			dcto,
			'OPEX' AS tipo_codigo,
			0 as canje_op_ptos,
			0 as canje_op_copago 
		FROM
			schm_workspace.opex_com 
	) AS x 
	;

	DELETE FROM schm_data_analytics.clts_opex_canjesop
	WHERE periodo = v_periodo
	;
	
	INSERT INTO schm_data_analytics.clts_opex_canjesop 
	SELECT 
	current_date AS fecha_proceso, 
	*  
	FROM schm_workspace.opex_canjesop2  
	;
	

	DROP TABLE IF EXISTS schm_workspace.codigos_opex_canjes;
	DROP TABLE IF EXISTS schm_workspace.opex_canjesop;
	DROP TABLE IF EXISTS schm_workspace.vta_tda_online;
	DROP TABLE IF EXISTS schm_workspace.precios_sku_fecha;
	DROP TABLE IF EXISTS schm_workspace.opex_com;
	DROP TABLE IF EXISTS schm_workspace.opex_canjesop2;
	
	/*	===========================================================================================================
		=== Control de versiones visual ===
		2024-01-31	-- v01	--	David / Ignacio		--	Se crea tabla con campo periodo y se adapta sp para esa lógica con cierre.
		2024-00-00	-- v00	--	Ignacio Plaza		--	Versión original.

		=== Información adicional:
		Proceso que...
		===========================================================================================================
	*/

END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_clts_productos_segmentos()
	LANGUAGE plpgsql
AS $$
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.productos_vigentes;
    DROP TABLE IF EXISTS schm_data_analytics.productos_por_cliente;

    CREATE TABLE schm_workspace.productos_vigentes AS
    SELECT
    	DISTINCT rut
    FROM
    	schm_data_analytics.UNIV_TI_VIG_ANT
    ORDER BY
    	rut DESC
    ;

    /*ClasificaciÃ³n de productos por cliente*/
    create table schm_data_analytics.productos_por_cliente as
    select distinct
    	a.RUT,
    case
    	when a.RUT in (select distinct RUT from schm_data_analytics.UNIV_TI_VIG_ANT where tipo_tarjeta='TAM')
    	then 1 else 0 end as SI_TAM,
    case
    	when a.RUT in (select distinct RUT from schm_data_analytics.UNIV_TI_VIG_ANT where tipo_tarjeta='CC')
    	then 1 else 0 end as SI_CC,
    case
    	when a.RUT in (select distinct RUT from schm_data_analytics.UNIV_TI_VIG_ANT where tipo_tarjeta='MASTERCARD CHEK')
    	then 1 else 0 end as SI_MC_CHEK,
    case
    	when a.RUT in (select distinct RUT from schm_data_analytics.UNIV_TI_VIG_ANT where tipo_tarjeta='TD')
    	then 1 else 0 end as SI_TD,
    case
    	when a.RUT in (select distinct RUT from schm_data_analytics.UNIV_TI_VIG_ANT where tipo_tarjeta='TR')
    	then 1 else 0 end as SI_TR
    FROM schm_workspace.productos_vigentes a
    ;

    DROP TABLE IF EXISTS schm_workspace.productos_vigentes;

END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_clts_saldo_rp()
	LANGUAGE plpgsql
AS $$
	

    BEGIN

        DROP TABLE IF EXISTS schm_workspace.rutero_saldo_rptos_extraer_clientes_c_srp;
        DROP TABLE IF EXISTS schm_workspace.Rutero_Saldo_RPtos_tramificar_saldo;
        DROP TABLE IF EXISTS schm_data_analytics.saldo_rptos_disp;
        DROP TABLE IF EXISTS schm_data_analytics.saldo_rptos_disp_rep_diario;
        DROP TABLE IF EXISTS schm_data_analytics.clts_saldo_rptos_disp_rep_diario;

        /* 1. Extraer Clientes con Saldo de RPtos */


        CREATE TABLE schm_workspace.rutero_saldo_rptos_extraer_clientes_c_srp AS
        SELECT
            substring(a.document, 1, length(a.document)-1)::integer AS rut,
            max(a.points) AS Saldo_RPtos,
            max(b.points_m0) AS Saldo_Vencer
        FROM (
                SELECT
                    document,
                    max(points) AS points
                FROM
                    br_dm_prod_bigdata_sqldwarehouse_db.loyalty_saldo_puntos AS table1
                GROUP BY
                    document
            ) AS a
            LEFT JOIN
            (
                SELECT
                    document,
                    max(points_m0) AS points_m0
                FROM
                    br_dm_prod_bigdata_sqldwarehouse_db.loyalty_vencimiento_puntos
                GROUP BY
                    document
            ) AS b
            ON  a.document = b.document
        GROUP BY rut; -- t = 40 sec to 2 min aprox.

        /* 2.  Tramificar saldo de puntos disponibles */

    	CREATE TABLE schm_workspace.rutero_saldo_rptos_tramificar_saldo AS
        SELECT
            *,
            schm_artifacts.f_tramificar(saldo_rptos) as tramo1_saldo_rptos,
            CASE
                WHEN
                    POSITION('.' IN tramo1_saldo_rptos) >= 4 THEN tramo1_saldo_rptos
                ELSE
                    '0' || tramo1_saldo_rptos
            END AS tramo2_saldo_rptos
        FROM
            schm_workspace.Rutero_Saldo_RPtos_extraer_clientes_c_SRP; -- t = 6 min aprox.



        /* 3. Pegar datos del cliente */
        CREATE TABLE schm_data_analytics.saldo_rptos_disp AS
        SELECT
            TO_CHAR(CURRENT_TIMESTAMP, 'DD/MM/YYYY_HH24:MI') AS fecha_proceso,
            a.*,
                /* Segmento Comercial */
            CASE
                WHEN b.segmento_final IS NULL THEN '0. S.I.'
                WHEN b.segmento_final = 'R_GOLD' THEN '1. Gold'
                WHEN b.segmento_final = 'R_SILVER' THEN '2. Silver'
                WHEN b.segmento_final = 'R_PLUS' THEN '3. Plus'
                WHEN b.segmento_final = 'RIPLEY_BAJA' THEN '4. G.B'
                ELSE '0. S.I.'
            END AS segmento_comercial,
                /* Segmento Gestion */
            CASE
                WHEN c.segmento_final IS NULL THEN '0. S.I.'
                WHEN c.segmento_final = 'R_GOLD' THEN '1. Gold'
                WHEN c.segmento_final = 'R_SILVER' THEN '2. Silver'
                WHEN c.segmento_final = 'R_PLUS' THEN '3. Plus'
                WHEN c.segmento_final = 'RIPLEY_BAJA' THEN '4. G.B'
                ELSE '0. S.I.'
            END AS segmento_gestion,
                /* Tenencia de Tarjeta Debito */
            CASE
                WHEN d.vu_riesgo = 1 THEN 1
                ELSE 0
            END AS si_tc,
            CASE
                WHEN d.vu_riesgo<>1 THEN 'N.A.'
                WHEN d.marca_base IN ('CREDITO_2000','ITF') THEN 'TR'
                ELSE 'TAM'
            END AS tipo_tc,
            d.act_tr,
                /* Info de Demo Basquet */
            case
            	when e.rut is not null then 1
            	else 0
            end as si_td,
            f.tipo_actividad,
            f.sexo,
            f.rango_edad,
                /* Region del Cliente */
            g.region,
                /* Rubro SPOS Preferente */
            h.rf_tmp1,
                /* Tenencia de Datos de Contacto (Email) */
            i.email,
                /* Tenencia de Datos de Contacto (Telefono) */
            j.telefono,
                /* Marca de Libro Negro */
            CASE
                WHEN k.rut IS NOT NULL THEN 1
                ELSE 0
            END AS lnegro_car
            FROM
                schm_workspace.rutero_saldo_rptos_tramificar_saldo AS a
            left join
                br_dm_prod_analytics_ripley_puntos_db.segmento_comercial_cierre AS b ON a.rut = b.rut
            left join
                (SELECT rut, segmento_final FROM br_dm_prod_analytics_ripley_puntos_db.segmento_comercial_diario where fecha_ejecucion = current_date) AS c ON a.rut = c.rut
            left join
                (SELECT vu_riesgo, marca_base, act_tr, rut from schm_data_analytics.bitr_actividad_tr where periodo = TO_CHAR(DATE_TRUNC('MONTH', CURRENT_DATE - INTERVAL '1 month'), 'YYYYMM')::integer ) AS d ON a.rut = d.rut
            left join
            	(select rut, estado_cuenta from schm_data_analytics.ppff_ctavta1_stock where fecha_proceso = TO_CHAR(DATE_TRUNC('MONTH', CURRENT_DATE - INTERVAL '1 month'), 'YYYYMM')::integer  and estado_cuenta = 'vigente' ) as e on a.rut=e.rut
            left join
                (select tipo_actividad, sexo, rango_edad, rut from  schm_data_analytics.ctbl_demo_basket where periodo = TO_CHAR(DATE_TRUNC('MONTH', CURRENT_DATE - INTERVAL '1 month'), 'YYYYMM')::integer ) AS f ON a.rut = f.rut
            left join
                (select rut, region from schm_data_analytics.ctbl_direcciones) AS g ON a.rut = g.rut
            left join
                (select rut, rf_tmp1  from schm_data_analytics.spos_rubro_preferente where periodo = TO_CHAR(DATE_TRUNC('MONTH', CURRENT_DATE - INTERVAL '1 month'), 'YYYYMM')::integer ) AS h ON a.rut = h.rut
            left join
                (select rut, email from schm_data_analytics.ctbl_base_trabajo_email) as i ON a.rut = i.rut
            left join
                (select clirut, telefono from  schm_data_analytics.ctbl_fonos_movil_final where periodo = TO_CHAR(DATE_TRUNC('MONTH', CURRENT_DATE - INTERVAL '1 month'), 'YYYYMM')::integer ) AS j ON a.rut = j.clirut
            left join
               (select rut from schm_data_analytics.ctbl_lnegro_car where fecha_ingreso = TO_CHAR(DATE_TRUNC('MONTH', CURRENT_DATE - INTERVAL '1 month'), 'YYYYMM')::integer ) AS k ON a.rut = k.rut; --15-20 min aprox.

            /*4. Version Agrupada de cara a reporte diario; */
       CREATE TABLE schm_data_analytics.clts_saldo_rptos_disp_rep_diario AS
        SELECT
            TO_CHAR(CURRENT_TIMESTAMP, 'DD/MM/YYYY_HH24:MI') AS fecha_proceso,
            tramo2_saldo_rptos,
            segmento_comercial,
            /*Segmento_Gestion,*/
            /*NomSuc_TotalTMP,*/
            CASE
                WHEN si_tc=1 AND si_td=1 THEN '1. TC+TD'
                WHEN si_tc=1 THEN '2. Solo TC'
                WHEN si_td=1 THEN '3. Solo TD'
                ELSE '4. N.A.'
            END AS tenencia_tarjeta,
            tipo_tc,
            act_tr,
            /*tipo_actividad,*/
            sexo,
            rango_edad,
            /*region,*/
            rf_tmp1,
            CASE
                WHEN email IS NOT NULL AND telefono IS NOT NULL THEN '1. eMail+Fono'
                WHEN email IS NOT NULL THEN '2. Solo eMail'
                WHEN telefono IS NOT NULL THEN '3. Solo Fono'
                ELSE 'S.I.'
            END AS contactabilidad,
            lnegro_car,
            COUNT(*) AS nro_clientes
        FROM schm_data_analytics.saldo_rptos_disp
        GROUP BY
            tramo2_saldo_rptos,
            segmento_comercial,
            /*Segmento_Gestion,*/
            /*NomSuc_TotalTMP,*/
            tenencia_tarjeta,
            tipo_tc,
            act_tr,
            /*TIPO_ACTIVIDAD,*/
            sexo,
            rango_edad,
            /*region,*/
            rf_tmp1,
            contactabilidad,
            lnegro_car; --3 min aprox.

            -- cambio probar cambio usr chrsitian

    END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_clts_universo_panes()
	LANGUAGE plpgsql
AS $$
	


BEGIN

    DROP TABLE IF EXISTS schm_workspace.clts_universo_panes;
    DROP TABLE IF EXISTS schm_data_analytics.clts_antiguedad;
    DROP TABLE IF EXISTS schm_workspace.univ_ti_vig;
    DROP TABLE IF EXISTS schm_data_analytics.univ_ti_vig_ant;
    DROP TABLE IF EXISTS schm_workspace.productos_vigentes;
    DROP TABLE IF EXISTS schm_data_analytics.productos_por_cliente;


CREATE TABLE schm_workspace.clts_universo_panes AS
    SELECT
	CAST(t3.pemid_gls_nro_dct_ide_k AS INTEGER) AS rut
        ,t3.pemid_dvr_nro_dct_ide AS dv
    	,t1.codent
        ,t1.centalta
        ,t1.cuenta
        ,t1.calpart
        ,(t1.codent || ' ' || t1.centalta || ' ' || t1.cuenta) AS ctto
	--, (CASE
	--    WHEN t2.fecbaja::varchar(10) = '0001-01-01' THEN 1
	--    ELSE 0
	--END) AS t_ctto_vigente
        ,(CASE
		WHEN substring(t2.fecbaja::varchar(10),1,4) = '0001' THEN 1
		ELSE 0
	END) AS t_ctto_vigente

        ,t2.fecalta AS fecalta_ctto
        ,t2.fecbaja AS fecbaja_ctto
        ,t4.codmar
        ,t4.indtipt
        --,t6.destipt AS tipo_tarjeta_rsat
        ,CASE
            WHEN (t4.codmar = 2 AND t4.indtipt=7 AND t2.centalta='0105')
            THEN 'MASTERCARD CLASICA CHIP CHEK'
            ELSE t6.destipt
        END AS tipo_tarjeta_rsat
        ,(CASE
            WHEN t4.codmar = 1 AND t4.indtipt IN (1, 3, 9, 11)
                THEN 'TR'
            WHEN t4.codmar = 2 AND t4.indtipt IN (1, 6, 7, 10, 14)
                THEN 'TAM'
            WHEN t4.codmar = 2 AND t4.indtipt = 8
                THEN 'MASTERCARD DEBITO'
            WHEN t4.codmar = 2 AND t4.indtipt = 13
                THEN 'DEBITO CTACTE'
            WHEN t4.codmar = 2 AND t4.indtipt = 12
                THEN 'MASTERCARD CHEK'
            WHEN t4.codmar = 4 AND t4.indtipt = 1
                THEN 'MAESTRO DEBITO'
	    END) AS tipo_tarjeta
        ,t4.numplastico
        ,t4.pan
        ,t4.panant
        ,t4.feccadtar
        ,t4.indulttar
        ,t4.numbencta
        ,t4.fecalta AS fecalta_tr
        ,t4.fecbaja AS fecbaja_tr
        ,t4.indsittar
        ,t5.dessittar
        ,t4.fecultblq
        ,t4.codblq
        ,(CASE
		WHEN t4.codblq = 1
		AND texblq = 'BLOQUEO TARJETA NO ISO' THEN 'BLOQUEO TARJETA NO ISO'
		WHEN t4.codblq = 1
		AND texblq <> 'BLOQUEO TARJETA NO ISO' THEN 'ROBO/CODIGO_BLOQUEO'
		WHEN t4.codblq IN (79, 98) THEN 'CAMBIO DE PRODUCTO'
		WHEN t4.codblq IN (16, 43) THEN 'FRAUDE'
		WHEN t4.codblq > 1
		AND t4.codblq NOT IN (16, 43, 79, 98) THEN 'DESBLQ'
	END) AS motivo_bloqueo
	--, (CASE
	--    WHEN t4.indsittar = 5 AND t4.fecalta::varchar != '0001-01-01' AND t4.fecbaja::varchar = '0001-01-01' AND t4.codblq = 0 THEN 1
	--    ELSE 0
	--END) AS t_tr_vig
        ,(CASE
		WHEN t4.indsittar = 5
		AND substring(t4.fecalta::varchar(10),1,4) != '0001'
		AND substring(t4.fecbaja::varchar(10),1,4) = '0001'
		AND t4.codblq = 0 THEN 1
		ELSE 0
	END) AS t_tr_vig
     ,SUBSTRING(t4.pan,13,4) AS pan2
     ,(t1.codent || t1.centalta || t1.cuenta || SUBSTRING(t4.pan,13,4)) AS CONTRATO_PAN
     ,(t7.VERSION) AS COD_GARANTIA
     ,t8.DESVERSION AS TIPO_GARANTIA

     ,t2.GRUPOLIQ
     ,t2.PRODUCTO
     ,t9.DESCRED as DIA_DE_PAGO
     ,t9.DESCRIPCION
     ,t10.CONPROD
     ,t10.DESCON
     ,t10.DESCONRED
	FROM
		br_dm_prod_bigdata_reporitf_db.mpdt013 t1
	INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 t2
	        ON (t1.codent = t2.codent)
		AND (t1.centalta = t2.centalta)
		AND (t1.cuenta = t2.cuenta)
	INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide t3
	        ON (t1.identcli::integer = t3.pemid_nro_inn_ide::integer)
	INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt009 t4
	        ON (t1.codent = t4.codent)
		AND (t1.centalta = t4.centalta)
		AND (t1.cuenta = t4.cuenta)
		AND (t1.numbencta = t4.numbencta)
	INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt063 t5
	        ON (t4.codent = t5.codent)
		AND (t4.indsittar = t5.indsittar)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt026 t6
	        ON (t4.codent = t6.codent)
		AND (t4.codmar = t6.codmar)
		AND (t4.indtipt = t6.indtipt)
		--left join br_dm_prod_bigdata_reporitf_db.mpdt060 i
		--    on (g.codblq = i.codblq)
	INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt494 t7
			ON t2.codent=t7.codent
		AND t2.centalta=t7.centalta
		AND t2.cuenta=t7.cuenta
	INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt496 t8
			ON t2.codent=t8.codent
		AND t2.producto=t8.producto
		AND t2.subprodu=t8.subprodu
		AND t7.clamon=t8.clamon
		AND t7.version=t8.version
LEFT JOIN br_dm_prod_bigdata_reporitf_db.MPDT086 t9 ON t2.GRUPOLIQ=t9.CODGRUPO AND t9.CODPROCESO = 1
LEFT JOIN br_dm_prod_bigdata_reporitf_db.MPDT167 t10 ON t2.CODENT=t10.CODENT AND t2.PRODUCTO=t10.PRODUCTO AND t2.SUBPRODU=t10.SUBPRODU AND t2.CONPROD=t10.CONPROD
	ORDER BY
		(t1.codent || ' ' || t1.centalta || ' ' || t1.cuenta) ASC
	         ,t4.numplastico DESC
	        ;


	DELETE FROM schm_data_analytics.clts_universo_panes
    WHERE periodo = to_char(current_date, 'yyyyMM')::integer
   ;

   INSERT INTO schm_data_analytics.clts_universo_panes
   SELECT *
   ,to_char(current_date, 'yyyyMM')::integer AS periodo
   FROM schm_workspace.clts_universo_panes
   ;

   CREATE TABLE schm_data_analytics.clts_antiguedad AS
   SELECT
		rut
		,datediff('day',fecalta_ctto,(current_date)) AS antiguedad
   FROM (
		SELECT
		RUT
		,MIN(fecalta_ctto) AS fecalta_ctto
		FROM schm_data_analytics.clts_universo_panes
		WHERE periodo=TO_CHAR(current_date, 'YYYYMM')::integer AND calpart='TI' AND t_ctto_vigente=1
		GROUP BY RUT)
    WHERE antiguedad<=30
   ;

    CREATE TABLE schm_workspace.univ_ti_vig AS
    SELECT
        rut
        ,codent
        ,centalta
        ,cuenta
        ,tipo_tarjeta
        ,tipo_tarjeta_rsat
        ,pan
        ,panant
        ,(max(numplastico)) AS max_of_numplastico
    FROM
        schm_data_analytics.clts_universo_panes
    WHERE
    	periodo = to_char(current_date, 'yyyyMM')::integer
        AND calpart = 'TI'
        AND t_ctto_vigente = 1
        -- problemas en este filtro
        AND t_tr_vig = 1
    GROUP BY
        rut
        ,codent
        ,centalta
        ,cuenta
        ,tipo_tarjeta
        ,tipo_tarjeta_rsat
        ,pan
        ,panant
        ;

    CREATE TABLE schm_data_analytics.univ_ti_vig_ant AS
    SELECT
        t1.rut
        ,t1.codent
        ,t1.centalta
        ,t1.cuenta
        ,CASE
            WHEN t1.tipo_tarjeta IN ('MASTERCARD DEBITO', 'MAESTRO DEBITO') THEN 'TD'
            WHEN t1.tipo_tarjeta IN ('DEBITO CTACTE') THEN 'CC'
            ELSE t1.tipo_tarjeta
        END AS tipo_tarjeta
        ,t1.tipo_tarjeta_rsat
        ,t2.tipo_tarjeta_rsat AS tipo_tarjeta_rsat_ant
        ,CASE
            WHEN t2.tipo_tarjeta IN ('MASTERCARD DEBITO', 'MAESTRO DEBITO') THEN 'TD'
            WHEN t2.tipo_tarjeta IN ('DEBITO CTACTE') THEN 'CC'
            ELSE t2.tipo_tarjeta
        END AS tipo_ant
        ,t1.pan
        ,t1.panant
        ,t1.max_of_numplastico
        ,CASE
            WHEN t1.tipo_tarjeta_rsat = t2.tipo_tarjeta_rsat THEN 0
            WHEN t1.panant IS NULL THEN 0
            ELSE 1
        END AS cdtt
    FROM schm_workspace.univ_ti_vig t1
    LEFT JOIN schm_data_analytics.clts_universo_panes t2
           ON t1.panant = t2.pan
          AND t1.cuenta = t2.cuenta
         WHERE t2.periodo=to_char(current_date, 'yyyyMM')::integer
        ;

    /* obtención de ruts unicos en base a productos vigentes*/
    CREATE TABLE schm_workspace.productos_vigentes AS
    SELECT DISTINCT rut
    FROM schm_data_analytics.univ_ti_vig_ant
    ORDER BY rut DESC
    ;

/*clasificación de productos por cliente*/
    CREATE TABLE schm_data_analytics.productos_por_cliente AS
    SELECT
	    DISTINCT a.rut
        ,CASE
            WHEN a.rut IN (
            SELECT DISTINCT rut
            FROM schm_data_analytics.univ_ti_vig_ant
            WHERE tipo_tarjeta = 'TAM') THEN 1
            ELSE 0
        END AS si_tam
        ,CASE
            WHEN a.rut IN (
            SELECT DISTINCT rut
            FROM schm_data_analytics.univ_ti_vig_ant
            WHERE tipo_tarjeta = 'CC') THEN 1
            ELSE 0
        END AS si_cc
        ,CASE
            WHEN a.rut IN (
            SELECT DISTINCT rut
            FROM schm_data_analytics.univ_ti_vig_ant
            WHERE tipo_tarjeta = 'MASTERCARD CHEK') THEN 1
            ELSE 0
        END AS si_mc_chek
        ,CASE
            WHEN a.rut IN (
            SELECT DISTINCT rut
            FROM schm_data_analytics.univ_ti_vig_ant
            WHERE tipo_tarjeta = 'TD') THEN 1
            ELSE 0
        END AS si_td
        ,CASE
            WHEN a.rut IN (
            SELECT DISTINCT rut
            FROM schm_data_analytics.univ_ti_vig_ant
            WHERE tipo_tarjeta = 'TR') THEN 1
            ELSE 0
        END AS si_tr
    FROM schm_workspace.productos_vigentes a
    ;

    DROP TABLE IF EXISTS schm_workspace.clts_universo_panes;
    DROP TABLE IF EXISTS schm_workspace.univ_ti_vig;
    DROP TABLE IF EXISTS schm_workspace.productos_vigentes;

	/*===========================================================================================================
	=== Control de versiones visual ===
	2023-12-07 -- v04 -- Alejandra Marinao	--	Se agrega case when en campo tipo_tarjeta_rsat, para apertura de mastercard chek TC.
	2023-11-23 -- v03 -- Alejandra Marinao	--	Se incluyen nuevas columnas
									        --	Cruces tablas mpdt494, mpdt496, MPDT086 y MPDT167.
	2023-00-00 -- v02 -- Sergio Jara		--	Actualización.
	2023-00-00 -- v01 -- Sergio Jara		--	Versión original refactorizada.

	=== Información adicional:
	Proceso que genera una tabla que contiene todos las tarjetas emitidas por cada contrato (TC+TD),
	mostrando la informacion del estado tanto del plastico como del contrato.
	===========================================================================================================
	*/

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_colapso_data(v_period int4)
	LANGUAGE plpgsql
AS $$
	
	
	
	BEGIN
		
	DROP TABLE IF EXISTS schm_workspace.clts_spos; --spos_fin
	DROP TABLE IF EXISTS schm_workspace.clts_movimientos_debito; --spos_cv_cc
	DROP TABLE IF EXISTS schm_workspace.clts_tda;
	DROP TABLE IF EXISTS schm_workspace.clts_logeo_int;
	DROP TABLE IF EXISTS schm_workspace.clts_epu;
	DROP TABLE IF EXISTS schm_workspace.clts_pagos;

	/*SPOS TC*/
	CREATE TABLE schm_workspace.clts_spos AS 
	SELECT
		a.rut,
		a.fecha,
		a.hora,
		a.codact,
		a.venta_tarjeta,
		a.nombre_comercio
	FROM
		schm_data_analytics.spos_aut AS a
	JOIN schm_workspace.clts_captados_2 AS b
	ON
		(a.rut = b.rut)
	WHERE
		a.periodo = v_period
	;

	CREATE TABLE schm_workspace.clts_movimientos_debito AS 
	SELECT
		a.rut,
		a.tipo,
		a.fecha,
		a.codact,
		a.venta_tarjeta,
		a.nombre_comercio,
		a.tipo_compra
	FROM
		schm_data_analytics.mpdg_movimientos_debito a
	JOIN schm_workspace.clts_captados_2 AS b
		ON
			(a.rut = b.rut)
	WHERE
		a.periodo = v_period
	;
	
	/*TDA TC*/
	CREATE TABLE schm_workspace.clts_tda AS 
	SELECT
		DISTINCT 
		a.rut,
		a.fecha
	FROM
		schm_data_analytics.tnda_tda_itf AS a
	JOIN schm_workspace.clts_captados_2 AS b
	ON
		(a.rut = b.rut)
	WHERE
		a.capital>0
		AND a.periodo = v_period
	;
	
	/*LOGEO_DIGITAL*/
	CREATE TABLE schm_workspace.clts_logeo_int AS 
	SELECT
		DISTINCT 
		a.rut,
		a.fecha
	FROM
		schm_data_analytics.dgtl_logueos_internet AS a
	JOIN schm_workspace.clts_captados_2 AS b
	ON
		(a.rut = b.rut)
	WHERE
		a.DISPOSITIVO IN ('DESKTOP', 'APP' , 'APP_1')
		AND a.periodo = v_period
	;
	
	/*EPU COBRO*/
	CREATE TABLE schm_workspace.clts_epu AS 
	SELECT
		DISTINCT 
		a.rut,
		a.fecfac AS fecha
	FROM
		schm_data_analytics.mdpg_epu_mes_actual AS a
	JOIN schm_workspace.clts_captados_2 AS b
	ON
		(a.rut = b.rut)
	WHERE
		a.periodo = v_period
	;
	
	/*PAGO DIGITAL*/
	CREATE TABLE schm_workspace.clts_pagos AS 
	SELECT
		DISTINCT 
		a.rut,
		a.fecfac AS fecha
	FROM schm_data_analytics.mdpg_pagos_digitales AS a
	JOIN schm_workspace.clts_captados_2 AS b
	ON
		(a.rut = b.rut)
	WHERE
		a.nomcomred IN ('HB_SERV', 'UNIRED', 'Khipu', 'SANTANDER')
		AND 
		a.periodo = v_period
	;

	END;
		


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_base_nombres()
	LANGUAGE plpgsql
AS $$
	
	

BEGIN

    DROP TABLE IF EXISTS schm_workspace.ctbl_base_nombres_sinacofi;
    DROP TABLE IF EXISTS schm_workspace.ctbl_base_nombres_chek;
    DROP TABLE IF EXISTS schm_workspace.ctbl_nom_itf;
    DROP TABLE IF EXISTS schm_workspace.ctbl_query_for_sinacofi_dv;
    DROP TABLE IF EXISTS schm_data_analytics.ctbl_base_nombres;

    CREATE TABLE schm_workspace.ctbl_base_nombres_sinacofi AS
    SELECT
        rut,
        dv,
        upper(nombre) as nombres,
        upper(ap_paterno) as paterno,
        upper(ap_materno) as materno,
        fech_nac,
        genero
    FROM  br_dm_prod_bigdata_borlg_db.data_sinacofi;

    CREATE TABLE schm_workspace.ctbl_base_nombres_chek AS
    SELECT 	
	   	a.rut
		,RIGHT(a.nationalid, 1) AS dv
		,UPPER(a.firstname) AS nombres
		,UPPER(a.lastname) AS paterno
		,REPLACE(
			REPLACE(
				REPLACE(
					REPLACE(
						REPLACE(
							REPLACE(
								REPLACE(
									REPLACE(
										UPPER(b.secondlastname), '%C3%AD', 'I')
								, '%20', ' ')
							, '%C3%A1', 'A')
						, '%C3%B3', 'O')
					, '%C3%BA', 'U')
				, '%C3%A9', 'E')
			, '%C3%B1', 'Ñ')
		, '%C3%81', 'A')  AS materno
		,TO_DATE(fecha_nacimiento, 'yyyy-mm-dd') AS fech_nac
		,UPPER(a.gender) AS genero
	FROM schm_digital.dgtl_chek_master a
		LEFT JOIN br_dm_prod_bigdata_chekapp_db.chek_users b 
			ON a.nationalid = b.nationalid;

    CREATE TABLE schm_workspace.ctbl_nom_itf AS
    SELECT
        a.pemid_gls_nro_dct_ide_k as rut,
        a.pemid_dvr_nro_dct_ide as dv,
        b.pemnb_gls_nom_pel as nombres,
        b.pemnb_gls_apl_pat as paterno,
        b.pemnb_gls_apl_mat as materno,
        a.pemid_nro_inn_ide as id
    FROM br_dm_prod_bigdata_reporitf_db.bopers_mae_ide a
    INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_nat_bsc b
        ON a.pemid_nro_inn_ide = b.pemid_nro_inn_ide_k
    WHERE b.pemnb_gls_apl_pat NOT IN ('registrado''v','x','x','.','ll','probe','prueba','cuenta','a','aa','aaa','aaaa','žžž')
        AND b.pemnb_gls_apl_mat NOT IN ('x','xx')
        AND b.pemnb_gls_apl_mat NOT LIKE ('%xx%')
        AND b.pemnb_gls_nom_pel NOT IN('xxx','xxx''sebasti¿n','xx','x','xxxx','zzzzzzzzzzzzzzzzzzz',
        '.','xxxxx','xd','sfbfgr','xmagdalena','nombre/razon soci','ss','?','¿','klklz','bb','ccc','fd','vv',
        'xmaria','xlinda','xd''z','xz','zx','aa patricia','aalejandra','aalvaro','abd¿n ren¿','prueba','aa patricia','zxxzzxzx',
        'zzzzzzzzzzzzzzzzzzz','pruebas','seguros','pruebaii','rut prueba2','rut prueba1','ccc','zxzxzx','ee','sss',
        'a','aa','aaa','aaaa','500mario','zx','zxxzzxzx','žž','zzz','.','aaaaaaaaaaaaaaaa','fj?l?','sercom','fj?l?','internet',
        'elba esmerita','.aida alejandra','.ana myriam','.edith de las mer','500mario','aaaaaaaaaaaaaaaa','nombre razon soci',
        'nombre/razon soci', 'razon', 'nombre/razon soci');


    CREATE TABLE schm_workspace.ctbl_query_for_sinacofi_dv AS
    SELECT
        t1.rut,
        t1.dv,
        t1.nombres,
        t1.paterno,
        t1.materno
    FROM schm_workspace.ctbl_base_nombres_sinacofi t1
    UNION
    SELECT
        t2.rut,
        t2.dv,
        t2.nombres,
        t2.paterno,
        t2.materno
    FROM schm_workspace.ctbl_nom_itf t2
    WHERE t2.rut NOT IN (SELECT rut FROM schm_workspace.ctbl_base_nombres_sinacofi)
    UNION
    SELECT 
        t3.rut,
        t3.dv,
        t3.nombres,
        t3.paterno,
        t3.materno
   	FROM schm_workspace.ctbl_base_nombres_chek t3
   	WHERE t3.rut NOT IN (SELECT rut FROM schm_workspace.ctbl_base_nombres_sinacofi)
   		AND t3.rut NOT IN (SELECT rut FROM schm_workspace.ctbl_nom_itf t2);


    CREATE TABLE schm_data_analytics.ctbl_base_nombres AS
    SELECT * FROM schm_workspace.ctbl_query_for_sinacofi_dv;


    UPDATE schm_data_analytics.ctbl_base_nombres
        SET nombres = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(nombres,'|',''),'"',''),',',''),'	',''),';',''),'.','')
            ,paterno = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(paterno,'|',''),'"',''),',',''),'	',''),';',''),'.','')
            ,materno = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(materno,'|',''),'"',''),',',''),'	',''),';',''),'.','')
    WHERE nombres LIKE ('%|%') OR nombres LIKE ('%"%') OR nombres LIKE ('%,%') OR nombres LIKE ('%	%') 
        OR nombres LIKE ('%;%') OR nombres LIKE ('%.%')
        OR paterno LIKE ('%|%') OR paterno LIKE ('%"%') OR paterno LIKE ('%,%') OR paterno LIKE ('%	%') 
        OR paterno LIKE ('%;%') OR paterno LIKE ('%.%')
        OR materno LIKE ('%|%') OR materno LIKE ('%"%') OR materno LIKE ('%,%') OR materno LIKE ('%	%') 
        OR materno LIKE ('%;%')
    ;


    DROP TABLE IF EXISTS schm_workspace.ctbl_base_nombres_sinacofi;
    DROP TABLE IF EXISTS schm_workspace.ctbl_base_nombres_chek;
    DROP TABLE IF EXISTS schm_workspace.ctbl_nom_itf;
    DROP TABLE IF EXISTS schm_workspace.ctbl_query_for_sinacofi_dv;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-10-30 -- v04 -- David Vásquez		--	Se quita truncate y se deja solo "create as select" ya que produjo errores.
	2023-10-30 -- v03 -- Fernando Soto		--	Se agrega tabla chek en la lógica del sp.
	2023-07-12 -- v02 -- David Vásquez		--	Agrego sentencia update a campos nombres, paterno y materno, quitando posibles caracteres de tabla
	                                        --   de salida, tales como "|",'"',',','	',';','.'. (pipe, comilla, coma, tab, punto y coma, punto).
	2023-00-00 -- v01 -- Sergio Jara		--	Versión original.

	=== Información adicional:
	Proceso que busca y genera una tabla final con los nombres de los clientes, disponible para ser utilizada en redshift.
	===========================================================================================================
*/

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_chek_contactabilidad()
	LANGUAGE plpgsql
AS $$
	
BEGIN
    DROP TABLE IF EXISTS schm_workspace.chek_modificado;
    DROP TABLE IF EXISTS schm_workspace.chek_dat_original;
    DROP TABLE IF EXISTS schm_workspace.chek_e_vdateperiodo;
    DROP TABLE IF EXISTS schm_workspace.chek_f_vdateperiodo;
    DROP TABLE IF EXISTS schm_workspace.chek_e_ini_a;
    DROP TABLE IF EXISTS schm_workspace.chek_e_ini_b;


    CREATE TABLE schm_workspace.chek_modificado AS
        SELECT
            nationalid  as rut2,
            CASE
                when LENGTH(nationalid)>= 12 then substring(nationalid, 0, 9)
                when (nationalid is not null and LENGTH(nationalid)-1 > 0)
                    then REVERSE(SUBSTRing(REGEXP_REPLACE(REVERSE(nationalid), '[^a-zA-Z0-9]', ''), 2, LENGTH(nationalid)-1))
                when nationalid is null then null
                else '0'
            END                             as rut,
            phonenumber                     as telefono,
            upper(email)                    as email,
            primaryaccountcategory	        as categoria,
            updatedat	                    as fecha
        FROM br_dm_prod_bigdata_chekapp_db.chek_users
    ;


    CREATE TABLE schm_workspace.chek_dat_original AS
        SELECT
            rut2,
            REGEXP_REPLACE(rut, '[^0-9]', '')::numeric  as rut,
            case when LENGTH(telefono) < 4 then null else substring(telefono, 5, 12)::numeric  end as telefono,
            email,
            categoria,
            fecha
        FROM schm_workspace.chek_modificado
        WHERE true
    ;


    CREATE TABLE schm_workspace.chek_e_vdateperiodo AS
        SELECT
            rut,
            rut2,
            email,
            fecha   as fecha_actualizacion
        FROM schm_workspace.chek_dat_original
        WHERE true
            AND rut > 100 AND rut < 99999999
            AND rut is not null
            AND email not LIKE	('.-%')
            AND email not LIKE	('%.')
            AND email not LIKE	('-%')
            AND email not LIKE 	('%XXXXX%')
            AND email not LIKE 	('%DEFAULT%')	          AND email not LIKE ('%TEST@%')
            AND email not LIKE 	('%..%')		          AND email not LIKE ('%PRUEBA')
            AND email not LIKE	('%(%')			          AND email not LIKE ('%)%')
            AND email not LIKE	('%/%')			          AND email not LIKE ('%?%')
            AND email not LIKE 	('%�%')			          AND email not LIKE ('%SINMAIL%')
            AND email not LIKE 	('%NOTIENE%')	          AND email not LIKE ('%NOTENGO%')
            AND email not LIKE 	('%SINCORRE%')	          AND email not LIKE ('%TEST@%')
            AND email <>'@'						          AND email not LIKE ('%GFFDF%')
            AND email not LIKE 	('%0000000%')	          AND email not LIKE ('%GMAIL.CL%')
            AND email not LIKE 	('%GMAIL.ES%')	          AND email <>'0'
            AND email LIKE 	('%@%')				          AND email not LIKE ('%SINemail%')
            AND email not LIKE 	('%NOREGISTRA%')          AND email not LIKE ('%SINMALLIL%')
            AND email not LIKE 	('%@MAILINATOR.COM%')     AND email not LIKE ('%@MICORREO.COM%')
            AND email not LIKE 	('%@HOTRMAIL.COM%')	      AND email not LIKE ('%@SDFDF.CL%' )
        /*agregado pia*/
            AND email not LIKE ('%HORTMAIL.COM%')         AND email not LIKE ('%REPLEY.COM%')
            AND email not LIKE ('%BANCPORIPLEY.COM%')     AND email not LIKE ('%GMAL.COM%')
            AND email not LIKE ('%RILPLEY.COM%')          AND email not LIKE ('%HOTMAI.COM%')
            AND email not LIKE ('%GAMIL.COM%')            AND email not LIKE ('%RIPEY.CL%')
            AND email not LIKE ('%RIPLEY.VOM%')           AND email not LIKE ('%HTOMAIL.COM%')
            AND email not LIKE ('%GMAIL.CON%')            AND email not LIKE ('%GMIL.COM%')
            AND email not LIKE ('%HOTAMIL.COM%')          AND email not LIKE ('%123MAIL.CL%')
            AND email not LIKE ('%ICLOOUD.COM%')          AND email not LIKE ('%YMAIL.COM%')
            AND email not LIKE ('%HOTMIAL.COM%')          AND email not LIKE ('%GMAI.COM%')
            AND email not LIKE ('%HOTMAIL.OM%')           AND email not LIKE ('%GMAIIL.COM%')
            AND email not LIKE ('%RIOLPLEY.COM%')         AND email not LIKE ('%aol.com%')
            AND email not LIKE ('%GMSAIL.COM%')           AND email not LIKE ('%ICLOU.COM%')
            AND email not LIKE ('%GMAIL.CM%')             AND email not LIKE ('%GMIAL.COM%')
            AND email not LIKE ('%UAHOO.COM%')            AND email not LIKE ('%HOTMAIL.OCM%')
            AND email not LIKE ('%GMAILC.OM%')            AND email not LIKE ('%UTLOOOK.COM%')
            AND email not LIKE ('%RIPLE.COM%')            AND email not LIKE ('%GMAILL.COM%')
            AND email not LIKE ('%GMAOL.COM%')            AND email not LIKE ('%HORMAIL.COM%')
            AND email not LIKE ('%HOTMAL.COM%')       /*AND t1.email not LIKE ('OTMAIL.COM')*/
            AND email not LIKE ('%2HOTMAIL.ES%')          AND email not LIKE ('%XXX.COM%')
            AND email not LIKE ('%AUTLOOK.COM%')          AND email not LIKE ('%8GMAIL.COM%')
            AND email not LIKE ('%GMAIL.COMN%')           AND email not LIKE ('%OITLOOK.COM%')
            AND email not LIKE ('%OUTLOCK.COM%')          AND email not LIKE ('%GMAIL.OM%')
            AND email not LIKE ('%GMAIL.LCOM%')           AND email not LIKE ('%OUTLLOK.CL%')
            AND email not LIKE ('%OULOOCK.ES%')           AND email not LIKE ('%OULOOKS.ES%')
            AND email not LIKE ('%GAMIAL.COM%')           AND email not LIKE ('%HOTMAILL.COM%')
            AND email not LIKE ('%GMAIL.CPM%')            AND email not LIKE ('%64GMAIL.COM%')
            AND email not LIKE ('%GMAIOL.COM%')
         /*agregado email Lore Gerrero*/
            AND email not LIKE ('%yahho.com%')            AND email not LIKE ('%email.CON%')
            AND email not LIKE ('%OUTLOKK.ES%')           AND email not LIKE ('%HORMAIL.COM%')
            AND email not LIKE ('%GMAIL.VOM%')            AND email not LIKE ('%YAHOO.CL%')
            AND email not LIKE ('%GMEIL.CL%')             AND email not LIKE ('%GMAKL.COM%')
            AND email not LIKE ('%GMAIL.COL%')            AND email not LIKE ('%GMAIL.COMO%')
            AND email not LIKE ('%GHOTMAIL.COM%')         AND email not LIKE ('%GMAIL.COMF%')
            AND email not LIKE ('%LIVE.CK%')              AND email not LIKE ('%GMEIL.CMMAIL.COM%')
            AND email not LIKE ('%GMMAIL.COM%')           AND email not LIKE ('%HOTMKAIL.COM%')
            AND email not LIKE ('%GMAIL.COMHOTMAIL.COM%') AND email not LIKE ('%HOTRMAIL.COM%')
            AND email not LIKE ('%HOIMAIL.COM%')          AND email not LIKE ('%XN--GMAI-JQA.COM%')
            AND email not LIKE ('%HMAIL.COM%')            AND email not LIKE ('%OUTLOOK.CM%')
            AND email not LIKE ('%HATMAIL.CON%')          AND email not LIKE ('%GMAIL.COMON%')
            AND email not LIKE ('%GMIL.CO%')              AND email not LIKE ('%GMALL.COM%')
            AND email not LIKE ('%HOTMAIAL.COM%')         AND email not LIKE ('%GMAIK.COM%')
            AND email not LIKE ('%OUTLOOCK.COM%')         AND email not LIKE ('%GMAQIL.COM%')
            AND email not LIKE ('%GMAILC.OM%')            AND email not LIKE ('%GMAIA.COM%')
            AND email not LIKE ('%HOTMAIL.COL%')          AND email not LIKE ('%GMNAIL.COM%')
            AND email not LIKE ('%OUTLLOOK.ES%')          AND email not LIKE ('%GMEIL.CON%')
             /*agregados de la base de simulacion hb new*/
        /*  AND email not LIKE ('GMAIL.CO') */	          AND email not LIKE ('%GMAIL.COMU%')
            AND email not LIKE ('%GMAIL.CON%')            AND email not LIKE ('%123MAIL.CL%')
            AND email not LIKE ('%GMAIL.COMOESTAS%')      AND email not LIKE ('%GMAIL.COMO%')
            AND email not LIKE ('%GIMAIL.COM%')           AND email not LIKE ('%GMAL.COM%')
            AND email not LIKE ('%GMAIL.COMM%')           AND email not LIKE ('%GMAIL.XOM%')
            AND email not LIKE ('%GMAIL.CM%')             AND email not LIKE ('%GIMEIL.COM%')
            AND email not LIKE ('%HOTMIAL.COM%')          AND email not LIKE ('%HOOTMAIL.ES%')
            AND email not LIKE ('%HOTMAIL.CON%')          AND email not LIKE ('%GIMAIL.CON%')
            AND email not LIKE ('%HOTMEIL.COM%')          AND email not LIKE ('%GMAIL.VOM%')
            AND email not LIKE ('%HOTMEIL.ES%')           AND email not LIKE ('%GMAIL.CL.COM%')
            AND email not LIKE ('%GIMAL.COM%')            AND email not LIKE ('%GMAIL.COMIL.COM%')
            AND email not LIKE ('%HOTMAIK.COM%')          AND email not LIKE ('%GMAIL.COMQ%')
            AND email not LIKE ('%HOTMAIIL.COM%')         AND email not LIKE ('%HOTMAIL.CPM%')
            AND email not LIKE ('%GMAIL.COML%')           AND email not LIKE ('%G.MAIL.COM%')
            AND email not LIKE ('%HOTMAOL.COM%')          AND email not LIKE ('%GMAILL.COM%')
            AND email not LIKE ('%GIMAIL.CL%')            AND email not LIKE ('%GMAIL.COMD%')
            AND email not LIKE ('%HOTTMAIL.COM%')         AND email not LIKE ('%HOTMAILC.OM%')
            AND email not LIKE ('%1967GMAIL.COM%')        AND email not LIKE ('%HOTMAY.COM%')
        /* AND email not LIKE ('H%OTMAIL.CO')% */         AND email not LIKE ('%GMIAL.COM%')
            AND email not LIKE ('%2382HOTMAIL.COM%')      AND email not LIKE ('%GMALL.COM%')
            AND email not LIKE ('%GIMALL.COM%')           AND email not LIKE ('%HOTMAIL.COMBUE%')
            AND email not LIKE ('%GMAIL.CPM%')            AND email not LIKE ('%123GMAIL.COM%')
            AND email not LIKE ('%GMAIL.COMP%')           AND email not LIKE ('%GMIL.CPM%')
            AND email not LIKE ('%GMALI.COM%')            AND email not LIKE ('%JAJAJA.CL%')
            AND email not LIKE ('%AUTLOOK.COM%')          AND email not LIKE ('%GMAIL.CLOM%')
            AND email not LIKE ('%GMAIL.COMCOM%')         AND email not LIKE ('%GMAIL.CIM%')
            AND email not LIKE ('%ICLOUD.CON%')           AND email not LIKE ('%OUTLOOK.COMM%')
            AND email not LIKE ('%HOTMEIL.CL%')           AND email not LIKE ('%HOTMAIO.COM%')
            AND email not LIKE ('%GMAIL.COPM%')           AND email not LIKE ('%GAIML.COM%')
            AND email not LIKE ('%HOTMAIL.COMO%')         AND email not LIKE ('%JAJAGMAIL.COM%')
            AND email not LIKE ('%GMAIL.COMemail%')       AND email not LIKE ('%HOTMAIL.COMR%')
            AND email not LIKE ('%OULTOOK.CL%')           AND email not LIKE ('%BANCORYPLEY.CL%')
            AND email not LIKE ('%GMAIM.COM%')            AND email not LIKE ('%B8477491ANCORIPLEY.COM%')
            AND email not LIKE ('%GMAIL.COMN%')           AND email not LIKE ('%GMMAIL.COM%')
            AND email not LIKE ('%2857GMAIL.COM%')        AND email not LIKE ('%HOTMAIEL.COM%')
            AND email not LIKE ('%GMAIL.COL%')            AND email not LIKE ('%GHOTMAIL.COM%')
        /* AND email not LIKE ('O%UTLOOK.C%O')*/          AND email not LIKE ('%GMAIIL.COM%')
            AND email not LIKE ('%OUTLOOK.CON%')          AND email not LIKE ('%LIVE.CM%')
            AND email not LIKE ('%HOGMAIL.ES%')           AND email not LIKE ('%GMAIL.COMQQSWS%')
            AND email not LIKE ('%HOTMAKL.COM%')          AND email not LIKE ('%GMAIL.CO.COM%')
            AND email not LIKE ('%HOTMAUL.COM%')          AND email not LIKE ('%OUTLOOCK.COM%')
            AND email not LIKE ('%GMANIL.COM%')           AND email not LIKE ('%OUTLOO.COM%')
            AND email not LIKE ('%ICLUD.COM%')            AND email not LIKE ('%GMAIL.COM.CL%')
            AND email not LIKE ('%OUTLLOK.COM%')          AND email not LIKE ('%GMAIL.COK%')
            AND email not LIKE ('%GMAIL.COM.COM%')        AND email not LIKE ('%OULOOK.COM%')
            AND email not LIKE ('%OUTOOK.COM%')           AND email not LIKE ('%59GMEIL.COM%')
            AND email not LIKE ('%GMAIL.CCOM%')           AND email not LIKE ('%GMAIL.COOM%')
            AND email not LIKE ('%434GOTMAIL.CL%')        AND email not LIKE ('%GM8AIL.COM%')
            AND email not LIKE ('%HOGMAIL.COM%')          AND email not LIKE ('%GMAIL.COMA%')
            AND email not LIKE ('%GMAIIL.CO%')            AND email not LIKE ('%HOTMEY.COM%')
            AND email not LIKE ('%GMAIL.COMS%')           AND email not LIKE ('%YAHUU.COM%')
            AND email not LIKE ('%A01GMAIL.COM%')         AND email not LIKE ('%HOTMAIL.COL%')
            AND email not LIKE ('%GMAIO.COM%')            AND email not LIKE ('%GMAIL.GMAIL.COM%')
            AND email not LIKE ('%GMAIL.COMOM%')          AND email not LIKE ('%HOTMAIM.COM%')
            AND email not LIKE ('%HOTMAIL.COMK%')
        /* AGREGADOS POR ANALISIS% DE WEBBULA */
            AND email not LIKE ('%GMSIL.COM%')           AND email not LIKE ('%MC.COM%')
            AND email not LIKE ('%LIVER.COM%')           AND email not LIKE ('%HOMAIL.COM%')
            AND email not LIKE ('%GMAUL.COM%')           AND email not LIKE ('%HTMAIL.COM%')
            AND email not LIKE ('%GNAIL.COM%')           AND email not LIKE ('%HOYMAIL.COM%')
            AND email not LIKE ('%LIV.COM%')             AND email not LIKE ('%HPTMAIL.COM%')
            AND email not LIKE ('%GMAOIL.COM%')          AND email not LIKE ('%HOTMWIL.COM%')
            AND email not LIKE ('%GMAAIL.COM%')          AND email not LIKE ('%GMASIL.COM%')
            AND email not LIKE ('%GFMAIL.COM%')          AND email not LIKE ('%MGAIL.COM%')
            AND email not LIKE ('%H0TMAIL.COM%')         AND email not LIKE ('%GMJAIL.COM%')
            AND email not LIKE ('%FGMAIL.COM%')          AND email not LIKE ('%HOTMAAIL.CO%')
            AND email not LIKE ('%HITMAIL.COM%')         AND email not LIKE ('%HOTMAIL.COMQUE%')
            AND email not LIKE ('%HOTMASIL.COM%')        AND email not LIKE ('%HOTAIL.COM%')
            AND email not LIKE ('%GOTMAIL.COM%')         AND email not LIKE ('%GTMAIL.COM%')
            AND email not LIKE ('%NSN.COM%')             AND email not LIKE ('%HOTMSIL.COM%')
            AND email not LIKE ('%FMAIL.COM%')           AND email not LIKE ('%HOTMAOIL.COM%')
            AND email not LIKE ('%HOMTAIL.COM%')         AND email not LIKE ('%LIUVE.COM%')
            AND email not LIKE ('%GMAILO.COM%')          AND email not LIKE ('%GGMAIL.COM%')
            AND email not LIKE ('%JOTMAIL.COM%')         AND email not LIKE ('%GMQIL.COM%')
            AND email not LIKE ('%GMAIKL.COM%')          AND email not LIKE ('%HOTMSAIL.COM%')
            AND email not LIKE ('%GAIL.COM%')            AND email not LIKE ('%GMAIL.COMCIMI%')
            AND email not LIKE ('%LICE.COM%')            AND email not LIKE ('%GMAIL.CKM%')
            AND email not LIKE ('%HHOTMAIL.COM%')        AND email not LIKE ('%HLTMAIL.COM%')
            AND email not LIKE ('%ICLOUB.COM%')          AND email not LIKE ('%HOTMAIL.COOM%')
            AND email not LIKE ('%HOTMAIKL.COM%')        AND email not LIKE ('%HJOTMAIL.COM%')
            AND email not LIKE ('%HOPTMAIL.COM%')        AND email not LIKE ('%HOTMAIUL.COM%')
            AND email not LIKE ('%HOTMMAIL.COM%')        AND email not LIKE ('%HOTMALL.COM%')
            AND email not LIKE ('%HOTGMAIL.COM%')        AND email not LIKE ('%LIVE.COL%')
            AND email not LIKE ('%HOTNAIL.COM%')         AND email not LIKE ('%LIBE.COM%')
            AND email not LIKE ('%GMAUIL.COM%')          AND email not LIKE ('%H0OTMAIL.COM%')
            AND email not LIKE ('%HOTMAQIL.COM%')        AND email not LIKE ('%GMAI9L.COM%')
            AND email not LIKE ('%GNMAIL.COM%')          AND email not LIKE ('%HOTMAILK.COM%')
            AND email not LIKE ('%HOYTMAIL.COM%')        AND email not LIKE ('%HOTMAIL.CM%')
            AND email not LIKE ('%HOTMAAIL.COM%')        AND email not LIKE ('%HOTFMAIL.COM%')
            AND email not LIKE ('%HOMAIL.CO%')           AND email not LIKE ('%HIOTMAIL.COM%')
            AND email not LIKE ('%HOTMAKIL.COM%')        AND email not LIKE ('%GMAILK.COM%')
            AND email not LIKE ('%HOHTMAIL.COM%')        AND email not LIKE ('%HOTYMAIL.COM%')
            AND email not LIKE ('%HOTMAUIL.COM%')        AND email not LIKE ('%ME.CM%')
            AND email not LIKE ('%HOTMAIL.COIM%')        AND email not LIKE ('%L8VE.COM%')
            AND email not LIKE ('%HOTMNAIL.COM%')        AND email not LIKE ('%OHTMAIL.COM%')
            AND email not LIKE ('%HOT6MAIL.COM%')        AND email not LIKE ('%GMQIL.VOM%')
            AND email not LIKE ('%GMZAIL.COM%')          AND email not LIKE ('%LIVE.CCOM%')
            AND email not LIKE ('%LIVEW.COM%')           AND email not LIKE ('%YGMAIL.COM%')
            AND email not LIKE ('%BOTMAIL.COM%')         AND email not LIKE ('%GMAIL.CO9M%')
            AND email not LIKE ('%GMAIL.COMG%')          AND email not LIKE ('%HOTMAIL.CIOM%')
            AND email not LIKE ('%HPOTMAIL.COM%')        AND email not LIKE ('%MAIL.CM%')
            AND email not LIKE ('%HOHMAIL.COM%')         AND email not LIKE ('%HOTMAIL.COPM%')
            AND email not LIKE ('%HOT5MAIL.COM%')        AND email not LIKE ('%GMZIL.COM%')
            AND email not LIKE ('%HOLTMAIL.COM%')        AND email not LIKE ('%LIVE.CON%')
            AND email not LIKE ('%HUOTMAIL.COM%')        AND email not LIKE ('%MSNM.COM%')
            AND email not LIKE ('%HO0TMAIL.COM%')        AND email not LIKE ('%HOTMAI.COK%')
            AND email not LIKE ('%GMAZIL.COM%')          AND email not LIKE ('%LVIE.COM%')
            AND email not LIKE ('%HOTMAIL.CCOM%')        AND email not LIKE ('%HOTMAIL.CLOM%')
            AND email not LIKE ('%HOOTMAIL.COM%')        AND email not LIKE ('%HOTHMAIL.COM%')
            AND email not LIKE ('%HOTMIL.CON%')          AND email not LIKE ('%MZN.COM%')
            AND email not LIKE ('%HOMAIL.CM%')           AND email not LIKE ('%ICLOUD.OM%')
            AND email not LIKE ('%HGOTMAIL.COM%')        AND email not LIKE ('%GMIL.CON%')
            AND email not LIKE ('%LIVE.VOM%')            AND email not LIKE ('%GAIL.CO%')
            AND email not LIKE ('%GMA9IL.COM%')          AND email not LIKE ('%HTMAIL.CPM%')
            AND email not LIKE ('%GMAI.LCOM%')           AND email not LIKE ('%GMIL.CM%')
            AND email not LIKE ('%MSN.CM%')              AND email not LIKE ('%BHOTMAIL.COM%')
            AND email not LIKE ('%GMAIUL.COM%')          AND email not LIKE ('%HO9TMAIL.COM%')
            AND email not LIKE ('%HOTMJAIL.COM%')        AND email not LIKE ('%GMA8L.COM%')
            AND email not LIKE ('%GAMIL.CON%')           AND email not LIKE ('%GKMAIL.COM%')
            AND email not LIKE ('%GMAIL.BOM%')           AND email not LIKE ('%LIE.COM%')
            AND email not LIKE ('%HOTMIL.CO%')           AND email not LIKE ('%GMAIL.CIOM%')
            AND email not LIKE ('%LUVE.COM%')            AND email not LIKE ('%NOTMAIL.COM%')
            AND email not LIKE ('%HOTMQAIL.COM%')        AND email not LIKE ('%HOTMIL.CM%')
            AND email not LIKE ('%GMAIL.VCOM%')          AND email not LIKE ('%HOTMAIL.CAM%')
            AND email not LIKE ('%HOTNAIL.CO%')          AND email not LIKE ('%HOTJMAIL.COM%')
            AND email not LIKE ('%GMIIL.COM%')           AND email not LIKE ('%H9OTMAIL.COM%')
            AND email not LIKE ('%GYMAIL.COM%')          AND email not LIKE ('%HNOTMAIL.COM%')
            AND email not LIKE ('%HOTNMAIL.COM%')        AND email not LIKE ('%GMA8IL.COM%')
            AND email not LIKE ('%GHMAIL.COM%')          AND email not LIKE ('%GJMAIL.COM%')
            AND email not LIKE ('%GMAWIL.COM%')          AND email not LIKE ('%HOTMMAIL.CO%')
            AND email not LIKE ('%GMWIL.COM%')           AND email not LIKE ('%LIVD.COM%')
            AND email not LIKE ('%HYOTMAIL.COM%')        AND email not LIKE ('%HOMAIL.OM%')
            AND email not LIKE ('%LIVE.CM%')             AND email not LIKE ('%HOMAIL.CON%')
            AND email not LIKE ('%HLOTMAIL.COM%')        AND email not LIKE ('%HGMAIL.CO%')
            AND email not LIKE ('%HOTAIL.CO%')           AND email not LIKE ('%GMAKIL.COM%')
            AND email not LIKE ('%LILVE.COM%')           AND email not LIKE ('%HOOTMAIL.CO%')
            AND email not LIKE ('%HBOTMAIL.COM%')        AND email not LIKE ('%GMQAIL.COM%')
            AND email not LIKE ('%LIVE.CIM%')            AND email not LIKE ('%HORMAIL.CON%')
            AND email not LIKE ('%HOTMAI9L.COM%')        AND email not LIKE ('%GMKAIL.COM%')
            AND email not LIKE ('%MSMN.COM%')            AND email not LIKE ('%GKAIL.COM%')
            AND email not LIKE ('%YHAOO.COM%')           AND email not LIKE ('%YAHHO.COM%')
            AND email not LIKE ('%YAHO.COM%')            AND email not LIKE ('%YAHOIO.COM%')
            AND email not LIKE ('%YAOO.COM%')            AND email not LIKE ('%YAHOOO.COM%')
            AND email not LIKE ('%YAHOO.CO%')            AND email not LIKE ('%HOTMAIL.DOM%')
            AND email not LIKE ('%GMAILL.CM%')           AND email not LIKE ('%HOTMAIL.COM.YAHOO.ES%')
            AND email not LIKE ('%YQHOO.COM%')           AND email not LIKE ('%HOTMAI.CM%')
            AND email not LIKE ('%TAHOO.COM%')           AND email not LIKE ('%HOTMA8L.COM%')
            AND email not LIKE ('%JMAIL.COM%')           AND email not LIKE ('%GIMAIL.CM%')
            AND email not LIKE ('%Gemail.CO%')           AND email not LIKE ('%GIMAIL.CO%')
            AND email not LIKE ('%YOPMAIL.CO%')          AND email not LIKE ('%HOTMAIL.17.COM%')
            AND email not LIKE ('%CORREO.OM%')           AND email not LIKE ('%HORMAIL.CO%')
            AND email not LIKE ('%UTLOOK.COM%')          AND email not LIKE ('%YHOO.COM%')
            AND email not LIKE ('%YAJOO.COM%')           AND email not LIKE ('%HOTMIAL.CO%')
            AND email not LIKE ('%YAYOO.COM%')           AND email not LIKE ('%HOTMALIL.COM%')
            AND email not LIKE ('%YMSIL.COM%')           AND email not LIKE ('%HOTMIAL.CM%')
            AND email not LIKE ('%YASHOO.COM%')          AND email not LIKE ('%HOTMAILL.CO%')
            AND email not LIKE ('%YAHOOL.COM%')          AND email not LIKE ('%HOTMAIOL.COM%')
            AND email not LIKE ('%HOTMMAIL.OM%')         AND email not LIKE ('%YAQHOO.COM%')
            AND email not LIKE ('%YSHOO.COM%')           AND email not LIKE ('%GMIAL.CON%')
            AND email not LIKE ('%LIVR.COM%')            AND email not LIKE ('%HOTMAWIL.COM%')
            AND email not LIKE ('%GMMAIL.CO%')           AND email not LIKE ('%HTMAIL.CM%')
            AND email not LIKE ('%NAIL.COM%')            AND email not LIKE ('%MAIOL.COM%')
            AND email not LIKE ('%GM.CON%')              AND email not LIKE ('%GM.CO%')
            AND email not LIKE ('%HO5TMAIL.COM%')        AND email not LIKE ('%GMAIL.FOM%')
            AND email not LIKE ('%MAI.CM%')              AND email not LIKE ('%email.CO%')
            AND email not LIKE ('%GOTMAIL.CO%')          AND email not LIKE ('%LIVS.COM%')
            AND email not LIKE ('%LICVE.COM%')           AND email not LIKE ('%MAIL.CON%')
            AND email not LIKE ('%JMAIL.CO%')            AND email not LIKE ('%MAIIL.COM%')
            AND email not LIKE ('%GIMEI.CO%')            AND email not LIKE ('%HOTMAILC.OM%')
            AND email not LIKE ('%GMAILC.OM%')           AND email not LIKE ('%GIMIL.CON%')
            AND email not LIKE ('%HOTAMAIL.CO%')         AND email not LIKE ('%YMAIL.CM%')
            AND email not LIKE ('%YMAIL.CO%')            AND email not LIKE ('%OUTLOOOK.COM%')
            AND email not LIKE ('%GAMIAL.CO%')           AND email not LIKE ('%OITLOOK.COM%')
            AND email not LIKE ('%ICLUD.CON%')           AND email not LIKE ('%OUTLOOK.CON%')
            AND email not LIKE ('%AUTLOOK.CO%')          AND email not LIKE ('%GIMEI.CON%')
            AND email not LIKE ('%OUTLOKK.COM%')         AND email not LIKE ('%GMLI.CON%')
            AND email not LIKE ('%GMEIL.CO%')            AND email not LIKE ('%GOMAIL.CO%')
            AND email not LIKE ('%MGMAIL.CO%')           AND email not LIKE ('%GMEIL.CPM%')
            AND email not LIKE ('%HOTMEIL.COM%')         AND email not LIKE ('%GITMAIL.COM%')
            AND email not LIKE ('%UMAIL.COM%')           AND email not LIKE ('%HJFJH.CM%')
            AND email not LIKE ('%GEMEIL.CO%')           AND email not LIKE ('%HIMAIL.CO%')
            AND email not LIKE ('%GAMAIL.CO%')           AND email not LIKE ('%GIMEIL.CO%')
            AND email not LIKE ('%GIMIL.COMO%')          AND email not LIKE ('%GIMAL.CON%')
            AND email not LIKE ('%HOTM.COMAIL%')         AND email not LIKE ('%YNAIL.COM%')
            AND email not LIKE ('%GIMEIL.CIM%')          AND email not LIKE ('%HOLMAIL.CM%')
            AND email not LIKE ('%YMIAL.COM%')           AND email not LIKE ('%GMEIL.COMO%')
            AND email not LIKE ('%HOIMAIL.COM%')         AND email not LIKE ('%HOITMAIL.CL%')
            AND email not LIKE ('%WWW.HOTMAIL.COM%')     AND email not LIKE ('%THOMAIL.CL%')
            AND email not LIKE ('%YQAHOO.COM%')          AND email not LIKE ('%HAHOO.COM%')
            AND email not LIKE ('%YAHOL.COM%')           AND email not LIKE ('%YAGOO.COM%')
            AND email not LIKE ('%UAHOO.COM%')           AND email not LIKE ('%YAHOO.CM%')
            AND email not LIKE ('%YAHHOO.COM%')          AND email not LIKE ('%YAAHOO.COM%')
            AND email not LIKE ('%YSAHOO.COM%')          AND email not LIKE ('%YAHOO.CON.CO%')
            AND email not LIKE ('%YAHO0.COM%')           AND email not LIKE ('%YAHOOP.COM%')
            AND email not LIKE ('%YYAHOO.COM%')          AND email not LIKE ('%YABHOO.COM%')
            AND email not LIKE ('%YAHPOO.COM%')          AND email not LIKE ('%YAHJOO.COM%')
            AND email not LIKE ('%HYAHOO.COM%')          AND email not LIKE ('%YTAHOO.COM%')
            AND email not LIKE ('%YAHIO.COM%')           AND email not LIKE ('%UYAHOO.COM%')
            AND email not LIKE ('%YAHOO0.COM%')          AND email not LIKE ('%YAHOO.COM%')
            AND email not LIKE ('%YAHOO.CMO%')           AND email not LIKE ('%YAH0O.COM%')
            AND email not LIKE ('%YABOO.COM%')           AND email not LIKE ('%YAHGOO.COM%')
            AND email not LIKE ('%TYAHOO.COM%')          AND email not LIKE ('%YAHUOO.COM%')
            AND email not LIKE ('%YAHO0O.COM%')          AND email not LIKE ('%YUAHOO.COM%')
            AND email not LIKE ('%GYAHOO.COM%')          AND email not LIKE ('%YHAHOO.COM%')
            AND email not in (select email from schm_clientes.correos_fake_v2 where email is not null)
    ;


    CREATE TABLE schm_workspace.chek_f_vdateperiodo AS
        SELECT
            rut2,
            rut,
            telefono,
            fecha
        FROM schm_workspace.chek_dat_original
        WHERE true
            AND rut > 100
            AND rut < 99999999
            AND rut is not null
            AND telefono BETWEEN 30000000 AND 99999999
            AND telefono not in (99999999,88888888,77777777,66666666,55555555,44444444,
                            33333333,22222222,11111111,00000000,98989898,89898989,
                            88889999,99998888)
    ;


    CREATE TABLE schm_workspace.chek_e_ini_a AS
        SELECT
            rut2,
            rut,
            email,
            fecha_actualizacion as fecha_act,
            10                  as sequencia,
            'CHEK'              as origen
        FROM schm_workspace.chek_e_vdateperiodo;


    CREATE TABLE schm_workspace.chek_e_ini_b AS
        SELECT
            rut2,
            rut,
            email,
            to_char(fecha_act, 'YYMMDD') as fec_num,
            to_date(fecha_act::text, 'YYYY-MM-DD') as fecha_nnnnn,
            fecha_act,
            sequencia,
            origen
        FROM schm_workspace.chek_e_ini_a;


    DROP TABLE IF EXISTS  schm_data_analytics.chek_e;
    CREATE TABLE schm_data_analytics.chek_e AS
        SELECT DISTINCT
            rut2,
            rut,
            email,
            fecha_nnnnn as fecha_new,
            fecha_act,
            sequencia,
            origen
        FROM schm_workspace.chek_e_ini_b
        order by rut
    ;


    DROP TABLE IF EXISTS  schm_data_analytics.chek_f;
    CREATE TABLE schm_data_analytics.chek_f AS
        SELECT DISTINCT
            rut2,
            rut,
            telefono,
            fecha,
            0       as nota,
            'CHEK'  as fuente
        FROM schm_workspace.chek_f_vdateperiodo
        order by rut
    ;


    DROP TABLE IF EXISTS schm_workspace.chek_modificado;
    DROP TABLE IF EXISTS schm_workspace.chek_dat_original;
    DROP TABLE IF EXISTS schm_workspace.chek_e_vdateperiodo;
    DROP TABLE IF EXISTS schm_workspace.chek_f_vdateperiodo;
    DROP TABLE IF EXISTS schm_workspace.chek_e_ini_a;
    DROP TABLE IF EXISTS schm_workspace.chek_e_ini_b;

END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_contact_fonos_movil()
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN
    DROP TABLE IF EXISTS schm_workspace.ctbl_repositorio_telefonos_vdateperiodo2;
    DROP TABLE IF EXISTS schm_workspace.ctbl_maximo;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_celu;
    DROP TABLE IF EXISTS schm_workspace.ctbl_plataforma;
    DROP TABLE IF EXISTS schm_workspace.ctbl_admision;
    DROP TABLE IF EXISTS schm_workspace.ctbl_banco;
    DROP TABLE IF EXISTS schm_workspace.ctbl_ccr;
    DROP TABLE IF EXISTS schm_workspace.ctbl_ivr;
    DROP TABLE IF EXISTS schm_workspace.ctbl_cyber;
    DROP TABLE IF EXISTS schm_workspace.ctbl_hb;
    DROP TABLE IF EXISTS schm_workspace.ctbl_buf;
    DROP TABLE IF EXISTS schm_workspace.ctbl_dgc;
    DROP TABLE IF EXISTS schm_workspace.ctbl_otros;
    DROP TABLE IF EXISTS schm_workspace.ctbl_simulaciones_ini;
    DROP TABLE IF EXISTS schm_workspace.ctbl_simulaciones_max;
    DROP TABLE IF EXISTS schm_workspace.ctbl_simulaciones_ini_max;
    DROP TABLE IF EXISTS schm_workspace.ctbl_simulaciones_de_paso;
    DROP TABLE IF EXISTS schm_workspace.ctbl_simulaciones_bd_2019;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_compra_sinacofi;
    DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_f_new;
    DROP TABLE IF EXISTS schm_workspace.ctbl_simulaciones_sp;
    DROP TABLE IF EXISTS schm_workspace.ctbl_oc;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_celulares;
    DROP TABLE IF EXISTS schm_workspace.ctbl_maximo_fecha;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_movil_final_rep;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_movil_final_rep_ok;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_sms_bopers;
    DROP TABLE IF EXISTS schm_workspace.ctbl_maximo_fono_bopers;
    DROP TABLE IF EXISTS schm_workspace.ctbl_maximo_fono_bopers_seq;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_sms_mejor_bopers;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_sms_mejor_bopers_b;
    DROP TABLE IF EXISTS schm_workspace.ctbl_union_mejor_bopers_fech_seq;
    DROP TABLE IF EXISTS schm_workspace.ctbl_registros_max_seq;
    DROP TABLE IF EXISTS schm_workspace.ctbl_solo_unicos;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_sms_mejor_bopers_fecha;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_movil_pre_final;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_movil_pre_final_v2;
    DROP TABLE IF EXISTS schm_workspace.ctbl_veces;
    DROP TABLE IF EXISTS schm_workspace.ctbl_mejor_de_veces_2;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_movil_final_sfsln_2;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_movil_final_sfsln_3;
    DROP TABLE IF EXISTS schm_workspace.ctbl_veces_seq;
    DROP TABLE IF EXISTS schm_workspace.ctbl_mejor_de_veces_2_seq;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_movil_final_sfsln_4;
    DROP TABLE IF EXISTS schm_workspace.ctbl_veces_seq_repetida;
    DROP TABLE IF EXISTS schm_workspace.ctbl_remanente_final_sin_filtros;
    DROP TABLE IF EXISTS schm_workspace.ctbl_filtros_aplicados;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_final_caen_x_filt_fecha;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_final_caen_xd_filt_fecha;
    DROP TABLE IF EXISTS schm_workspace.ctbl_sp_sms_fecha;
    DROP TABLE IF EXISTS schm_workspace.ctbl_sp_sms_x3_fecha;
    DROP TABLE IF EXISTS schm_workspace.ctbl_sp_sms_fonos_no_entregados;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_movil_final_v2;
    DROP TABLE IF EXISTS schm_workspace.ctbl_admision;
    DROP TABLE IF EXISTS schm_workspace.ctbl_admision;

    CREATE TABLE schm_workspace.ctbl_repositorio_telefonos_vdateperiodo2 AS
        SELECT
            rut::integer,
            telefono::integer,
            fecha,
            nota,
            fuente
        FROM schm_data_analytics.ctbl_repositorio_telefonos
        WHERE rut::integer < 99999999
        ORDER BY rut
    ;


    CREATE TABLE schm_workspace.ctbl_maximo AS --1007782
        SELECT
            rut::integer,
            max(nota) as nota
        FROM schm_data_analytics.ctbl_repositorio_telefonos
        WHERE nota::integer >= 0 AND telefono::integer >= 900000000
        GROUP BY rut
    ;


    CREATE TABLE schm_workspace.ctbl_fonos_celu AS
        SELECT DISTINCT   --1154784
            t1.rut,
            t1.telefono::integer,
            t1.fecha,
            t2.nota,
            t1.fuente
        FROM schm_data_analytics.ctbl_repositorio_telefonos t1
        INNER JOIN schm_workspace.ctbl_maximo t2
            ON t1.rut = t2.rut AND t1.nota = t2.nota
        WHERE true
        AND t1.nota >= 0
        AND t1.telefono::integer >= 900000000
    ;


    /*=========================================================================================*/
    /*	1.- SE ORDENA POR CANAL*/

    CREATE TABLE schm_workspace.ctbl_plataforma AS
        SELECT
            rut,
            telefono,
            fecha,
            nota,
            fuente
        FROM schm_workspace.ctbl_fonos_celu
        WHERE true
        AND fuente = 'PLAT COMER'
    ;


    CREATE TABLE schm_workspace.ctbl_admision AS
        SELECT
            rut,
            telefono,
            fecha,
            nota,
            fuente
        FROM schm_workspace.ctbl_fonos_celu
        WHERE true
            AND fuente = 'VENTA ADMI'
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_plataforma where rut is not null)
    ;


    CREATE TABLE schm_workspace.ctbl_banco AS
        SELECT
            rut,
            telefono,
            fecha,
            nota,
            fuente
        FROM schm_workspace.ctbl_fonos_celu
        WHERE true
            AND fuente = 'REPTEL'
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_admision where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_plataforma where rut is not null)
    ;


    CREATE TABLE schm_workspace.ctbl_ccr AS
        SELECT
            rut,
            telefono,
            fecha,
            nota,
            fuente
        FROM schm_workspace.ctbl_fonos_celu
        WHERE true
            AND fuente = 'SCORE CCR'
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_admision where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_plataforma where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_banco where rut is not null)
    ;



    CREATE TABLE schm_workspace.ctbl_ivr AS -- here
        SELECT
            rut,
            telefono,
            fecha,
            nota,
            fuente
        FROM schm_workspace.ctbl_fonos_celu
        WHERE true
            AND fuente = 'IVR'
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_admision where true)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_plataforma where true)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_banco where true)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_ccr where true)
    ;


    CREATE TABLE schm_workspace.ctbl_cyber AS
        SELECT
            rut,
            telefono,
            fecha,
            nota,
            fuente
        FROM schm_workspace.ctbl_fonos_celu
        WHERE true
            AND fuente = 'CYBER'
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_admision where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_plataforma where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_banco where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_ccr where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_ivr where rut is not null)
    ;

    CREATE TABLE schm_workspace.ctbl_hb AS
        SELECT
            rut,
            telefono,
            fecha,
            nota,
            fuente
        FROM schm_workspace.ctbl_fonos_celu
        WHERE true
            AND fuente = 'HOME BANKI'
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_admision where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_plataforma where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_banco where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_ccr where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_ivr where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_cyber where rut is not null)
    ;


    CREATE TABLE schm_workspace.ctbl_buf AS
        SELECT
            rut,
            telefono,
            fecha,
            nota,
            fuente
        FROM schm_workspace.ctbl_fonos_celu
        WHERE true
            AND fuente = 'BUF'
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_admision where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_plataforma where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_banco where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_ccr where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_ivr where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_cyber where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_hb where rut is not null)
    ;



    CREATE TABLE schm_workspace.ctbl_dgc AS
        SELECT
            rut,
            telefono,
            fecha,
            nota,
            fuente
        FROM schm_workspace.ctbl_fonos_celu
        WHERE true
            AND fuente = 'REPO UNICO'
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_admision where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_plataforma where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_banco where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_ccr where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_ivr where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_cyber where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_hb where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_buf where rut is not null)
    ;


    CREATE TABLE schm_workspace.ctbl_otros AS
        SELECT
            rut,
            telefono,
            fecha,
            nota,
            fuente
        FROM schm_workspace.ctbl_fonos_celu
        WHERE true
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_admision where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_plataforma where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_banco where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_ccr where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_ivr where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_cyber where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_hb where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_buf where rut is not null)
            AND rut NOT IN (SELECT rut FROM schm_workspace.ctbl_dgc where rut is not null)
    ;


    CREATE TABLE schm_workspace.ctbl_simulaciones_ini AS
        SELECT DISTINCT
            rut,
            CASE
                WHEN len(celular) = 9 THEN substring(celular, 2,9)::integer
                WHEN len(celular) = 8 THEN celular::integer
                ELSE 0
            END as telefono,
            fecha,
            1 as nota,
            origen as fuente
        FROM schm_data_analytics.ctbl_simulaciones_hb
    ;


    CREATE TABLE schm_workspace.ctbl_simulaciones_max AS
        SELECT DISTINCT
            rut,
            max(fecha) as fecha
        FROM schm_data_analytics.ctbl_simulaciones_hb
        WHERE true
            AND rut > 100
            AND rut < 99999999
        GROUP BY 1
    ;


    CREATE TABLE schm_workspace.ctbl_simulaciones_ini_max AS
        SELECT DISTINCT
            t1.rut,
            t1.telefono,
            t2.fecha,
            t1.nota,
            t1.fuente
        FROM schm_workspace.ctbl_simulaciones_ini t1
        INNER JOIN schm_workspace.ctbl_simulaciones_max t2
            ON (t1.rut = t2.rut AND t1.fecha = t2.fecha)
    ;


    CREATE TABLE schm_workspace.ctbl_simulaciones_de_paso AS
        SELECT
            rut,
            telefono,
            fecha,
            TO_CHAR(fecha, 'YYYYMMDD') as fecha_num,
            nota,
            fuente
        FROM schm_workspace.ctbl_simulaciones_ini_max
    ;


    CREATE TABLE schm_workspace.ctbl_simulaciones_bd_2019 AS
        SELECT
            rut,
            telefono,
            TO_DATE(fecha, 'YYYY-MM-DD') as fecha,
            nota,
            fuente
        FROM schm_workspace.ctbl_simulaciones_de_paso
    ;


     CREATE TABLE schm_workspace.ctbl_fonos_compra_sinacofi AS
        SELECT 	RUT,
                TELEFONO,
                FECHA1 as FECHA,
                NOTA,
                FUENTE
        FROM br_dm_prod_bigdata_basecompraext_db.fonos_compra_sinacofi_2019
    ;



     CREATE TABLE schm_workspace.ctbl_qsc_hb_f_new AS
        SELECT
            RUT,
            TELEFONO,
            FECHA,
            NOTA,
            FUENTE
        FROM schm_data_analytics.ctbl_qsc_hb_f_new
    ;



    CREATE TABLE schm_workspace.ctbl_simulaciones_sp AS
        SELECT
            rut,
            telefono,
            to_date(FECHA_ACT, 'YYYYMMDD') AS FECHA,
            1 AS NOTA,
            origen AS FUENTE
        FROM  schm_data_analytics.ctbl_simulaciones_sp
        WHERE telefono IS NOT NULL
    ;

    CREATE TABLE schm_workspace.ctbl_oc AS
    SELECT
        rut,
        telefono,
        to_date(FECHA_ACT, 'YYYYMMDD') AS FECHA,
        1 AS NOTA,
        'OC' AS FUENTE
    FROM schm_contactabilidad.fono_oc_uam
    WHERE telefono IS NOT NULL
    ;


    CREATE TABLE schm_workspace.ctbl_fonos_celulares AS
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_workspace.ctbl_plataforma union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_workspace.ctbl_admision union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_workspace.ctbl_banco union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_workspace.ctbl_ccr union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_workspace.ctbl_ivr union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_workspace.ctbl_cyber union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_workspace.ctbl_hb union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_workspace.ctbl_buf union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_workspace.ctbl_dgc union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_workspace.ctbl_otros union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_workspace.ctbl_simulaciones_bd_2019 union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_workspace.ctbl_fonos_compra_sinacofi union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_data_analytics.ctbl_simulaciones_hb_new_f union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_data_analytics.ctbl_qsc_fisa_hist_f union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_workspace.ctbl_qsc_hb_f_new union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_data_analytics.chek_f union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente FROM schm_workspace.ctbl_simulaciones_sp union all
            SELECT rut, telefono, fecha::date, nota::integer, fuente from schm_workspace.ctbl_oc
    ;


    CREATE TABLE schm_workspace.ctbl_maximo_fecha AS
        SELECT
            rut,
            max(fecha) as max_of_fecha
        FROM schm_workspace.ctbl_fonos_celulares
        GROUP BY rut
    ;


    CREATE TABLE schm_workspace.ctbl_fonos_movil_final_rep AS
        SELECT
            t1.rut as clirut,
            0 as seq,
            T1.fuente as mandante,
            '9' as area,
            t1.telefono-100000000 * floor(t1.telefono/100000000) as telefono,
            telefono as telefono2,
            t1.fecha as fecha_ult_actualizacion,
            'CE' as tipo,
            t1.nota,
            'ALL' as uso,
            0 as estado
        FROM schm_workspace.ctbl_fonos_celulares t1 JOIN schm_workspace.ctbl_maximo_fecha T2
            ON (T1.rut = T2.rut AND T1.fecha = T2.max_of_fecha)
    ;


    CREATE TABLE  schm_workspace.ctbl_fonos_movil_final_rep_ok AS
        SELECT
            clirut,
            seq,
            mandante,
            area,
            telefono,
            fecha_ult_actualizacion,
            tipo,
            nota,
            uso,
            estado
        FROM  schm_workspace.ctbl_fonos_movil_final_rep
    ;


    CREATE TABLE schm_workspace.ctbl_fonos_sms_bopers AS
        SELECT
            t1.pemid_gls_nro_dct_ide_k as clirut,
            t2.pemfo_nro_seq_fon_k as seq,
            CASE
                WHEN t2.pemfo_gls_usr_fin_acl = 'HB-APP' then 'BOPERS_HB'
                WHEN t2.pemfo_gls_usr_fin_acl = 'APP'   then 'BOPERS_APP'
                WHEN t2.pemfo_gls_usr_fin_acl = 'PWA'   then 'BOPERS_PWA'
                ELSE 'BOPERS_CCSS'
            END     as  mandante,
            '9'     as  area,
            t2.pemfo_nro_fon as telefono,
            t2.PEMFO_FCH_FIN_ACL as fecha_ult_actualizacion,
            'CE' as  tipo,
            CASE WHEN t2.pemfo_cod_est_lcl = 1 then 5
                WHEN t2.pemfo_cod_est_lcl = 2 then 10
                ELSE 1
            END as nota,
            'SMS' as uso,
            T2.pemfo_cod_est_lcl as estado
        FROM br_dm_prod_bigdata_reporitf_db.BOPERS_MAE_IDE t1
            JOIN br_dm_prod_bigdata_reporitf_db.BOPERS_MAE_FON t2
                ON (t1.pemid_nro_inn_ide = t2.PEMID_NRO_INN_IDE_K)
        WHERE true
          AND t2.PEMFO_COD_TIP_FON = 4
          AND T2.pemfo_cod_est_lcl <> 6
          AND T2.pemfo_nro_fon>=30000000
          AND T1.pemid_gls_nro_dct_ide_k not LIKE ('49999%')
    ;


    --	maximo O ULTIMO FONO ACTUALIZADO EN BOPERS SEGÃšN FECHA
    CREATE TABLE schm_workspace.ctbl_maximo_fono_bopers AS
        SELECT
            clirut,
            max(fecha_ult_actualizacion)  as max_of_fecha_ult_actualizacion
        FROM schm_workspace.ctbl_fonos_sms_bopers
        GROUP BY clirut
    ;

    --	maximo O ULTIMO FONO ACTUALIZADO EN BOPERS SEGï¿½N SU SEQ
    CREATE TABLE schm_workspace.ctbl_maximo_fono_bopers_seq AS
        SELECT
            clirut,
            max(seq) as max_seq,
            telefono
        FROM schm_workspace.ctbl_fonos_sms_bopers
        GROUP BY 1,3
    ;


    /*	MEJOR FONO DESDE BOPERS */
    CREATE TABLE schm_workspace.ctbl_fonos_sms_mejor_bopers AS
        SELECT distinct
            t1.clirut,
            t1.seq,
            t1.mandante,
            t1.area,
            t1.telefono,
            t1.fecha_ult_actualizacion,
            t1.tipo,
            t1.nota,
            'SMS' as  uso,
            t1.ESTADO
        FROM schm_workspace.ctbl_fonos_sms_bopers t1
        INNER JOIN schm_workspace.ctbl_maximo_fono_bopers t2
            on t1. clirut=t2. clirut and t1.fecha_ult_actualizacion = t2.max_of_fecha_ult_actualizacion
        WHERE true
            AND t1.telefono BETWEEN 30000000 AND 99999999
            AND t1.telefono not in (99999999,88888888,77777777,66666666,55555555,44444444,33333333,22222222,11111111,
                                    00000000,98989898,89898989,88889999,99998888)
    ;


    --	MEJOR FONO DESDE BOPERS SI ES MISMA fecha
    CREATE TABLE schm_workspace.ctbl_fonos_sms_mejor_bopers_b AS
        SELECT DISTINCT
            t1.clirut,
            t1.seq,
            t1.mandante,
            t1.area,
            t1.telefono,
            t1.fecha_ult_actualizacion,
            t1.tipo,
            t1.nota,
            t1.uso,
            t1.estado
        FROM schm_workspace.ctbl_fonos_sms_mejor_bopers t1
        JOIN schm_workspace.ctbl_maximo_fono_bopers_seq t2
            ON t1.clirut=t2.clirut and t1.seq=t2.max_seq
    ;


    CREATE TABLE schm_workspace.ctbl_union_mejor_bopers_fech_seq AS
        SELECT * FROM schm_workspace.ctbl_fonos_sms_mejor_bopers_b
    UNION ALL
        SELECT * FROM schm_workspace.ctbl_fonos_sms_mejor_bopers
        WHERE  clirut NOT IN (SELECT t.clirut FROM schm_workspace.ctbl_fonos_sms_mejor_bopers_b t)
    ;


    CREATE TABLE schm_workspace.ctbl_registros_max_seq AS
    SELECT DISTINCT
        clirut,
        max(seq) AS  seq,
        mandante,
        area,
        telefono,
        fecha_ult_actualizacion,
        tipo,
        nota,
        uso,
        estado
    FROM schm_workspace.ctbl_union_mejor_bopers_fech_seq
    GROUP BY 1,3,4,5,6,7,8,9,10
    ;


    CREATE TABLE schm_workspace.ctbl_solo_unicos AS
        SELECT *
        FROM schm_workspace.ctbl_union_mejor_bopers_fech_seq
        WHERE seq IN (SELECT t.seq FROM schm_workspace.ctbl_registros_max_seq t)
    ;


    CREATE TABLE schm_workspace.ctbl_fonos_sms_mejor_bopers_fecha as
        SELECT *
        FROM schm_workspace.ctbl_solo_unicos
    ;

    /*SE ARMA TABLA FINAL*/
    CREATE TABLE schm_workspace.ctbl_fonos_movil_pre_final  AS  -- 7368181
        SELECT DISTINCT
            clirut,
            seq,
            mandante,
            area,
            telefono,
            fecha_ult_actualizacion,
            tipo,
            nota,
            uso,
            estado
        FROM schm_workspace.ctbl_fonos_sms_mejor_bopers_fecha
    UNION
        SELECT DISTINCT *
        FROM schm_workspace.ctbl_fonos_movil_final_rep_ok
        WHERE clirut not in (SELECT clirut from schm_workspace.ctbl_solo_unicos where clirut is not null)
    ;

       	WITH x AS (
	  SELECT
	  	*
	  	, ROW_NUMBER() OVER (PARTITION BY clirut ORDER BY clirut DESC) AS rn
	  FROM schm_workspace.ctbl_fonos_movil_pre_final
	)
	SELECT
            clirut,
            seq,
            mandante,
            area,
            telefono,
            fecha_ult_actualizacion,
            tipo,
            nota,
            uso,
            estado
	INTO schm_workspace.ctbl_fonos_movil_pre_final_v2
	FROM x
	WHERE rn = 1; 

    CREATE TABLE schm_workspace.ctbl_veces AS
        SELECT
            telefono,
            count(telefono) as count_of_telefono
        FROM schm_workspace.ctbl_fonos_movil_pre_final_v2
        GROUP BY telefono
        having count_of_telefono < 3
    ;


    CREATE TABLE schm_workspace.ctbl_mejor_de_veces_2 AS
        SELECT
            t1.telefono,
            max(T1.fecha_ult_actualizacion) as  fecha_ult_actualizacion,
            max(t1.seq)  as seq
        FROM schm_workspace.ctbl_fonos_movil_pre_final_v2 t1
        LEFT JOIN schm_workspace.ctbl_veces T2
            ON (T1.telefono = T2.telefono)
        WHERE t2.count_of_telefono = 2
        GROUP BY 1
    ;


    /*MEJORES FONOS SIN FILTRO SERNAC Y LISTAS NEGRAS - mismo anterior */
    /*telefono UNICO PARA rut UNICO*/
    CREATE TABLE schm_workspace.ctbl_fonos_movil_final_sfsln_2  AS
        SELECT t1.clirut,
                t1.seq,
                t1.mandante,
                T1.area,
                t1.telefono,
                t1.fecha_ult_actualizacion,
                t1.tipo,
                t1.nota,
                t1.uso,
                t1.estado
        FROM schm_workspace.ctbl_fonos_movil_pre_final_v2 t1
        inner join schm_workspace.ctbl_veces t2
            on (t1.telefono = t2.telefono and t2.count_of_telefono = 1)
    ;


    CREATE TABLE schm_workspace.ctbl_fonos_movil_final_sfsln_3 AS
        SELECT
            t1.clirut,
            t1.seq,
            t1.mandante,
            T1.area,
            t1.telefono,
            t1.fecha_ult_actualizacion,
            t1.tipo,
            t1.nota,
            t1.uso,
            t1.estado
        FROM schm_workspace.ctbl_mejor_de_veces_2 t2
        LEFT JOIN schm_workspace.ctbl_fonos_movil_pre_final_v2  t1
            on (t1.telefono = t2.telefono and t1.fecha_ult_actualizacion = t2.fecha_ult_actualizacion)
    ;


    CREATE TABLE schm_workspace.ctbl_veces_seq AS
        SELECT
            telefono,
            count(telefono) AS count_of_telefono
        FROM schm_workspace.ctbl_fonos_movil_final_sfsln_3
        GROUP BY 1
        having count_of_telefono  < 3
    ;


    CREATE TABLE schm_workspace.ctbl_mejor_de_veces_2_seq AS
        SELECT
            t1.telefono,
            t1.fecha_ult_actualizacion,
            max(t1.seq) as seq
        FROM schm_workspace.ctbl_fonos_movil_pre_final_v2 t1
        LEFT JOIN schm_workspace.ctbl_veces_seq t2
            ON (t1.telefono = t2.telefono)
        WHERE t2.count_of_telefono = 2
        GROUP BY 1,2
    ;


    CREATE TABLE schm_workspace.ctbl_fonos_movil_final_sfsln_4 AS
        SELECT DISTINCT
            t1.clirut,
            t1.seq,
            t1.mandante,
            T1.area,
            t1.telefono,
            t1.fecha_ult_actualizacion,
            t1.tipo,
            t1.nota,
            t1.uso,
            t1.estado
        FROM schm_workspace.ctbl_mejor_de_veces_2_SEQ t2
        LEFT JOIN schm_workspace.ctbl_fonos_movil_pre_final_v2  t1
            on (t1.telefono = t2.telefono
                and t1.fecha_ult_actualizacion = t2.fecha_ult_actualizacion
                and t1.seq = t2.seq
                )
    ;


    CREATE TABLE schm_workspace.ctbl_veces_seq_repetida AS
        SELECT
            telefono,
            count(telefono) as count_of_telefono
        FROM schm_workspace.ctbl_fonos_movil_final_sfsln_4
        GROUP BY telefono
        having count_of_telefono = 2
        ORDER BY 1
    ;


    CREATE TABLE schm_workspace.ctbl_remanente_final_sin_filtros AS
        SELECT DISTINCT * FROM schm_workspace.ctbl_fonos_movil_final_sfsln_4 T1
        WHERE true
            AND T1.telefono NOT IN (SELECT telefono FROM schm_workspace.ctbl_veces_seq_repetida where telefono is not null)
    UNION ALL
        SELECT DISTINCT * FROM schm_workspace.ctbl_fonos_movil_final_sfsln_3 T2
        WHERE true
            AND	T2.telefono NOT IN (SELECT telefono FROM schm_workspace.ctbl_veces_seq_repetida where telefono is not null)
            AND T2.telefono NOT IN (SELECT telefono FROM schm_workspace.ctbl_fonos_movil_final_sfsln_4 where telefono is not null)
    UNION ALL
        SELECT DISTINCT * FROM schm_workspace.ctbl_fonos_movil_final_sfsln_2  T3
    ;



    CREATE TABLE schm_workspace.ctbl_filtros_aplicados AS
        SELECT DISTINCT * FROM schm_workspace.ctbl_remanente_final_sin_filtros T1
        WHERE true
            AND T1.clirut 	NOT IN (SELECT rut::varchar FROM schm_data_analytics.ctbl_lnegro_call where rut is not null)
            AND T1.telefono NOT IN (SELECT fono::double precision FROM schm_data_analytics.ctbl_lnegro_call where fono is not null)
            AND T1.clirut 	NOT IN (SELECT rut::varchar FROM schm_data_analytics.ctbl_lnegro_car where rut is not null)
            AND T1.clirut 	NOT IN (SELECT rut::varchar FROM schm_data_analytics.ctbl_lnegro_sms where rut is not null)
            AND T1.telefono NOT IN (SELECT fono::double precision FROM schm_data_analytics.ctbl_lnegro_sms where fono is not null)
    ;


    CREATE TABLE schm_workspace.ctbl_fonos_final_caen_x_filt_fecha AS
        SELECT * FROM schm_workspace.ctbl_remanente_final_sin_filtros
        WHERE true
            AND  clirut  NOT IN (SELECT t1.clirut FROM schm_workspace.ctbl_filtros_aplicados t1 where clirut is not null)
            AND telefono NOT IN (SELECT t2.telefono FROM schm_workspace.ctbl_filtros_aplicados t2 where telefono is not null)
    ;


    CREATE TABLE schm_workspace.ctbl_fonos_final_caen_xd_filt_fecha AS
        SELECT DISTINCT
            T1.clirut,
            T1.mandante,
            T1.telefono,
            CASE WHEN T2.rut is not null THEN 1 ELSE 0 END AS LNEGRO_CALL_R,
            CASE WHEN T3.fono is not null THEN 1 ELSE 0 END AS LNEGRO_CALL_F,
            CASE WHEN T4.rut is not null THEN 1 ELSE 0 END AS LNEGRO_CAR_R,
            CASE WHEN T5.rut is not null THEN 1 ELSE 0 END AS LNEGRO_SMS_R,
            CASE WHEN T6.fono is not null THEN 1 ELSE 0 END AS LNEGRO_SMS_F
        FROM schm_workspace.ctbl_fonos_final_caen_x_filt_fecha t1
            LEFT JOIN schm_data_analytics.ctbl_lnegro_call T2 ON (T1. clirut = T2.rut)
            LEFT JOIN schm_data_analytics.ctbl_lnegro_call T3 ON (T1.telefono = T3.fono)
            LEFT JOIN schm_data_analytics.ctbl_lnegro_car T4 ON (T1. clirut = T4.rut)
            LEFT JOIN schm_data_analytics.ctbl_lnegro_sms T5 ON (T1. clirut = T5.rut)
            LEFT JOIN schm_data_analytics.ctbl_lnegro_sms T6 ON (T1.telefono = T6.fono)
    ;

    DELETE FROM schm_data_analytics.ctbl_fonos_movil_final where periodo = schm_artifacts.f_period(current_date);
    -- DROP TABLE IF EXISTS schm_data_analytics.ctbl_fonos_movil_final;
    INSERT INTO schm_data_analytics.ctbl_fonos_movil_final
         (clirut, seq, mandante, area, telefono, fecha_ult_actualizacion, tipo, nota, uso, estado, periodo)
    SELECT
        clirut,
        seq,
        mandante,
        area,
        telefono,
        fecha_ult_actualizacion,
        tipo,
        nota,
        uso,
        estado,
        schm_artifacts.f_period(current_date) as periodo
    FROM schm_workspace.ctbl_filtros_aplicados;

    DELETE FROM schm_data_analytics.ctbl_fonos_movil_final_se where periodo = schm_artifacts.f_period(current_date);
    --DROP TABLE IF EXISTS schm_data_analytics.ctbl_fonos_movil_final_se;
    -- CREATE TABLE schm_data_analytics.ctbl_fonos_movil_final_se as SELECT * FROM schm_workspace.ctbl_remanente_final_sin_filtros;

    INSERT INTO schm_data_analytics.ctbl_fonos_movil_final_se
         (clirut, seq, mandante, area, telefono, fecha_ult_actualizacion, tipo, nota, uso, estado, periodo)
    SELECT
        clirut,
        seq,
        mandante,
        area,
        telefono,
        fecha_ult_actualizacion,
        tipo,
        nota,
        uso,
        estado,
        schm_artifacts.f_period(current_date) as periodo
    FROM schm_workspace.ctbl_remanente_final_sin_filtros;

---------------

    CREATE TABLE schm_workspace.ctbl_sp_sms_fecha as
        SELECT
            cast(fecha as timestamp) as TIME_SENT,
            substring(movil, 5,15) as telefono,
            'SMS' as TYPE_NUMBER,
            'MT' as REQUEST,
            estado as status
        FROM br_dm_prod_bigdata_campaign_db.campaign_output_sms
        WHERE true
        AND cast(fecha as timestamp) >= dateadd(month, -2, DATE_TRUNC('month', CURRENT_DATE))
    ;


    CREATE TABLE schm_workspace.ctbl_sp_sms_x3_fecha as
        SELECT * from schm_workspace.ctbl_sp_sms_fecha
    ;


    /*FONO DE SMS NO ENTREGADOS*/
    CREATE TABLE schm_workspace.ctbl_sp_sms_fonos_no_entregados as
        SELECT a.telefono
        FROM (SELECT distinct telefono from schm_workspace.ctbl_sp_sms_x3_fecha WHERE status IN ('HORARIO INVA','OPERADOR INV','SERVICIO NO') ) a
        LEFT JOIN (SELECT distinct telefono from schm_workspace.ctbl_sp_sms_x3_fecha WHERE STATUS = 'SMS ENVIADOS') b
            ON a.telefono = b.telefono
        WHERE b.telefono IS NULL
    ;


    CREATE TABLE schm_workspace.ctbl_fonos_movil_final_v2 AS
        SELECT T1.*
        FROM schm_data_analytics.ctbl_fonos_movil_final T1
            LEFT JOIN schm_workspace.ctbl_sp_sms_fonos_no_entregados T2
            ON (T1.telefono = T2.telefono)
        WHERE T2.telefono IS null
    ;


    DROP TABLE IF EXISTS schm_data_analytics.ctbl_nota_rank_fonos_movil;
    CREATE TABLE schm_data_analytics.ctbl_nota_rank_fonos_movil AS
        SELECT
            t1.*,
            CASE WHEN t2.clirut IS NOT NULL THEN 1	ELSE 0 end as R_BOPERS,
            CASE WHEN t3.clirut IS NOT NULL THEN 1	ELSE 0 end as R_REP_TEL,
            CASE WHEN t4.telefono IS NOT NULL THEN 1 ELSE 0 end as F_DUP_MEN2,
            CASE WHEN t4.telefono IS NULL THEN 1 ELSE 0 end as F_DUP_MAY2,
            CASE WHEN t5.clirut IS NOT NULL THEN 1 ELSE 0 end as R_FIN_SIN_FIL,
            CASE WHEN t6.clirut IS NOT NULL THEN 1 ELSE 0 end as R_FIN_CON_FIL,
            CASE WHEN t7.telefono IS NOT NULL THEN 1 ELSE 0 end as F_NO_SMS
            FROM schm_workspace.ctbl_fonos_movil_pre_final 	t1
                    LEFT JOIN schm_workspace.ctbl_fonos_sms_mejor_bopers T2
                        ON (t1.clirut = t2. clirut)
                    LEFT JOIN schm_workspace.ctbl_fonos_movil_final_rep_ok T3
                        ON (t1.clirut = t3. clirut)
                    LEFT JOIN schm_workspace.ctbl_veces	T4
                        ON (t1.telefono = T4.telefono)
                    LEFT JOIN schm_workspace.ctbl_remanente_final_sin_filtros	T5
                        ON (t1.clirut = t5. clirut)
                    LEFT JOIN schm_workspace.ctbl_fonos_movil_final_v2	T6
                        ON (t1.clirut = t6. clirut)
                    LEFT JOIN schm_workspace.ctbl_sp_sms_fonos_no_entregados T7
                        ON (t1.telefono = T7.telefono)
    ;


    DROP TABLE IF EXISTS schm_workspace.ctbl_repositorio_telefonos_vdateperiodo2;
    DROP TABLE IF EXISTS schm_workspace.ctbl_maximo;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_celu;
    DROP TABLE IF EXISTS schm_workspace.ctbl_plataforma;
    DROP TABLE IF EXISTS schm_workspace.ctbl_admision;
    DROP TABLE IF EXISTS schm_workspace.ctbl_banco;
    DROP TABLE IF EXISTS schm_workspace.ctbl_ccr;
    DROP TABLE IF EXISTS schm_workspace.ctbl_ivr;
    DROP TABLE IF EXISTS schm_workspace.ctbl_cyber;
    DROP TABLE IF EXISTS schm_workspace.ctbl_hb;
    DROP TABLE IF EXISTS schm_workspace.ctbl_buf;
    DROP TABLE IF EXISTS schm_workspace.ctbl_dgc;
    DROP TABLE IF EXISTS schm_workspace.ctbl_otros;
    DROP TABLE IF EXISTS schm_workspace.ctbl_simulaciones_ini;
    DROP TABLE IF EXISTS schm_workspace.ctbl_simulaciones_max;
    DROP TABLE IF EXISTS schm_workspace.ctbl_simulaciones_ini_max;
    DROP TABLE IF EXISTS schm_workspace.ctbl_simulaciones_de_paso;
    DROP TABLE IF EXISTS schm_workspace.ctbl_simulaciones_bd_2019;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_compra_sinacofi;
    DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_f_new;
    DROP TABLE IF EXISTS schm_workspace.ctbl_simulaciones_sp;
    DROP TABLE IF EXISTS schm_workspace.ctbl_oc;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_celulares;
    DROP TABLE IF EXISTS schm_workspace.ctbl_maximo_fecha;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_movil_final_rep;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_movil_final_rep_ok;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_sms_bopers;
    DROP TABLE IF EXISTS schm_workspace.ctbl_maximo_fono_bopers;
    DROP TABLE IF EXISTS schm_workspace.ctbl_maximo_fono_bopers_seq;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_sms_mejor_bopers;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_sms_mejor_bopers_b;
    DROP TABLE IF EXISTS schm_workspace.ctbl_union_mejor_bopers_fech_seq;
    DROP TABLE IF EXISTS schm_workspace.ctbl_registros_max_seq;
    DROP TABLE IF EXISTS schm_workspace.ctbl_solo_unicos;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_sms_mejor_bopers_fecha;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_movil_pre_final;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_movil_pre_final_v2;
    DROP TABLE IF EXISTS schm_workspace.ctbl_veces;
    DROP TABLE IF EXISTS schm_workspace.ctbl_mejor_de_veces_2;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_movil_final_sfsln_2;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_movil_final_sfsln_3;
    DROP TABLE IF EXISTS schm_workspace.ctbl_veces_seq;
    DROP TABLE IF EXISTS schm_workspace.ctbl_mejor_de_veces_2_seq;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_movil_final_sfsln_4;
    DROP TABLE IF EXISTS schm_workspace.ctbl_veces_seq_repetida;
    DROP TABLE IF EXISTS schm_workspace.ctbl_remanente_final_sin_filtros;
    DROP TABLE IF EXISTS schm_workspace.ctbl_filtros_aplicados;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_final_caen_x_filt_fecha;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_final_caen_xd_filt_fecha;
    DROP TABLE IF EXISTS schm_workspace.ctbl_sp_sms_fecha;
    DROP TABLE IF EXISTS schm_workspace.ctbl_sp_sms_x3_fecha;
    DROP TABLE IF EXISTS schm_workspace.ctbl_sp_sms_fonos_no_entregados;
    DROP TABLE IF EXISTS schm_workspace.ctbl_fonos_movil_final_v2;
    DROP TABLE IF EXISTS schm_workspace.ctbl_admision;
    DROP TABLE IF EXISTS schm_workspace.ctbl_admision;

END;




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_contact_seguros(v_nombre_campaing varchar, v_fecha varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
	 BEGIN 
		
	
EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/ctbl/contact_seguros/' || v_nombre_campaing ||''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
RETURN;

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_data_master(v_nombre_campaing varchar, v_user varchar, v_fecha varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.paso_1;
    DROP TABLE IF EXISTS schm_workspace.segmento_master;
    DROP TABLE IF EXISTS schm_workspace.paso_2;
    DROP TABLE IF EXISTS schm_workspace.paso_3;
    DROP TABLE IF EXISTS schm_workspace.paso_4;
    DROP TABLE IF EXISTS schm_workspace.paso_5;
    DROP TABLE IF EXISTS schm_workspace.paso_6;
    DROP TABLE IF EXISTS schm_workspace.paso_7;
    DROP TABLE IF EXISTS schm_workspace.base_data_master;
    DROP TABLE IF EXISTS schm_workspace.base_data_master_2;
    DROP TABLE IF EXISTS schm_workspace.data_master_duplicados;
    DROP TABLE IF EXISTS schm_workspace.envio_data_master;


    CREATE TABLE schm_workspace.paso_1 AS
    SELECT DISTINCT 
        rut
    FROM schm_data_analytics.ctbl_base_trabajo_email --todos los correos
    WHERE length(rut)>2
    UNION 
    SELECT DISTINCT 
        clirut AS rut
    FROM schm_data_analytics.ctbl_fonos_movil_final --todos los telefonos
    WHERE length(clirut)>2 AND periodo = (SELECT max(periodo) FROM schm_data_analytics.ctbl_fonos_movil_final)
    UNION
    SELECT DISTINCT 
    	rut
    FROM schm_productos_financieros.ppff_tablon_camp_comerciales
   	WHERE rut NOT IN (SELECT rut FROM schm_data_analytics.data_master);


    CREATE TABLE schm_workspace.segmento_master AS
    SELECT
        rut
        ,CASE
            WHEN final_ptos_a IS NULL THEN 0
            ELSE final_ptos_a
        END AS final_ptos_a
        ,CASE
            WHEN ptos_nvos IS NULL THEN 0
            ELSE ptos_nvos
        END AS ptos_nvos
        ,segmento_final
        ,segmento_anio_anterior
		,segmento_loyalty
		,segmento_1
		,segmento_2
		,segmento_plan
    FROM br_dm_prod_analytics_ripley_puntos_db.segmento_comercial_diario
    WHERE
        fecha_ejecucion = (DATEADD(day, -1, getdate())::DATE);


    CREATE TABLE schm_workspace.paso_2 AS
    SELECT
        a.*
        ,b.final_ptos_a
        ,b.ptos_nvos
        ,b.segmento_final
        ,b.segmento_anio_anterior
		,b.segmento_loyalty
		,b.segmento_1
		,b.segmento_2
		,b.segmento_plan
    FROM schm_workspace.paso_1 a
    LEFT JOIN schm_workspace.segmento_master b
           ON (a.rut = b.rut)
    WHERE a.rut NOT IN (SELECT rut FROM schm_data_analytics.ctbl_lnegro_call WHERE rut IS NOT NULL) AND a.rut
    NOT IN (SELECT rut FROM schm_data_analytics.ctbl_lnegro_email WHERE rut IS NOT NULL);

          
    CREATE TABLE schm_workspace.paso_3 AS
    SELECT
        a.*
        ,e.calle AS direccion
        ,e.numero AS direccion_num
        ,e.region
        ,e.comuna
    FROM schm_workspace.paso_2 a
    LEFT JOIN schm_data_analytics.ctbl_direcciones e --todas las direcciones
           ON (a.rut = e.rut);


    CREATE TABLE schm_workspace.paso_4 AS
    SELECT
        a.*
        ,d.paterno AS apellido
        ,d.nombres AS nombre
    FROM schm_workspace.paso_3 a
    LEFT JOIN schm_data_analytics.ctbl_base_nombres d
           ON (a.rut = d.rut);


    CREATE TABLE schm_workspace.paso_5 AS
    SELECT
        a.*
        ,COALESCE(trim(to_char(g.saldo_rptos,'999,999,999,999')),'-1') AS saldorpuntos1
        ,to_char(trunc(dateadd(DAY, -1, current_date)), 'dd/MM/YYYY') AS fechasaldo
        ,trim(to_char(g.saldo_vencer,'999,999,999,999')) AS puntos_a_caducar
        ,to_char(date(date_trunc('month', current_date) + interval '1 month'), 'dd/MM/YYYY') AS fecha_vencimiento_puntos
    FROM schm_workspace.paso_4 a
    LEFT JOIN schm_reporting.saldo_rptos_disp g
           ON (a.rut = g.rut);
          

    CREATE TABLE schm_workspace.paso_6 AS    
	SELECT 
		a.*	
		,b.antiguedad
	FROM schm_workspace.paso_5 a
	LEFT JOIN schm_data_analytics.clts_antiguedad b
	ON a.rut=b.rut; 

	CREATE TABLE schm_workspace.paso_7 AS    
	SELECT 
		a.*
		,b.decil_apertura
		,b.frecuencia_apertura
		,b.recencia_apertura
		,b.score_apertura
	FROM schm_workspace.paso_6 a
	LEFT JOIN schm_data_analytics.camp_deciles b 
	ON a.rut=b.id_usuario::integer; 

    CREATE TABLE schm_workspace.base_data_master AS
    SELECT
        a.*
        ,b.email
        ,c.telefono AS telefono_movil
    FROM schm_workspace.paso_7 a
    LEFT JOIN schm_data_analytics.ctbl_base_trabajo_email b
           ON (a.rut = b.rut)
    LEFT JOIN 
    (SELECT * FROM schm_data_analytics.ctbl_fonos_movil_final
    WHERE periodo = (SELECT MAX(periodo) FROM schm_data_analytics.ctbl_fonos_movil_final)) c
           ON (a.rut = c.clirut)
          ;
          

    CREATE TABLE schm_workspace.base_data_master_2 AS
    SELECT
        a.*
        ,b.si_tam
        ,b.si_cc
        ,b.si_mc_chek
        ,b.si_td
        ,b.si_tr
    FROM schm_workspace.base_data_master a
    LEFT JOIN schm_data_analytics.productos_por_cliente b --productos activos
           ON a.rut = b.rut;


    WITH duplicates_cte as (
     SELECT
         COUNT(*) OVER (PARTITION BY rut) as total_duplicates,
         ROW_NUMBER () OVER (PARTITION BY rut) as duplicate_rn, *
     FROM schm_workspace.base_data_master_2
    )
    SELECT * INTO schm_workspace.data_master_duplicados
    FROM duplicates_cte
    WHERE total_duplicates > 1 and duplicate_rn = 1;


    DELETE FROM schm_workspace.base_data_master_2
    USING schm_workspace.data_master_duplicados
    WHERE schm_workspace.data_master_duplicados.rut = schm_workspace.base_data_master_2.rut;


    INSERT INTO schm_workspace.base_data_master_2(
        rut
        ,final_ptos_a
        ,ptos_nvos
        ,segmento_final
        ,segmento_anio_anterior
		,segmento_loyalty
		,segmento_1
		,segmento_2
		,segmento_plan
        ,direccion
        ,direccion_num
        ,region
        ,comuna
        ,apellido
        ,nombre
        ,saldorpuntos1
        ,fechasaldo
        ,puntos_a_caducar
        ,fecha_vencimiento_puntos
        ,email
        ,telefono_movil
        ,si_tam
        ,si_cc
        ,si_mc_chek
        ,si_td
        ,si_tr
        ,antiguedad
        ,score_apertura
		,decil_apertura
		,recencia_apertura
		,frecuencia_apertura
    )
    SELECT
        rut
        ,final_ptos_a
        ,ptos_nvos
        ,segmento_final
        ,segmento_anio_anterior
		,segmento_loyalty
		,segmento_1
		,segmento_2
		,segmento_plan
        ,direccion
        ,direccion_num
        ,region
        ,comuna
        ,apellido
        ,nombre
        ,saldorpuntos1
        ,fechasaldo
        ,puntos_a_caducar
        ,fecha_vencimiento_puntos
        ,email
        ,telefono_movil
        ,si_tam
        ,si_cc
        ,si_mc_chek
        ,si_td
        ,si_tr
        ,antiguedad
        ,score_apertura
		,decil_apertura
		,recencia_apertura
		,frecuencia_apertura
    FROM schm_workspace.data_master_duplicados;
   
	DROP TABLE IF EXISTS schm_data_analytics.data_master;

    CREATE TABLE schm_data_analytics.data_master AS
    SELECT *,
    CASE WHEN (SI_TAM+SI_CC+SI_MC_CHEK+SI_TD+SI_TR)>0 THEN 1 ELSE 0
    END AS vigente
    FROM schm_workspace.base_data_master_2;
   
   --DROP TABLE schm_workspace.envio_data_master;
    CREATE TABLE schm_workspace.envio_data_master
    (
        APELLIDO VARCHAR(50)
        ,DIRECCION VARCHAR(50)
        ,EMAIL VARCHAR(200)
        ,ID_USUARIO INTEGER
        ,RUT INTEGER
        ,NOMBRE VARCHAR(100)
        ,NOMBRE_TC VARCHAR(50)
        ,NUM_TC INTEGER
        ,RETIRO_PLASTICO INTEGER
        ,TELEFONO_MOVIL VARCHAR(38)
        ,DIRECCION_NUM VARCHAR(38)
        ,REGION VARCHAR(50)
        ,COMUNA VARCHAR(50)
        ,VAR_DM_NUM_1 INTEGER
        ,VAR_DM_TXT_1 VARCHAR(38)
        ,SEGMENTO VARCHAR(38)
        ,SALDORPUNTOS1 VARCHAR(38)
        ,FECHASALDO VARCHAR(38)
        ,FECHA_VENCIMIENTO_PUNTOS VARCHAR(38)
        ,PUNTOS_A_CADUCAR VARCHAR(38)
        ,VIGENTE VARCHAR(1)
        ,FINAL_PTOS_A INTEGER
        ,PTOS_NVOS INTEGER
        ,SEGMENTO_ANIO_ANTERIOR VARCHAR(11)
        ,SEGMENTO_LOYALTY VARCHAR(11)
        ,SEGMENTO_1 VARCHAR(11)
        ,SEGMENTO_2 VARCHAR(11)
        ,SEGMENTO_PLAN VARCHAR(11)
        ,SEGMENTO_FINAL VARCHAR(11)
        ,SI_TAM INTEGER
        ,SI_CC INTEGER
        ,SI_MC_CHEK INTEGER
        ,SI_TD INTEGER
        ,SI_TR INTEGER
        ,ANTIGUEDAD INTEGER
        ,SCORE_APERTURA DECIMAL (38,19)
		,DECIL_APERTURA INTEGER
		,RECENCIA_APERTURA INTEGER
		,FRECUENCIA_APERTURA INTEGER
        ,SMS_CONSENT_STATUS VARCHAR(15)
    ) ;

    INSERT INTO schm_workspace.envio_data_master
    (
    APELLIDO
    ,DIRECCION
    ,EMAIL
    ,ID_USUARIO
    ,RUT
    ,NOMBRE
    ,NOMBRE_TC
    ,NUM_TC
    ,RETIRO_PLASTICO
    ,TELEFONO_MOVIL
    ,DIRECCION_NUM
    ,REGION
    ,COMUNA
    ,VAR_DM_NUM_1
    ,VAR_DM_TXT_1
    ,SEGMENTO
    ,SALDORPUNTOS1
    ,FECHASALDO
    ,FECHA_VENCIMIENTO_PUNTOS
    ,PUNTOS_A_CADUCAR
    ,VIGENTE
    ,FINAL_PTOS_A
    ,PTOS_NVOS
    ,SEGMENTO_ANIO_ANTERIOR
    ,SEGMENTO_LOYALTY
    ,SEGMENTO_1
    ,SEGMENTO_2
    ,SEGMENTO_PLAN
    ,SEGMENTO_FINAL
    ,SI_TAM
    ,SI_CC
    ,SI_MC_CHEK
    ,SI_TD
    ,SI_TR
    ,ANTIGUEDAD
    ,SCORE_APERTURA
	,DECIL_APERTURA
	,RECENCIA_APERTURA
	,FRECUENCIA_APERTURA
    ,SMS_CONSENT_STATUS
    )
    SELECT
        trim(APELLIDO) as APELLIDO
        ,trim(DIRECCION) as DIRECCION
        ,trim(EMAIL) as EMAIL
        ,RUT as ID_USUARIO
        ,RUT
        ,trim(NOMBRE) as NOMBRE
        ,'null' as NOMBRE_TC
        ,0 as NUM_TC
        ,0 as RETIRO_PLASTICO
        ,coalesce(concat('569',TELEFONO_MOVIL), concat('600',RUT)) as TELEFONO_MOVIL
        ,trim(DIRECCION_NUM) as DIRECCION_NUM
        ,trim(REGION) as REGION
        ,trim(COMUNA) as COMUNA
        ,0 as VAR_DM_NUM_1
        ,'null' as VAR_DM_TXT_1
        ,trim(SEGMENTO_FINAL) as SEGMENTO
        ,replace(SALDORPUNTOS1,',','.') as SALDORPUNTOS1
        ,FECHASALDO
        ,FECHA_VENCIMIENTO_PUNTOS
        ,replace(PUNTOS_A_CADUCAR,',','.') as PUNTOS_A_CADUCAR
        ,VIGENTE
        ,FINAL_PTOS_A
        ,PTOS_NVOS
        ,trim(SEGMENTO_ANIO_ANTERIOR) as SEGMENTO_ANIO_ANTERIOR
	    ,trim(SEGMENTO_LOYALTY) as SEGMENTO_LOYALTY
	    ,trim(SEGMENTO_1) as SEGMENTO_1
	    ,trim(SEGMENTO_2) as SEGMENTO_2
	    ,trim(SEGMENTO_PLAN) as SEGMENTO_PLAN
        ,trim(SEGMENTO_FINAL) as SEGMENTO_FINAL
        ,SI_TAM
        ,SI_CC
        ,SI_MC_CHEK
        ,SI_TD
        ,SI_TR
        ,ANTIGUEDAD
        ,SCORE_APERTURA
		,DECIL_APERTURA
		,RECENCIA_APERTURA
		,FRECUENCIA_APERTURA
        ,'Opted-in' as SMS_CONSENT_STATUS
    FROM schm_data_analytics.data_master
    ;

    DROP TABLE IF EXISTS schm_workspace.paso_1;
    DROP TABLE IF EXISTS schm_workspace.segmento_master;
    DROP TABLE IF EXISTS schm_workspace.paso_2;
    DROP TABLE IF EXISTS schm_workspace.paso_3;
    DROP TABLE IF EXISTS schm_workspace.paso_4;
    DROP TABLE IF EXISTS schm_workspace.paso_5;
   	DROP TABLE IF EXISTS schm_workspace.paso_6;
    DROP TABLE IF EXISTS schm_workspace.paso_7;
    DROP TABLE IF EXISTS schm_workspace.base_data_master;
    DROP TABLE IF EXISTS schm_workspace.base_data_master_2;
    DROP TABLE IF EXISTS schm_workspace.data_master_duplicados;

    EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-raw/bigdata/campaign/CAMPAIGN_INPUT_DATAMASTER_USER_TC/' || v_nombre_campaing || '_' || v_fecha || '_0-' || v_user || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';'
    ;
    RETURN;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2024-01-23  -- v10  --  Fernando Soto   --  Se aplica filtro extra para evitar la ingestión de datos de listas negras y se cambia fuente de fonos de 
												schm_data_analytics.fonos_movil_final a schm_data_analytics.ctbl_fonos_movil_final con filtro de máximo periodo.											
	2024-01-16	-- v09	--	Esteban Pino	--	Se cambian fuentes sasdata a schm_data_analytics.
	2024-01-05  -- v08  --  Natalia Vargas  --  Se agrega campo rut 
	2023-10-10	-- v07	--	Natalia Vargas 	--	Se agrega rutero no clientes para campañas automaticas ppff-captacion
	2023-09-15	-- v06	--	Sergio Jara 	--	Se agrega prefijo ctbl a tabla base_trabajo_email
	2023-09-04	-- v05	--	Sergio Jara 	--	Se agrega campo SCORE_APERTURA, DECIL_APERTURA, RECENCIA_APERTURA Y FRECUENCIA_APERTURA.
	2023-08-08	-- v04	--	Sergio Jara 	--	Se agrega campo antiguedad.
	2023-08-08	-- v03	--	Sergio Jara 	--	Se agrega coalesce a saldorptos1, insertando un -1 a los clientes que no tengan puntos.
	2023-07-14	-- v02	--	Sergio Jara 	--	Cambios realizados según lo visto en sesiones de mejora en todo el flujo campañas.
	2023-00-00	-- v01	--	Sergio Jara     --	Versión original.

	=== Información adicional:
	Proceso que busca en varios orígenes de datos, ya sean segmento, direcciones, email, etc. y unifica en una tabla de salida llamada
	schm_data_analytics.data_master, para luego generar un archivo y enviar al proveedor del servicio que es Acoustic/Celmedia.
	===========================================================================================================
*/

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_demo_basket()
	LANGUAGE plpgsql
AS $$
	


BEGIN


	DROP TABLE IF EXISTS schm_workspace.ctbl_ruts_con_contrato;
	DROP TABLE IF EXISTS schm_workspace.ctbl_renta_act_lab;
    DROP TABLE IF EXISTS schm_workspace.ctbl_max_renta_act_lab;
    DROP TABLE IF EXISTS schm_workspace.ctbl_max_fecha_act_lab;
	DROP TABLE IF EXISTS schm_workspace.ctbl_renta_act_lab_2;
    DROP TABLE IF EXISTS schm_workspace.ctbl_renta_act_lab_3;
	DROP TABLE IF EXISTS schm_workspace.ctbl_tmp_demo_itf;
	DROP TABLE IF EXISTS schm_workspace.ctbl_tmp_demo_cr2000_1;
	DROP TABLE IF EXISTS schm_workspace.ctbl_tmp_demo_cr2000;
	DROP TABLE IF EXISTS schm_workspace.ctbl_ruts;
	DROP TABLE IF EXISTS schm_workspace.ctbl_demo_tot;
    DROP TABLE IF EXISTS schm_workspace.ctbl_demo_tot_1;
	DROP TABLE IF EXISTS schm_workspace.ctbl_demo_basket_tmp;
    DROP TABLE IF EXISTS schm_workspace.ctbl_demo_basket_tmp_1;
	DROP TABLE IF EXISTS schm_workspace.ctbl_demo_basket_fin;
    DROP TABLE IF EXISTS schm_workspace.ctbl_ide_bopers;
	DROP TABLE IF EXISTS schm_workspace.ctbl_demo_basket_pre;
	DROP TABLE IF EXISTS schm_workspace.ctbl_rut_bopers_de_vu;
	DROP TABLE IF EXISTS schm_workspace.ctbl_vu_tramos_edad_edad;
	DROP TABLE IF EXISTS schm_workspace.ctbl_edad_ruts_demo_basket_a;



	CREATE TABLE schm_workspace.ctbl_ruts_con_contrato AS
	SELECT
		DISTINCT
		a.pemid_nro_inn_ide AS ide_ctto
		, 1 AS flg_ctto
	FROM br_dm_prod_bigdata_reporitf_db.bopers_mae_ide a
	INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 b
		ON a.pemid_nro_inn_ide = CAST(b.identcli AS INT)
		AND b.fecbaja = '0001-12-30 BC'::DATE
	;


	CREATE TABLE schm_workspace.ctbl_renta_act_lab AS
	SELECT
		c.pemid_nro_inn_ide_k AS ide
		, e.tgmdo_gls_dom AS tipo_actividad
		, c.pemie_mnt_rta AS renta
		, c.pemie_fch_ing_reg AS fec_reg
	FROM br_dm_prod_bigdata_reporitf_db.bopers_mae_ing_eco c
	INNER JOIN br_dm_prod_bigdata_reporitf_db.botgen_mov_dom e
		ON c.pemie_cod_tip_acv = e.tgmdo_cod_dom_k
	WHERE c.pemie_cod_neg_ing_eco = 1
		AND c.pemie_cod_est_ing <> 3
		AND e.tgmpa_cod_pai_k = 152
		AND e.tgmmd_cod_mac_dom_k = 340
		AND c.pemid_nro_inn_ide_k >= 1000000
		AND c.pemid_nro_inn_ide_k <= 48999999
	GROUP BY c.pemid_nro_inn_ide_k
			, e.tgmdo_gls_dom
			, c.pemie_mnt_rta
			, c.pemie_mnt_rta
			, c.pemie_fch_ing_reg
	ORDER BY c.pemid_nro_inn_ide_k
	;


    CREATE TABLE schm_workspace.ctbl_max_renta_act_lab AS --5.909.460
	SELECT DISTINCT
		ide,
		max(renta) AS max_renta
	FROM schm_workspace.ctbl_renta_act_lab
	GROUP BY ide
	;


	CREATE TABLE schm_workspace.ctbl_max_fecha_act_lab AS --5.909.460
	SELECT DISTINCT
		ide,
		max(fec_reg) AS max_fec_reg
	FROM schm_workspace.ctbl_renta_act_lab
	GROUP BY ide
	;


	CREATE TABLE schm_workspace.ctbl_renta_act_lab_2 AS
	SELECT
		a.*
	FROM schm_workspace.ctbl_renta_act_lab a,
	schm_workspace.ctbl_max_renta_act_lab b,
	schm_workspace.ctbl_max_fecha_act_lab c
	WHERE a.ide = b.ide
        AND a.renta = b.max_renta
	    AND a.ide = c.ide
        AND a.fec_reg = c.max_fec_reg
	;



	CREATE TABLE schm_workspace.ctbl_renta_act_lab_3 AS --5.904.258 a. -- 5.888.474 d
	SELECT
		DISTINCT
		ide
		, tipo_actividad
		, renta
		, CASE
			WHEN ide = LAG(ide) OVER (ORDER BY ide) THEN 1
			ELSE 0
		END AS filtro
	FROM schm_workspace.ctbl_renta_act_lab_2
	ORDER BY ide
	;



	DELETE FROM schm_workspace.ctbl_renta_act_lab_3
	WHERE filtro = 1;



	CREATE TABLE schm_workspace.ctbl_tmp_demo_itf AS
	SELECT
		a.pemid_nro_inn_ide AS ide
		, a.pemid_gls_nro_dct_ide_k AS rut
		, a.pemid_dvr_nro_dct_ide AS dv
		, b.flg_ctto
		, c.tipo_actividad
		, c.renta
		, CASE
			WHEN d.pemnb_cod_sex = 1 THEN 'M'
			WHEN d.pemnb_cod_sex = 2 THEN 'F'
			ELSE 'S/I'
		END AS sexo
		, d.pemnb_fch_nac AS fec_nac
		, schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(d.pemnb_fch_nac::date) AS edad
		, CASE
			WHEN schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(d.pemnb_fch_nac::date) BETWEEN 18 AND 25 THEN '18 - 25'
			WHEN schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(d.pemnb_fch_nac::date) BETWEEN 26 AND 33 THEN '26 - 33'
			WHEN schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(d.pemnb_fch_nac::date) BETWEEN 34 AND 41 THEN '34 - 41'
			WHEN schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(d.pemnb_fch_nac::date) BETWEEN 42 AND 49 THEN '42 - 49'
			WHEN schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(d.pemnb_fch_nac::date) BETWEEN 50 AND 57 THEN '50 - 57'
			WHEN schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(d.pemnb_fch_nac::date) BETWEEN 58 AND 65 THEN '58 - 65'
			WHEN schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(d.pemnb_fch_nac::date) > 65
				AND schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(d.pemnb_fch_nac)<=100 THEN '> 65'
		END AS rango_edad
	FROM br_dm_prod_bigdata_reporitf_db.bopers_mae_ide a
	LEFT JOIN schm_workspace.ctbl_ruts_con_contrato b
		ON a.pemid_nro_inn_ide = b.ide_ctto
	LEFT JOIN schm_workspace.ctbl_renta_act_lab_2 c
		ON a.pemid_nro_inn_ide  = c.ide
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_nat_bsc d
		ON a.pemid_nro_inn_ide  = d.pemid_nro_inn_ide_k
	;


	CREATE TABLE schm_workspace.ctbl_tmp_demo_cr2000_1 AS
	SELECT DISTINCT
		ddmcl_rut_cli AS rut
		, CASE
			WHEN ddmcl_fch_nac <= CURRENT_DATE THEN ddmcl_fch_nac
			ELSE NULL
		  END AS fec_nac
		, ddmcl_coc_sex_cli AS sexo
		, ddmcl_mnt_rmn_cli AS renta
		, ddmcl_coc_acv_cli AS cod_act
		, CASE
			WHEN ddmcl_coc_acv_cli IN (18, 29) THEN 'CESANTE'
			WHEN ddmcl_coc_acv_cli IN (1, 2, 7, 8, 9, 10, 12, 21, 22, 23, 24, 25, 26, 27, 28, 30, 39, 41, 42, 43, 44, 48, 49, 50, 51, 52, 55, 56, 58, 59, 61, 68) THEN 'DEPENDIENTE'
			WHEN ddmcl_coc_acv_cli = 6 THEN 'DUEÑA DE CASA'
			WHEN ddmcl_coc_acv_cli IN (62, 63, 64, 65) THEN 'ESTUDIANTE'
			WHEN ddmcl_coc_acv_cli IN (3, 4, 11, 13, 14, 15, 16, 17, 19, 20, 31, 32, 33, 34, 35, 36, 37, 38, 45, 46, 47, 53, 54, 57, 60) THEN 'INDEPENDIENTE'
			WHEN ddmcl_coc_acv_cli IN (5, 40) THEN 'JUBILADO'
			WHEN ddmcl_coc_acv_cli = 66 THEN 'RETENCION JUDICIAL'
			WHEN ddmcl_coc_acv_cli = 0 THEN 'SIN INFORMACION'
		END AS tipo_actividad
	FROM br_dm_prod_bigdata_gedcre_db.dcrm_dim_mae_cli
	WHERE ddmcl_rut_cli >= 1000000
		AND ddmcl_rut_cli <= 48999999
	;


	CREATE TABLE schm_workspace.ctbl_tmp_demo_cr2000 AS
	SELECT
		rut
	   	, fec_nac
	   	, schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(fec_nac::date) AS edad
		, CASE
			WHEN schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(fec_nac::date) BETWEEN 18 AND 25 THEN '18 - 25'
			WHEN schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(fec_nac::date) BETWEEN 26 AND 33 THEN '26 - 33'
			WHEN schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(fec_nac::date) BETWEEN 34 AND 41 THEN '34 - 41'
			WHEN schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(fec_nac::date) BETWEEN 42 AND 49 THEN '42 - 49'
			WHEN schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(fec_nac::date) BETWEEN 50 AND 57 THEN '50 - 57'
			WHEN schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(fec_nac::date) BETWEEN 58 AND 65 THEN '58 - 65'
			WHEN schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(fec_nac::date) > 65
				AND schm_artifacts.f_get_year_from_date(CURRENT_DATE::date) - schm_artifacts.f_get_year_from_date(fec_nac::date) <= 100 THEN '> 65'
		END AS rango_edad
	    , sexo
	    , renta
	    , cod_act
	    , tipo_actividad
	FROM schm_workspace.ctbl_tmp_demo_cr2000_1
	;


	CREATE TABLE schm_workspace.ctbl_ruts AS
	SELECT
		rut,
		MIN(priori) AS prioridad
	FROM (
		SELECT
			rut
			, 1 AS priori
		FROM schm_workspace.ctbl_tmp_demo_itf
		WHERE flg_ctto = 1
		UNION
		SELECT
			rut
			, 2 AS priori
		FROM schm_workspace.ctbl_tmp_demo_cr2000
		UNION
		SELECT
			rut
			, 3 AS priori
		FROM schm_workspace.ctbl_tmp_demo_itf
		WHERE flg_ctto IS NULL)
	GROUP BY rut
	;


	CREATE TABLE schm_workspace.ctbl_demo_tot AS
	SELECT
		a.rut
		, a.renta
		, a.tipo_actividad
		, a.sexo
		, a.fec_nac
		, a.edad
		, a.rango_edad
	FROM schm_workspace.ctbl_tmp_demo_itf a
	INNER JOIN schm_workspace.ctbl_ruts b
		ON a.rut = b.rut
		AND b.prioridad IN (1, 3)
	UNION
	SELECT
		a.rut
		, a.renta
		, a.tipo_actividad
		, a.sexo
		, a.fec_nac
		, a.edad
		, a.rango_edad
	FROM schm_workspace.ctbl_tmp_demo_cr2000 a
	INNER JOIN schm_workspace.ctbl_ruts b
		ON a.rut = b.rut
		AND b.prioridad = 2
	;


    WITH x AS (
	  SELECT
	  	*
	  	, ROW_NUMBER() OVER (PARTITION BY rut ORDER BY rut) AS rn
	  FROM schm_workspace.ctbl_demo_tot
	)
	SELECT
		rut
		, renta
		, tipo_actividad
		, sexo
		, fec_nac
		, edad
		, rango_edad
	INTO schm_workspace.ctbl_demo_tot_1
	FROM x
	WHERE rn = 1;



	CREATE TABLE schm_workspace.ctbl_demo_basket_tmp AS
	SELECT
		a.*
		, CASE
			WHEN a.renta = 0 THEN '0'
			WHEN a.renta BETWEEN 1 AND 200000 THEN '1 - 200'
			WHEN a.renta BETWEEN 200001 AND 300000 THEN '200 - 300'
			WHEN a.renta BETWEEN 300001 AND 400000 THEN '300 - 400'
			WHEN a.renta BETWEEN 400001 AND 500000 THEN '400 - 500'
			WHEN a.renta BETWEEN 500001 AND 1000000 THEN '500 - 1MM'
			WHEN a.renta > 1000000 THEN '> 1MM'
		END AS tramo_renta
		, CASE
			WHEN a.tipo_actividad IN ('DEPENDIENTE','INDEPENDIENTE') AND a.sexo = 'F' AND a.renta > 400000 THEN 'A'
			WHEN a.tipo_actividad IN ('DEPENDIENTE','INDEPENDIENTE') AND a.sexo = 'F' AND a.renta <= 400000 AND a.renta IS NOT NULL THEN 'B'
			WHEN a.tipo_actividad IN ('DEPENDIENTE') AND a.sexo = 'M' AND a.renta > 300000 AND a.renta IS NOT NULL THEN 'C'
			WHEN (a.tipo_actividad IN ('INDEPENDIENTE') AND a.sexo = 'M' AND a.renta > 300000 AND a.renta IS NOT NULL)
				OR a.tipo_actividad IN ('JUBILADO','DUEÑA DE CASA') THEN 'D'
			WHEN (a.tipo_actividad IN  ('DEPENDIENTE','INDEPENDIENTE') AND a.sexo = 'M' AND a.renta <= 300000 AND a.renta IS NOT NULL)
				OR a.tipo_actividad IN ('ESTUDIANTE') THEN 'E'
		END AS grupo
		, b.categoria_gse
	FROM schm_workspace.ctbl_demo_tot_1 a
	LEFT JOIN schm_data_analytics.adan_gse_corp b
		ON a.rut = b.rut
	;


	CREATE TABLE schm_workspace.ctbl_demo_basket_tmp_1 AS
    SELECT
		a.*,
		b.cod_pais_origen cod_pais,
		b.pais_origen pais,
		b.nacionalidad,
		c.estado_civil,
		d.profesion
	FROM schm_workspace.ctbl_demo_basket_tmp a
	LEFT JOIN schm_contactabilidad.nacionalidad_bopers b
	ON a.rut = b.rut
	LEFT JOIN br_dm_prod_bigdata_basecompraext_db.personas_naturales_2023 c
	ON a.rut = c.rut
	LEFT JOIN
	(SELECT
		a.pemid_gls_nro_dct_ide_k::int AS rut,
		b.pemnb_cod_prf_pel AS cod_profesion,
		c.tgmdo_gls_dom AS profesion
	FROM
		br_dm_prod_bigdata_reporitf_db.bopers_mae_ide a,
		br_dm_prod_bigdata_reporitf_db.bopers_mae_nat_bsc b ,
		br_dm_prod_bigdata_reporitf_db.botgen_mov_dom c
	WHERE
		a.pemid_nro_inn_ide = b.pemid_nro_inn_ide_k
		AND b.pemnb_cod_prf_pel = c.tgmdo_cod_dom_k
		AND c.tgmpa_cod_pai_k = 152
		AND c.tgmmd_cod_mac_dom_k = 680) d
	ON a.rut = d.rut
	;



	CREATE TABLE schm_workspace.ctbl_demo_basket_fin AS
	SELECT
		schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(CURRENT_DATE::date), -1) periodo
		, rut
		, renta
		, tipo_actividad
		, sexo
		, fec_nac
		, edad
		, rango_edad
		, tramo_renta
		, categoria_gse
		, cod_pais
		, pais
		, nacionalidad
		, estado_civil
		, profesion
		, grupo
	FROM schm_workspace.ctbl_demo_basket_tmp_1
	WHERE rut >= 1000000 AND rut <= 48999999
	;


	CREATE TABLE schm_workspace.ctbl_ide_bopers AS
	SELECT
		a.periodo
		, a.rut
		, b.pemid_nro_inn_ide id_bopers
		, a.renta
		, a.tipo_actividad
		, a.sexo
		, c.pemnb_fch_nac fecha_nacimiento
		, TO_CHAR(c.pemnb_fch_nac, 'YYYYMMDD')::INT fecha_nac_num
		, a.rango_edad
		, a.tramo_renta
		, a.categoria_gse gse
		, a.cod_pais
		, a.pais
		, a.nacionalidad
		, a.estado_civil
		, a.profesion
		, a.grupo
	FROM schm_workspace.ctbl_demo_basket_fin a
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide b
		ON a.rut = b.pemid_gls_nro_dct_ide_k::INT
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_nat_bsc c
	ON b.pemid_nro_inn_ide = c.pemid_nro_inn_ide_k
	ORDER BY 3
	;



	CREATE TABLE schm_workspace.ctbl_vu_tramos_edad_edad AS
	SELECT
		periodo
		, rut
		, id_bopers
		, renta
		, tramo_renta
		, tipo_actividad
		, sexo
		, fecha_nacimiento
		, fecha_nac_num
		, DATEDIFF(YEAR, fecha_nacimiento, CURRENT_DATE) edad
		, gse
		, cod_pais
		, pais
		, nacionalidad
		, estado_civil
		, profesion
		, grupo
	FROM schm_workspace.ctbl_ide_bopers
	ORDER BY edad
	;


	CREATE TABLE schm_workspace.ctbl_edad_ruts_demo_basket_a AS
	SELECT
		periodo
		, rut
		, fecha_nacimiento
		, fecha_nac_num
		, edad
		, CASE
			WHEN edad = 0 OR edad IS NULL  THEN 'SIN INFORMACION'
		    WHEN edad < 18 THEN '< 18'
		    WHEN edad >= 18 and edad <= 25 THEN '18 - 25'
		    WHEN edad >= 26 and edad <= 30 THEN '26 - 30'
		    WHEN edad >= 31 and edad <= 35 THEN '31 - 35'
		    WHEN edad >= 36 and edad <= 40 THEN '36 - 40'
		    WHEN edad >= 41 and edad <= 45 THEN '41 - 45'
		    WHEN edad >= 46 and edad <= 50 THEN '46 - 50'
		    WHEN edad >= 51 and edad <= 55 THEN '51 - 55'
		    WHEN edad >= 56 and edad <= 60 THEN '56 - 60'
		    WHEN edad >= 61 and edad <= 65 THEN '61 - 65'
		    WHEN edad > 65 AND edad <=130 THEN '> 65'
		END AS rango_edad
		, CASE
			WHEN tipo_actividad IS NOT NULL THEN tipo_actividad
			ELSE 'SIN INFORMACION'
		  END AS tipo_actividad
		, CASE
			WHEN renta IS NOT NULL AND renta > 0 THEN renta
			ELSE 0
		  END AS renta
		, CASE
			WHEN tramo_renta IS NOT NULL THEN tramo_renta
			ELSE 'SIN INFORMACION'
		  END AS tramo_renta
		, CASE
			WHEN gse IS NOT NULL THEN gse
			ELSE 'SIN INFORMACION'
		  END AS gse
		, sexo
		, CASE
			WHEN cod_pais IS NOT NULL THEN cod_pais
			ELSE 0
		  END AS cod_pais
		, CASE
			WHEN pais IS NOT NULL THEN pais
			ELSE 'SIN INFORMACION'
		  END AS pais
		, CASE
			WHEN nacionalidad IS NOT NULL THEN nacionalidad
			ELSE 'SIN INFORMACION'
		  END AS nacionalidad
		, CASE
			WHEN estado_civil IS NOT NULL THEN estado_civil
			ELSE 'SIN INFORMACION'
		  END AS estado_civil
		, CASE
			WHEN profesion IS NOT NULL THEN profesion
			ELSE 'SIN INFORMACION'
		  END AS profesion
		, CASE
			WHEN grupo IS NOT NULL THEN grupo
			ELSE ''
		  END AS grupo
	FROM schm_workspace.ctbl_vu_tramos_edad_edad
	WHERE rut >= 1000000 and rut <= 48999999
		AND edad > 0
	ORDER BY rut
	;


/*
	CREATE TABLE IF NOT EXISTS schm_data_analytics.ctbl_demo_basket
	(
		periodo INTEGER   ENCODE az64
		,rut INTEGER NOT NULL  ENCODE az64
		,fecha_nacimiento DATE   ENCODE az64
		,fecha_nac_num INTEGER   ENCODE az64
		,edad INTEGER   ENCODE az64
		,rango_edad VARCHAR(255)   ENCODE lzo
		,tipo_actividad VARCHAR(255)   ENCODE lzo
		,renta INTEGER   ENCODE az64
		,tramo_renta VARCHAR(25)   ENCODE lzo
		,profesion VARCHAR(255)   ENCODE lzo
		,gse VARCHAR(25)   ENCODE lzo
		,sexo VARCHAR(25)   ENCODE lzo
		,cod_pais INTEGER   ENCODE az64
		,pais VARCHAR(255)   ENCODE lzo
		,nacionalidad VARCHAR(255)   ENCODE lzo
		,estado_civil VARCHAR(255)   ENCODE lzo
		,grupo CHAR(1)   ENCODE lzo
		,PRIMARY KEY (rut)
	);
*/



	DELETE FROM schm_data_analytics.ctbl_demo_basket
	WHERE periodo = schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(CURRENT_DATE::date), -1);


	INSERT INTO schm_data_analytics.ctbl_demo_basket
	SELECT
		periodo
		, rut
		, fecha_nacimiento
		, fecha_nac_num
		, edad
		, rango_edad
		, tipo_actividad
		, renta
		, tramo_renta
		, profesion
		, gse
		, sexo
		, cod_pais
		, pais
		, nacionalidad
		, estado_civil
		, grupo
	FROM schm_workspace.ctbl_edad_ruts_demo_basket_a
	;


	DROP TABLE IF EXISTS schm_workspace.ctbl_ruts_con_contrato;
	DROP TABLE IF EXISTS schm_workspace.ctbl_renta_act_lab;
	DROP TABLE IF EXISTS schm_workspace.ctbl_max_renta_act_lab;
	DROP TABLE IF EXISTS schm_workspace.ctbl_max_fecha_act_lab;
	DROP TABLE IF EXISTS schm_workspace.ctbl_renta_act_lab_2;
	DROP TABLE IF EXISTS schm_workspace.ctbl_renta_act_lab_3;
	DROP TABLE IF EXISTS schm_workspace.ctbl_tmp_demo_itf;
	DROP TABLE IF EXISTS schm_workspace.ctbl_tmp_demo_cr2000_1;
	DROP TABLE IF EXISTS schm_workspace.ctbl_tmp_demo_cr2000;
	DROP TABLE IF EXISTS schm_workspace.ctbl_ruts;
	DROP TABLE IF EXISTS schm_workspace.ctbl_demo_tot;
	DROP TABLE IF EXISTS schm_workspace.ctbl_demo_tot_1;
	DROP TABLE IF EXISTS schm_workspace.ctbl_demo_basket_tmp;
	DROP TABLE IF EXISTS schm_workspace.ctbl_demo_basket_tmp_1;
	DROP TABLE IF EXISTS schm_workspace.ctbl_demo_basket_fin;
	DROP TABLE IF EXISTS schm_workspace.ctbl_ide_bopers;
	DROP TABLE IF EXISTS schm_workspace.ctbl_vu_tramos_edad_edad;
	DROP TABLE IF EXISTS schm_workspace.ctbl_edad_ruts_demo_basket_a;

	/*	===========================================================================================================
		=== Control de versiones visual ===
		2023-12-27	-- v02	--	Fernando Soto     --	Actualización, se agregan nuevas columnas
		2023-04-06	-- v01	--	Thomas Milategua  --	Versión refactorizada.

		=== Información adicional:
		Proceso que...
		===========================================================================================================
	*/

END



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_direcciones()
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN


	DROP TABLE IF EXISTS schm_workspace.ctbl_regiones;
	DROP TABLE IF EXISTS schm_workspace.ctbl_comunas_0;
	DROP TABLE IF EXISTS schm_data_analytics.ctbl_comunas;
	DROP TABLE IF EXISTS schm_workspace.ctbl_base_0;
	DROP TABLE IF EXISTS schm_workspace.ctbl_base_1;
	DROP TABLE IF EXISTS schm_workspace.ctbl_seq_max;
	DROP TABLE IF EXISTS schm_workspace.ctbl_base2;
	DROP TABLE IF EXISTS schm_workspace.ctbl_base3;
	DROP TABLE IF EXISTS schm_workspace.ctbl_direcciones_itf;
	DROP TABLE IF EXISTS schm_workspace.ctbl_salida;
	DROP TABLE IF EXISTS schm_workspace.ctbl_salida1;
	DROP TABLE IF EXISTS schm_workspace.ctbl_direcciones_no_ppa;
	DROP TABLE IF EXISTS schm_workspace.ctbl_direcciones_no_ppa_1;
	DROP TABLE IF EXISTS schm_workspace.ctbl_seq_max_no_ppa; 
	DROP TABLE IF EXISTS schm_workspace.ctbl_direcciones_no_ppa_2;
	DROP TABLE IF EXISTS schm_workspace.ctbl_direcciones_no_ppa_3;
	DROP TABLE IF EXISTS schm_workspace.ctbl_direcciones_itf_no_ppa;
	DROP TABLE IF EXISTS schm_workspace.ctbl_salida_no_ppa;
	DROP TABLE IF EXISTS schm_workspace.ctbl_salida1_no_ppa;
	DROP TABLE IF EXISTS schm_workspace.ctbl_rut_no_dir;
	DROP TABLE IF EXISTS schm_workspace.ctbl_salida_dir_lab;
	DROP TABLE IF EXISTS schm_workspace.ctbl_direcciones_all;
	DROP TABLE IF EXISTS schm_data_analytics.ctbl_direcciones;




    CREATE TABLE schm_workspace.ctbl_regiones AS
    SELECT
        tgmpa_cod_pai_k,
        tgmdp_cod_dvs_k,
        tgmug_cod_ubc_geo_k,
      	tgmug_nom_ubc_geo,
        tgmug_cod_ubc_geo_pad
    FROM br_dm_prod_bigdata_reporitf_db.botgen_mae_ubc_geo
    WHERE tgmpa_cod_pai_k = 152
        AND tgmdp_cod_dvs_k = 1
       ;
      
      
          
    
    INSERT INTO schm_workspace.ctbl_regiones 
    (tgmpa_cod_pai_k,
    tgmdp_cod_dvs_k,
    tgmug_cod_ubc_geo_k,
    tgmug_nom_ubc_geo,
    tgmug_cod_ubc_geo_pad)
    VALUES 
    (152,
    1,
    746,
    'ÑUBLE',
    NULL);
    
      


    CREATE TABLE schm_workspace.ctbl_comunas_0 AS
    SELECT
        tgmpa_cod_pai_k ,
        tgmdp_cod_dvs_k,
        tgmug_cod_ubc_geo_k,
        tgmug_nom_ubc_geo,
        tgmug_cod_ubc_geo_pad
    FROM br_dm_prod_bigdata_reporitf_db.botgen_mae_ubc_geo
    WHERE tgmpa_cod_pai_k = 152
        AND tgmdp_cod_dvs_k = 4
    ;
   
   
   
   
   UPDATE schm_workspace.ctbl_comunas_0 
   SET tgmug_cod_ubc_geo_pad = 746
   WHERE tgmug_cod_ubc_geo_k IN 
		(857, 897, 759, 834, 970, 982, 1027, 1065, 1119, 901, 804, 944,
		1060, 1071, 1034, 799, 803, 943, 989, 1036, 1103);
	
	

	
    CREATE TABLE schm_data_analytics.ctbl_comunas AS
    SELECT
        t1.tgmpa_cod_pai_k,
        t1.tgmug_cod_ubc_geo_k,
        t1.tgmug_nom_ubc_geo,
        t2.tgmug_cod_ubc_geo_k as cod_region,
        t2.tgmug_nom_ubc_geo as region
    FROM schm_workspace.ctbl_comunas_0 t1
    LEFT JOIN schm_workspace.ctbl_regiones t2
        ON t1.tgmug_cod_ubc_geo_pad = t2.tgmug_cod_ubc_geo_k
    ;



    CREATE TABLE schm_workspace.ctbl_base_0 AS
    SELECT
        a.pemid_gls_nro_dct_ide_k,
        a.pemid_dvr_nro_dct_ide,
        b.pemdm_gls_cal_dml,
        b.pemdm_nro_dml,
        b.pemdm_cod_ubc_1_er,
        CASE 
	        WHEN b.pemdm_gls_rst_dml IN 
	        	('DIRECCION  PARA ALTA EXPRESS',
	        	'ALTA EXPRESS',
	        	'DIRECCION- PARA ALTA EXPRESS',
	        	'DIRECCION ALTA EXPRESS',
	        	'DIRECCION P',
	        	'DIRECCION P1',
	        	'DIRECCION  ALTA EXPRESS',
	        	'DIRECCION',
	        	'DIRECCION PARA ALTA EXPRESS',
	        	'DIRECCION DE ESDUCACION',
	        	'DIRECCION P1ARA ALTA EXPRESS',
	        	'DIRECCIÓN PARA ALTA EXPRESS',
	        	'DIRECCION PARA ALTA EXPRESS KILOMETRO 22',
	        	'DIRECCIÓN PARA ALTA EXPRESS',
	        	'DIRECCION PARA ALTA E',
	        	'DIRECCION PARA ALTA EXPRESS.',
	        	'DIRECCION PARA .ALTA EXPRESS',
	        	'DIRECCION PARTE ALTA EXPRESS',
	        	'DIRECCION PARA ALTA',
	        	'DIRECCION PARA ALTA EXPRESS..',
	        	'DIRECCION PARA') THEN ''
	        ELSE b.pemdm_gls_rst_dml
	    END AS pemdm_gls_rst_dml,
        b.pemdm_cod_ubc_3_er,
        b.pemdm_fch_ing_reg,
        b.pemdm_fch_fin_acl,
        b.pemid_nro_inn_ide_k,
        b.pemdm_cod_app_fin_acl,
        b.pemdm_nro_seq_dml_k,
        b.pemdm_cod_dml_ppa,
        CASE
            WHEN pemdm_cod_tip_dml = 1 THEN 'PART'
            ELSE 'LAB'
        END AS tipo_dire
    FROM br_dm_prod_bigdata_reporitf_db.bopers_mae_ide a
    INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_dml b
        ON a.pemid_nro_inn_ide = b.pemid_nro_inn_ide_k
    WHERE b.pemdm_cod_neg_dml = 1  
    	AND b.pemdm_cod_dml_ppa = 1
    ;
   
  


    CREATE TABLE schm_workspace.ctbl_base_1 AS
    SELECT
        pemid_gls_nro_dct_ide_k,
        pemid_dvr_nro_dct_ide,
        pemdm_gls_cal_dml,
        pemdm_nro_dml,
        pemdm_cod_ubc_1_er,
        pemdm_gls_rst_dml,
        pemdm_cod_ubc_3_er,
        max(pemdm_fch_ing_reg) as max_of_pemdm_fch_ing_reg,
        max(pemdm_fch_fin_acl) as max_of_pemdm_fch_fin_acl,
        max(pemdm_nro_seq_dml_k) AS max_of_pemdm_nro_seq_dml_k,
        pemid_nro_inn_ide_k,
        tipo_dire tipo_direccion
    FROM schm_workspace.ctbl_base_0
    WHERE pemdm_cod_app_fin_acl <> 70
    GROUP BY pemid_gls_nro_dct_ide_k, pemid_dvr_nro_dct_ide, pemdm_gls_cal_dml, pemdm_nro_dml,
    pemdm_cod_ubc_1_er, pemdm_gls_rst_dml, pemdm_cod_ubc_3_er, pemid_nro_inn_ide_k, tipo_direccion
   ;


   /* CREATE TABLE schm_workspace.ctbl_fecha_max_part AS
    SELECT
        MAX(max_of_pemdm_fch_fin_acl) as max_of_max_of_pemdm_fch_fin_acl,
        pemid_gls_nro_dct_ide_k
    FROM schm_workspace.ctbl_base_1_part
    GROUP BY pemid_gls_nro_dct_ide_k
   ;*/
 

	  
	  CREATE TABLE schm_workspace.ctbl_seq_max AS 
	  SELECT 
	  	MAX(max_of_pemdm_nro_seq_dml_k) AS max_of_max_of_pemdm_nro_seq_dml_k,
	  	pemid_gls_nro_dct_ide_k
	  FROM schm_workspace.ctbl_base_1
	  GROUP BY pemid_gls_nro_dct_ide_k
	  ;
	 


    CREATE TABLE schm_workspace.ctbl_base2 AS
    SELECT
        t2.pemid_gls_nro_dct_ide_k,
        t2.pemid_dvr_nro_dct_ide,
        t2.pemdm_gls_cal_dml,
        t2.pemdm_nro_dml,
        t2.pemdm_cod_ubc_1_er,
        t2.pemdm_gls_rst_dml,
        t2.pemdm_cod_ubc_3_er,
        t2.max_of_pemdm_fch_ing_reg,
        t2.max_of_pemdm_fch_fin_acl,
        t2.max_of_pemdm_nro_seq_dml_k,
        t2.pemid_nro_inn_ide_k,
        t2.tipo_direccion
    FROM schm_workspace.ctbl_base_1 AS t2
       ,schm_workspace.ctbl_seq_max t3
    WHERE t2.max_of_pemdm_nro_seq_dml_k = t3.max_of_max_of_pemdm_nro_seq_dml_k
        AND t2.pemid_gls_nro_dct_ide_k =  t3.pemid_gls_nro_dct_ide_k
       ;
      
      
  
	 

    /*CREATE TABLE schm_workspace.ctbl_regiones_como_debe_ser AS
    SELECT
        tgmug_cod_ubc_geo_k,
        tgmug_nom_ubc_geo
    FROM br_dm_prod_bigdata_reporitf_db.botgen_mae_ubc_geo
    WHERE tgmpa_cod_pai_k = 152
        AND tgmdp_cod_dvs_k = 1
    ;*/
   
   


/*
    CREATE TABLE schm_workspace.ctbl_base4 AS
    SELECT
        t1.pemid_gls_nro_dct_ide_k,
        t1.pemid_dvr_nro_dct_ide,
        t1.pemdm_gls_cal_dml,
        t1.pemdm_nro_dml,
        t1.pemdm_cod_ubc_1_er,
        t1.pemdm_gls_rst_dml,
        t1.pemdm_cod_ubc_3_er,
        t1.max_of_pemdm_fch_ing_reg,
        t1.max_of_pemdm_fch_fin_acl,
        t1.pemid_nro_inn_ide_k,
        t1.tipo_direccion,
        t1.tgmug_nom_ubc_geo,
        t2.tgmug_nom_ubc_geo as tgmug_nom_ubc_geo1
    FROM schm_workspace.ctbl_base3 as t1
    ;
*/


/*    CREATE TABLE schm_workspace.ctbl_region_fisa as
    SELECT
        f.des_codigo as codigo,
        f.des_descripcion as region
    FROM br_dm_prod_bigdata_fisa_db.tgen_zonageo a,
        br_dm_prod_bigdata_fisa_db.tgen_desctabla f
    WHERE a.zon_tabdistrito = f.des_codtab
        AND a.zon_distrito = f.des_codigo
    GROUP BY f.des_codigo, f.des_descripcion
   ;
  */
  


/*
    CREATE TABLE schm_workspace.ctbl_homologacion AS
    SELECT
        codigo AS codigo_fisa,
        CASE
            WHEN codigo=1 THEN 731
            WHEN codigo=2 THEN 732
            WHEN codigo=3 THEN 733
            WHEN codigo=4 THEN 734
            WHEN codigo=5 THEN 735
            WHEN codigo=6 THEN 736
            WHEN codigo=7 THEN 737
            WHEN codigo=8 THEN 738
            WHEN codigo=9 THEN 739
            WHEN codigo=10 THEN 740
            WHEN codigo=11 THEN 741
            WHEN codigo=12 THEN 742
            WHEN codigo=13 THEN 743
            WHEN codigo=14 THEN 744
            WHEN codigo=15 THEN 745
            WHEN codigo=16 THEN 746
        END AS codigo_homologado,
        CASE 
	        WHEN region = 'I DE TARAPACA' THEN 'REGION DE TARAPACA'
	        WHEN region = 'II DE ANTOFAGASTA' THEN 'REGION DE ANTOFAGASTA'
	        WHEN region = 'III DE ATACAMA' THEN 'REGION DE ATACAMA'
	        WHEN region = 'IV DE COQUIMBO' THEN 'REGION DE COQUIMBO'
	        WHEN region = 'V DE VALPARAISO' THEN 'REGION DE VALPARAISO'
	        WHEN region = 'VI DEL LIBERTADOR GENERAL BERN' THEN 'REGION DEL LIBERTADOR GENERAL BERNARDO OHIGGINS'
	        WHEN region = 'VII DEL MAULE' THEN 'REGION DEL MAULE'
	        WHEN region = 'VIII DEL BIOBIO'THEN 'REGION DEL BIO-BIO'
	        WHEN region = 'IX DE LA ARAUCANIA' THEN 'REGION DE LA ARAUCANIA'
	        WHEN region = 'X DE LOS LAGOS' THEN 'REGION DE LOS LAGOS'
	        WHEN region = 'XI AISEN DEL GENERAL CARLOS IB' THEN 'REGION DE AYSEN DEL GENERAL CARLOS IBAÃ‘EZ DEL CAMPO'
	        WHEN region = 'XII DE MAGALLANES Y DE LA ANTA' THEN 'REGION DE MAGALLANES Y DE LA ANTARTICA CHILENA'
	        WHEN region = 'REGION METROPOLITANA STGO' THEN 'REGION METROPOLITANA'
	        WHEN region = 'REGION DE LOS RIOS' THEN region
	        WHEN region = 'REGION DE ARICA - PARINACOTA' THEN 'REGION DE ARICA Y PARINACOTA'
	        WHEN region = 'REGION DE Ã‘UBLE' THEN region
	  	END AS region_homologada
    FROM schm_workspace.ctbl_region_fisa
   ;
*/


 /*   CREATE TABLE schm_workspace.ctbl_homologacion_final AS
    SELECT
        t1.codigo_fisa,
        t1.codigo_homologado,
        t2.tgmug_nom_ubc_geo region,
        t1.region_homologada
    FROM schm_workspace.ctbl_homologacion t1
    LEFT JOIN schm_workspace.ctbl_regiones_como_debe_ser t2
        ON (t1.codigo_homologado=t2.tgmug_cod_ubc_geo_k)
   	;*/
      
      
   
    CREATE TABLE schm_workspace.ctbl_base3 AS
    SELECT
        t1.pemid_gls_nro_dct_ide_k,
        t1.pemid_dvr_nro_dct_ide,
        t1.pemdm_gls_cal_dml,
        t1.pemdm_nro_dml,
        t1.pemdm_cod_ubc_1_er,
        t1.pemdm_gls_rst_dml,
        t1.pemdm_cod_ubc_3_er,
        t1.max_of_pemdm_fch_ing_reg,
        t1.max_of_pemdm_fch_fin_acl,
        t1.pemid_nro_inn_ide_k,
        t1.tipo_direccion,
        t2.tgmug_nom_ubc_geo,
        t2.tgmug_cod_ubc_geo_k cod_comuna,
        t2.tgmug_nom_ubc_geo comuna,
        t2.cod_region,
        t2.region
    FROM schm_workspace.ctbl_base2 AS t1
    LEFT JOIN schm_data_analytics.ctbl_comunas AS t2
        ON (t1.pemdm_cod_ubc_3_er = t2.tgmug_cod_ubc_geo_k)
    ;
   
  
   
   



 /*   CREATE TABLE schm_workspace.ctbl_BASE5 AS
    SELECT
        t1.pemid_gls_nro_dct_ide_k,
        t1.pemid_dvr_nro_dct_ide,
        t1.pemdm_gls_cal_dml,
        t1.pemdm_nro_dml,
        t1.pemdm_cod_ubc_1_er,
        t1.pemdm_gls_rst_dml,
        t1.pemdm_cod_ubc_3_er,
        t1.max_of_pemdm_fch_ing_reg,
        t1.max_of_pemdm_fch_fin_acl,
        t1.pemid_nro_inn_ide_k,
        t1.tipo_direccion,
        t1.tgmug_nom_ubc_geo,
        t1.tgmug_nom_ubc_geo1,
    FROM schm_workspace.ctbl_base4 AS t1
    LEFT JOIN schm_workspace.ctbl_homologacion_final AS t2
        ON (t1.pemdm_cod_ubc_1_er = t2.codigo_homologado)
       ;
*/
   
   

    CREATE TABLE schm_workspace.ctbl_direcciones_itf AS
    SELECT
        t1.pemid_gls_nro_dct_ide_k as rut_cliente,
        t1.pemid_dvr_nro_dct_ide as dv,
        t1.pemdm_gls_cal_dml as calle,
        t1.pemdm_nro_dml as numero,
        t1.pemdm_gls_rst_dml  as resto_domicilio,
        t1.max_of_pemdm_fch_fin_acl as fecha_actualizacion,
        t1.pemdm_cod_ubc_3_er  as cod_comuna_itf,
        t1.comuna,
        t1.cod_region,
        t1.region
    FROM schm_workspace.ctbl_base3 AS t1
    WHERE t1.pemdm_gls_cal_dml NOT IN ('PRUEBA', 'ALTA EXPRESS','ALTA PLATAFORMA COMERCIAL')
   ;
  



    CREATE TABLE schm_workspace.ctbl_salida AS
    SELECT
        rut_cliente as rut,
        calle,
        numero,
        resto_domicilio as resto,
        cod_comuna_itf as cod_comuna,
        comuna,
        cod_region,
        fecha_actualizacion,
        region
    FROM schm_workspace.ctbl_direcciones_itf
    WHERE (concat(calle,numero)<>concat('HUERFANOS','1052'))
        AND (concat(calle,numero)<>concat('BANDERA','84'))
    ;
   


    CREATE TABLE schm_workspace.ctbl_salida1 AS
    SELECT 
    	rut,
    	CASE
	    	WHEN calle IN ('FDFDFDDF','BN','111111','AAAA','GHF','1111111','CV','HJFHFHJFJKVFN','155454','ASAS','KKKK','JJJ','FFFF','HHGHG','XXXXXXXXXXX','CC','FFF','NNN|','Sin direccion','XXX','SSS','XXXX','XX','AAA','222','1','1111','X','SSSS','XXXXX','NNNN','NNN','CCC','111','A','VVV','PJE','AAAAA','2','.','DDD','N','XXXXXXXX','XXXXXXXXX','VVVV','XXXXXXXXXX','XXXXXX','C','XXXXXXX','3','ABC','123','B','CCCCC','11','AAAAAA','OOO','4','HHHH','AAAAAAA','VVVVV','FDFDF','MM','SSSSSSS','FFFFF','BBBB','MMMMM','R','E','00','-----------33703','Sin direccion','XXX','SSS','XXXX','XX','AAA','222','1','1111','X','SSSS','XXXXX','NNNN','NNN','CCC','111','A','VVV','PJE','AAAAA','2','.','DDD','N','XXXXXXXX','XXXXXXXXX','VVVV','XXXXXXXXXX','XXXXXX','C','XXXXXXX','3','ABC','123','B','CCCCC','11','AAAAAA','OOO','4','HHHH','AAAAAAA','VVVVV','FDFDF','MM','SSSSSSS','FFFFF','BBBB','MMMMM','R','E','00','LLLLL','O','CLL','LAS','MM','YYYYY','FFFFF','MMMMMM','NO EXISTE','GGGG''*','*****','*******************',',',',,,,',',...',',KKKK',',KL',',KLKLLK',',KOP,','---','----','-----------------','-NNNN','.,?{{}{}?{}','..','...','...,0...','....','.....','..... S/N','......','.......','...........','....NKHKLKKKL','...0...','...}','..A','000','0000','0000.','00000','000000','0000000','00000000','000000000','0000000000','00000000000','000000000000','0000000000000','00000000000000','000000000000000','0000000000000000','00000000000000000000','00000000000000000000000000000000000','0000000OOOOO','00001','01','0001','00011','0002','11111','11111111','10','22','2222','5','55','555','7','AA','ASDGF','BBB','GGG','M','MMM','NN','OOOO','OOOOO','PE?OL','RRRRR','SS','XZXXX','XXXXXXXXXXXX','WWWWW','AAAAAAAA','AAAAAAAAA','AAAAAAAAAA','AAAAAAAAAAA','AAAAAAAAAAAA','AAAAAV','ASSSSSSS','ASSS','CALLLE','CALLLEJON','CALLLEJONES','CCCC','DDDD','DDDDD','DDDDDDD','DFDDD','EEE','EEEE','ELLLOLLI','FFFD','FFFFFFFF','FFFG','FGGG','FGGGH','FVFFF','GBBBBB','GGG','GGGGG','GGGGGGG','HHH','HHHHH','HHHHHHH','IIIIIII','IUUUUUU','JJJJ','JJJJJ','KKK','LLLL','LLLLKL','LLLLLLLLLLLLLLLLLLLL','MMM','MMMM','NNNJN','NNNNN','M','MMM','SSSSS','SS','IIIIIII','IJKJHKJKJ','FDSGTRYHTRS','AAAAAV:','XXXXXXXXXXXXXX')
	    	THEN ''
	    	ELSE calle
	    END AS calle,
    	numero,
    	resto,
    	cod_comuna,
    	comuna,
        cod_region,
        fecha_actualizacion,
        region
    FROM schm_workspace.ctbl_salida
    WHERE calle IS NOT NULL
        AND comuna IS NOT NULL
    ;
   
  
		
   


   CREATE TABLE schm_workspace.ctbl_direcciones_no_ppa AS 
	SELECT
        a.pemid_gls_nro_dct_ide_k,
        a.pemid_dvr_nro_dct_ide,
        b.pemdm_gls_cal_dml,
        b.pemdm_nro_dml,
        b.pemdm_cod_ubc_1_er,
        CASE 
	        WHEN b.pemdm_gls_rst_dml IN 
	        	('DIRECCION  PARA ALTA EXPRESS',
	        	'ALTA EXPRESS',
	        	'DIRECCION- PARA ALTA EXPRESS',
	        	'DIRECCION ALTA EXPRESS',
	        	'DIRECCION P',
	        	'DIRECCION P1',
	        	'DIRECCION  ALTA EXPRESS',
	        	'DIRECCION',
	        	'DIRECCION PARA ALTA EXPRESS',
	        	'DIRECCION DE ESDUCACION',
	        	'DIRECCION P1ARA ALTA EXPRESS',
	        	'DIRECCIÓN PARA ALTA EXPRESS',
	        	'DIRECCION PARA ALTA EXPRESS KILOMETRO 22',
	        	'DIRECCIÓN PARA ALTA EXPRESS',
	        	'DIRECCION PARA ALTA E',
	        	'DIRECCION PARA ALTA EXPRESS.',
	        	'DIRECCION PARA .ALTA EXPRESS',
	        	'DIRECCION PARTE ALTA EXPRESS',
	        	'DIRECCION PARA ALTA',
	        	'DIRECCION PARA ALTA EXPRESS..',
	        	'DIRECCION PARA') THEN ''
	        ELSE b.pemdm_gls_rst_dml
	    END AS pemdm_gls_rst_dml,
        b.pemdm_cod_ubc_3_er,
        b.pemdm_fch_ing_reg,
        b.pemdm_fch_fin_acl,
        b.pemid_nro_inn_ide_k,
        b.pemdm_cod_app_fin_acl,
        b.pemdm_nro_seq_dml_k,
        b.pemdm_cod_dml_ppa,
        CASE
            WHEN pemdm_cod_tip_dml = 1 THEN 'PART'
            ELSE 'LAB'
        END AS tipo_dire
    FROM br_dm_prod_bigdata_reporitf_db.bopers_mae_ide a
    INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_dml b
        ON a.pemid_nro_inn_ide = b.pemid_nro_inn_ide_k
    WHERE b.pemdm_cod_neg_dml = 1  
    	AND b.pemdm_cod_tip_dml <> 1
    ;
  

    CREATE TABLE schm_workspace.ctbl_direcciones_no_ppa_1 AS
    SELECT
        pemid_gls_nro_dct_ide_k,
        pemid_dvr_nro_dct_ide,
        pemdm_gls_cal_dml,
        pemdm_nro_dml,
        pemdm_cod_ubc_1_er,
        pemdm_gls_rst_dml,
        pemdm_cod_ubc_3_er,
        max(pemdm_fch_ing_reg) as max_of_pemdm_fch_ing_reg,
        max(pemdm_fch_fin_acl) as max_of_pemdm_fch_fin_acl,
        max(pemdm_nro_seq_dml_k) AS max_of_pemdm_nro_seq_dml_k,
        pemid_nro_inn_ide_k,
        tipo_dire tipo_direccion
    FROM schm_workspace.ctbl_direcciones_no_ppa
    WHERE pemdm_cod_app_fin_acl <> 70
    GROUP BY pemid_gls_nro_dct_ide_k, pemid_dvr_nro_dct_ide, pemdm_gls_cal_dml, pemdm_nro_dml,
    pemdm_cod_ubc_1_er, pemdm_gls_rst_dml, pemdm_cod_ubc_3_er, pemid_nro_inn_ide_k, tipo_direccion
   ;
  
  
  	  CREATE TABLE schm_workspace.ctbl_seq_max_no_ppa AS 
	  SELECT 
	  	MAX(max_of_pemdm_nro_seq_dml_k) AS max_of_max_of_pemdm_nro_seq_dml_k,
	  	pemid_gls_nro_dct_ide_k
	  FROM schm_workspace.ctbl_direcciones_no_ppa_1
	  GROUP BY pemid_gls_nro_dct_ide_k
	  ;
	 
	 
	 
     CREATE TABLE schm_workspace.ctbl_direcciones_no_ppa_2 AS
     SELECT
        t2.pemid_gls_nro_dct_ide_k,
        t2.pemid_dvr_nro_dct_ide,
        t2.pemdm_gls_cal_dml,
        t2.pemdm_nro_dml,
        t2.pemdm_cod_ubc_1_er,
        t2.pemdm_gls_rst_dml,
        t2.pemdm_cod_ubc_3_er,
        t2.max_of_pemdm_fch_ing_reg,
        t2.max_of_pemdm_fch_fin_acl,
        t2.max_of_pemdm_nro_seq_dml_k,
        t2.pemid_nro_inn_ide_k,
        t2.tipo_direccion
    FROM schm_workspace.ctbl_direcciones_no_ppa_1 AS t2
       ,schm_workspace.ctbl_seq_max_no_ppa t3
    WHERE t2.max_of_pemdm_nro_seq_dml_k = t3.max_of_max_of_pemdm_nro_seq_dml_k
        AND t2.pemid_gls_nro_dct_ide_k =  t3.pemid_gls_nro_dct_ide_k
       ;
	 
	 
	 
      CREATE TABLE schm_workspace.ctbl_direcciones_no_ppa_3 AS
      SELECT
        t1.pemid_gls_nro_dct_ide_k,
        t1.pemid_dvr_nro_dct_ide,
        t1.pemdm_gls_cal_dml,
        t1.pemdm_nro_dml,
        t1.pemdm_cod_ubc_1_er,
        t1.pemdm_gls_rst_dml,
        t1.pemdm_cod_ubc_3_er,
        t1.max_of_pemdm_fch_ing_reg,
        t1.max_of_pemdm_fch_fin_acl,
        t1.pemid_nro_inn_ide_k,
        t1.tipo_direccion,
        t2.tgmug_nom_ubc_geo,
        t2.tgmug_cod_ubc_geo_k cod_comuna,
        t2.tgmug_nom_ubc_geo comuna,
        t2.cod_region,
        t2.region
    FROM schm_workspace.ctbl_direcciones_no_ppa_2 AS t1
    LEFT JOIN schm_data_analytics.ctbl_comunas AS t2
        ON (t1.pemdm_cod_ubc_3_er = t2.tgmug_cod_ubc_geo_k)
    ;
   
   
   
    CREATE TABLE schm_workspace.ctbl_direcciones_itf_no_ppa AS
    SELECT
        t1.pemid_gls_nro_dct_ide_k as rut_cliente,
        t1.pemid_dvr_nro_dct_ide as dv,
        t1.pemdm_gls_cal_dml as calle,
        t1.pemdm_nro_dml as numero,
        t1.pemdm_gls_rst_dml  as resto_domicilio,
        t1.max_of_pemdm_fch_fin_acl as fecha_actualizacion,
        t1.pemdm_cod_ubc_3_er  as cod_comuna_itf,
        t1.comuna,
        t1.cod_region,
        t1.region
    FROM schm_workspace.ctbl_direcciones_no_ppa_3 AS t1
    WHERE t1.pemdm_gls_cal_dml NOT IN ('PRUEBA', 'ALTA EXPRESS','ALTA PLATAFORMA COMERCIAL')
   ;
  
  

	
    CREATE TABLE schm_workspace.ctbl_salida_no_ppa AS
    SELECT
        rut_cliente as rut,
        calle,
        numero,
        resto_domicilio as resto,
        cod_comuna_itf as cod_comuna,
        comuna,
        cod_region,
        fecha_actualizacion,
        region
    FROM schm_workspace.ctbl_direcciones_itf_no_ppa
    WHERE (concat(calle,numero)<>concat('HUERFANOS','1052'))
        AND (concat(calle,numero)<>concat('BANDERA','84'))
    ;
   
   
   CREATE TABLE schm_workspace.ctbl_salida1_no_ppa AS
    SELECT 
    	rut,
    	CASE
	    	WHEN calle IN ('FDFDFDDF','BN','111111','AAAA','GHF','1111111','CV','HJFHFHJFJKVFN','155454','ASAS','KKKK','JJJ','FFFF','HHGHG','XXXXXXXXXXX','CC','FFF','NNN|','Sin direccion','XXX','SSS','XXXX','XX','AAA','222','1','1111','X','SSSS','XXXXX','NNNN','NNN','CCC','111','A','VVV','PJE','AAAAA','2','.','DDD','N','XXXXXXXX','XXXXXXXXX','VVVV','XXXXXXXXXX','XXXXXX','C','XXXXXXX','3','ABC','123','B','CCCCC','11','AAAAAA','OOO','4','HHHH','AAAAAAA','VVVVV','FDFDF','MM','SSSSSSS','FFFFF','BBBB','MMMMM','R','E','00','-----------33703','Sin direccion','XXX','SSS','XXXX','XX','AAA','222','1','1111','X','SSSS','XXXXX','NNNN','NNN','CCC','111','A','VVV','PJE','AAAAA','2','.','DDD','N','XXXXXXXX','XXXXXXXXX','VVVV','XXXXXXXXXX','XXXXXX','C','XXXXXXX','3','ABC','123','B','CCCCC','11','AAAAAA','OOO','4','HHHH','AAAAAAA','VVVVV','FDFDF','MM','SSSSSSS','FFFFF','BBBB','MMMMM','R','E','00','LLLLL','O','CLL','LAS','MM','YYYYY','FFFFF','MMMMMM','NO EXISTE','GGGG''*','*****','*******************',',',',,,,',',...',',KKKK',',KL',',KLKLLK',',KOP,','---','----','-----------------','-NNNN','.,?{{}{}?{}','..','...','...,0...','....','.....','..... S/N','......','.......','...........','....NKHKLKKKL','...0...','...}','..A','000','0000','0000.','00000','000000','0000000','00000000','000000000','0000000000','00000000000','000000000000','0000000000000','00000000000000','000000000000000','0000000000000000','00000000000000000000','00000000000000000000000000000000000','0000000OOOOO','00001','01','0001','00011','0002','11111','11111111','10','22','2222','5','55','555','7','AA','ASDGF','BBB','GGG','M','MMM','NN','OOOO','OOOOO','PE?OL','RRRRR','SS','XZXXX','XXXXXXXXXXXX','WWWWW','AAAAAAAA','AAAAAAAAA','AAAAAAAAAA','AAAAAAAAAAA','AAAAAAAAAAAA','AAAAAV','ASSSSSSS','ASSS','CALLLE','CALLLEJON','CALLLEJONES','CCCC','DDDD','DDDDD','DDDDDDD','DFDDD','EEE','EEEE','ELLLOLLI','FFFD','FFFFFFFF','FFFG','FGGG','FGGGH','FVFFF','GBBBBB','GGG','GGGGG','GGGGGGG','HHH','HHHHH','HHHHHHH','IIIIIII','IUUUUUU','JJJJ','JJJJJ','KKK','LLLL','LLLLKL','LLLLLLLLLLLLLLLLLLLL','MMM','MMMM','NNNJN','NNNNN','M','MMM','SSSSS','SS','IIIIIII','IJKJHKJKJ','FDSGTRYHTRS','AAAAAV:','XXXXXXXXXXXXXX')
	    	THEN ''
	    	ELSE calle
	    END AS calle,
    	numero,
    	resto,
    	cod_comuna,
    	comuna,
        cod_region,
        fecha_actualizacion,
        region
    FROM schm_workspace.ctbl_salida_no_ppa
    WHERE calle IS NOT NULL
        AND comuna IS NOT NULL
    ;

   
   
 	CREATE TABLE schm_workspace.ctbl_rut_no_dir AS 
  	SELECT 
  		rut
	FROM schm_workspace.ctbl_salida1
	WHERE calle = '';



	DELETE FROM schm_workspace.ctbl_salida1 
	WHERE rut IN (SELECT rut FROM schm_workspace.ctbl_rut_no_dir);


	CREATE TABLE schm_workspace.ctbl_salida_dir_lab AS 
	SELECT 
		a.rut,
		b.calle,
    	b.numero,
    	b.resto,
    	b.cod_comuna,
    	b.comuna,
        b.cod_region,
        b.fecha_actualizacion,
        b.region
	FROM schm_workspace.ctbl_rut_no_dir a
	LEFT JOIN schm_workspace.ctbl_salida1_no_ppa b
	ON a.rut = b.rut
	WHERE b.calle <> '';

	
	CREATE TABLE schm_workspace.ctbl_direcciones_all AS 
	SELECT *
	FROM schm_workspace.ctbl_salida1 
	WHERE calle <> ''
	UNION 
	SELECT *
	FROM schm_workspace.ctbl_salida_dir_lab
	WHERE calle <> '';






/*    CREATE TABLE schm_workspace.ctbl_duplicados AS
    SELECT
        count(rut) as count_of_rut,
        count(distinct(rut)) as count_distinct_of_rut
    FROM schm_workspace.ctbl_salida
   ;


    CREATE TABLE schm_workspace.ctbl_duplicados_2 AS
    SELECT
        rut,
        count(rut) as count_of_rut
    FROM schm_workspace.ctbl_salida
    GROUP BY rut
    HAVING count(rut) > 1
   ;
  
 

    CREATE TABLE schm_workspace.ctbl_eliminar_2 AS
    SELECT
        DISTINCT rut
    FROM schm_workspace.ctbl_salida
    GROUP BY rut
    HAVING (count(rut)) > 1
   ;


    DELETE FROM schm_workspace.ctbl_salida
    WHERE rut in (select rut from schm_workspace.ctbl_eliminar_2);
*/


    CREATE TABLE schm_data_analytics.ctbl_direcciones AS
    SELECT *
    FROM schm_workspace.ctbl_direcciones_all
    WHERE comuna is not NULL
    AND calle NOT IN 
    ('Sin direccion', '?', 'XZCXZC', 'S', '0'
    , 'L', 'XXXX XXX', 'HH', 'F', '-', 'ZXFQF' )
   ;

 

    UPDATE schm_data_analytics.ctbl_direcciones
        SET calle = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(calle,'|',''),'"',''),',',''),'	',''),';',''),'.','')
    WHERE calle LIKE ('%|%')
        OR calle LIKE ('%"%')
        OR calle LIKE ('%,%')
        OR calle LIKE ('%	%')
        OR calle LIKE ('%;%')
        OR calle LIKE ('%.%');
       
       

    UPDATE schm_data_analytics.ctbl_direcciones
        SET numero = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(numero,'|',''),'"',''),',','.'),'	',''),';','')
    WHERE numero LIKE ('%|%') 
        OR numero LIKE ('%"%') 
        OR numero LIKE ('%,%') 
        OR numero LIKE ('%	%') 
        OR numero LIKE ('%;%');
       
       

	DROP TABLE IF EXISTS schm_workspace.ctbl_regiones;
	DROP TABLE IF EXISTS schm_workspace.ctbl_comunas_0;
	DROP TABLE IF EXISTS schm_workspace.ctbl_base_0;
	DROP TABLE IF EXISTS schm_workspace.ctbl_base_1;
	DROP TABLE IF EXISTS schm_workspace.ctbl_seq_max;
	DROP TABLE IF EXISTS schm_workspace.ctbl_base2;
	DROP TABLE IF EXISTS schm_workspace.ctbl_base3;
	DROP TABLE IF EXISTS schm_workspace.ctbl_direcciones_itf;
	DROP TABLE IF EXISTS schm_workspace.ctbl_salida;
	DROP TABLE IF EXISTS schm_workspace.ctbl_salida1;
	DROP TABLE IF EXISTS schm_workspace.ctbl_direcciones_no_ppa;
	DROP TABLE IF EXISTS schm_workspace.ctbl_direcciones_no_ppa_1;
	DROP TABLE IF EXISTS schm_workspace.ctbl_seq_max_no_ppa; 
	DROP TABLE IF EXISTS schm_workspace.ctbl_direcciones_no_ppa_2;
	DROP TABLE IF EXISTS schm_workspace.ctbl_direcciones_no_ppa_3;
	DROP TABLE IF EXISTS schm_workspace.ctbl_direcciones_itf_no_ppa;
	DROP TABLE IF EXISTS schm_workspace.ctbl_salida_no_ppa;
	DROP TABLE IF EXISTS schm_workspace.ctbl_salida1_no_ppa;
	DROP TABLE IF EXISTS schm_workspace.ctbl_rut_no_dir;
	DROP TABLE IF EXISTS schm_workspace.ctbl_salida_dir_lab;
	DROP TABLE IF EXISTS schm_workspace.ctbl_direcciones_all;


/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-01-30  -- v05  --  Fernando Soto   --  Se agregan direcciones no principales para los casos en los que no hay una principal.
	2023-01-12  -- v04  -- 	Fernando Soto	--	Se crea regiÃ³n de Ã‘uble (a la espera de la actualización de bopers), se deja vacío campo resto con valor 'DIRECCION PARA ALTA EXPRESS'
												del campo 'resto'.	
	2023-07-13	-- v03	--	David VÃ¡squez	--	Se quitan caracteres erróneos a tabla final del campo numero.
	2023-07-12	-- v02	--	David VÃ¡squez	--	Agrego sentencia update a campo calle, quitando posibles caracteres de tabla de salida, tales como
	                                            "|",'"',',','	',';','.'. (pipe, comilla, coma, tab, punto y coma, punto).
	2023-00-00	-- v01	--	Sergio Jara     --	Versión original.

	=== Información adicional:
	Proceso que busca en bopers y genera una tabla final con las direcciones de los clientes, disponible para ser utilizada.
	===========================================================================================================
*/

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_email_autom_refactor()
	LANGUAGE plpgsql
AS $$
	


	 BEGIN

    DROP TABLE IF EXISTS schm_workspace.r_correos_tef;
    DROP TABLE IF EXISTS schm_data_analytics.ctbl_r_correos_tef_max;
    DROP TABLE IF EXISTS schm_workspace.separacion_correo_tef_max;
    DROP TABLE IF EXISTS schm_data_analytics.ctbl_base_email_tefs;
    DROP TABLE IF EXISTS schm_workspace.base_email_fisa_canon;
    DROP TABLE IF EXISTS schm_workspace.base_email_fisa_canon_limpia;
    DROP TABLE IF EXISTS schm_workspace.base_email_fisa_canon_2;
    DROP TABLE IF EXISTS schm_workspace.base_email_fisa_canon_2max;
    DROP TABLE IF EXISTS schm_workspace.base_email_fisa;
    DROP TABLE IF EXISTS schm_data_analytics.ctbl_base_email_fisa;
    DROP TABLE IF EXISTS schm_workspace.r_correos_fisa_max;
    DROP TABLE IF EXISTS schm_workspace.base_email_canon_2;
    DROP TABLE IF EXISTS schm_workspace.base_email_canon_2max;
    DROP TABLE IF EXISTS schm_data_analytics.ctbl_base_email_canon;
    DROP TABLE IF EXISTS schm_data_analytics.ctbl_r_bopers_totales2;
    DROP TABLE IF EXISTS schm_workspace.r_bopers_totales_email;
    DROP TABLE IF EXISTS schm_data_analytics.ctbl_r_bopers_totales_email_2;
    DROP TABLE IF EXISTS schm_workspace.r_depaso_cnavarro;
    DROP TABLE IF EXISTS schm_workspace.r_emails_cnavarro_dgc;
    DROP TABLE IF EXISTS schm_workspace.tmp_depaso_app_his_fmax_creacion;
    DROP TABLE IF EXISTS schm_workspace.tmp_depaso_app_his_fmax_un_reg;
    DROP TABLE IF EXISTS schm_workspace.tmp_depaso_datos_app_dia_2;
    DROP TABLE IF EXISTS schm_workspace.tmp_datos_app_fmax_creacion;
    DROP TABLE IF EXISTS schm_workspace.tmp_datos_app_fmax_ult_contacto;
    DROP TABLE IF EXISTS schm_workspace.tmp_datos_app_fecha_reciente;
    DROP TABLE IF EXISTS schm_workspace.tmp_datos_app_union_dia;
    DROP TABLE IF EXISTS schm_workspace.tmp_base_email_app_union3;
    DROP TABLE IF EXISTS schm_workspace.tmp_base_email_app_union4;
    DROP TABLE IF EXISTS schm_workspace.tmp_base_email_app_union5;
    DROP TABLE IF EXISTS schm_workspace.tmp_base_email_app_union6;
    DROP TABLE IF EXISTS schm_workspace.base_email_app_final;
    DROP TABLE IF EXISTS schm_data_analytics.ctbl_base_email_app_final_2;
    DROP TABLE IF EXISTS schm_data_analytics.ctbl_r_email_unidos;
    DROP TABLE IF EXISTS schm_data_analytics.ctbl_r_base_trabajo_email;
    DROP TABLE IF EXISTS schm_data_analytics.ctbl_r_base_trabajo_origen;
    DROP TABLE IF EXISTS schm_workspace.sp_open;
    DROP TABLE IF EXISTS schm_workspace.sp_open_aper;
    DROP TABLE IF EXISTS schm_workspace.sp_sent;
    DROP TABLE IF EXISTS schm_workspace.sp_sent_enviado;
    DROP TABLE IF EXISTS schm_workspace.sp_suppressed_a;
    DROP TABLE IF EXISTS schm_workspace.sp_suppressed;
    DROP TABLE IF EXISTS schm_workspace.sp_suppressed_max;
    DROP TABLE IF EXISTS schm_workspace.sp_suppressed_unico;
    DROP TABLE IF EXISTS schm_workspace.sp_suppressed_union_his_new;
    DROP TABLE IF EXISTS schm_workspace.sp_suppressed_union_max;
    DROP TABLE IF EXISTS schm_workspace.sp_suppressed_all;
    DROP TABLE IF EXISTS schm_workspace.sp_rebote_duro;
    DROP TABLE IF EXISTS schm_workspace.sp_rebote_duro;
    DROP TABLE IF EXISTS schm_workspace.nota_rank_ini_1;
    DROP TABLE IF EXISTS schm_workspace.nota_rank_ini_2;
    DROP TABLE IF EXISTS schm_workspace.nota_rank_ini_3;
    DROP TABLE IF EXISTS schm_data_analytics.ctbl_nota_rank_new;
    DROP TABLE IF EXISTS schm_workspace.calculo_nota_vu_se;
    DROP TABLE IF EXISTS schm_workspace.maximo_nota_vu_se;
    DROP TABLE IF EXISTS schm_workspace.elige_maximo_nota_se;
    DROP TABLE IF EXISTS schm_workspace.mejores_email_nota_ap_se;
    DROP TABLE IF EXISTS schm_workspace.base_trabajo_email_se;
    DROP TABLE IF EXISTS schm_workspace.base_trabajo_email_se_2;
    DROP TABLE IF EXISTS schm_data_analytics.ctbl_base_trabajo_email_se;
    DROP TABLE IF EXISTS schm_workspace.base_trabajo_email_duplicados;
    DROP TABLE IF EXISTS schm_workspace.lnegro_email;
    DROP TABLE IF EXISTS schm_data_analytics.ctbl_base_trabajo_email_informativo;
    DROP TABLE IF EXISTS schm_workspace.base_trabajo_email_ln;
    DROP TABLE IF EXISTS schm_workspace.base_trabajo_email;
    DROP TABLE IF EXISTS schm_workspace.separacion_correo;
    DROP TABLE IF EXISTS schm_workspace.separacion_correo_2;
    DROP TABLE IF EXISTS schm_data_analytics.ctbl_base_trabajo_email;

    CREATE TABLE schm_workspace.r_correos_tef AS
    SELECT
        mtifo_run_cli_ore AS rut,
        upper(mtifo_nom_mai_ore) AS email,
        mtifo_fch_ing_trs AS fecha_act
    FROM
        br_dm_prod_bigdata_fisa_db.botef_mov_trn_ifo
    WHERE
        mtifo_flg_est_trs = 2
        AND mtifo_nom_mai_ore IS NOT NULL
    ;

    CREATE TABLE schm_workspace.separacion_correo_tef_max AS
    SELECT
        rut,
        email,
        fecha_act,
        substring(email, 1, POSITION('@' IN email)-1) AS inicio_correo,
        substring(email, POSITION('@' IN email)+ 1, length(email)) AS dominio
    FROM
        schm_workspace.r_correos_tef
    ;

    CREATE TABLE schm_data_analytics.ctbl_r_correos_tef_max AS
    SELECT DISTINCT rut, max(fecha_act) AS fecha_act
    FROM schm_workspace.r_correos_tef
    GROUP BY rut
    ;

    CREATE TABLE schm_data_analytics.ctbl_base_email_tefs AS
        SELECT
        DISTINCT t1.rut,
                t1.email,
                t2.fecha_act,
                0 AS estado,
                'EMAIL_TEFS' AS origen
    FROM
        schm_workspace.separacion_correo_tef_max t1
    INNER JOIN schm_data_analytics.ctbl_r_correos_tef_max t2
                ON
        (t1.rut = t2.rut AND t1.fecha_act = t2.fecha_act)
    WHERE
        t2.fecha_act IS NOT NULL
        AND t2.rut < 99999999
        AND t2.rut > 10000
        AND t1.dominio NOT IN (
        SELECT
            dominio
        FROM
            schm_clientes.dominio_incorrectos_unif)
        OR t1.inicio_correo NOT IN (
        SELECT
            inicio_correo
        FROM
            schm_clientes.inicio_correo_incorrectos_unif)
    ;

    CREATE TABLE schm_workspace.base_email_fisa_canon AS
    SELECT
        rut,
        upper(email) AS email,
        fecha_actualizacion,
        sequencia,
        origen
    FROM
        (
        SELECT
            DISTINCT
            c.cli_identifica AS rut,
            COALESCE(a.dir_direccion,a.dir_direccion2,a.dir_direccion3) AS email,
            a.dir_fecver AS fecha_actualizacion,
            7 AS sequencia,
            'FISA' AS origen
        FROM
            br_dm_prod_bigdata_fisa_db.tcli_direccion a,
                       br_dm_prod_bigdata_fisa_db.tcli_persona c
        WHERE
            a.dir_codcli = c.cli_codigo
            AND dir_tipodir IN(6, 4)
                AND a.dir_direccion IS NOT NULL
                AND cli_identifica >1000000
        UNION
            SELECT
                rut,
                direccion AS email,
                fecha_carga AS fecha_actualizacion,
                8 AS sequencia,
                'CANON BCO' AS origen
            FROM
                br_dm_prod_bigdata_fisa_db.br_dm_direccion_cliente
            WHERE
                tipodir IN (4, 6)
                    AND direccion IS NOT NULL
                )a
        --WHERE email IS NOT null
    ;

    CREATE TABLE schm_workspace.base_email_fisa_canon_limpia AS
    SELECT
        *
    FROM
        schm_workspace.base_email_fisa_canon
    WHERE email IS NOT NULL
        AND length(email) >8 AND email LIKE ('%@%');

    --SELECT count(1) FROM schm_workspace.base_email_fisa_canon_limpia; 1817769

    CREATE TABLE schm_workspace.base_email_fisa_canon_2 AS
        SELECT
        *
    FROM
        schm_workspace.base_email_fisa_canon_limpia
    WHERE
    substring(email, POSITION('@' IN email)+ 1, length(email)) NOT IN (
        SELECT
            dominio
        FROM
            schm_clientes.dominio_incorrectos_unif)
        AND substring(email, 1, POSITION('@' IN email)-1) NOT IN (
        SELECT
            inicio_correo
        FROM
            schm_clientes.inicio_correo_incorrectos_unif)
    ;

    CREATE TABLE schm_workspace.base_email_fisa AS
        SELECT *
    FROM
        schm_workspace.base_email_fisa_canon_2
    WHERE sequencia =7 AND email LIKE ('%@%')
    ;

    CREATE TABLE schm_workspace.r_correos_fisa_max AS
        SELECT DISTINCT rut,
        email,
        max(fecha_actualizacion) AS fecha_actualizacion
        FROM schm_workspace.base_email_fisa
    GROUP BY rut, email;

    CREATE TABLE schm_data_analytics.ctbl_base_email_fisa AS
    SELECT DISTINCT a.rut,
    a.email,
    b.fecha_actualizacion,
    b.sequencia,
    2 AS estado,
    b.origen
    FROM schm_workspace.r_correos_fisa_max a
    INNER JOIN schm_workspace.base_email_fisa b
    ON (a.rut=b.rut AND a.fecha_actualizacion=b.fecha_actualizacion AND a.email=b.email)
    WHERE b.fecha_actualizacion IS NOT NULL;

    CREATE TABLE schm_workspace.base_email_canon_2 AS
        SELECT
        rut,
        email,
        fecha_actualizacion AS fecha_act,
        sequencia,
        origen
    FROM
        schm_workspace.base_email_fisa_canon_limpia t8
    WHERE
        sequencia = 8
    ;

    CREATE TABLE schm_workspace.base_email_canon_2max AS
       SELECT
        DISTINCT rut,
        email,
        max(fecha_act) AS fecha_act
    FROM
        schm_workspace.base_email_canon_2
    GROUP BY
        rut,
        email;

    CREATE TABLE schm_data_analytics.ctbl_base_email_canon AS
        SELECT
        DISTINCT t1.rut,
                t1.email,
                t2.fecha_act,
                t2.sequencia,
        t2.origen
    FROM
        schm_workspace.base_email_canon_2max t1
    INNER JOIN schm_workspace.base_email_canon_2 t2
                ON
        (t1.rut = t2.rut
            AND t1.fecha_act = t2.fecha_act
            AND t1.email = t2.email)
    WHERE
        t2.fecha_act IS NOT NULL
        AND t2.rut < 99999999
        AND t2.rut > 10000
    ;

    CREATE TABLE schm_data_analytics.ctbl_r_bopers_totales2 AS
    SELECT
        DISTINCT ide.pemid_gls_nro_dct_ide_k AS rut,
        ide.pemid_nro_inn_ide AS idinterno,
        dml.pemdm_nro_seq_dml_k AS seq_id,
        t2.pemma_gls_dml_mai AS email,
        --substring(t2.pemma_gls_dml_mai, 1, position('@' in email)-1) as inicio_correo,
        --substring(t2.pemma_gls_dml_mai, position('@' in email)+ 1, length(email)) as dominio,
        t2.pemma_fch_fin_acl AS fecha_act,
        t2.pemma_cod_est_lcl AS estado_act_ver,
        (t2.pemma_nro_seq_mai_k) AS sequencia,
        CASE
            WHEN t2.pemma_gls_usr_fin_acl = 'HB-APP' THEN 'BOPERS_HB'
            WHEN t2.pemma_gls_usr_fin_acl = 'APP' THEN 'BOPERS_APP'
            WHEN t2.pemma_gls_usr_fin_acl = 'PWA' THEN 'BOPERS_PWA'
            ELSE 'bopers_ccss'
        END AS origen
    FROM
        br_dm_prod_bigdata_reporitf_db.bopers_mae_ide ide,
        br_dm_prod_bigdata_reporitf_db.bopers_mae_dml dml,
        br_dm_prod_bigdata_reporitf_db.bopers_rel_ing_lcl lcl,
        -- no estÃ¡ ingestada
        br_dm_prod_bigdata_reporitf_db.bopers_mae_mai t2
    WHERE
        NOT t2.pemma_cod_est_lcl = 6
        --and t2.pemma_gls_dml_mai <> ' '
        AND lcl.peril_cod_tip_lcl_dos_k = 4
        AND lcl.peril_cod_tip_lcl_uno_k = 1
        AND lcl.peril_nro_seq_lcl_uno_k = dml.pemdm_nro_seq_dml_k
        AND lcl.pemid_nro_inn_ide_k = ide.pemid_nro_inn_ide
        AND dml.pemid_nro_inn_ide_k = ide.pemid_nro_inn_ide
        AND dml.pemdm_cod_dml_ppa = 1
        AND dml.pemdm_cod_tip_dml = 1
        AND dml.pemdm_cod_neg_dml = 1
        AND t2.pemid_nro_inn_ide_k = ide.pemid_nro_inn_ide
        AND t2.pemma_nro_seq_mai_k = lcl.peril_nro_seq_lcl_dos_k
    ORDER BY
        1 ;

    CREATE TABLE schm_workspace.r_bopers_totales_email AS
       SELECT
        *
    FROM
        schm_data_analytics.ctbl_r_bopers_totales2
    WHERE
        length(email) > 8
        AND email LIKE ('%@%')
    ;

    CREATE TABLE schm_data_analytics.ctbl_r_bopers_totales_email_2 AS
    SELECT
        *
    FROM
        schm_workspace.r_bopers_totales_email
    WHERE
        substring(email, POSITION('@' IN email)+ 1, length(email)) NOT IN (
        SELECT
            dominio
        FROM
            schm_clientes.dominio_incorrectos_unif)
        AND substring(email, 1, POSITION('@' IN email)-1) NOT IN (
        SELECT
            inicio_correo
        FROM
            schm_clientes.inicio_correo_incorrectos_unif)
    ;

    CREATE TABLE schm_workspace.r_depaso_cnavarro AS
        SELECT
        rut,
        upper(email) AS email,
            substring(email, 1, POSITION('@' IN email)-1) AS inicio_correo,
            substring(email, POSITION('@' IN email)+ 1, length(email)) AS dominio,
            fecha AS fecha_actualizacion,
            6 AS sequencia,
            'dgc' AS origen,
            inhibido
    FROM
        schm_data_analytics.respaldo_mail_cnavar
    ;

    CREATE TABLE schm_workspace.r_emails_cnavarro_dgc AS
    SELECT
        DISTINCT rut,
        email,
        fecha_actualizacion AS fecha_act,
        sequencia,
        origen
    FROM
        schm_workspace.r_depaso_cnavarro
    WHERE
        rut < 99999999
        AND rut > 10000
        AND dominio NOT IN (
        SELECT
            dominio
        FROM
            schm_clientes.dominio_incorrectos_unif)
        AND inicio_correo NOT IN (
        SELECT
            inicio_correo
        FROM
            schm_clientes.inicio_correo_incorrectos_unif)
    ;

    CREATE TABLE schm_workspace.tmp_depaso_app_his_fmax_creacion AS
        SELECT
        DISTINCT rut,
                email,
                max(f_ultimo_contact) AS fecha,
                4 AS sequencia,
                'app his' AS origen
    FROM
        schm_data_analytics.datos_app_hist
    GROUP BY
        rut,
        email
    ;

    CREATE TABLE schm_workspace.tmp_depaso_app_his_fmax_un_reg AS
        SELECT
        DISTINCT t1.rut,
                t1.email,
                t2.f_ultimo_contact AS fecha,
                t1.sequencia,
                t1.origen
    FROM
        schm_workspace.tmp_depaso_app_his_fmax_creacion t1
    LEFT JOIN schm_data_analytics.datos_app_hist t2
                ON
        (t1.rut = t2.rut
            AND t1.fecha = t2.f_ultimo_contact
            AND t1.email = t2.email)
    WHERE
        t2.f_ultimo_contact IS NOT NULL
    ;

    CREATE TABLE schm_workspace.tmp_depaso_datos_app_dia_2 AS
    SELECT
        DISTINCT
        rut,
        upper(email) AS email,
        date(update_at) AS f_ultimo_contact,
        date(created_at_ts) AS f_creacion
    FROM
        schm_data_analytics.ctbl_user_info
    WHERE
        rut IS NOT NULL
    ORDER BY
        rut
    ;

    CREATE TABLE schm_workspace.tmp_datos_app_fmax_creacion AS
        SELECT
        DISTINCT rut,
                email,
                max(f_creacion) AS fecha,
                3 AS sequencia,
                'app_user_info' AS origen
    FROM
        schm_workspace.tmp_depaso_datos_app_dia_2
    GROUP BY
        rut,
        email
    ;

    CREATE TABLE schm_workspace.tmp_datos_app_fmax_ult_contacto AS
    SELECT
        DISTINCT rut,
        email,
        max(f_ultimo_contact) AS fecha,
        3 AS sequencia,
            'app' AS origen
    FROM
        schm_workspace.tmp_depaso_datos_app_dia_2
    GROUP BY
        rut,
        email
    ;

    CREATE TABLE schm_workspace.tmp_datos_app_fecha_reciente AS
    SELECT
        DISTINCT t1.rut,
            t1.email,
            CASE
            WHEN (t2.fecha > t1.fecha
                AND t2.fecha IS NOT NULL) THEN t2.fecha
            ELSE t1.fecha
        END AS fecha,
            t1.sequencia,
            t1.origen
    FROM
        schm_workspace.tmp_datos_app_fmax_creacion t1
    LEFT JOIN schm_workspace.tmp_datos_app_fmax_ult_contacto t2
            ON
        (t1.rut = t2.rut)
    ;

    CREATE TABLE schm_workspace.tmp_datos_app_union_dia AS
    SELECT
        DISTINCT rut,
            email,
            fecha AS fecha_actualizacion,
            sequencia,
            origen
    FROM
        schm_workspace.tmp_datos_app_fecha_reciente
    ;

    CREATE TABLE schm_workspace.tmp_base_email_app_union3 AS
    SELECT
        DISTINCT t1.rut,
            t1.email,
            CASE
            WHEN (t2.f_ultimo_contact > t1.fecha_actualizacion
                AND t2.f_ultimo_contact IS NOT NULL) THEN t2.f_ultimo_contact
            ELSE t1.fecha_actualizacion
        END AS fecha_actualizacion,
            t1.sequencia,
            t1.origen
    FROM
        schm_workspace.tmp_datos_app_union_dia t1
    LEFT JOIN schm_workspace.tmp_depaso_datos_app_dia_2 t2
            ON
        (t1.rut = t2.rut)
    ;

    CREATE TABLE schm_workspace.tmp_base_email_app_union4 AS
    SELECT
        DISTINCT t2.rut,
            t2.email,
            CASE
            WHEN (t2.f_ultimo_contact > t1.fecha_actualizacion
                AND t2.f_ultimo_contact IS NOT NULL) THEN t2.f_ultimo_contact
            ELSE t1.fecha_actualizacion
        END AS fecha_actualizacion,
            t1.sequencia,
            t1.origen
    FROM
        schm_workspace.tmp_datos_app_union_dia t1
    RIGHT JOIN schm_workspace.tmp_depaso_datos_app_dia_2 t2
            ON
        (t1.rut = t2.rut)
    WHERE
        t1.rut IS NULL
    ;

    CREATE TABLE schm_workspace.tmp_base_email_app_union5 AS
    SELECT
        rut,
            email,
            substring(email, 1, POSITION('@' IN email)-1) AS inicio_correo,
            substring(email, POSITION('@' IN email)+ 1, length(email)) AS dominio,
            fecha_actualizacion,
            sequencia,
            origen
    FROM
        schm_workspace.tmp_base_email_app_union3
    WHERE
        email <> ' '
    ORDER BY
        fecha_actualizacion
    ;

    CREATE TABLE schm_workspace.tmp_base_email_app_union6 AS
    SELECT
        rut,
            email,
            substring(email, 1, POSITION('@' IN email)-1) AS inicio_correo,
            substring(email, POSITION('@' IN email)+ 1, length(email)) AS dominio,
            fecha_actualizacion,
            sequencia,
            origen
    FROM
        schm_workspace.tmp_base_email_app_union4
    ORDER BY
        fecha_actualizacion
    ;

    CREATE TABLE schm_workspace.base_email_app_final AS
        SELECT
        *
    FROM
        schm_workspace.tmp_base_email_app_union5
    UNION ALL
        SELECT
        *
    FROM
        schm_workspace.tmp_base_email_app_union6
    ;

    CREATE TABLE schm_data_analytics.ctbl_base_email_app_final_2 AS
        SELECT
        rut,
            email,
            fecha_actualizacion AS fecha_act,
            sequencia,
            origen
    FROM
        schm_workspace.base_email_app_final
    WHERE
        rut < 99999999
        AND rut > 10000
        AND rut IS NOT NULL
        AND dominio NOT IN (
        SELECT
            dominio
        FROM
            schm_clientes.dominio_incorrectos_unif)
        AND inicio_correo NOT IN (
        SELECT
            inicio_correo
        FROM
            schm_clientes.inicio_correo_incorrectos_unif)
    ;

    CREATE TABLE schm_data_analytics.ctbl_r_email_unidos AS
        SELECT
        t2.rut,
        t2.email,
        date(to_char(t2.fecha_act, '99999999')) AS fecha_act,
        t2.sequencia,
        t2.origen
    FROM
        schm_data_analytics.simulaciones_hb_email t2
    LEFT JOIN schm_data_analytics.ctbl_r_bopers_totales_email_2 b ON
        (t2.rut = b.rut)
    WHERE
        b.rut IS NULL
        OR b.estado_act_ver = 1
        AND (date(to_char(t2.fecha_act, '99999999'))) > (b.fecha_act)/* ya aplicados los filtros al email*/
    UNION
        SELECT
        b.rut,
        b.email,
        b.fecha_act,
        b.sequencia,
        b.origen
    FROM
        schm_data_analytics.ctbl_r_bopers_totales_email_2 b
    UNION
        SELECT
        DISTINCT t7.rut,
        t7.email,
        t7.fecha_actualizacion AS fecha_act,
        t7.sequencia,
        t7.origen
    FROM
        schm_data_analytics.ctbl_base_email_fisa t7
    LEFT JOIN schm_data_analytics.ctbl_r_bopers_totales_email_2 b ON
        (t7.rut = b.rut)
    WHERE
        b.rut IS NULL
        OR b.estado_act_ver = 1
        AND t7.fecha_actualizacion > b.fecha_act
    UNION
        SELECT
        DISTINCT t8.rut,
        t8.email,
        t8.fecha_act,
        t8.sequencia,
        t8.origen
    FROM
        schm_data_analytics.ctbl_base_email_canon t8
    LEFT JOIN schm_data_analytics.ctbl_r_bopers_totales_email_2 b ON
        (t8.rut = b.rut)
    WHERE
        b.rut IS NULL
        OR b.estado_act_ver = 1
        AND t8.fecha_act > b.fecha_act
    UNION
        SELECT
        DISTINCT t5.rut,
        t5.email,
        t5.fecha_act,
        5 AS sequencia,
        'tef' AS origen
    FROM
        schm_data_analytics.ctbl_base_email_tefs t5
    LEFT JOIN schm_data_analytics.ctbl_r_bopers_totales_email_2 b ON
        (t5.rut = b.rut)
    WHERE
        b.rut IS NULL
        OR b.estado_act_ver = 1
        AND t5.fecha_act > b.fecha_act
    UNION
        SELECT
        DISTINCT t6.rut,
        t6.email,
        t6.fecha_act,
        t6.sequencia,
        t6.origen
    FROM
        schm_workspace.r_emails_cnavarro_dgc t6
    LEFT JOIN schm_data_analytics.ctbl_r_bopers_totales_email_2 b ON
        (t6.rut = b.rut)
    WHERE
        b.rut IS NULL
        OR b.estado_act_ver = 1
        AND t6.fecha_act > b.fecha_act
    UNION
        SELECT
        DISTINCT t1.rut,
        t1.email,
        date(to_char(t1.fecha_act, '99999999')) AS fecha_act,
        t1.sequencia,
        t1.origen
    FROM
        schm_data_analytics.base_email_com t1
    LEFT JOIN schm_data_analytics.ctbl_r_bopers_totales_email_2 b ON
        (t1.rut = b.rut)
    WHERE
        b.rut IS NULL
        OR b.estado_act_ver = 1
        AND date(to_char(t1.fecha_act, '99999999')) > b.fecha_act
    UNION
    SELECT
        DISTINCT t12.rut,
                t12.email,
                date(to_char(t12.fecha_act, '99999999')) AS fecha_act,
                t12.sequencia,
                t12.origen
    FROM
        schm_data_analytics.base_corrimiento_final t12
    LEFT JOIN schm_data_analytics.ctbl_r_bopers_totales_email_2 b ON
        (t12.rut = b.rut)
    WHERE
        b.rut IS NULL
        OR b.estado_act_ver = 1
        AND date(to_char(t12.fecha_act, '99999999')) > b.fecha_act
    UNION
        SELECT
            DISTINCT t3.rut,
            t3.email,
            date(t3.fecha_act) AS fecha_act,
            t3.sequencia,
            t3.origen
    FROM
        schm_data_analytics.ctbl_base_email_app_final_2 t3
    LEFT JOIN schm_data_analytics.ctbl_r_bopers_totales_email_2 b ON
        (t3.rut = b.rut)
    WHERE
        b.rut IS NULL
        OR b.estado_act_ver = 1
        AND date(t3.fecha_act) > b.fecha_act
    UNION
        SELECT
        DISTINCT t9.rut,
        t9.email,
        date(to_char(t9.fecha_act, '99999999')) AS fecha_act,
        t9.sequencia,
        t9.origen
    FROM
        schm_data_analytics.simulaciones_hb_new_e t9
    LEFT JOIN schm_data_analytics.ctbl_r_bopers_totales_email_2 b ON
        (t9.rut = b.rut)
    WHERE
        b.rut IS NULL
        OR b.estado_act_ver = 1
        AND date(to_char(t9.fecha_act, '99999999')) > b.fecha_act
    UNION
        SELECT
        DISTINCT t11.rut,
        t11.email,
        date(t11.fecha_act) AS fecha_act,
        t11.sequencia,
        t11.origen
    FROM
        schm_data_analytics.chek_e t11
    LEFT JOIN schm_data_analytics.ctbl_r_bopers_totales_email_2 b ON
        (t11.rut = b.rut)
    WHERE
        b.rut IS NULL
        OR b.estado_act_ver = 1
        AND t11.fecha_act > b.fecha_act
    UNION
        SELECT DISTINCT t11.rut,
        t13.email,
        date(to_char(t13.fecha_act,'99999999')) AS fecha_act,
        t13.secuencia AS sequencia,
        t13.origen
    FROM
        schm_data_analytics.ctbl_qsc_hb_e_new t13
    LEFT JOIN schm_data_analytics.ctbl_r_bopers_totales_email_2 t11 ON
        (t13.rut = t11.rut)
    WHERE
        t11.rut IS NULL
        OR t11.estado_act_ver = 1
        AND date(to_char(t13.fecha_act,'99999999'))> t11.fecha_act
    UNION
		SELECT DISTINCT
			t15.rut,
			t15.email,
			t15.fecha_act,
			t15.secuencia AS sequencia,
			t15.origen
		FROM schm_contactabilidad.email_oc_uam t15
		LEFT JOIN schm_contactabilidad.tmp_r_bopers_totales_email_2 t11
		ON t15.rut = t11.rut
		WHERE t11.rut IS NULL
		OR t11.estado_act_ver = 1
		AND t15.fecha_act > t11.fecha_act
    ;

    CREATE TABLE schm_data_analytics.ctbl_r_base_trabajo_email AS
        SELECT *
    FROM
        schm_data_analytics.ctbl_r_email_unidos
    WHERE
        length(email) > 8
        AND
        substring(email, POSITION('@' IN email)+ 1, length(email)) NOT IN (
        SELECT
            dominio
        FROM
            schm_clientes.dominio_incorrectos_unif)
        AND substring(email, 1, POSITION('@' IN email)-1) NOT IN (
        SELECT
            inicio_correo
        FROM
            schm_clientes.inicio_correo_incorrectos_unif)
    ;

    CREATE TABLE schm_data_analytics.ctbl_r_base_trabajo_origen AS
           SELECT
        DISTINCT rut,
        email,
        fecha_act,
        sequencia,
                    CASE
            WHEN origen = 'BOPERS_HB' THEN 2
            WHEN origen = 'APP' THEN 2
            WHEN origen = 'BOPERS_PWA' THEN 2
            WHEN origen = 'BOPERS_CCSS' THEN 1
            ELSE 0
        END AS origen,
                    origen AS ori_canal
    FROM
        schm_data_analytics.ctbl_r_base_trabajo_email
    ;

    CREATE TABLE schm_workspace.sp_open AS
    SELECT
        customer_id AS rut,
        upper(email) AS email,
        event_timestamp,
        event_type
    FROM
        br_dm_prod_bigdata_campanas_db.output_email
    WHERE
    event_timestamp > schm_artifacts.f_first_day(DATEADD(month, -3, getdate())::DATE) AND
    event_type = 'Open'
    ;

    CREATE TABLE schm_workspace.sp_open_aper AS
    SELECT
        email,
        rut,
        (count(1)) AS aperturas
    FROM
        schm_workspace.sp_open
    WHERE
        rut IS NOT NULL
        AND rut > 10000
        AND rut < 99999999
    GROUP BY
        email, rut
    ORDER BY
        count(1) DESC
    ;

    CREATE TABLE schm_workspace.sp_sent AS
    SELECT
        customer_id AS rut,
        upper(email) AS email
    FROM
        br_dm_prod_bigdata_campanas_db.output_email
    WHERE
        event_timestamp > schm_artifacts.f_first_day(DATEADD(month, -3, getdate())::DATE)
        AND event_type = 'Sent'
    ;

    CREATE TABLE schm_workspace.sp_sent_enviado AS
    SELECT
        rut,
        email,
        (count(email)) AS envios
    FROM
        schm_workspace.sp_sent
    WHERE
        rut IS NOT NULL
        AND rut > 10000
        AND rut < 99999999
    GROUP BY
        email, rut
    ;

    CREATE TABLE schm_workspace.sp_suppressed_a AS
    SELECT
        customer_id AS rut,
        upper(email) AS email,
        substring(email, 1, POSITION('@' IN email)-1) AS inicio_correo,
        substring(email, POSITION('@' IN email)+ 1, length(email)) AS dominio,
        event_timestamp AS fecha,
        1 AS suppressed,
        event_type
    FROM
        br_dm_prod_bigdata_campanas_db.output_email
    WHERE
    suppression_reason IN ('Global Suppression List', 'Invalid Organization Email Domain', 'Invalid System Email Domain', 'Organization Suppression List', 'Mailing Level Suppression')
    ;

    CREATE TABLE schm_workspace.sp_suppressed AS
    SELECT
        rut,
        email,
        fecha,
        suppressed
    FROM
        schm_workspace.sp_suppressed_a
    WHERE
        dominio NOT IN (
        SELECT
            dominio
        FROM
            schm_clientes.dominio_incorrectos_unif)
        AND inicio_correo NOT IN (
        SELECT
            inicio_correo
        FROM
            schm_clientes.inicio_correo_incorrectos_unif)
    ;

    CREATE TABLE schm_workspace.sp_suppressed_max AS
    SELECT
        rut,
        email,
        max(fecha) AS fecha_num,
        suppressed
    FROM
        schm_workspace.sp_suppressed
    GROUP BY
        rut,
        email
        ,suppressed
    ;

    CREATE TABLE schm_workspace.sp_suppressed_unico AS
    SELECT
        DISTINCT t1.rut,
        t1.email,
        t1.fecha AS fecha_num,
        t1.suppressed
    FROM
        schm_workspace.sp_suppressed t1
    INNER JOIN schm_workspace.sp_suppressed_max t2 ON
        (t1.email = t2.email
            AND t1.fecha = t2.fecha_num)
    ;

    CREATE TABLE schm_workspace.sp_suppressed_union_his_new AS
        SELECT
        t1.rut,
        t1.email,
        date(to_char(t1.fecha_num, '99999999')) AS fecha_num,
        t1.suppressed
    FROM
        schm_data_analytics.suprimidos_final_his t1
    UNION ALL
        SELECT
        t2.rut,
        t2.email,
        t2.fecha_num,
        t2.suppressed
    FROM
        schm_workspace.sp_suppressed_unico t2
    ;

    CREATE TABLE schm_workspace.sp_suppressed_all AS
        SELECT
        t1.rut,
        t1.email,
        max(t1.fecha_num) AS fecha,
        t1.suppressed
    FROM
        schm_workspace.sp_suppressed_union_his_new t1
    GROUP BY
        t1.rut,
        t1.email,
        t1.suppressed
    ;

    CREATE TABLE schm_workspace.sp_rebote_duro AS
       SELECT
        DISTINCT
        customer_id AS rut,
        upper(email) AS email,
              CASE
            WHEN event_type = 'Hard Bounce' THEN 1
            ELSE 0
        END AS rebote_duro
    FROM
        br_dm_prod_bigdata_campanas_db.output_email
        WHERE
        event_timestamp > schm_artifacts.f_first_day(DATEADD(month, -3, getdate())::DATE)
    GROUP BY
        customer_id,
        email,
        event_type
    ORDER BY 1;

    CREATE TABLE schm_workspace.nota_rank_ini_1 AS
        SELECT
            DISTINCT t1.rut,
        t1.email,
            t1.fecha_act,
        CASE
            WHEN t2.rebote_duro = 1 THEN -15
            ELSE 0
        END AS mrc_hardbounce,
        CASE
            WHEN t2.rebote_duro = 0 THEN 0
            ELSE 0
        END AS mrc_softbounce,
            CASE
            WHEN t1.origen = 2 THEN 2 /*	si esta en bopers y es hb o app	*/
            WHEN t1.origen = 1 THEN 1 /*	si esta en bopers y es ccss	*/
            ELSE 0
        END AS mrc_bopers,
            CASE
            WHEN t6.estado_act_ver = 2 THEN 2 /* cuando llegue otro verificado debe quedar en este estado */
            WHEN t6.estado_act_ver = 1 THEN 1
            ELSE 0
        END AS mrc_bopers_acl_ver,
            CASE
            WHEN t6.estado_act_ver = 2 THEN 2
            WHEN t6.estado_act_ver = 1 THEN 1
            WHEN t6.estado_act_ver = 4 THEN 4 /* para que quede el 0 en la tabla */
            ELSE 0
        END AS estado_act_ver,
            t1.origen,
            t1.ori_canal
    FROM
        schm_data_analytics.ctbl_r_base_trabajo_origen t1
    LEFT JOIN schm_workspace.sp_rebote_duro t2
                        ON
        (t1.email = t2.email)
    LEFT JOIN schm_data_analytics.ctbl_r_bopers_totales_email_2 t6
                        ON
        (t1.rut = t6.rut
            AND t1.email = t6.email)
    ;

    CREATE TABLE schm_workspace.nota_rank_ini_2 AS
        SELECT
            t1.*,
        CASE
            WHEN t3.email IS NOT null THEN -20
            ELSE 0
        END AS mrc_suppressed
    FROM
        schm_workspace.nota_rank_ini_1 t1
    LEFT JOIN schm_workspace.sp_suppressed_all t3
                        ON
        (t1.email = t3.email
            AND t1.rut = t3.rut)
    ;

    CREATE TABLE schm_workspace.nota_rank_ini_3 AS
        SELECT
            t1.*,
            CASE
            WHEN t4.email IS NOT null THEN 1
            ELSE 0
        END AS mrc_email_aper_3m,
            CASE
            WHEN t5.email IS NOT null THEN 1
            ELSE 0
        END AS mrc_email_sent_3m,
            CASE
            WHEN t4.aperturas IS NULL THEN 0
            ELSE 0
            END AS aperturas,
            CASE
            WHEN t5.envios IS NULL THEN 0
            ELSE t5.envios
            END AS envios
    FROM
        schm_workspace.nota_rank_ini_2 t1
    LEFT JOIN schm_workspace.sp_open_aper t4
                        ON
        (t1.email = t4.email AND t1.rut = t4.rut)
    LEFT JOIN schm_workspace.sp_sent_enviado t5
                        ON
        (t1.email = t5.email)
    ;

    CREATE TABLE schm_data_analytics.ctbl_nota_rank_new AS
        SELECT
        DISTINCT *
    FROM
        schm_workspace.nota_rank_ini_3
    ;

    CREATE TABLE schm_workspace.calculo_nota_vu_se AS
       SELECT
        rut,
        email,
        (mrc_bopers_acl_ver + mrc_suppressed + mrc_hardbounce + mrc_bopers + mrc_email_aper_3m + mrc_email_sent_3m + aperturas) AS nota,
        aperturas,
        mrc_bopers,
        ori_canal
    FROM
        schm_data_analytics.ctbl_nota_rank_new
    ;

    CREATE TABLE schm_workspace.maximo_nota_vu_se AS
       SELECT
        rut,
        (max(nota)) AS nota
    FROM
        schm_workspace.calculo_nota_vu_se
    GROUP BY
        rut;

    CREATE TABLE schm_workspace.elige_maximo_nota_se AS
       SELECT
        t1.rut,
        t1.nota,
              t2.email,
              t2.aperturas,
              t2.mrc_bopers,
              t2.ori_canal
    FROM
        schm_workspace.maximo_nota_vu_se t1
    INNER JOIN schm_workspace.calculo_nota_vu_se t2 ON
        (t1.rut = t2.rut);

    CREATE TABLE schm_workspace.mejores_email_nota_ap_se AS
       SELECT DISTINCT t1.rut,
                t2.email,
                CASE WHEN t1.aperturas < 1 THEN 0
            ELSE t1.aperturas END AS aperturas,
                t2.nota,
                t2.mrc_bopers,
                t2.ori_canal
    FROM schm_workspace.elige_maximo_nota_se t1
    INNER JOIN schm_workspace.calculo_nota_vu_se t2
                ON	(t1.rut = t2.rut AND t1.nota=t2.nota)
    WHERE t1.rut < 99999999 AND t1.rut > 10000
    ;

    CREATE TABLE schm_workspace.base_trabajo_email_se AS
    SELECT *,
    substring(email, 1, POSITION('@' IN email)-1) AS inicio_correo,
            substring(email, POSITION('@' IN email)+ 1, length(email)) AS dominio
    FROM schm_workspace.mejores_email_nota_ap_se;

    CREATE TABLE schm_workspace.base_trabajo_email_se_2 AS
    SELECT *
    FROM schm_workspace.base_trabajo_email_se
    WHERE
        dominio NOT IN (
        SELECT
            dominio
        FROM
            schm_clientes.dominio_incorrectos_unif)
        AND inicio_correo NOT IN (
        SELECT
            inicio_correo
        FROM
            schm_clientes.inicio_correo_incorrectos_unif);

    CREATE TABLE schm_data_analytics.ctbl_base_trabajo_email_se AS
    select * from (
        SELECT
             rut
             , email
             , aperturas
             , nota
             , ori_canal
             , inicio_correo
             , dominio
        FROM (
              SELECT
                COUNT(*) OVER (PARTITION BY rut) as total_duplicates
                , ROW_NUMBER() OVER (PARTITION BY rut ORDER BY cs.nota DESC) as nveces
                ,RANK() OVER (PARTITION BY rut ORDER BY cs.nota DESC) as RANKING
                ,*
              FROM schm_workspace.base_trabajo_email_se_2 cs
            ) as sq
            WHERE sq.nveces = 1 and sq.RANKING = 1
    ) as s
    ;


    CREATE TABLE schm_workspace.lnegro_email AS
    SELECT
        DISTINCT  RUT
    FROM
        schm_data_analytics.ctbl_lnegro_email
    WHERE
        motivo IN ('EMAIL_NO_CORRESPONDE')
    ;

    CREATE TABLE schm_data_analytics.ctbl_base_trabajo_email_informativo AS
    SELECT
        t1.*
    FROM
        schm_data_analytics.ctbl_base_trabajo_email_se t1
    LEFT JOIN schm_data_analytics.ctbl_lnegro_car t2
    ON
        (t1.rut = t2.rut)
    LEFT JOIN schm_workspace.lnegro_email t3
    ON
        (t1.rut = t3.rut)
    WHERE
        t2.tipo_inhibicion NOT IN ('FALLECIDO', 'FALLECIDOS')
        AND
    t3.rut IS NULL
    ;

    CREATE TABLE schm_workspace.base_trabajo_email_ln AS
       SELECT
        t1.rut,
        t1.email,
        t1.aperturas,
        t1.nota,
        t1.ori_canal
    FROM
        schm_data_analytics.ctbl_base_trabajo_email_se t1
    LEFT JOIN schm_data_analytics.ctbl_lnegro_car t2
    ON
        (t1.rut = t2.rut)
    LEFT JOIN schm_data_analytics.ctbl_lnegro_email t3
    ON
        (t1.rut = t3.rut)
    WHERE
        t2.rut IS NULL AND t3.rut IS NULL
    ;

    CREATE TABLE schm_workspace.base_trabajo_email AS
        SELECT
        t1.rut,
        t1.email,
        --t1.mrc_bopers,
        t1.aperturas,
        t1.nota,
        t1.ori_canal
    FROM
        schm_workspace.base_trabajo_email_ln t1
    LEFT JOIN schm_data_analytics.webbula_exclusion t2
                    ON
        (t1.rut = t2.rut
            AND t1.email = t2.email)
    WHERE
        t2.rut IS NULL
        AND t2.email IS NULL
    ;

    CREATE TABLE schm_workspace.separacion_correo AS
    SELECT *,
        substring(email, 1, POSITION('@' IN email)-1) AS inicio_correo,
        substring(email, POSITION('@' IN email)+ 1, length(email)) AS dominio
    FROM
        schm_workspace.base_trabajo_email;

    CREATE TABLE schm_workspace.separacion_correo_2 AS
        SELECT
        *
    FROM
        schm_workspace.separacion_correo
    WHERE
            dominio NOT IN (
        SELECT
            dominio
        FROM
            schm_clientes.dominio_incorrectos_unif)
        AND inicio_correo NOT IN (
        SELECT
            inicio_correo
        FROM
            schm_clientes.inicio_correo_incorrectos_unif);

    CREATE TABLE schm_data_analytics.ctbl_base_trabajo_email AS
       SELECT *,
        current_date AS fecha
    FROM
        schm_workspace.separacion_correo_2
    ;

    UPDATE schm_data_analytics.ctbl_base_trabajo_email
        SET email = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(email,'|',''),'"',''),',',''),'	',''),';',''),'.',''),' ','')
    WHERE email LIKE ('%|%')
        OR email LIKE ('%"%')
        OR email LIKE ('%,%')
        OR email LIKE ('%	%')
        OR email LIKE ('%;%')
        OR email LIKE ('% %')
    ;

    DROP TABLE IF EXISTS schm_workspace.r_correos_tef;
    DROP TABLE IF EXISTS schm_workspace.separacion_correo_tef_max;
    DROP TABLE IF EXISTS schm_workspace.base_email_fisa_canon;
    DROP TABLE IF EXISTS schm_workspace.base_email_fisa_canon_limpia;
    DROP TABLE IF EXISTS schm_workspace.base_email_fisa_canon_2;
    DROP TABLE IF EXISTS schm_workspace.base_email_fisa_canon_2max;
    DROP TABLE IF EXISTS schm_workspace.base_email_fisa;
    DROP TABLE IF EXISTS schm_workspace.r_correos_fisa_max;
    DROP TABLE IF EXISTS schm_workspace.base_email_canon_2;
    DROP TABLE IF EXISTS schm_workspace.base_email_canon_2max;
    DROP TABLE IF EXISTS schm_workspace.r_bopers_totales_email;
    DROP TABLE IF EXISTS schm_workspace.r_depaso_cnavarro;
    DROP TABLE IF EXISTS schm_workspace.r_emails_cnavarro_dgc;
    DROP TABLE IF EXISTS schm_workspace.tmp_depaso_app_his_fmax_creacion;
    DROP TABLE IF EXISTS schm_workspace.tmp_depaso_app_his_fmax_un_reg;
    DROP TABLE IF EXISTS schm_workspace.tmp_depaso_datos_app_dia_2;
    DROP TABLE IF EXISTS schm_workspace.tmp_datos_app_fmax_creacion;
    DROP TABLE IF EXISTS schm_workspace.tmp_datos_app_fmax_ult_contacto;
    DROP TABLE IF EXISTS schm_workspace.tmp_datos_app_fecha_reciente;
    DROP TABLE IF EXISTS schm_workspace.tmp_datos_app_union_dia;
    DROP TABLE IF EXISTS schm_workspace.tmp_base_email_app_union3;
    DROP TABLE IF EXISTS schm_workspace.tmp_base_email_app_union4;
    DROP TABLE IF EXISTS schm_workspace.tmp_base_email_app_union5;
    DROP TABLE IF EXISTS schm_workspace.tmp_base_email_app_union6;
    DROP TABLE IF EXISTS schm_workspace.base_email_app_final;
    DROP TABLE IF EXISTS schm_workspace.sp_open;
    DROP TABLE IF EXISTS schm_workspace.sp_open_aper;
    DROP TABLE IF EXISTS schm_workspace.sp_sent;
    DROP TABLE IF EXISTS schm_workspace.sp_sent_enviado;
    DROP TABLE IF EXISTS schm_workspace.sp_suppressed_a;
    DROP TABLE IF EXISTS schm_workspace.sp_suppressed;
    DROP TABLE IF EXISTS schm_workspace.sp_suppressed_max;
    DROP TABLE IF EXISTS schm_workspace.sp_suppressed_unico;
    DROP TABLE IF EXISTS schm_workspace.sp_suppressed_union_his_new;
    DROP TABLE IF EXISTS schm_workspace.sp_suppressed_union_max;
    DROP TABLE IF EXISTS schm_workspace.sp_suppressed_all;
    DROP TABLE IF EXISTS schm_workspace.sp_rebote_duro;
    DROP TABLE IF EXISTS schm_workspace.sp_rebote_duro;
    DROP TABLE IF EXISTS schm_workspace.nota_rank_ini_1;
    DROP TABLE IF EXISTS schm_workspace.nota_rank_ini_2;
    DROP TABLE IF EXISTS schm_workspace.nota_rank_ini_3;
    DROP TABLE IF EXISTS schm_workspace.calculo_nota_vu_se;
    DROP TABLE IF EXISTS schm_workspace.maximo_nota_vu_se;
    DROP TABLE IF EXISTS schm_workspace.elige_maximo_nota_se;
    DROP TABLE IF EXISTS schm_workspace.mejores_email_nota_ap_se;
    DROP TABLE IF EXISTS schm_workspace.base_trabajo_email_se;
    DROP TABLE IF EXISTS schm_workspace.base_trabajo_email_duplicados;
    DROP TABLE IF EXISTS schm_workspace.lnegro_email;
    DROP TABLE IF EXISTS schm_workspace.base_trabajo_email_ln;
    DROP TABLE IF EXISTS schm_workspace.base_trabajo_email;
    DROP TABLE IF EXISTS schm_workspace.separacion_correo;
    DROP TABLE IF EXISTS schm_workspace.separacion_correo_2;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-09-14  -- v04  --  Sergio Jara     -- Se agrega prefijo ctbl en todas las tablas finales.
    2023-08-17  -- v03  --  Fernando Soto   -- Se agregan correos de ordenes de compra del ultimo año movil.
	2023-07-13	-- v02	--	David Vasquez	--	Se quitan caracteres errÃ³neos a tabla final del campo email.
	2023-00-00	-- v01	--	Sergio Jara     --	Version original.

	=== Informacion adicional:
	Proceso que busca en varios orÃ­genes de datos y genera una tabla final con los correos de los clientes, disponible para ser utilizada.
	===========================================================================================================
*/

END




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_fipers_mae_lib_neg()
	LANGUAGE plpgsql
AS $$
	
BEGIN

    DROP TABLE IF EXISTS schm_data_analytics.fipers_mae_lib_neg;

    CREATE TABLE schm_data_analytics.fipers_mae_lib_neg AS
       SELECT
    	pemln_fch_reg_k,
    	pemln_gls_nro_dct_ide_k,
    	pemln_nro_seq_k,
    	pemln_dvr_nro_dct_ide,
    	pemln_cod_tip_dct_ide,
    	pemln_nro_inn_ide,
    	pemln_cod_usr,
    	pemln_cod_are,
    	pemln_gls_nom,
    	pemln_gls_ape_pat,
    	pemln_gls_ape_mat,
    	pemln_cod_cau,
    	pemln_fch_alt,
    	pemln_fch_baj,
    	pemln_est_lne,
    	pemln_gls_obs,
    	pemln_cod_app_fin_acl,
    	pemln_cod_pro_fin_acl,
    	pemln_gls_usr_fin_acl,
    	pemln_fch_fin_acl,
    	pemln_fch_ing_reg
    FROM
    	br_dm_prod_bigdata_reporitf_db.fipers_mae_lib_neg;

END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_inhib_sernac()
	LANGUAGE plpgsql
AS $$
	
	
	
			
BEGIN 
	
	DROP TABLE IF EXISTS schm_workspace.bloqueos_fonos_eccsa;
	DROP TABLE IF EXISTS schm_workspace.bloqueos_fonos_eccsa_pre;
	DROP TABLE IF EXISTS schm_workspace.bloqueos_fonos_eccsa_pre1;
	DROP TABLE IF EXISTS schm_workspace.bloqueos_mails_eccsa;
	DROP TABLE IF EXISTS schm_workspace.bloqueos_mails_eccsa_pre;
	DROP TABLE IF EXISTS schm_workspace.bloqueos_mails_eccsa_pre1;
	DROP TABLE IF EXISTS schm_workspace.input_sernac;
	DROP TABLE IF EXISTS schm_workspace.input_sernac_2;
	DROP TABLE IF EXISTS schm_workspace.input_sernac_3;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_call;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_call_2;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_sms;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_sms_2;
	DROP TABLE IF EXISTS schm_workspace.salida_telefonos;
	DROP TABLE IF EXISTS schm_workspace.import_emails;
	DROP TABLE IF EXISTS schm_workspace.cruce_email;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_email;
	DROP TABLE IF EXISTS schm_workspace.salida_mails;

	create table schm_workspace.bloqueos_fonos_eccsa (
	  id_bloqueo BIGINT,
	  telefono BIGINT,
	  canales_bloqueados varchar(50),
	  correo varchar(50),
	  fecha_solicitud varchar(50),
	  dias_transcurridos int,
	  estado_descarga varchar(50),
	  resultado_bloqueo varchar(50),
	  fecha_asignacion varchar(50),
	  respuesta varchar(50)
	);

	copy schm_workspace.bloqueos_fonos_eccsa 
	from 's3://br-dm-prod-us-east-1-837538682169-pre-raw/bigdata/redshift_csv/ECCSA/bloqueos_telefonos.csv'
	delimiter ';'
	iam_role 'arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'
	IGNOREHEADER 1
	CSV;


	CREATE TABLE schm_workspace.bloqueos_fonos_eccsa_pre AS 
	SELECT 
		id_bloqueo,
		telefono,
		canales_bloqueados,
		correo,
		SUBSTRING(fecha_solicitud, 7, 4) || '-'|| SUBSTRING(fecha_solicitud, 4, 2) ||'-'|| SUBSTRING(fecha_solicitud, 1, 2) AS fecha_solicitud,
		dias_transcurridos,
		estado_descarga,
		resultado_bloqueo,
		fecha_asignacion,
		respuesta
	FROM schm_workspace.bloqueos_fonos_eccsa;


CREATE TABLE schm_workspace.bloqueos_fonos_eccsa_pre1 AS 
	SELECT 
		id_bloqueo,
		telefono,
		canales_bloqueados,
		correo,
		TO_DATE(fecha_solicitud, 'yyyy-mm-dd') AS fecha_solicitud,
		dias_transcurridos,
		estado_descarga,
		resultado_bloqueo,
		fecha_asignacion,
		respuesta
	FROM schm_workspace.bloqueos_fonos_eccsa_pre;

---SELECT * FROM stl_load_errors;

	create table schm_workspace.bloqueos_mails_eccsa (
	  id_bloqueo BIGINT,
	  telefono BIGINT,
	  canales_bloqueados varchar(50),
	  correo varchar(50),
	  fecha_solicitud varchar(50),
	  dias_transcurridos int,
	  estado_descarga varchar(50),
	  resultado_bloqueo varchar(50),
	  fecha_asignacion varchar(50),
	  respuesta varchar(50)
	);
	
	copy schm_workspace.bloqueos_mails_eccsa 
	from 's3://br-dm-prod-us-east-1-837538682169-pre-raw/bigdata/redshift_csv/ECCSA/bloqueos_mails.csv'
	delimiter ';'
	iam_role 'arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'
	IGNOREHEADER 1
	CSV;

	CREATE TABLE schm_workspace.bloqueos_mails_eccsa_pre AS 
	SELECT 
		id_bloqueo,
		telefono,
		canales_bloqueados,
		correo,
		SUBSTRING(fecha_solicitud, 7, 4) || '-'|| SUBSTRING(fecha_solicitud, 4, 2) ||'-'|| SUBSTRING(fecha_solicitud, 1, 2) AS fecha_solicitud,
		dias_transcurridos,
		estado_descarga,
		resultado_bloqueo,
		fecha_asignacion,
		respuesta
	FROM schm_workspace.bloqueos_mails_eccsa;


	CREATE TABLE schm_workspace.bloqueos_mails_eccsa_pre1 AS 
	SELECT 
		id_bloqueo,
		telefono,
		canales_bloqueados,
		correo,
		TO_DATE(fecha_solicitud, 'yyyy-mm-dd') AS fecha_solicitud,
		dias_transcurridos,
		estado_descarga,
		resultado_bloqueo,
		fecha_asignacion,
		respuesta
	FROM schm_workspace.bloqueos_mails_eccsa_pre;
	

/*-----------------------------------------------------------------------------------------*/
/*----------------------------------       FONOS      -------------------------------------*/

   CREATE TABLE schm_workspace.input_sernac AS 
   SELECT Id_bloqueo, 
          Canales_bloqueados, 
          Correo, 
          fecha_solicitud, 
          Dias_transcurridos, 
          Estado_descarga, 
          telefono,
         -- Ingrese_resultado_del_bloqueo,
          Fecha_asignacion,
          Respuesta,
          entidad
          FROM br_dm_prod_bigdata_oracloud_db.sernac_bloqueos_fonos
          WHERE fecha_solicitud >= trunc(DATEADD(day,-3,current_date))
          
   UNION
   		  SELECT
   		  Id_bloqueo, 
          Canales_bloqueados, 
          Correo, 
          fecha_solicitud, 
          Dias_transcurridos, 
          Estado_descarga, 
          telefono,
         -- Ingrese_resultado_del_bloqueo,
          Fecha_asignacion,
          Respuesta,
          'eccsa' AS entidad
    FROM schm_workspace.bloqueos_fonos_eccsa_pre1;


     CREATE TABLE schm_workspace.input_sernac_2 AS 
     SELECT *,
        case when Telefono >= 56900000000 then 'CE'
               when Telefono < 56300000000 then 'FIJO' 
               else 'FIJO'  
               end as TIPO_FONO,
          case when Telefono >= 56900000000 then substring(Telefono,3,1)::bigint
               when Telefono < 56300000000 THEN substring(Telefono,3,1)::bigint
               else  substring(Telefono,3,2)::bigint  
               end as area,
               case when Telefono >= 56900000000 THEN substring(Telefono,4,8)::bigint
               when Telefono < 56300000000 then substring(Telefono,4,8)::bigint
               else  substring(Telefono,5,7)::bigint
               end as fono_normalizado,      
          case when Canales_bloqueados like '%Llamada:1%' then 1 else 0 end as inhibir_call,
          case when Canales_bloqueados like '%Sms:1%' then 1 else 0 end as inhibir_sms
          FROM schm_workspace.input_sernac
         ;

--SELECT * FROM information_schema.columns WHERE table_schema = 'schm_workspace' AND table_name = 'input_sernac_2'; 
	
	CREATE TABLE schm_workspace.input_sernac_3 AS 
	SELECT
        a.area,
        a.canales_bloqueados,
        a.correo,
        a.dias_transcurridos,
        a.entidad,
        a.estado_descarga,
        a.fecha_asignacion,
        a.fecha_solicitud,
        a.fono_normalizado,
        a.id_bloqueo,
        a.inhibir_call,
        a.inhibir_sms,
        a.respuesta,
        a.telefono,
        a.tipo_fono,
       CASE WHEN b.clirut IS NULL
       THEN NULL ELSE b.clirut
       END AS rut
FROM schm_workspace.input_sernac_2 AS a
    LEFT JOIN (
        SELECT
            *
        FROM  schm_data_analytics.ctbl_fonos_movil_final_se
        WHERE periodo = (SELECT max(periodo) FROM schm_data_analytics.ctbl_fonos_movil_final_se)
              ) AS b ON a.area = b.area::integer AND a.fono_normalizado = b.telefono
        --AND b.clirut IS NOT NULL
;

	
	CREATE TABLE schm_workspace.nuevos_lnegro_call AS 
	  SELECT
		DISTINCT 
		rut,
		area,
		fono_normalizado AS fono,
		'SERNAC_' || upper(entidad) AS tipo_inhibicion,
		'PORTAL_SERNAC' AS canal_reclamo,
		current_date AS fecha_ingreso
	FROM
		schm_workspace.input_sernac_3
	WHERE
		inhibir_call = 1
	;

	
	CREATE TABLE schm_workspace.nuevos_lnegro_call_2 AS
		SELECT rut, area, fono, tipo_inhibicion, canal_reclamo, fecha_ingreso
		FROM schm_workspace.nuevos_lnegro_call
	UNION
	   SELECT rut, area, fono, tipo_inhibicion, canal_reclamo, fecha_ingreso
		FROM schm_data_analytics.ctbl_lnegro_call
	ORDER BY fecha_ingreso DESC
	;
	
	/*-----------------------------------------------------------------------------------------*/
	/*----------------------------------       SMS      ---------------------------------------*/
	
	CREATE TABLE schm_workspace.nuevos_lnegro_sms AS 
	SELECT
		DISTINCT 
		rut,
		area,
		fono_normalizado AS fono,
		'SERNAC_' || upper(entidad) AS tipo_inhibicion,
		'PORTAL_SERNAC' AS canal_reclamo,
		current_date AS fecha_ingreso
	FROM
		schm_workspace.input_sernac_3
	WHERE
		inhibir_sms = 1
		AND tipo_fono = 'CE'   
	;
	

	CREATE TABLE schm_workspace.nuevos_lnegro_sms_2 AS
		SELECT rut, fono, tipo_inhibicion, canal_reclamo, fecha_ingreso
		FROM schm_workspace.nuevos_lnegro_sms
	UNION
	   SELECT rut, fono, tipo_inhibicion, canal_reclamo, fecha_ingreso
		FROM schm_data_analytics.ctbl_lnegro_sms
	ORDER BY fecha_ingreso DESC
	;
	
	/*-----------------------------------------------------------------------------------------*/
	/*---------------------------------- INICIO: PASO LIBRERÍA FINAL  -------------------------*/
	
	DROP TABLE IF EXISTS schm_data_analytics.ctbl_lnegro_call
	;
	
	CREATE TABLE schm_data_analytics.ctbl_lnegro_call AS
		SELECT
		*
	FROM
		schm_workspace.nuevos_lnegro_call_2
	ORDER BY
		fecha_ingreso DESC
	;


	
	DROP TABLE IF EXISTS schm_data_analytics.ctbl_lnegro_sms
	;

	
	CREATE TABLE schm_data_analytics.ctbl_lnegro_sms AS
		SELECT
		*
	FROM
		schm_workspace.nuevos_lnegro_sms_2
	ORDER BY
		fecha_ingreso DESC
	;

/*----------------------------------  FIN: PASO LIBRERÍA FINAL  ---------------------------*/
/*-----------------------------------------------------------------------------------------*/


/*-----------------------------------------------------------------------------------------*/
/*-------------------------------    FORMATO PARA SALIDA  ---------------------------------*/

   CREATE TABLE schm_workspace.salida_telefonos AS
   SELECT DISTINCT 
   id_bloqueo AS "Id bloqueo",
          '+'||(Telefono) AS Telefono,
          canales_bloqueados AS "Canales bloqueados",
          Correo, 
          fecha_solicitud AS "Fecha de solicitud",
          dias_transcurridos AS "Dias transcurridos",
          estado_descarga AS "Estado descarga",
          case when rut is null then 5
               else 1
          end as "Ingrese resultado del bloqueo",
          fecha_asignacion AS "Fecha asignación",
          Respuesta,
          entidad
    FROM schm_workspace.input_sernac_3
   --WHERE entidad= v_entidad
  ;
 
 DROP TABLE IF EXISTS schm_workspace.import_emails;


/*Count Telefonos inhibidos para respuesta a SERNAC*/
/*-----------------------------------------------------------------------------------------*/
/*----------------------------------       EMAIL    ---------------------------------------*/

/*	-------------------		IMPORTACION DE ARCHIVO CSV, TODAS LAS ENTRADAS		-----------*/
	
	CREATE TABLE schm_workspace.import_emails AS 
	SELECT
		*
	FROM
		br_dm_prod_bigdata_oracloud_db.sernac_bloqueos_mail
	WHERE fecha_solicitud >= trunc(DATEADD(day,-3,current_date))
	UNION 
	SELECT 
		'' AS "_hoodie_commit_time",
		'' AS "_hoodie_commit_seqno",
		'' AS "_hoodie_record_key",
		'' AS "_hoodie_partition_path",
		'' AS "_hoodie_file_name",
		id_bloqueo,
		telefono AS telefono_raw,
		telefono,
		canales_bloqueados,
		correo,
		fecha_solicitud,
		'' AS hora_solicitud,
		dias_transcurridos,
		estado_descarga,
		resultado_bloqueo, 
		fecha_asignacion,
		respuesta,
		'eccsa' AS entidad,
		0 AS ingestion_ts,
		schm_artifacts.f_period(current_date) AS periodo	
	FROM schm_workspace.bloqueos_mails_eccsa_pre1
	;


	
	/*	AGREGAR LOS OTROS CAMPOS DE ARCHIVO ORIGINAL	*/
	   CREATE TABLE schm_workspace.cruce_email AS 
	   SELECT DISTINCT a.*,
	          a.correo AS EMAIL_SERNAC, 
	          b.rut, 
	          b.email
	      FROM schm_workspace.import_emails a
	      LEFT JOIN schm_data_analytics.ctbl_r_email_unidos b ON 
	     upper(a.correo) = upper(b.email)
	    ;
	   
	   
	CREATE TABLE schm_workspace.nuevos_lnegro_email AS
		SELECT
		rut,
		email_sernac AS email,
		'SERNAC_' || upper(entidad) AS motivo,
		current_date AS fecha_inhibicion
	FROM
		schm_workspace.cruce_email
	UNION
		SELECT
		rut,
		email,
		motivo,
		fecha_inhibicion
	FROM
		 schm_data_analytics.ctbl_lnegro_email
	ORDER BY
		fecha_inhibicion DESC
	;

	
	DROP TABLE IF EXISTS schm_data_analytics.ctbl_lnegro_email
	;

	
	CREATE TABLE schm_data_analytics.ctbl_lnegro_email AS /*(vista)*/
	     SELECT
		*
	FROM
		schm_workspace.nuevos_lnegro_email
	ORDER BY
		fecha_inhibicion DESC
	;
/*----------------------------------  FIN: PASO LIBRERÍA FINAL  ---------------------------*/
/*-----------------------------------------------------------------------------------------*/


/*-----------------------------------------------------------------------------------------*/
/*-------------------------------    FORMATO PARA SALIDA  ---------------------------------*/
   CREATE TABLE schm_workspace.salida_mails AS
   SELECT DISTINCT 
   id_bloqueo AS "Id bloqueo",
          Telefono,
          canales_bloqueados AS "Canales bloqueados",
          EMAIL_SERNAC AS Correo, 
          fecha_solicitud AS "Fecha de solicitud",
          dias_transcurridos AS "Dias transcurridos",
          estado_descarga AS "Estado descarga",
          case when rut is null then 5
               else 1
          end as "Ingrese resultado del bloqueo",
          fecha_asignacion AS "Fecha asignación",
          Respuesta,
          entidad
    FROM schm_workspace.cruce_email
  -- WHERE entidad= v_entidad
  ;

	CALL schm_artifacts.sp_ctbl_subida_sernac('bloqueos_mails','banco','SELECT "id bloqueo", telefono, "canales bloqueados", correo, "fecha de solicitud", "dias transcurridos", "estado descarga", "ingrese resultado del bloqueo", "fecha asignación", respuesta FROM schm_workspace.salida_mails where entidad =''banco''');
	CALL schm_artifacts.sp_ctbl_subida_sernac('bloqueos_telefonos','banco','select "id bloqueo", telefono, "canales bloqueados", correo, "fecha de solicitud", "dias transcurridos", "estado descarga", "ingrese resultado del bloqueo", "fecha asignación", respuesta from schm_workspace.salida_telefonos where entidad =''banco''');
	CALL schm_artifacts.sp_ctbl_subida_sernac('bloqueos_mails','car','SELECT "id bloqueo", telefono, "canales bloqueados", correo, "fecha de solicitud", "dias transcurridos", "estado descarga", "ingrese resultado del bloqueo", "fecha asignación", respuesta FROM schm_workspace.salida_mails where entidad =''car''');
	CALL schm_artifacts.sp_ctbl_subida_sernac('bloqueos_telefonos','car','select "id bloqueo", telefono, "canales bloqueados", correo, "fecha de solicitud", "dias transcurridos", "estado descarga", "ingrese resultado del bloqueo", "fecha asignación", respuesta from schm_workspace.salida_telefonos where entidad =''car''');
	CALL schm_artifacts.sp_ctbl_subida_sernac('bloqueos_mails','seguros','SELECT "id bloqueo", telefono, "canales bloqueados", correo, "fecha de solicitud", "dias transcurridos", "estado descarga", "ingrese resultado del bloqueo", "fecha asignación", respuesta FROM schm_workspace.salida_mails where entidad =''seguros''');
	CALL schm_artifacts.sp_ctbl_subida_sernac('bloqueos_telefonos','seguros','select "id bloqueo", telefono, "canales bloqueados", correo, "fecha de solicitud", "dias transcurridos", "estado descarga", "ingrese resultado del bloqueo", "fecha asignación", respuesta from schm_workspace.salida_telefonos where entidad =''seguros''');
	CALL schm_artifacts.sp_ctbl_subida_sernac('bloqueos_mails','eccsa','SELECT "id bloqueo", telefono, "canales bloqueados", correo, "fecha de solicitud", "dias transcurridos", "estado descarga", "ingrese resultado del bloqueo", "fecha asignación", respuesta FROM schm_workspace.salida_mails where entidad =''eccsa''');
	CALL schm_artifacts.sp_ctbl_subida_sernac('bloqueos_telefonos','eccsa','select "id bloqueo", telefono, "canales bloqueados", correo, "fecha de solicitud", "dias transcurridos", "estado descarga", "ingrese resultado del bloqueo", "fecha asignación", respuesta from schm_workspace.salida_telefonos where entidad =''eccsa''');

	DROP TABLE IF EXISTS schm_workspace.bloqueos_fonos_eccsa;
	DROP TABLE IF EXISTS schm_workspace.bloqueos_fonos_eccsa_pre;
	DROP TABLE IF EXISTS schm_workspace.bloqueos_fonos_eccsa_pre1;
	DROP TABLE IF EXISTS schm_workspace.bloqueos_mails_eccsa;
	DROP TABLE IF EXISTS schm_workspace.bloqueos_mails_eccsa_pre;
	DROP TABLE IF EXISTS schm_workspace.bloqueos_mails_eccsa_pre1;
	DROP TABLE IF EXISTS schm_workspace.input_sernac;
	DROP TABLE IF EXISTS schm_workspace.input_sernac_2;
	DROP TABLE IF EXISTS schm_workspace.input_sernac_3;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_call;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_call_2;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_sms;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_sms_2;
	DROP TABLE IF EXISTS schm_workspace.salida_telefonos;
	DROP TABLE IF EXISTS schm_workspace.import_emails;
	DROP TABLE IF EXISTS schm_workspace.cruce_email;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_email;
	DROP TABLE IF EXISTS schm_workspace.salida_mails;
 
END;




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_lnegro_car()
	LANGUAGE plpgsql
AS $$
	
	
	
	BEGIN

	DROP TABLE IF EXISTS schm_workspace.ctbl_sir;
	DROP TABLE IF EXISTS schm_workspace.ctbl_lri;
	DROP TABLE IF EXISTS schm_workspace.ctbl_pep;
	DROP TABLE IF EXISTS schm_workspace.ctbl_fallecidos;
	DROP TABLE IF EXISTS schm_workspace.ctbl_notcall;
	DROP TABLE IF EXISTS schm_workspace.ctbl_lnegro_car;
	DROP TABLE IF EXISTS schm_workspace.ctbl_lnegro_car_2;
	DROP TABLE IF EXISTS schm_workspace.ctbl_lnegro_car_3;
	DROP TABLE IF EXISTS schm_workspace.ctbl_lnegro_car_4;
	DROP TABLE IF EXISTS schm_workspace.ctbl_lnegro_car_5;
	DROP TABLE IF EXISTS schm_workspace.ctbl_lnegro_car_6;

	CREATE TABLE schm_workspace.ctbl_sir AS
		SELECT 
		DISTINCT 
		rut,
		'SIR' AS tipo_inhibicion,
		'RIESGO' AS canal_reclamo,
		current_date AS fecha_ingreso
	FROM
		br_dm_prod_bigdata_sftp_db.archivo_boletin_concursal
		;
	
	CREATE TABLE schm_workspace.ctbl_lri AS 
		SELECT 
		DISTINCT 
		pemln_gls_nro_dct_ide_k AS rut,
		'LRI' AS tipo_inhibicion,
		'RIESGO' AS canal_reclamo,
		current_date AS fecha_ingreso
	FROM
		br_dm_prod_bigdata_reporitf_db.fipers_mae_lib_neg
	WHERE
		pemln_est_lne = 1
		AND pemln_gls_nro_dct_ide_k IS NOT NULL
		;
	
	CREATE TABLE schm_workspace.ctbl_pep AS
		SELECT 
		DISTINCT 
		rut_pep_titp_socio AS rut,
		'PEP' AS tipo_inhibicion,
		'RIESGO' AS canal_reclamo,
		current_date AS fecha_ingreso
	FROM
		br_dm_prod_bigdata_brw581p_db.tb_504
		;
	
	CREATE TABLE schm_workspace.ctbl_fallecidos AS
		SELECT 
		rut, 
		'FALLECIDOS' AS tipo_inhibicion, 
		'RIESGO' AS canal_reclamo, 
		fecha_ingreso
	FROM
		br_dm_prod_bigdata_mis_db.fallecidos_completo
		;
	
	CREATE TABLE schm_workspace.ctbl_notcall AS
		SELECT 
		rut,
		tipo_inhibicion,
		canal_reclamo,
		fecha_solicitud AS fecha_ingreso
	FROM
		schm_data_analytics.notcall
		;
	
	CREATE TABLE schm_workspace.ctbl_lnegro_car AS 
		SELECT 
		rut,
		tipo_inhibicion,
		canal_reclamo,
		fecha_ingreso
	FROM
		schm_data_analytics.ctbl_lnegro_car;

	-- Clasificación según prioridad
	
	CREATE TABLE schm_workspace.ctbl_lnegro_car_2 AS 
		SELECT 
		rut,
		tipo_inhibicion,
		canal_reclamo,
		fecha_ingreso
	FROM
		schm_workspace.ctbl_lnegro_car
	UNION
		SELECT 
		rut,
		tipo_inhibicion,
		canal_reclamo,
		fecha_ingreso
	FROM
		schm_workspace.ctbl_notcall
	WHERE
		rut NOT IN (SELECT rut FROM schm_workspace.ctbl_lnegro_car)
	;
	
	CREATE TABLE schm_workspace.ctbl_lnegro_car_3 AS 
		SELECT 
		rut,
		tipo_inhibicion,
		canal_reclamo,
		fecha_ingreso
	FROM schm_workspace.ctbl_lnegro_car_2
	UNION
		SELECT 
		rut,
		tipo_inhibicion,
		canal_reclamo,
		fecha_ingreso
	FROM
		schm_workspace.ctbl_fallecidos
	WHERE
		rut NOT IN (SELECT rut FROM schm_workspace.ctbl_lnegro_car_2)
	;

	CREATE TABLE schm_workspace.ctbl_lnegro_car_4 AS 
		SELECT 
		rut,
		tipo_inhibicion,
		canal_reclamo,
		fecha_ingreso	
	FROM schm_workspace.ctbl_lnegro_car_3
	UNION 
		SELECT 
		rut,
		tipo_inhibicion,
		canal_reclamo,
		fecha_ingreso
	FROM
		schm_workspace.ctbl_pep
	WHERE rut NOT IN (SELECT rut FROM schm_workspace.ctbl_lnegro_car_3)
	;

	CREATE TABLE schm_workspace.ctbl_lnegro_car_5 AS 
		SELECT 
		rut,
		tipo_inhibicion,
		canal_reclamo,
		fecha_ingreso	
	FROM schm_workspace.ctbl_lnegro_car_4
	UNION 
		SELECT 
		rut,
		tipo_inhibicion,
		canal_reclamo,
		fecha_ingreso
	FROM
		schm_workspace.ctbl_lri
	WHERE rut NOT IN (SELECT rut FROM schm_workspace.ctbl_lnegro_car_4)
	;

	CREATE TABLE schm_workspace.ctbl_lnegro_car_6 AS 
		SELECT 
		rut,
		tipo_inhibicion,
		canal_reclamo,
		fecha_ingreso	
	FROM schm_workspace.ctbl_lnegro_car_5
	UNION 
		SELECT 
		rut,
		tipo_inhibicion,
		canal_reclamo,
		fecha_ingreso
	FROM
		schm_workspace.ctbl_sir
	WHERE rut NOT IN (SELECT rut FROM schm_workspace.ctbl_lnegro_car_5)
	;
		
	CREATE TABLE schm_workspace.ctbl_lnegro_car_7 AS 
	SELECT
		rut,
		max(tipo_inhibicion) AS tipo_inhibicion,
		max(canal_reclamo) AS canal_reclamo,
		max(fecha_ingreso) AS fecha_ingreso
	FROM
		schm_workspace.ctbl_lnegro_car_6
	WHERE
		rut IS NOT NULL
	GROUP BY
		rut 
	;

	DROP TABLE IF EXISTS schm_data_analytics.ctbl_lnegro_car
	;

	CREATE TABLE schm_data_analytics.ctbl_lnegro_car AS 
	SELECT
		*
	FROM
		schm_workspace.ctbl_lnegro_car_7
	ORDER BY
		fecha_ingreso DESC 
	;

	DROP TABLE IF EXISTS schm_workspace.ctbl_sir;	
	DROP TABLE IF EXISTS schm_workspace.ctbl_lri;
	DROP TABLE IF EXISTS schm_workspace.ctbl_pep;
	DROP TABLE IF EXISTS schm_workspace.ctbl_fallecidos;
	DROP TABLE IF EXISTS schm_workspace.ctbl_notcall;
	DROP TABLE IF EXISTS schm_workspace.ctbl_lnegro_car;
	DROP TABLE IF EXISTS schm_workspace.ctbl_lnegro_car_2;
	DROP TABLE IF EXISTS schm_workspace.ctbl_lnegro_car_3;
	DROP TABLE IF EXISTS schm_workspace.ctbl_lnegro_car_4;
	DROP TABLE IF EXISTS schm_workspace.ctbl_lnegro_car_5;
	DROP TABLE IF EXISTS schm_workspace.ctbl_lnegro_car_6;
	DROP TABLE IF EXISTS schm_workspace.ctbl_lnegro_car_7;

	END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_notcall_seguros(v_nombre_campaing varchar, v_fecha varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	 BEGIN 
		
	
EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/ctbl/notcall_seguros/' || v_nombre_campaing || '_' || v_fecha || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
RETURN;

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_quiero_ser_cliente()
	LANGUAGE plpgsql
AS $$
	
	
BEGIN

	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_a_new;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_email;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_email_new;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_e;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_e_max;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_e_uni;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_e_pre;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_fono;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_f;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_f_max;	
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_f_uni;	
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_f_pre;


	CREATE TABLE schm_workspace.ctbl_qsc_hb_a_new AS
	SELECT
		rut_cliente AS rut 
		, CAST(TO_CHAR(fch_upd, 'YYYYMMDD') AS INT) AS fecha_act
		, fch_upd AS fecha_original
		, CAST(COALESCE(TRIM(REPLACE(REPLACE(num_telefono , '''', '') , ' ', '')), '0') AS BIGINT) AS telefono
		, UPPER(mail_cliente) AS email
		, SUBSTRING(email, 1, POSITION('@' IN email) - 1) AS inicio_correo
		, SUBSTRING(email, POSITION('@' IN email) + 1, LENGTH(email)) AS dominio
	FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_dat_con_co;


	CREATE TABLE schm_workspace.ctbl_qsc_hb_email AS
	SELECT
		rut
		, email
		, telefono
		, fecha_act
		, fecha_original
	FROM schm_workspace.ctbl_qsc_hb_a_new
	WHERE rut IS NOT NULL 
		AND (dominio NOT IN (SELECT dominio FROM schm_clientes.dominio_incorrectos_unif)
	 	OR inicio_correo NOT IN (SELECT inicio_correo FROM schm_clientes.inicio_correo_incorrectos_unif))
	 	AND email NOT IN (SELECT email FROM schm_clientes.correos_fake_v2); 

	 
	CREATE TABLE schm_workspace.ctbl_qsc_hb_email_new AS
	SELECT *
	FROM schm_workspace.ctbl_qsc_hb_email
	WHERE email not LIKE ('.-%') 
		AND email not LIKE ('%.')
		AND email not LIKE ('-%')
		AND email not LIKE	('%.@%')
		AND email not LIKE	('%(%')
		AND email not LIKE 	('%)%')
		AND email not LIKE	('%/%')
		AND email not LIKE	('%?%')
		AND email <>'@'
		AND email <>'0' 
		AND email LIKE 	('%@%'); 
	 
	
	CREATE TABLE schm_workspace.ctbl_qsc_hb_e AS
	SELECT
		rut
		, UPPER(email) AS email
		, fecha_act
		, 13 AS secuencia
		, 'QSC_HB_NEW' AS origen
	FROM schm_workspace.ctbl_qsc_hb_email_new
	WHERE rut > 100 
		AND rut < 99999999 
		AND rut IS NOT NULL;
	
	
	CREATE TABLE schm_workspace.ctbl_qsc_hb_e_max AS
	SELECT 
		DISTINCT
		rut
		, email
		, MAX(fecha_act) AS fecha_act
		, secuencia
		, origen
	FROM schm_workspace.ctbl_qsc_hb_e
	GROUP BY rut
		, email
		, secuencia
		, origen; 
	
	
	CREATE TABLE schm_workspace.ctbl_qsc_hb_e_uni AS
	SELECT 
		DISTINCT
		t2.rut
		, t1.email
		, t2.fecha_act
		, t2.secuencia
		, t2.origen
	FROM schm_workspace.ctbl_qsc_hb_e t1
	INNER JOIN schm_workspace.ctbl_qsc_hb_e_max t2
		ON (t1.rut = t2.rut
		AND t1.fecha_act = t2.fecha_act)
	GROUP BY t2.rut
		, t1.email
		, t2.fecha_act
		, t2.secuencia
		, t2.origen
	ORDER BY 1;


	WITH base_datos AS (
	  SELECT
	  	*
	  	, ROW_NUMBER() OVER (PARTITION BY rut ORDER BY email DESC) AS rn
	  FROM schm_workspace.ctbl_qsc_hb_e_uni
	)
	SELECT
		rut
		, email
		, fecha_act
		, secuencia
		, origen
	INTO schm_workspace.ctbl_qsc_hb_e_pre
	FROM base_datos
	WHERE rn = 1; 


	DELETE FROM schm_data_analytics.ctbl_qsc_hb_e_new
	WHERE periodo = schm_artifacts.f_period(current_date::date);

	INSERT INTO schm_data_analytics.ctbl_qsc_hb_e_new
	SELECT
		rut
		, email
		, fecha_act
		, secuencia
		, origen
		, schm_artifacts.f_period(current_date::date) AS periodo
	FROM schm_workspace.ctbl_qsc_hb_e_pre;
	 
	
	CREATE TABLE schm_workspace.ctbl_qsc_hb_fono AS
	SELECT
	 	rut
	 	, telefono 
	 	, TO_DATE(fecha_act, 'yyyyMMdd') AS fecha_actualizacion 
	 	, fecha_original 
	FROM schm_workspace.ctbl_qsc_hb_a_new;
	     

	CREATE TABLE schm_workspace.ctbl_qsc_hb_f AS
	SELECT 
		DISTINCT 
		rut
		, telefono
		, fecha_original
		, 0 AS secuencia
		, 'QSC_HB_NEW' AS origen
	FROM schm_workspace.ctbl_qsc_hb_fono	
	WHERE rut > 100
		  AND rut < 99999999
		  AND rut IS NOT NULL
		  AND telefono BETWEEN 30000000 AND 99999999
		  AND telefono NOT IN (99999999,
	  						   88888888,
	  						   77777777, 
	  						   66666666,
							   55555555, 
							   44444444, 
							   33333333, 
							   22222222,
							   11111111, 
							   00000000, 
							   98989898, 
							   89898989,
							   88889999, 
							   99998888);


		 
	CREATE TABLE schm_workspace.ctbl_qsc_hb_f_max AS
	SELECT 
		DISTINCT 
		rut
		, telefono
		, MAX(fecha_original) AS fecha_original
		, secuencia
		, origen
	FROM schm_workspace.ctbl_qsc_hb_f
	GROUP BY rut
		, telefono
		, secuencia
		, origen;
			
	
	CREATE TABLE schm_workspace.ctbl_qsc_hb_f_uni AS
	SELECT 
		DISTINCT
		t2.rut
		, t1.telefono
		, t1.fecha_original AS fecha
		, t2.secuencia AS nota
		, t2.origen AS fuente
	FROM schm_workspace.ctbl_qsc_hb_f t1
	INNER JOIN schm_workspace.ctbl_qsc_hb_f_max t2
		ON (t1.rut = t2.rut
		AND t1.fecha_original = t2.fecha_original)
	ORDER BY t1.fecha_original;

	
	WITH base_datos AS (
	  SELECT 
	  	*
	  	, ROW_NUMBER() OVER (PARTITION BY rut ORDER BY telefono) AS rn
	  FROM schm_workspace.ctbl_qsc_hb_f_uni
	)
	SELECT 
		rut
		, telefono
		, fecha
		, nota
		, fuente
	INTO schm_workspace.ctbl_qsc_hb_f_pre
	FROM base_datos
	WHERE rn = 1;


	DELETE FROM schm_data_analytics.ctbl_qsc_hb_f_new
	WHERE periodo = schm_artifacts.f_period(current_date::date);

	INSERT INTO schm_data_analytics.ctbl_qsc_hb_f_new 
	SELECT 
		rut
		, telefono
		, fecha
		, nota
		, fuente
		, schm_artifacts.f_period(current_date::date) AS periodo
	FROM schm_workspace.ctbl_qsc_hb_f_pre;


	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_a_new;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_email;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_email_new;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_e;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_e_max;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_e_uni;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_e_pre;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_fono;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_f;
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_f_max;	
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_f_uni;	
	DROP TABLE IF EXISTS schm_workspace.ctbl_qsc_hb_f_pre;


END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_seg_diario_act_dat_bop()
	LANGUAGE plpgsql
AS $$
	
	
BEGIN 

	DROP TABLE IF EXISTS schm_contactabilidad.s_fin_act_dat_email;
	DROP TABLE IF EXISTS schm_contactabilidad.s_fin_act_dat_email_hb;
	DROP TABLE IF EXISTS schm_contactabilidad.s_fin_act_dat_email_pwa;
	DROP TABLE IF EXISTS schm_contactabilidad.s_fin_act_dat_email_captacionhb;
	DROP TABLE IF EXISTS schm_contactabilidad.s_fin_act_dat_email_plf;
	DROP TABLE IF EXISTS schm_contactabilidad.s_fin_act_dat_fono;
	DROP TABLE IF EXISTS schm_contactabilidad.s_fin_act_dat_fono_hb;
	DROP TABLE IF EXISTS schm_contactabilidad.s_fin_act_dat_fono_pwa;
	DROP TABLE IF EXISTS schm_contactabilidad.s_fin_act_dat_fono_plf;
	DROP TABLE IF EXISTS schm_contactabilidad.s_fin_act_dat_fono_captacionhb;
	DROP TABLE IF EXISTS schm_workspace.ctbl_tabla_paso;



/******************************EMAIL BOPERS******************************/

	CREATE TABLE IF NOT EXISTS schm_contactabilidad.s_act_dat_email_bop
	(periodo INTEGER ENCODE az64
	,ide BIGINT   ENCODE az64
	,rut INTEGER   ENCODE az64
	,email VARCHAR(255)   ENCODE lzo
	,est INTEGER   ENCODE az64
	,f_act DATE   ENCODE RAW
	,fec_num INTEGER   ENCODE az64
	,canal VARCHAR(11)   ENCODE lzo
	);

	
	DELETE FROM schm_contactabilidad.s_act_dat_email_bop 
	WHERE schm_artifacts.f_period(f_act) = schm_artifacts.f_period(CURRENT_DATE)
	;


	INSERT INTO schm_contactabilidad.s_act_dat_email_bop
	SELECT 
		schm_artifacts.f_period(CURRENT_DATE) AS periodo,
		pemid_nro_inn_ide_k ide,
		pemid_gls_nro_dct_ide_k::INT rut,
		pemma_gls_dml_mai email,
		pemma_cod_est_lcl est,
		pemma_fch_fin_acl f_act,
		REPLACE(pemma_fch_fin_acl, '-', '')::INT fec_num,
		CASE 
			WHEN pemma_gls_usr_fin_acl = 'HB' THEN 'HB'
		  	WHEN pemma_gls_usr_fin_acl = 'PWA' THEN 'PWA'
		  	WHEN pemma_gls_usr_fin_acl = 'CAPTACIONHB' THEN 'CAPTACIONHB'
			ELSE 'PLATAFORMA' 
		END AS canal
	FROM br_dm_prod_bigdata_reporitf_db.bopers_mae_mai a
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide b
	ON a.pemid_nro_inn_ide_k = b.pemid_nro_inn_ide
	WHERE pemma_fch_fin_acl >= schm_artifacts.f_first_day(CURRENT_DATE)
	ORDER BY pemma_fch_fin_acl
	;

/***************************EMAIL ACT HOMEBANKING****************************/

	CREATE TABLE IF NOT EXISTS schm_contactabilidad.s_act_dat_email_bop_hb
	(
		periodo INTEGER ENCODE az64
		,contar BIGINT   ENCODE az64
		,fec_num INTEGER   ENCODE RAW
		,canal VARCHAR(11)   ENCODE lzo
	);


	DELETE FROM schm_contactabilidad.s_act_dat_email_bop_hb
	WHERE periodo = schm_artifacts.f_period(CURRENT_DATE);


	INSERT INTO schm_contactabilidad.s_act_dat_email_bop_hb
	SELECT 
		periodo,
		COUNT(ide) contar,
		fec_num,
		canal
	FROM schm_contactabilidad.s_act_dat_email_bop 
	WHERE canal = 'HB' AND periodo = schm_artifacts.f_period(CURRENT_DATE)
	GROUP BY periodo, fec_num, canal
	ORDER BY fec_num
	;


/************************EMAIL ACT PWA*************************/

	CREATE TABLE IF NOT EXISTS schm_contactabilidad.s_act_dat_email_bop_pwa
	(
		periodo INTEGER ENCODE az64
		,contar BIGINT   ENCODE az64
		,fec_num INTEGER   ENCODE RAW
		,canal VARCHAR(11)   ENCODE lzo
	);


	DELETE FROM schm_contactabilidad.s_act_dat_email_bop_pwa
	WHERE periodo = schm_artifacts.f_period(CURRENT_DATE);




	INSERT INTO schm_contactabilidad.s_act_dat_email_bop_pwa
	SELECT 
		periodo,
		COUNT(ide) contar,
		fec_num,
		canal
	FROM schm_contactabilidad.s_act_dat_email_bop 
	WHERE canal = 'PWA' AND periodo = schm_artifacts.f_period(CURRENT_DATE)
	GROUP BY periodo, fec_num, canal
	ORDER BY fec_num
	;

/*******************EMAIL ACT CAPTACIÓN HB*************************/


	CREATE TABLE IF NOT EXISTS schm_contactabilidad.s_act_dat_email_bop_captacionhb
	(
		periodo INTEGER ENCODE az64
		,contar BIGINT   ENCODE az64
		,fec_num INTEGER   ENCODE RAW
		,canal VARCHAR(11)   ENCODE lzo
	);


	DELETE FROM schm_contactabilidad.s_act_dat_email_bop_captacionhb
	WHERE periodo = schm_artifacts.f_period(CURRENT_DATE);



	INSERT INTO schm_contactabilidad.s_act_dat_email_bop_captacionhb
	SELECT 
		periodo,
		COUNT(ide) contar,
		fec_num,
		canal
	FROM schm_contactabilidad.s_act_dat_email_bop 
	WHERE canal = 'CAPTACIONHB' AND periodo = schm_artifacts.f_period(CURRENT_DATE)
	GROUP BY periodo, fec_num, canal
	ORDER BY fec_num
	;


/*******************EMAIL ACT PLATAFORMA COMERCIAL*************************/


	CREATE TABLE IF NOT EXISTS schm_contactabilidad.s_act_dat_email_bop_plf
	(
		periodo INTEGER ENCODE az64
		,contar BIGINT   ENCODE az64
		,fec_num INTEGER   ENCODE RAW
		,canal VARCHAR(11)   ENCODE lzo
	);


	DELETE FROM schm_contactabilidad.s_act_dat_email_bop_plf
	WHERE periodo = schm_artifacts.f_period(CURRENT_DATE);


	INSERT INTO schm_contactabilidad.s_act_dat_email_bop_plf
	SELECT 
		periodo,
		COUNT(ide) contar,
		fec_num,
		canal
	FROM schm_contactabilidad.s_act_dat_email_bop 
	WHERE canal = 'PLATAFORMA' AND periodo = schm_artifacts.f_period(CURRENT_DATE)
	GROUP BY periodo, fec_num, canal
	ORDER BY fec_num
	;


/****************EMAIL TODAS LAS VIAS DE ACTUALIZACIÓN***********************/


	CREATE TABLE IF NOT EXISTS schm_contactabilidad.s_act_dat_email_bop_todos
	(
		periodo INTEGER ENCODE az64
		,contar BIGINT   ENCODE az64
		,canal VARCHAR(11)   ENCODE lzo
	);


	DELETE FROM schm_contactabilidad.s_act_dat_email_bop_todos
	WHERE periodo = schm_artifacts.f_period(CURRENT_DATE);


	INSERT INTO schm_contactabilidad.s_act_dat_email_bop_todos 
	SELECT 
		periodo,
		COUNT(ide) contar,
		canal
	FROM schm_contactabilidad.s_act_dat_email_bop 
	WHERE periodo = schm_artifacts.f_period(CURRENT_DATE)
	GROUP BY periodo, canal 
	;



/*****************************FONOS BOPERS***********************************/

	CREATE TABLE IF NOT EXISTS schm_contactabilidad.s_act_dat_fono_bop
	(
		periodo INTEGER ENCODE az64	
		,ide BIGINT   ENCODE az64
		,rut INTEGER   ENCODE az64
		,fono BIGINT   ENCODE az64
		,est INTEGER   ENCODE az64
		,ejec_canal VARCHAR(255)   ENCODE lzo
		,f_act DATE   ENCODE RAW
		,fec_num INTEGER   ENCODE az64
		,canal VARCHAR(11)   ENCODE lzo
	);



	DELETE FROM schm_contactabilidad.s_act_dat_fono_bop 
	WHERE periodo = schm_artifacts.f_period(CURRENT_DATE)
	;

	
	INSERT INTO schm_contactabilidad.s_act_dat_fono_bop 
	SELECT 
		schm_artifacts.f_period(CURRENT_DATE),
		pemid_nro_inn_ide_k AS ide,
		pemid_gls_nro_dct_ide_k::INT AS rut,
		pemfo_nro_fon AS fono, 
		pemfo_cod_est_lcl AS est,   
		pemfo_gls_usr_fin_acl AS ejec_canal, 
		PEMFO_FCH_FIN_ACL,
		REPLACE(pemfo_fch_fin_acl, '-', '')::INT fec_num,
	    CASE 
		    WHEN pemfo_gls_usr_fin_acl = 'HB' THEN 'HB' 
			WHEN pemfo_gls_usr_fin_acl = 'PWA' THEN 'PWA'
			WHEN pemfo_gls_usr_fin_acl = 'CAPTACIONHB' 	THEN 'CAPTACIONHB'
			ELSE 'PLATAFORMA' 
		END AS canal
	FROM br_dm_prod_bigdata_reporitf_db.bopers_mae_fon a 
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide b 
	ON a.pemid_nro_inn_ide_k = b.pemid_nro_inn_ide
	WHERE pemfo_fch_fin_acl >= schm_artifacts.f_first_day(CURRENT_DATE)
	ORDER BY pemfo_fch_fin_acl
	;


/**************************FONO BOPERS ACT HOMEBANKING**********************/

	CREATE TABLE IF NOT EXISTS schm_contactabilidad.s_act_dat_fono_bop_hb
	(
		periodo INTEGER ENCODE az64
		,contar BIGINT   ENCODE az64
		,fec_num INTEGER   ENCODE RAW
		,canal VARCHAR(11)   ENCODE lzo
	);



	DELETE FROM schm_contactabilidad.s_act_dat_fono_bop_hb 
	WHERE periodo = schm_artifacts.f_period(CURRENT_DATE)
	;


	INSERT INTO schm_contactabilidad.s_act_dat_fono_bop_hb
	SELECT 
		periodo,
		COUNT(ide) AS contar,
		fec_num,
		canal
	FROM schm_contactabilidad.s_act_dat_fono_bop 
	WHERE canal = 'HB' 
		AND periodo = schm_artifacts.f_period(CURRENT_DATE)
	GROUP BY periodo, fec_num, canal 
	;


/**************************FONO BOPERS ACT PWA**********************/	
	

	
	CREATE TABLE IF NOT EXISTS schm_contactabilidad.s_act_dat_fono_bop_pwa
	(
		periodo INTEGER ENCODE az64
		,contar BIGINT   ENCODE az64
		,fec_num INTEGER   ENCODE RAW
		,canal VARCHAR(11)   ENCODE lzo
	);


	DELETE FROM schm_contactabilidad.s_act_dat_fono_bop_pwa 
	WHERE periodo = schm_artifacts.f_period(CURRENT_DATE)
	;
	
	

	INSERT INTO schm_contactabilidad.s_act_dat_fono_bop_pwa 
	SELECT 
		periodo,
		COUNT(ide) AS contar,
		fec_num,
		canal
	FROM schm_contactabilidad.s_act_dat_fono_bop 
	WHERE canal = 'CAPTACIONHB'
		AND periodo = schm_artifacts.f_period(CURRENT_DATE)
	GROUP BY periodo, fec_num, canal
	;


	/**************************FONO BOPERS ACT PLATAFORMA**********************/	
	

	CREATE TABLE IF NOT EXISTS schm_contactabilidad.s_act_dat_fono_bop_plf
	(
		periodo INTEGER ENCODE az64
		,contar BIGINT   ENCODE az64
		,fec_num INTEGER   ENCODE RAW
		,canal VARCHAR(11)   ENCODE lzo
	);


	DELETE FROM schm_contactabilidad.s_act_dat_fono_bop_plf 
	WHERE periodo = schm_artifacts.f_period(CURRENT_DATE)
	;
	


	INSERT INTO schm_contactabilidad.s_act_dat_fono_bop_plf
	SELECT
		periodo,
		COUNT(ide) AS contar,
		fec_num,
		canal
	FROM schm_contactabilidad.s_act_dat_fono_bop 
	WHERE canal = 'PLATAFORMA'
		AND periodo = schm_artifacts.f_period(CURRENT_DATE)
	GROUP BY periodo, fec_num, canal
	;


	/**************************FONO BOPERS ACT TODOS**********************/
	
	CREATE TABLE IF NOT EXISTS schm_contactabilidad.s_act_dat_fono_bop_todos
	(
		periodo INTEGER ENCODE az64
		,contar BIGINT   ENCODE az64
		,canal VARCHAR(11)   ENCODE lzo
	);




	DELETE FROM schm_contactabilidad.s_act_dat_fono_bop_todos 
	WHERE periodo = schm_artifacts.f_period(CURRENT_DATE)
	;
	
	
	

	INSERT INTO schm_contactabilidad.s_act_dat_fono_bop_todos 
	SELECT 
		periodo,
		COUNT(ide) AS contar,
		canal
	FROM schm_contactabilidad.s_act_dat_fono_bop
	WHERE periodo = schm_artifacts.f_period(CURRENT_DATE)
	GROUP BY periodo, canal
	;
	

/****************AGRUPACIÓN DATOS DE ACTUALIZACIÓN EMAIL Y FONO 6M**************/

/*
	CREATE TABLE IF NOT EXISTS schm_contactabilidad.s_fin_act_dat_email
	(periodo INTEGER ENCODE az64
	,ide BIGINT   ENCODE az64
	,rut INTEGER   ENCODE az64
	,email VARCHAR(255)   ENCODE lzo
	,est INTEGER   ENCODE az64
	,f_act DATE   ENCODE RAW
	,fec_num INTEGER   ENCODE az64
	,canal VARCHAR(11)   ENCODE lzo
	);*/


/****************AGRUPACIÓN DATOS DE ACTUALIZACIÓN EMAIL 6m**********/

	CREATE TABLE schm_contactabilidad.s_fin_act_dat_email AS 
	SELECT 
		schm_artifacts.f_period(pemma_fch_fin_acl) AS periodo,
		pemid_nro_inn_ide_k ide,
		pemid_gls_nro_dct_ide_k::INT rut,
		pemma_gls_dml_mai email,
		pemma_cod_est_lcl est,
		pemma_fch_fin_acl f_act,
		REPLACE(pemma_fch_fin_acl, '-', '')::INT fec_num,
		CASE 
			WHEN pemma_gls_usr_fin_acl = 'HB' THEN 'HB'
		  	WHEN pemma_gls_usr_fin_acl = 'PWA' THEN 'PWA'
		  	WHEN pemma_gls_usr_fin_acl = 'CAPTACIONHB' THEN 'CAPTACIONHB'
			ELSE 'PLATAFORMA' 
		END AS canal
	FROM br_dm_prod_bigdata_reporitf_db.bopers_mae_mai a
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide b
	ON a.pemid_nro_inn_ide_k = b.pemid_nro_inn_ide
	WHERE pemma_fch_fin_acl >= TO_DATE(DATEADD(MONTH, -5, schm_artifacts.f_first_day(CURRENT_DATE)), 'yyyy-mm-dd')
	ORDER BY pemma_fch_fin_acl
	;



	/****************HB -- ültimos 6 meses***********/

	CREATE TABLE schm_contactabilidad.s_fin_act_dat_email_hb AS 
	SELECT 
		COUNT(ide) AS contar,
		fec_num,
		canal
	FROM schm_contactabilidad.s_fin_act_dat_email
	WHERE canal = 'HB'
	GROUP BY fec_num, canal
	;
	
	/****************PWA -- ültimos 6 meses***********/
	
	CREATE TABLE schm_contactabilidad.s_fin_act_dat_email_pwa AS 
	SELECT 
		COUNT(ide) AS contar,
		fec_num,
		canal
	FROM schm_contactabilidad.s_fin_act_dat_email
	WHERE canal = 'PWA'
	GROUP BY fec_num, canal
	;
	

	/****************CAPTACIÓN HB -- ültimos 6 meses***********/

	CREATE TABLE schm_contactabilidad.s_fin_act_dat_email_captacionhb AS 
	SELECT 
		COUNT(ide) AS contar,
		fec_num,
		canal
	FROM schm_contactabilidad.s_fin_act_dat_email
	WHERE canal = 'CAPTACIONHB'
	GROUP BY fec_num, canal
	;

	/****************PLATAFORMA COMERCIAL -- ültimos 6 meses***********/

	CREATE TABLE schm_contactabilidad.s_fin_act_dat_email_plf AS 
	SELECT 
		COUNT(ide) AS contar,
		fec_num,
		canal
	FROM schm_contactabilidad.s_fin_act_dat_email
	WHERE canal = 'PLATAFORMA'
	GROUP BY fec_num, canal
	;

/****************AGRUPACIÓN DATOS DE ACTUALIZACIÓN FONO 6m**********/

	CREATE TABLE schm_contactabilidad.s_fin_act_dat_fono AS 
	SELECT 
		schm_artifacts.f_period(pemfo_fch_fin_acl) AS periodo,
		pemid_nro_inn_ide_k AS ide,
		pemid_gls_nro_dct_ide_k::INT AS rut,
		pemfo_nro_fon AS fono, 
		pemfo_cod_est_lcl AS est,   
		pemfo_gls_usr_fin_acl AS ejec_canal, 
		PEMFO_FCH_FIN_ACL AS f_act,
		REPLACE(pemfo_fch_fin_acl, '-', '')::INT fec_num,
	    CASE 
		    WHEN pemfo_gls_usr_fin_acl = 'HB' THEN 'HB' 
			WHEN pemfo_gls_usr_fin_acl = 'PWA' THEN 'PWA'
			WHEN pemfo_gls_usr_fin_acl = 'CAPTACIONHB' 	THEN 'CAPTACIONHB'
			ELSE 'PLATAFORMA' 
		END AS canal
	FROM br_dm_prod_bigdata_reporitf_db.bopers_mae_fon a 
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide b 
	ON a.pemid_nro_inn_ide_k = b.pemid_nro_inn_ide
	WHERE pemfo_fch_fin_acl >= TO_DATE(DATEADD(MONTH, -5, schm_artifacts.f_first_day(CURRENT_DATE)), 'yyyy-mm-dd')
	ORDER BY pemfo_fch_fin_acl
	;
	
	/****************HB 6m**********/

	CREATE TABLE schm_contactabilidad.s_fin_act_dat_fono_hb AS 
	SELECT 
		COUNT(ide) AS contar,
		fec_num,
		canal
	FROM schm_contactabilidad.s_fin_act_dat_fono 
	WHERE canal = 'HB'
	GROUP BY fec_num, canal
	;

	/**********  PWA últimos 6 meses ************/

	CREATE TABLE schm_contactabilidad.s_fin_act_dat_fono_pwa AS 
	SELECT 
		COUNT(ide) AS contar,
		fec_num,
		canal
	FROM schm_contactabilidad.s_fin_act_dat_fono 
	WHERE canal = 'PWA'
	GROUP BY fec_num, canal
	;


	/**********  CAPTACIÓN HB últimos 6 meses ************/

	CREATE TABLE schm_contactabilidad.s_fin_act_dat_fono_captacionhb AS 
	SELECT 
		COUNT(ide) AS contar,
		fec_num,
		canal
	FROM schm_contactabilidad.s_fin_act_dat_fono 
	WHERE canal = 'CAPTACIONHB'
	GROUP BY fec_num, canal
	;


/**********  PLATAFORMA últimos 6 meses ************/

	CREATE TABLE schm_contactabilidad.s_fin_act_dat_fono_plf AS 
	SELECT 
		COUNT(ide) AS contar,
		fec_num,
		canal
	FROM schm_contactabilidad.s_fin_act_dat_fono 
	WHERE canal = 'PLATAFORMA'
	GROUP BY fec_num, canal
	;

/*********TABLA AGRUPADA*********************/
	

	CREATE TABLE IF NOT EXISTS schm_data_analytics.ctbl_agrup_act_contact 
	(periodo INTEGER ENCODE AZ64
	,tipo VARCHAR(99) ENCODE lzo
	,est INTEGER ENCODE AZ64
	,f_act DATE
	,fec_num INTEGER ENCODE AZ64
	,canal VARCHAR(99) ENCODE lzo
	,casilla VARCHAR(99) ENCODE lzo
	,total_clientes INTEGER ENCODE AZ64
	,cliente_unicos INTEGER ENCODE AZ64
	);


	CREATE TABLE schm_workspace.ctbl_tabla_paso AS 
	SELECT DISTINCT 
		periodo,
		'EMAIL' AS tipo,
		est,
		f_act,
		fec_num,
		canal,
		SPLIT_PART(UPPER(email), '@', 2) AS casilla,
		count(ide) AS total_clientes,
		count(DISTINCT ide) AS clientes_unicos
	FROM schm_contactabilidad.s_fin_act_dat_email 
	WHERE periodo = schm_artifacts.f_period(CURRENT_DATE)
	GROUP BY periodo, est, f_act, fec_num, canal, email
	UNION ALL 
	SELECT DISTINCT 
		periodo,
		'FONO' AS tipo,
		est,
		f_act,
		fec_num,
		canal,
		'' AS casilla,
		count(ide) AS total_clientes,
		count(DISTINCT ide) AS clientes_unicos
	FROM schm_contactabilidad.s_fin_act_dat_fono 
	WHERE periodo = schm_artifacts.f_period(CURRENT_DATE)
	GROUP BY periodo, est, f_act, fec_num, canal
	UNION ALL 
	SELECT DISTINCT 
		periodo,
		'EMAIL' AS tipo,
		est,
		f_act,
		fec_num,
		canal,
		SPLIT_PART(UPPER(email), '@', 2) AS casilla,
		count(ide) AS total_clientes,
		count(DISTINCT ide) AS clientes_unicos
	FROM schm_contactabilidad.s_fin_act_dat_email 
	WHERE periodo = schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(CURRENT_DATE), - 1)
	GROUP BY periodo, est, f_act, fec_num, canal, email
	UNION ALL 
	SELECT DISTINCT 
		periodo,
		'FONO' AS tipo,
		est,
		f_act,
		fec_num,
		canal,
		'' AS casilla,
		count(ide) AS total_clientes,
		count(DISTINCT ide) AS clientes_unicos
	FROM schm_contactabilidad.s_fin_act_dat_fono 
	WHERE periodo = schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(CURRENT_DATE), - 1)
	GROUP BY periodo, est, f_act, fec_num, canal
	;


	DELETE FROM schm_data_analytics.ctbl_agrup_act_contact 
	WHERE periodo IN (schm_artifacts.f_period(CURRENT_DATE), 
	schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(CURRENT_DATE), - 1));


	INSERT INTO schm_data_analytics.ctbl_agrup_act_contact 
	SELECT * FROM schm_workspace.ctbl_tabla_paso;


	DROP TABLE IF EXISTS schm_workspace.ctbl_tabla_paso;


END



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_sender_notcall_ccr(v_nombre_campaing varchar, v_fecha varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
	
	 BEGIN 
		
	
EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/ctbl/notcall_ccr/' || v_nombre_campaing ||''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
RETURN;

END;




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_sernac_auris()
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN

	DROP TABLE IF EXISTS schm_workspace.auris_inhib;
	DROP TABLE IF EXISTS schm_workspace.formato;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_call;
	DROP TABLE IF EXISTS schm_workspace.lnegro_call2;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_sms;
	DROP TABLE IF EXISTS schm_workspace.lnegro_sms2;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_email;
	DROP TABLE IF EXISTS schm_workspace.lnegro_email2;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_car;
	DROP TABLE IF EXISTS schm_workspace.lnegro_car2;


	CREATE TABLE schm_workspace.auris_inhib AS
	SELECT
		*
	FROM
		br_dm_prod_bigdata_sftp_db.auris_inhibicion_contacto;

		CREATE TABLE schm_workspace.formato AS
	SELECT
		rut_sin_dv
		,canal_a_inhibir
		,nro_telefonico_a_inhibir
		,domicilio_a_inhibir AS domicilio
		,email_a_inhibir AS email
		,	CASE
			WHEN nro_telefonico_a_inhibir >= 900000000 THEN substring(nro_telefonico_a_inhibir FROM length(nro_telefonico_a_inhibir)-8 FOR 1)
			WHEN nro_telefonico_a_inhibir > 300000000 THEN substring(nro_telefonico_a_inhibir FROM length(nro_telefonico_a_inhibir)-8 FOR 2)
			WHEN nro_telefonico_a_inhibir < 300000000
			AND nro_telefonico_a_inhibir > 99999999 THEN substring(nro_telefonico_a_inhibir FROM length(nro_telefonico_a_inhibir)-8 FOR 1)
			WHEN nro_telefonico_a_inhibir < 99999999
			AND nro_telefonico_a_inhibir > 0 THEN '9'
			WHEN nro_telefonico_a_inhibir IS NULL THEN '0' /* corregir */
		END AS area
		,	CASE
			WHEN nro_telefonico_a_inhibir >= 900000000 THEN substring(nro_telefonico_a_inhibir FROM length(nro_telefonico_a_inhibir)-7 FOR 9)
			WHEN nro_telefonico_a_inhibir < 300000000 THEN substring(nro_telefonico_a_inhibir FROM length(nro_telefonico_a_inhibir)-7 FOR 9)
			ELSE substring(nro_telefonico_a_inhibir, 6, 7)
		END AS fono
	FROM
		schm_workspace.auris_inhib
	ORDER BY
		rut_sin_dv ASC;

	create table schm_workspace.nuevos_lnegro_call as
	   select
		distinct rut_sin_dv as rut
				,cast(area AS INTEGER) AS area
				,cast(fono AS INTEGER) AS fono
				,'LISTA_NEGRA_CALL' as tipo_inhibicion
				,'AURIS' as canal_reclamo
				,current_date as fecha_ingreso
	from
		schm_workspace.formato
	where
		canal_a_inhibir = 'Gestiones Telef�nicas'
	;


	CREATE TABLE schm_workspace.lnegro_call2 AS
	SELECT
		*
	FROM
		schm_data_analytics.ctbl_lnegro_call
	;

	INSERT
		INTO
		schm_workspace.lnegro_call2
		SELECT
		*
	FROM
		schm_workspace.nuevos_lnegro_call
	;

	DROP TABLE IF EXISTS schm_data_analytics.ctbl_lnegro_call;
	CREATE TABLE schm_data_analytics.ctbl_lnegro_call AS
		SELECT
		rut
		,area
		,fono
		,tipo_inhibicion
		,canal_reclamo
		,min(fecha_ingreso) AS fecha_ingreso /*verificar*/
	FROM
		schm_workspace.lnegro_call2
	GROUP BY
		rut,
		area,
		fono,
		tipo_inhibicion,
		canal_reclamo
	ORDER BY
		fecha_ingreso
	;

	CREATE TABLE schm_workspace.nuevos_lnegro_sms AS
	   SELECT
		DISTINCT rut_sin_dv as rut
				,cast(fono AS INTEGER) AS fono
				,'LISTA_NEGRA_SMS' as tipo_inhibicion
				,'AURIS' as canal_reclamo
				,current_date as fecha_ingreso
	from
		schm_workspace.formato
	where
		canal_a_inhibir = 'SMS'
	;

	CREATE TABLE schm_workspace.lnegro_sms2 AS
	SELECT
		*
	FROM
		schm_data_analytics.ctbl_lnegro_sms
	;

	INSERT
		INTO
		schm_workspace.lnegro_sms2
		SELECT
		*
	FROM
		schm_workspace.nuevos_lnegro_sms
	;

	DROP TABLE IF EXISTS schm_data_analytics.ctbl_lnegro_sms;
	CREATE TABLE schm_data_analytics.ctbl_lnegro_sms AS
	SELECT
		rut
		,fono
		,tipo_inhibicion
		,canal_reclamo
		,min(fecha_ingreso) AS fecha_ingreso
	FROM
		schm_workspace.lnegro_sms2
	GROUP BY
		rut,
		fono,
		tipo_inhibicion,
		canal_reclamo
	ORDER BY
		fecha_ingreso
	;

	CREATE TABLE schm_workspace.nuevos_lnegro_email AS
	   SELECT
		DISTINCT rut_sin_dv
		,upper(email) AS email
		,'AURIS' AS motivo
		,current_date AS fecha_inhibicion
	FROM
		schm_workspace.formato
	WHERE
		canal_a_inhibir = 'Email'
		AND upper(email) NOT IN (
		SELECT
			email
		FROM
			schm_data_analytics.ctbl_lnegro_email)
	;

	CREATE TABLE schm_workspace.lnegro_email2 AS
	SELECT
		*
	FROM
		schm_data_analytics.ctbl_lnegro_email
	;

	INSERT
		INTO
		schm_workspace.lnegro_email2
		SELECT
		*
	FROM
		schm_workspace.nuevos_lnegro_email
	;

	DROP TABLE IF EXISTS schm_data_analytics.ctbl_lnegro_email;
	CREATE TABLE schm_data_analytics.ctbl_lnegro_email AS
		SELECT
		rut
		,email
		,motivo
		,min(fecha_inhibicion) AS fecha_inhibicion
	FROM
		schm_workspace.lnegro_email2
	GROUP BY
		rut,
		email,
		motivo
	ORDER BY
		fecha_inhibicion
	;

	CREATE TABLE schm_workspace.nuevos_lnegro_car AS
	   SELECT
		DISTINCT rut_sin_dv
		,'LISTA_NEGRA_CAR' AS tipo_inhibicion
		,'AURIS' AS canal_reclamo
		,current_date AS fecha_ingreso
	FROM
		schm_workspace.formato
	WHERE
		canal_a_inhibir = 'Todas las anteriores'
		AND rut_sin_dv NOT IN (
		SELECT
			rut
		FROM
			schm_data_analytics.ctbl_lnegro_car)
	;

	CREATE TABLE schm_workspace.lnegro_car2 AS
	SELECT
		*
	FROM
		schm_data_analytics.ctbl_lnegro_car
	;

	INSERT
		INTO
		schm_workspace.lnegro_car2
		SELECT
		*
	FROM
		schm_workspace.nuevos_lnegro_car
	;

	DROP TABLE IF EXISTS schm_data_analytics.ctbl_lnegro_car;
	CREATE TABLE schm_data_analytics.ctbl_lnegro_car AS
		SELECT
		rut
		,tipo_inhibicion
		,canal_reclamo
		,min(fecha_ingreso) AS fecha_ingreso /*verificar*/
	FROM
		schm_workspace.lnegro_car2
	GROUP BY
		rut,
		tipo_inhibicion,
		canal_reclamo
	ORDER BY
		fecha_ingreso
	;
	DROP TABLE IF EXISTS schm_workspace.auris_inhib;
	DROP TABLE IF EXISTS schm_workspace.formato;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_call;
	DROP TABLE IF EXISTS schm_workspace.lnegro_call2;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_sms;
	DROP TABLE IF EXISTS schm_workspace.lnegro_sms2;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_email;
	DROP TABLE IF EXISTS schm_workspace.lnegro_email2;
	DROP TABLE IF EXISTS schm_workspace.nuevos_lnegro_car;
	DROP TABLE IF EXISTS schm_workspace.lnegro_car2;

END



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_sernac_inhib_notcall()
	LANGUAGE plpgsql
AS $$
	
	
BEGIN
    -- unificacion de lnegro_car,sas_ctbl_notcall y lnegro_call
    DROP TABLE IF EXISTS schm_workspace.tmp_todonotcall;
	CREATE TABLE schm_workspace.tmp_todonotcall AS
        SELECT
            rut
            ,CAST (NULL AS INTEGER) AS area
            ,CAST (NULL AS INTEGER) AS fono
            ,tipo_inhibicion
            ,canal_reclamo
            ,fecha_ingreso as fecha_solicitud
        FROM
            schm_data_analytics.ctbl_lnegro_car
        WHERE
            rut NOT IN (SELECT rut FROM schm_data_analytics.notcall)
        UNION
        SELECT
            rut
            ,area
            ,fono
            ,tipo_inhibicion
            ,canal_reclamo
            ,fecha_solicitud
        FROM
           	schm_data_analytics.notcall
        UNION
        SELECT
            rut
            ,area
            ,fono
            ,tipo_inhibicion
            ,canal_reclamo
            ,fecha_ingreso AS fecha_solicitud
        FROM schm_data_analytics.ctbl_lnegro_call;

    -- escritura de unificacion agrupada por fecha de solitud
    DROP TABLE IF EXISTS schm_data_analytics.notcall;
    CREATE TABLE schm_data_analytics.notcall AS
        SELECT
            rut
            ,fono
            ,tipo_inhibicion
            ,canal_reclamo
            ,MAX(area) as area
            ,MIN(fecha_solicitud) AS fecha_solicitud
        FROM
            schm_workspace.tmp_todonotcall
        GROUP BY
            rut,fono,tipo_inhibicion,canal_reclamo;

    -- escritura de unificacion solo para ruts
    DROP TABLE IF EXISTS schm_data_analytics.notcall_rut;
    CREATE TABLE schm_data_analytics.notcall_rut AS
        SELECT *
        FROM
            schm_data_analytics.notcall
        WHERE
            rut IS NOT NULL
        ORDER BY fecha_solicitud ASC;

    -- escritura de unificacion solo para telefonos
    DROP TABLE IF EXISTS schm_data_analytics.notcall_fono;
    CREATE TABLE schm_data_analytics.notcall_fono AS
        SELECT *
        FROM
            schm_data_analytics.notcall
        WHERE
            fono IS NOT NULL
        ORDER BY fecha_solicitud ASC;

    -- escritura de bloqueos del mes para exportacion
    DROP TABLE IF EXISTS schm_data_analytics.notcall_novedades;
    CREATE TABLE schm_data_analytics.notcall_novedades AS
        SELECT
            rut,
            area,
            fono,
            fecha_solicitud
        FROM
            schm_data_analytics.notcall t1
        WHERE
            fecha_solicitud >= DATE_TRUNC('month',CONVERT_TIMEZONE('Chile/Continental', GETDATE()))
        ORDER BY
            fecha_solicitud ASC;

    DROP TABLE IF EXISTS schm_workspace.tmp_todonotcall;

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_subida_sernac(v_nombre_campaign varchar, v_entidad varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
	
BEGIN 
	
	EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/ctbl/sernac/' || v_entidad || '/' || v_nombre_campaign || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '';'';';
	RETURN;

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_tr_planes(v_nombre_campaing varchar, v_user varchar, v_fecha int4, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
	
	 BEGIN
			
DROP TABLE IF EXISTS schm_workspace.tr_planes_0;
DROP TABLE IF EXISTS schm_workspace.contrato_vig;
DROP TABLE IF EXISTS schm_workspace.tr_planes;
DROP TABLE IF EXISTS schm_data_analytics.tr_planes;

CREATE TABLE schm_workspace.tr_planes_0 AS
SELECT
	substring(identificador_cliente, 1, length(identificador_cliente)-1)::integer AS id_usuario,
	plan_id,
	to_char(actualizado_el, 'MM/DD/YYYY') AS fecha_mov,
	cast(TO_CHAR( CREADO_EL,'YYYYMMDD') as INT) as fecha_creacion_plan		   
FROM br_dm_prod_bigdata_reporitf_db.planes_tbl_plan_cliente
WHERE estado = 'ENABLED';
 
CREATE TABLE schm_workspace.tr_planes AS
SELECT
	DISTINCT
	a.*,
	b.tipo_tarjeta,
	b.tipo_ant AS tipo_tarjeta_ant
FROM
	schm_workspace.tr_planes_0 a
LEFT JOIN schm_data_analytics.univ_ti_vig_ant b
ON
	a.id_usuario = b.rut;

create table schm_workspace.contrato_vig as
select 
	rut, 
	min(to_char((FECALTA_CTTO), 
	'YYYYMMDD'))::int as MIN_FECALTA_CTTO
from schm_data_analytics.clts_universo_panes
where calpart='TI' and T_CTTO_VIGENTE=1
group by rut
;

CREATE TABLE schm_data_analytics.tr_planes AS
SELECT
	a.id_usuario,
	a.plan_id, 
	a.fecha_mov, 
	a.tipo_tarjeta, 
	a.tipo_tarjeta_ant,
	case when B.MIN_FECALTA_CTTO >= A.fecha_creacion_plan  THEN 1 else 0 END AS CDTT --1 cliente nuevo; 0 cliente antiguo
FROM schm_workspace.tr_planes AS A
LEFT JOIN schm_workspace.contrato_vig AS B ON A.ID_USUARIO=B.RUT
order by ID_USUARIO 
;



EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-raw/bigdata/campaign/CAMPAIGN_INPUT_TR_PLANES/' || v_nombre_campaing || '_' || v_fecha || '_0-' || v_user || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
 
RETURN;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-11-14  -- v03  --  Natalia Vargas  --  Se elimina campo fecha_creacion_plan.
	2023-11-07	-- v02	--	Nicole Lagos 	--	Se agrega marca cliente nuevo.
	2023-00-00	-- v01	--	Sergio Jara     --	Versión original.
	===========================================================================================================
*/
END;
 
 
 

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ctbl_wca_sms_email(v_nombre_campaing1 varchar, v_user varchar, v_fecha varchar, v_query1 varchar)
	LANGUAGE plpgsql
AS $$
	
	
	
	 
BEGIN
	
	DROP TABLE IF EXISTS schm_workspace.car_email;
	DROP TABLE IF EXISTS schm_workspace.email_todos;
	DROP TABLE IF EXISTS schm_workspace.email_inhibir_wca;
	
	
	CREATE TABLE schm_workspace.car_email AS
	SELECT DISTINCT 
		t1.rut,
		t2.email
	FROM
		schm_data_analytics.ctbl_lnegro_car t1
	INNER JOIN schm_data_analytics.ctbl_r_email_unidos t2 ON
		(t1.rut = t2.rut)
	;
	
	
	CREATE TABLE schm_workspace.email_todos AS
		SELECT
		t1.rut,
		upper(t1.email) AS email
	FROM
		schm_data_analytics.ctbl_lnegro_email t1
	UNION
		SELECT
		t2.rut,
		upper(t2.email) AS email
	FROM
		schm_workspace.car_email t2
	;


	CREATE TABLE schm_workspace.email_inhibir_wca AS 
	   SELECT
		DISTINCT email
	FROM
		schm_workspace.email_todos
	WHERE
		email LIKE '%@%'
	;
	

    EXECUTE 'UNLOAD(' || quote_literal(v_query1) || ') to ''s3://br-dm-prod-us-east-1-837538682169-raw/bigdata/campaign/CAMPAIGN_INPUT_EMAIL_WCA_REV/' || v_nombre_campaing1 || '_' || v_fecha || '_0-' || v_user || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
    RETURN;
    
	DROP TABLE IF EXISTS schm_workspace.email_todos;
	--DROP TABLE IF EXISTS schm_workspace.email_inhibir_wca;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2024-01-16	-- v02	--	Esteban Pino	--	Cambio de esquema sasdata a data_analytics.
	2023-11-16	-- v01	--	Sergio Jara		--	Versión original refactorizada en AWS Redshift.

	=== Información adicional:
	Proceso que...
	===========================================================================================================
*/

END;





$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_dependencies()
	LANGUAGE plpgsql
AS $$
	
declare
  row record;
begin
drop table if exists schm_workspace.sp_dependencies;
create table schm_workspace.sp_dependencies(_SCHEMA varchar,PROCEDURE_NAME varchar, CODE varchar(max));
for row in 
	SELECT n.nspname::text as _SCHEMA, p.proname::text AS PROCEDURE_NAME, p.prosrc::varchar(max) AS CODE
	 FROM pg_catalog.pg_namespace n, pg_catalog.pg_proc_info p
	 LEFT JOIN pg_catalog.pg_description d ON (p.prooid=d.objoid)
	 LEFT JOIN pg_catalog.pg_class c ON (d.classoid=c.oid AND c.relname='pg_proc')
	 LEFT JOIN pg_catalog.pg_namespace pn ON (c.relnamespace=pn.oid AND pn.nspname='pg_catalog')
	 WHERE p.pronamespace=n.oid
	 AND p.prokind='p'
  loop
  insert into schm_workspace.sp_dependencies(_SCHEMA,PROCEDURE_NAME,CODE) values (row._SCHEMA,row.PROCEDURE_NAME,row.CODE);
end loop
;

call schm_artifacts.unload_csv('tracing','sp_dependencies','select * from schm_workspace.sp_dependencies');
end;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_dgtl_chek_tableau()
	LANGUAGE plpgsql
AS $$
	
	
BEGIN
	
    DROP TABLE IF EXISTS schm_workspace.cuentas_trxs_paso;
    DROP TABLE IF EXISTS schm_workspace.cuentas_trxs;
    DROP TABLE IF EXISTS schm_workspace.cuentas;

    CREATE TABLE schm_workspace.cuentas_trxs_paso AS
    SELECT
        CAST(A2.pemid_gls_nro_dct_ide_k AS INT) AS rut
        ,A.codent
        ,A.centalta
        ,A.cuenta
        ,A1.producto
        ,A.codpais
        ,A.localidad
        ,A.fectrn
        ,A.hortrn
        ,CAST(REPLACE(A.fectrn, '-', '') AS INT) AS cod_fecha --aaaammdd casteado a int
        ,A.codact
        ,A.codcom
        ,A.codcom AS codigo_comercio_ant
        ,A.nomcom
        ,SUM(A.imptrn) AS venta_tarjeta
        ,A.tipfran
        ,A.totcuotas
        ,A.porint
        ,A.tipofac
        ,A.impcca
        ,A.clamoncca
        ,A.impdiv
        ,A.indcruce
        ,SUBSTRING(A.modentdat, 1, 2) AS ind_online
        ,A.numaut
        ,A3.desact AS rubro
        ,A.codrespu
    FROM br_dm_prod_bigdata_reporitf_db.mpdt004 A
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 A1
        ON A.codent = a1.codent
        AND A.centalta = A1.centalta
        AND A.cuenta = A1.cuenta
    INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide A2
        ON A1.identcli = A2.pemid_nro_inn_ide
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt039 A3
        ON A.codact = A3.codact
    WHERE A1.producto = 12
    AND A.tipfran <> 1004
    AND SUBSTRING(A.pan, 1, 6) = '525384'
    GROUP BY
        A.codent
        ,A.centalta
        ,A.cuenta
        ,A.codpais
        ,A.localidad
        ,A.fectrn
        ,A.hortrn
        ,A.codact
        ,A.codcom
        ,A.nomcom
        ,A.tipfran
        ,A.totcuotas
        ,A.porint
        ,A.tipofac
        ,A.impcca
        ,A.clamoncca
        ,A.impdiv
        ,SUBSTRING(A.modentdat, 1, 2)
        ,A.numaut
        ,CAST(A2.pemid_gls_nro_dct_ide_k AS INT)
        ,A3.desact
        ,A1.producto
        ,A.indcruce
        ,A.codrespu
        ;


    CREATE TABLE schm_workspace.cuentas_trxs AS
    SELECT
        A.*
        ,B.rubros_spos
    FROM schm_workspace.cuentas_trxs_paso AS A
    LEFT JOIN (select distinct cod_act,rubro_gestion_spos AS rubros_spos from schm_data_analytics.spos_tabla_arbol) AS B
        ON A.codact = B.cod_act
        ;


       

    CREATE TABLE schm_workspace.cuentas AS
    SELECT
        CAST(B.pemid_gls_nro_dct_ide_k AS INT) AS rut
        ,A.codent
        ,A.centalta
        ,A.cuenta
        ,A.fecalta AS fecalta_ctto
        ,A.fecbaja AS fecbaja_ctto
        ,CAST(REPLACE(A.fecalta, '-', '') AS INT) fecha_alta
        ,A.producto
        ,A.subprodu
        ,A.conprod
    FROM br_dm_prod_bigdata_reporitf_db.mpdt007 A
    INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide B
        ON A.identcli = B.pemid_nro_inn_ide
    WHERE A.producto = '12'
    ;


    DELETE FROM schm_data_analytics.dgtl_cuentas_trxs;


    INSERT INTO schm_data_analytics.dgtl_cuentas_trxs(
        rut
        ,codent
        ,centalta
        ,cuenta
        ,producto
        ,codpais
        ,localidad
        ,fectrn
        ,hortrn
        ,cod_fecha
        ,codact
        ,codcom
        ,codigo_comercio_ant
        ,nomcom
        ,venta_tarjeta
        ,tipfran
        ,totcuotas
        ,porint
        ,tipofac
        ,impcca
        ,clamoncca
        ,impdiv
        ,indcruce
        ,ind_online
        ,numaut
        ,rubro
        ,codrespu
        ,rubros_spos
        )
        SELECT
            rut
            ,codent
            ,centalta
            ,cuenta
            ,producto
            ,codpais
            ,localidad
            ,fectrn
            ,hortrn
            ,cod_fecha
            ,codact
            ,codcom
            ,codigo_comercio_ant
            ,nomcom
            ,venta_tarjeta
            ,tipfran
            ,totcuotas
            ,porint
            ,tipofac
            ,impcca
            ,clamoncca
            ,impdiv
            ,indcruce
            ,ind_online
            ,numaut
            ,rubro
            ,codrespu
            ,rubros_spos
        FROM schm_workspace.cuentas_trxs;

    DELETE FROM schm_data_analytics.dgtl_cuentas;

    INSERT INTO schm_data_analytics.dgtl_cuentas(
        rut
        ,codent
        ,centalta
        ,cuenta
        ,fecalta_ctto
        ,fecha_alta
        ,producto
        ,subprodu
        ,conprod
        )
        SELECT
            rut
            ,codent
            ,centalta
            ,cuenta
            ,fecalta_ctto
            ,fecha_alta
            ,producto
            ,subprodu
            ,conprod
        FROM schm_workspace.cuentas;

    DROP TABLE IF EXISTS schm_workspace.cuentas_trxs_paso;
    DROP TABLE IF EXISTS schm_workspace.cuentas_trxs;
    DROP TABLE IF EXISTS schm_workspace.cuentas;

    /*  ===========================================================================================================
        === Control de versiones visual ===
        2023-10-30 -- v02 -- Rodrigo Gonzalez   --  Se agrega "IF EXISTS" al drop inicial por errores.
        2023-00-00 -- v01 -- Rodrigo Gonzalez   --  Versión original.

        === Información adicional:
        Proceso que ...
        ===========================================================================================================
    */
	 
END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_dgtl_funnel_captacion_digital(v_periodo_ini date, v_periodo_fin date, v_periodo int4, v_periodo_ant int4, v_dia int4, v_fecha date)
	LANGUAGE plpgsql
AS $$
	
	
BEGIN
	
DROP TABLE IF EXISTS schm_workspace.mov_trx_ofe3;	
DROP TABLE IF exists schm_workspace.resumen_oferta;
DROP TABLE IF exists schm_workspace.cod_fin;
DROP TABLE IF exists schm_workspace.resumen_oferta2;
DROP TABLE IF exists schm_workspace.resumen_oferta3;
DROP TABLE IF exists schm_workspace.act_tr;
DROP TABLE IF EXISTS schm_workspace.casti;
DROP TABLE IF EXISTS schm_workspace.casti2;
DROP TABLE IF EXISTS schm_workspace.castigo_final;
DROP TABLE IF EXISTS schm_workspace.castigo;
DROP TABLE IF EXISTS schm_workspace.act_tr_bi;
DROP TABLE IF exists schm_workspace.oferta_visible;
DROP TABLE IF EXISTS schm_workspace.base1;
DROP TABLE IF EXISTS schm_workspace.base2_v1;
DROP TABLE IF EXISTS schm_workspace.base2_v2;
DROP TABLE IF EXISTS schm_workspace.lnegro;
DROP TABLE IF EXISTS schm_workspace.base3;
DROP TABLE IF EXISTS schm_workspace.cruce;
DROP TABLE IF EXISTS schm_workspace.colapso_cruce;
DROP TABLE IF EXISTS schm_workspace.base4;
DROP TABLE IF EXISTS schm_workspace.oferta_ctacte;
DROP TABLE IF EXISTS schm_workspace.curse_funnel_captacion;
DROP TABLE IF EXISTS schm_workspace.curse_nuevos;
DROP TABLE IF EXISTS schm_workspace.curse_dormidos;
DROP TABLE IF EXISTS schm_workspace.curse_credito_cdp;
DROP TABLE IF EXISTS schm_workspace.curse_cv;
DROP TABLE IF EXISTS schm_workspace.curse_cc;
DROP TABLE IF EXISTS schm_workspace.cuenta_creada_limpio;
DROP TABLE IF EXISTS schm_workspace.cuenta_creada_limpio_nuevos;
DROP TABLE IF EXISTS schm_workspace.cuenta_creada_limpio_dormidos;
DROP TABLE IF EXISTS schm_workspace.cuenta_creada_limpio_cdp;
DROP TABLE IF EXISTS schm_workspace.cuenta_cv;
DROP TABLE IF EXISTS schm_workspace.curse_ctacte;
DROP TABLE IF EXISTS schm_workspace.base5;
DROP TABLE IF EXISTS schm_workspace.base6;
DROP TABLE IF EXISTS schm_workspace.retiro_plastico_funnel;
DROP TABLE IF EXISTS schm_workspace.retiro_plastico_cdp_funnel;
DROP TABLE IF EXISTS schm_workspace.retiro_ctacte_funnel;
DROP TABLE IF EXISTS schm_workspace.base7;
DROP TABLE IF EXISTS schm_workspace.saldos_cuenta_corriente_funnel_capta_aux;
DROP TABLE IF EXISTS schm_workspace.saldos_cuenta_corriente_funnel_capta;
DROP TABLE IF EXISTS schm_workspace.movimiento_cuenta_corriente_funnel_capta;
DROP TABLE IF EXISTS schm_workspace.saldos_cuenta_vista_funnel_capta_aux;
DROP TABLE IF EXISTS schm_workspace.saldos_cuenta_vista_funnel_capta;
DROP TABLE IF EXISTS schm_workspace.movimiento_cuenta_vista_funnel_capta;
DROP TABLE IF EXISTS schm_workspace.base8;
DROP TABLE IF EXISTS schm_workspace.oferta_cv;
DROP TABLE IF EXISTS schm_workspace.funnel_digital_captacion;
DROP TABLE IF EXISTS schm_workspace.resumen_digital;
DROP TABLE IF EXISTS schm_workspace.base_biometria;
DROP TABLE IF EXISTS schm_workspace.data_limpia2;
DROP TABLE IF EXISTS schm_workspace.base_paso;
DROP TABLE IF EXISTS schm_workspace.base_paso2;
DROP TABLE IF EXISTS schm_workspace.base_paso3;
DROP TABLE IF EXISTS schm_workspace.base_paso4;
DROP TABLE IF EXISTS schm_workspace.QUERY_FOR_SINACOFI;
DROP TABLE IF EXISTS schm_workspace.INCORPORAR_BIOMETRIA;
DROP TABLE IF EXISTS schm_digital.dgtl_funnel_captacion_solicitudes_online;
DROP TABLE IF EXISTS schm_digital.dgtl_funnel_captacion_solicitud_online_bio;
DROP TABLE IF EXISTS schm_digital.dgtl_funnel_captacion_sinacofi_ok;
DROP TABLE IF EXISTS schm_digital.dgtl_funnel_captacion_formalizacion_ok;
DROP TABLE IF EXISTS schm_digital.dgtl_funnel_captacion_autentificacion_facial;
DROP TABLE IF EXISTS schm_digital.dgtl_funnel_captacion_antecedentes_ok;



--01 ACA tengo fechas
CREATE TABLE schm_workspace.mov_trx_ofe3 AS 
SELECT 
    A.camp_mov_id_k AS identificador
    , A.camp_mov_rut_cli AS rut
    , A.camp_mov_est_act AS est_oferta
    , A.camp_mov_cod_canal AS canal
    , A.camp_mov_cod_suc AS sucursal
    , A.camp_mov_fch_hor AS fecha
    , A.camp_mov_fch_hor_hora AS hora
    , A.camp_mov_nro_term
    , B.producto
    , B.con_producto
    , B.mensaje
    , B.cod_estado
    , B.cod_camp
    , A.camp_mov_nro_bol
    , A.camp_mov_mnt_bol
    , A.camp_mov_mnt_deu_mcc
    , A.camp_mov_mto_deu_bic
    , A.camp_mov_det_sbif_3090
    , A.camp_mov_det_sbif_90180
    , A.camp_mov_det_sbif_180mas
    , A.camp_mov_dias_mora_car
    , A.camp_mov_dias_mora_bco
    , A.camp_mov_mrc_pep
    , A.camp_mov_mrc_lne
    , A.camp_mov_det_sbif_3amas
FROM br_dm_prod_bigdata_camreport_db.cbcamp_mov_trx_ofe AS A 
LEFT JOIN (
    SELECT 
        CAMP_MOV_ID_FK
        , camd_cod_camp cod_camp
        , camd_tip_prod AS producto
        , camd_cod_cnd_prod AS con_producto
        , camd_cod_est_ofe AS cod_estado
        , CASE 
            WHEN camd_msj_popupa IS NOT NULL THEN 1 
            ELSE 0 
        END AS mensaje 
    FROM br_dm_prod_bigdata_camreport_db.cbcamp_mov_det_trx_ofe
    WHERE
    camd_tip_prod IN ('8', '9', '300', '13')) AS B
	ON(A.camp_mov_id_k = B.camp_mov_id_fk)
WHERE 
    A.camp_mov_fch_hor BETWEEN v_periodo_ini AND v_periodo_fin--'2023-11-01' and '2023-11-30' 
    AND A.camp_mov_cod_canal = 2
    AND A.camp_mov_cod_suc = 39
   	--AND B.cod_estado <> 7000
   	--AND A.camp_mov_nro_term <> 3333
   	;

   
 /*  
CREATE TABLE schm_workspace.actual AS 
SELECT 
    A.camp_mov_id_k AS identificador
    , A.camp_mov_rut_cli AS rut
    , A.camp_mov_est_act AS est_oferta
    , A.camp_mov_cod_canal AS canal
    , A.camp_mov_cod_suc AS sucursal
    , A.camp_mov_fch_hor AS fecha
    , A.camp_mov_nro_term
    , B.producto
    , B.con_producto
    , B.mensaje
    , B.cod_estado
    , B.cod_camp
    , A.camp_mov_nro_bol
    , A.camp_mov_mnt_bol
    , A.camp_mov_mnt_deu_mcc
    , A.camp_mov_mto_deu_bic
    , A.camp_mov_det_sbif_3090
    , A.camp_mov_det_sbif_90180
    , A.camp_mov_det_sbif_180mas
    , A.camp_mo30s_mora_car
    , A.camp_mo30s_mora_bco
    , A.camp_mov_mrc_pep
    , A.camp_mov_mrc_lne
    , A.camp_mov_det_sbif_3amas
FROM br_dm_prod_bigdata_camreport_db.cbcamp_mov_trx_ofe AS A
LEFT JOIN (
    SELECT 
        CAMP_MOV_ID_FK
        , CAMD_COD_CAMP cod_camp
        , CAMD_TIP_PROD as PRODUCTO
        , CAMD_COD_CND_PROD AS CON_PRODUCTO
        , CAMD_COD_EST_OFE AS COD_ESTADO
        , CASE  
            WHEN  CAMD_MSJ_POPUPA IS NOT NULL THEN 1 
            ELSE 0 
        END AS MENSAJE 
    FROM br_dm_prod_bigdata_camreport_db.cbcamp_mov_det_trx_ofe
    WHERE
        CAMD_TIP_PROD in ('8', '9', '300', '13')) AS B
    ON(A.camp_mov_id_k = b.camp_mov_id_fk)
WHERE 
    A.camp_mov_fch_hor BETWEEN '2023-07-01' AND '2023-07-31' 
    AND A.camp_mov_cod_canal = 2
    AND A.camp_mov_cod_suc = 39;
  
   
create table schm_workspace.mov_trx_ofe2 as 
select *
from schm_workspace.historico
where cod_estado not in (7000); 


create table schm_workspace.mov_trx_ofe3 as 
select 
*
from schm_workspace.mov_trx_ofe2
where CAMP_MOV_NRO_TERM <> 3333;

*/ 
   
   
--02 ACA TENGO UN PERIODO   
CREATE TABLE schm_workspace.resumen_oferta AS 
SELECT 
    rut
    , prod_comerc AS producto
    , camp_cod_camp_fk AS camp
    , cupo
    , tipo_cliente 
FROM schm_productos_financieros.ppff_capta_cdp
WHERE periodo = v_periodo;--202311


--03
CREATE TABLE schm_workspace.cod_fin AS 
SELECT 
    camp_cod_camp_k
    , camp_tip_prod
    , camp_cond_prod
    , camp_origen_base
FROM br_dm_prod_bigdata_camreport_db.cbcamp_mae_campana;


--04
CREATE TABLE schm_workspace.resumen_oferta2 AS 
SELECT 
    A.*
    , B.*
FROM schm_workspace.resumen_oferta AS A 
LEFT JOIN schm_workspace.cod_fin AS B
	ON(A.camp = B.camp_cod_camp_k);


--05
CREATE TABLE schm_workspace.resumen_oferta3 AS 
SELECT 
    rut
    , producto
    , camp_tip_prod
    , camp_cond_prod
    , CASE 
        WHEN camp_tip_prod = '8' AND camp_cond_prod NOT IN ('812', '815', '814', '803', '804', '813', '816') THEN 'CDP'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('914', '915')) OR (camp_tip_prod = '8' AND camp_cond_prod IN ('814', '815')) THEN 'MCCERRADA'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('900', '901', '902', '903', '999')) THEN 'TR'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod NOT IN ('900', '901', '902', '903', '999', '908', '917', '918')) OR (camp_tip_prod = '8' AND camp_cond_prod IN ('812')) THEN 'TAM'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('908')) OR (camp_tip_prod = '8' AND camp_cond_prod IN ('803', '804')) THEN 'TAMCUOTAS'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('917', '918')) OR (camp_tip_prod = '8' AND camp_cond_prod IN ('813', '816')) THEN 'MCBLACK'
    END AS producto2
    , tipo_cliente
FROM schm_workspace.resumen_oferta2;


--06 v_periodo-2
CREATE TABLE schm_workspace.act_tr AS 
SELECT 
    rut
    , actividad_tr
    , vu_riesgo
    , CASE 
        WHEN marca_base IN ('ITF', 'CREDITO_2000') THEN 'TR' 
        ELSE 'TAM' 
    END AS marca_base
FROM schm_data_analytics.bitr_actividad_tr
WHERE periodo = (select max(periodo)  
from schm_data_analytics.bitr_actividad_tr
where periodo <= v_periodo);


--07
CREATE TABLE schm_workspace.casti AS
SELECT 
	CASE 
		WHEN (SELECT COUNT(1) FROM br_dm_prod_bigdata_sasdata_db.sas_clts_castigos_historicos
				WHERE periodo_campana = v_periodo_ant) IS NULL  THEN 0
		ELSE COUNT(1) 
	END AS pivote
	, v_periodo_ant AS periodo 
FROM br_dm_prod_bigdata_sasdata_db.sas_clts_castigos_historicos
	WHERE periodo_campana = v_periodo_ant;


-- 08 PERIODO  
CREATE TABLE schm_workspace.casti2 AS
SELECT 
	CASE WHEN (SELECT COUNT(1) FROM br_dm_prod_bigdata_sasdata_db.sas_clts_castigos_historicos
		WHERE periodo_campana = v_periodo) IS NULL THEN 0
		ELSE COUNT(1) 
	END AS pivote
	, v_periodo AS periodo
FROM br_dm_prod_bigdata_sasdata_db.sas_clts_castigos_historicos
	WHERE periodo_campana = v_periodo;


--09
CREATE TABLE schm_workspace.castigo_final AS
SELECT 
	*
FROM schm_workspace.casti 
UNION ALL 
SELECT 
	* 
FROM schm_workspace.casti2 ;



--10 PERIODO Y PERIODO-1
CREATE TABLE schm_workspace.castigo AS
SELECT 
	rut 
FROM br_dm_prod_bigdata_sasdata_db.sas_clts_castigos_historicos
WHERE periodo_campana = (SELECT DISTINCT 
	CASE 
		WHEN (SELECT pivote FROM schm_workspace.castigo_final WHERE periodo = v_periodo) > 0 THEN v_periodo
		ELSE v_periodo_ant
	END AS periodo
FROM schm_workspace.castigo_final);


--11 PERIODO cambiar a v_periodo_ini(probar esto)
CREATE TABLE schm_workspace.act_tr_bi as 
SELECT DISTINCT 
    rut 
FROM br_dm_prod_bigdata_sasdata_db.sas_ctbl_contrato_rut
WHERE 
	fecalta < v_periodo;--1ER DIA DEL MES...v_periodo
 

--12
CREATE TABLE schm_workspace.oferta_visible AS 
SELECT DISTINCT 
    rut
    , cod_camp
    , producto
    , con_producto
    , CASE 
        WHEN producto = '300' THEN 'CV'
        WHEN producto = '13' THEN 'CTACTE'
        WHEN producto = '8' AND con_producto NOT IN ('812', '815', '814', '803', '804', '813', '816') THEN 'CDP'
        WHEN (producto = '9' AND con_producto IN ('914', '915')) OR (producto = '8' AND con_producto IN ('814', '815')) THEN 'MCCERRADA'
        WHEN (producto = '9' AND con_producto IN ('900', '901', '902', '903', '999')) THEN 'TR' 
        WHEN (producto = '9' AND con_producto NOT IN ('900', '901', '902', '903', '999', '908', '917', '918')) OR (producto = '8' AND con_producto = '812') THEN 'TAM'
        WHEN (producto = '9' AND con_producto = '908') OR (producto = '8' AND con_producto IN ('803', '804')) THEN 'TAMCUOTAS' 
        WHEN (producto = '9' AND con_producto IN ('917', '918')) OR (producto = '8' AND con_producto IN ('813', '816')) THEN 'MCBLACK' 
    END AS oferta
    , B.camp_origen_base
FROM schm_workspace.mov_trx_ofe3  AS A 
LEFT JOIN schm_workspace.cod_fin AS B
    ON (A.cod_camp = B.CAMP_COD_CAMP_K)
WHERE COD_CAMP IS NOT NULL;


--13 
CREATE TABLE schm_workspace.base1 AS 
SELECT  
    rut
    , datepart(day, fecha) AS dia
    , fecha
    , count(distinct substring(hora, 1, 2)) AS visitas_1
FROM schm_workspace.mov_trx_ofe3
group by 
	rut
	, fecha;


--14 
CREATE TABLE schm_workspace.base2_v1 AS 
SELECT DISTINCT
    A.*
    , CASE 
        WHEN B1.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS vu
    , B1.actividad_tr
    , B1.vu_riesgo
    , B1.marca_base
    , CASE 
        WHEN B2.rut IS NOT NULL THEN B2.producto2 
        WHEN B2.rut IS NULL AND D.rut IS NOT NULL THEN D.oferta
        ELSE 'SIN OFERTA' 
    END AS CON_OFERTA
    , CASE 
        WHEN B2.rut IS NOT NULL THEN tipo_cliente::INTEGER
        WHEN B2.rut IS NULL AND D.rut IS NOT NULL THEN D.camp_origen_base 
    END AS tipo_cliente
FROM schm_workspace.base1 AS A
LEFT JOIN schm_workspace.act_tr AS B1
    ON(A.rut = B1.rut)
LEFT JOIN schm_workspace.resumen_oferta3 AS B2
    ON(A.rut = B2.rut)
LEFT JOIN (SELECT * FROM schm_workspace.oferta_visible WHERE rut NOT IN (SELECT rut FROM schm_workspace.resumen_oferta2) AND oferta NOT IN ('CV','CTACTE')) AS D
ON(A.rut = D.rut);  


--15 3 peridodos ant
CREATE TABLE schm_workspace.base2_v2 AS
SELECT 
    A.*
    , CASE 
        WHEN (con_oferta NOT IN ('SIN OFERTA', 'CDP') AND tipo_cliente in('102', '108', '201', '207')) OR (vu = 0 OR D.rut IS NOT NULL) THEN 1 
        ELSE 0 
    END AS uof_nuevos
    , CASE 
        WHEN (con_oferta NOT IN ('SIN OFERTA', 'CDP') AND tipo_cliente IS NOT NULL AND tipo_cliente NOT IN('102', '108', '201', '207') AND uof_nuevos = 0)
        OR (vu = 1 AND actividad_TR in ('DORMIDO BLANDO', 'DORMIDO DURO', 'ANTIGUO SIN USO') AND uof_nuevos = 0) THEN 1 
        ELSE 0 
    END AS uof_dormidos
    , CASE 
        WHEN uof_nuevos = 1 OR uof_dormidos = 1 THEN 1 
        ELSE 0 
    END AS uof_capta
    , CASE 
        WHEN uof_capta = 0 AND vu_riesgo = 1 AND ACTIVIDAD_TR = 'ACTIVO' THEN 1 
        ELSE 0 
    END AS no_uof_capta_vu_activo
    , CASE 
        WHEN uof_capta = 0 AND vu_riesgo = 1 AND ACTIVIDAD_TR = 'SEMIACTIVO' THEN 1 
        ELSE 0 
    END AS no_uof_capta_vu_semi
    , CASE 
        WHEN uof_capta = 0 AND NO_UOF_CAPTA_VU_ACTIVO = 0 AND NO_UOF_CAPTA_VU_semi = 0 THEN 1
        ELSE 0 
    END AS no_uof_capta_no_dormido
    , CASE 
        WHEN (CON_OFERTA = 'CDP') OR (E.RUT IS NOT NULL AND marca_base = 'TR' AND vu_riesgo = 1 AND actividad_TR = 'ACTIVO') THEN 1 
        ELSE 0 
    END AS uof_cdp
    , CASE 
        WHEN vu_riesgo = 0 AND marca_base = 'TR' AND UOF_CDP = 0 THEN 1 
        ELSE 0 
    END AS no_uof_cdp1
    , CASE 
        WHEN vu_riesgo > 0 AND marca_base = 'TAM' AND UOF_CDP = 0 THEN 1 
        ELSE 0 
    END AS no_uof_cdp2
    , CASE 
        WHEN UOF_CDP = 0 AND no_uof_cdp1 = 0 AND no_uof_cdp2 = 0 THEN 1 
        ELSE 0 
    END AS no_uof_cdp3
    , COALESCE(C.deuda_morosa_30_90, 0) AS r04_morosa_30_90
    , COALESCE(C.deuda_directa_vencida, 0) AS r04_directa_vencida
    , COALESCE(C.deuda_inversiones_financieras, 0) AS r04_inversiones_financieras
    , COALESCE(C.saldo_deuda_castigada_directa , 0) AS r04_castigada_directa
    , COALESCE(C.saldo_deuda_castigada_indirect, 0) AS r04_castigada_indirect
    , CASE 
        WHEN C1.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS lnegro
    , CASE 
        WHEN C2.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS mora_sinacofi
FROM schm_workspace.base2_v1 AS A
LEFT JOIN (select * from schm_data_analytics.R04_SDE where periodo = (select max(periodo) from schm_data_analytics.R04_SDE where periodo <= v_periodo)) AS C --CAMBIAR ORIGEN 
	ON A.rut = C.rut
LEFT JOIN (SELECT DISTINCT rut FROM schm_data_analytics.ctbl_lnegro_car WHERE TIPO_INHIBICION <>'PEP') AS C1
	ON (A.rut = C1.rut)
LEFT JOIN (SELECT DISTINCT rut FROM schm_data_analytics.mdpg_mora_sinacofi WHERE mora_consolidada >= 10000) AS C2
	ON (A.rut = C2.rut)
LEFT JOIN schm_workspace.castigo AS D
	ON (A.rut = D.rut)
LEFT JOIN schm_workspace.act_tr_bi AS E 
	ON (A.rut = E.rut);




--16
CREATE TABLE schm_workspace.lnegro AS 
SELECT DISTINCT 
    rut 
FROM schm_data_analytics.ctbl_lnegro_car
WHERE 
    tipo_inhibicion IN ('COMPLIANCE', 'FALLECIDO', 'FALLECIDOS', 'LRI', 'SIR');
   
   
   
--17 PERIDOO   
CREATE TABLE schm_workspace.base3 AS 
SELECT DISTINCT 
    A.*
    , MAX(CASE 
            WHEN B.rut IS NULL OR C.estado_cuenta = 'cerrado'  THEN 1 
            WHEN C.rut IS NOT NULL AND CAST(TO_CHAR(C.fecha_apertura,'YYYYMM') AS INT) = v_periodo THEN 1 
    ELSE 0 END) AS UOF_CV
    , MAX(CASE 
            WHEN B.rut IS NULL OR D.estado_cuenta = 'cerrado'  THEN 1 
            WHEN D.rut IS NOT NULL AND CAST(TO_CHAR(D.fecha_apertura,'YYYYMM') AS INT)  = v_periodo THEN 1 
    ELSE 0 END) AS UOF_CC
FROM schm_workspace.base2_v2 AS A
LEFT JOIN schm_workspace.lnegro AS B
    ON (A.rut = B.rut)
LEFT JOIN schm_data_analytics.ppff_ctavta1_stock AS C
    ON (A.rut = C.rut)
LEFT JOIN schm_data_analytics.ppff_stock_cc AS D
    ON (A.rut = D.rut)
GROUP BY 
    A.rut
    , A.dia
	, A.fecha
	, A.visitas_1
	, A.vu
	, A.actividad_tr
	, A.vu_riesgo
	, A.marca_base
	, A.con_oferta
	, A.tipo_cliente
	, A.uof_nuevos
	, A.uof_dormidos
	, A.uof_capta
	, A.no_uof_capta_vu_activo
	, A.no_uof_capta_vu_semi
	, A.no_uof_capta_no_dormido
	, A.uof_cdp
	, A.no_uof_cdp1
	, A.no_uof_cdp2
	, A.no_uof_cdp3
	, A.r04_morosa_30_90
	, A.r04_directa_vencida
	, A.r04_inversiones_financieras
	, A.r04_castigada_directa
	, A.r04_castigada_indirect
	, A.lnegro
	, A.mora_sinacofi;


--18
CREATE TABLE schm_workspace.cruce AS 
SELECT 
    *
    , CASE 
        WHEN producto = '300' THEN 1 
        ELSE 0 
    END AS cv
    , CASE 
        WHEN producto = '13' THEN 1 
        ELSE 0 
    END AS cc
    , CASE 
        WHEN producto = '8' AND con_producto NOT IN ('812', '815', '814', '803', '804', '813', '816') THEN 1 
        ELSE 0 
    END AS cdp
    , CASE 
        WHEN producto = '9' AND con_producto IN ('914', '915') OR (producto = '8' AND con_producto IN ('814','815')) THEN 1 
        ELSE 0 
    END AS mccerrada
    , CASE 
        WHEN (producto = '9' AND con_producto IN ('900', '901', '902', '903', '999')) THEN 1 
        ELSE 0 
    END AS tr
    , CASE 
        WHEN (producto = '9' AND con_producto NOT IN ('900', '901', '902', '903', '999', '908', '917', '918')) OR (producto = '8' AND con_producto = '812') THEN 1 
        ELSE 0 
    END AS tam
    , CASE 
        WHEN (producto = '9' AND con_producto = '908') OR (producto = '8' AND con_producto IN ('803', '804')) THEN 1 
        ELSE 0 
    END AS tamcuotas
    , CASE 
        WHEN (producto = '9' AND con_producto  IN ('917', '918')) OR (producto = '8' AND con_producto IN ('813', '816')) THEN 1 
        ELSE 0 
    END AS mcblack
    , CASE 
        WHEN camp_mov_mnt_deu_mcc > 10000 THEN 1 
        ELSE 0 
    END AS deu_mcc
    , CASE 
        WHEN camp_mov_mto_deu_bic > 10000 THEN 1 
        ELSE 0 
    END AS deu_bic
    , CASE 
        WHEN camp_mov_mnt_deu_mcc + camp_mov_mnt_deu_mcc > 10000 THEN 1 
        ELSE 0 
    END AS monto_mora
    , CASE 
        WHEN camp_mov_det_sbif_3090 > 0 THEN 1 
        ELSE 0 
    END AS det_sbif_3090
    , CASE 
        WHEN camp_mov_det_sbif_90180 > 0 THEN 1 
        ELSE 0 
    END AS det_sbif_90180
    , CASE 
        WHEN camp_mov_det_sbif_180mas > 0 THEN 1 
        ELSE 0 
    END AS det_sbif_180mas
    , CASE 
        WHEN camp_mov_det_sbif_3amas > 0 THEN 1 
        ELSE 0 
    END AS det_sbif_3amas
    , CASE 
        WHEN camp_mov_dias_mora_car > 0 THEN 1 
        ELSE 0 
    END AS dias_mora_car
    , CASE 
        WHEN camp_mov_dias_mora_bco > 0 THEN 1 
        ELSE 0 
    END AS dias_mora_bco
FROM schm_workspace.mov_trx_ofe3;


--19
CREATE TABLE schm_workspace.colapso_cruce AS 
SELECT  
	rut
    , DATEPART(DAY, fecha) AS dia 
    , MAX(CASE 
        WHEN cdp = 1 THEN 1 
        ELSE 0 
    END) AS salta_cdp
    , MAX(CASE 
        WHEN cod_estado IN (118, 122) AND cdp = 1 THEN 1 
        ELSE 0 
    END) AS acepta_cdp
    , MAX(CASE 
        WHEN cod_estado = 122 AND cdp = 1 THEN 1 
        ELSE 0 
    END) AS acepta_real_cdp
    , MAX(CASE 
        WHEN tam = 1 THEN 1 
        ELSE 0 
    END) AS salta_tam
    , MAX(CASE 
        WHEN cod_estado IN (118, 122) AND tam = 1 THEN 1 
        ELSE 0 
    END) AS acepta_tam 
    , MAX(CASE 
        WHEN cod_estado = 122  AND tam = 1 THEN 1 
        ELSE 0 
    END) AS acepta_real_tam
    , MAX(CASE 
        WHEN tr = 1 THEN 1 
        ELSE 0 
    END) AS salta_tr
    , MAX(CASE 
        WHEN cod_estado IN (118, 122) AND tr = 1 THEN 1 
        ELSE 0 
    END) AS acepta_tr
    , MAX(CASE 
        WHEN cod_estado = 122 AND tr = 1 THEN 1 
        ELSE 0 
    END) AS acepta_real_tr
    , MAX(CASE 
        WHEN mccerrada = 1 THEN 1 
        ELSE 0 
    END) AS salta_mccerrada
    , MAX(CASE 
        WHEN cod_estado IN (118, 122) AND mccerrada = 1 THEN 1 
        ELSE 0 
    END) AS acepta_mccerrada
    , MAX(CASE 
        WHEN cod_estado = 122 AND mccerrada = 1 THEN 1 
        ELSE 0 
    END) AS ACEPTA_REAL_MCCERRADA
    , MAX(CASE 
        WHEN tamcuotas = 1 THEN 1 
        ELSE 0 
    END ) AS salta_tamcuotas
    , MAX(CASE 
        WHEN cod_estado IN (118, 122) AND tamcuotas = 1 THEN 1 
        ELSE 0 
    END) AS acepta_tamcuotas
    , MAX(CASE 
        WHEN cod_estado = 122 AND tamcuotas = 1 THEN 1 
        ELSE 0 
    END) AS acepta_real_tamcuotas
    , MAX(CASE 
        WHEN mcblack = 1 THEN 1 
        ELSE 0 
    END ) AS salta_mcblack
    , MAX(CASE 
        WHEN cod_estado IN (118, 122) AND mcblack = 1 THEN 1 
        ELSE 0 
    END) AS acepta_mcblack
    , MAX(CASE 
        WHEN cod_estado = 122 AND mcblack = 1 THEN 1 
        ELSE 0 
    END) AS acepta_real_mcblack
    , MAX(CASE 
        WHEN cv = 1 THEN 1 
        ELSE 0 
    END ) AS salta_cv
    , MAX(CASE 
        WHEN cod_estado IN (118, 122) AND cv = 1 THEN 1 
        ELSE 0 
    END) AS acepta_cv
    , MAX(CASE 
        WHEN cod_estado = 122 AND cv = 1 THEN 1 
        ELSE 0 
    END) AS acepta_real_cv
    , MAX(CASE 
        WHEN cc = 1 THEN 1 
        ELSE 0 
    END) AS salta_cc
    , MAX(CASE 
        WHEN cod_estado IN (118, 122) AND cc = 1 THEN 1 
        ELSE 0 
    END) AS acepta_cc
    , MAX(CASE 
        WHEN cod_estado = 122 AND cc = 1 THEN 1 
        ELSE 0 
    END) AS acepta_real_cc
    , MAX(CASE 
        WHEN deu_mcc = 1 THEN 1 
        ELSE 0 
    END) AS deu_mcc
    , MAX(CASE 
        WHEN deu_bic = 1 THEN 1 
        ELSE 0 
    END) AS deu_bic
    , MAX(CASE 
        WHEN monto_mora = 1 THEN 1 
        ELSE 0 
    END) AS monto_mora
    , MAX(CASE 
        WHEN det_sbif_3090 = 1 THEN 1 
        ELSE 0 
    END) AS det_sbif_3090
    , MAX(CASE 
        WHEN det_sbif_90180 = 1 THEN 1 
        ELSE 0 
    END) AS det_sbif_90180
    , MAX(CASE 
        WHEN det_sbif_180mas = 1 THEN 1 
        ELSE 0 END) AS det_sbif_180mas
    , MAX(CASE 
        WHEN det_sbif_3amas = 1 THEN 1 
        ELSE 0 END) AS det_sbif_3amas
    , MAX(CASE 
        WHEN dias_mora_car = 1 THEN 1 
        ELSE 0 END) AS dias_mora_car
    , MAX(CASE 
        WHEN dias_mora_bco = 1 THEN 1 
        ELSE 0 END) AS dias_mora_bco
FROM schm_workspace.cruce
WHERE rut IS NOT NULL
GROUP BY 
    rut
    , dia;

  

--20   
CREATE TABLE schm_workspace.base4 AS 
SELECT  
    a.*
    , COALESCE(salta_cdp, 0) AS salta_cdp
    , COALESCE(acepta_cdp, 0) AS acepta_cdp
    , COALESCE(acepta_real_cdp, 0) AS acepta_real_cdp  
    , COALESCE(salta_tam, 0) AS salta_tam	
    , COALESCE(acepta_tam, 0) AS acepta_tam	
    , COALESCE(acepta_real_tam, 0) AS acepta_real_tam	
    , COALESCE(salta_tr, 0) AS salta_tr	
    , COALESCE(acepta_tr, 0) AS acepta_tr
    , COALESCE(acepta_real_tr, 0) AS acepta_real_tr
    , COALESCE(salta_mccerrada, 0) AS salta_mccerrada
    , COALESCE(acepta_mccerrada, 0) AS acepta_mccerrada
    , COALESCE(acepta_real_mccerrada, 0) AS acepta_real_mccerrada 
    , COALESCE(salta_tamcuotas, 0) AS salta_tamcuotas
    , COALESCE(acepta_tamcuotas, 0) AS acepta_tamcuotas
    , COALESCE(acepta_real_tamcuotas, 0) AS acepta_real_tamcuotas
    , COALESCE(salta_mcblack, 0) AS salta_mcblack
    , COALESCE(acepta_mcblack, 0) AS acepta_mcblack
    , COALESCE(acepta_real_mcblack, 0) AS acepta_real_mcblack
    , COALESCE(salta_cv, 0) AS salta_cv	
    , COALESCE(acepta_cv, 0) AS acepta_cv
    , COALESCE(acepta_real_cv, 0) AS acepta_real_cv
    , COALESCE(salta_cc, 0) AS salta_cc
    , COALESCE(acepta_cc, 0) AS acepta_cc
    , COALESCE(acepta_real_cc, 0) AS acepta_real_cc
    , COALESCE(deu_mcc, 0) AS deu_mcc
    , COALESCE(deu_bic, 0) AS deu_bic
    , COALESCE(monto_mora, 0) AS monto_mora
    , COALESCE(det_sbif_3090, 0) AS det_sbif_3090
    , COALESCE(det_sbif_90180, 0) AS det_sbif_90180
    , COALESCE(det_sbif_180mas, 0) AS det_sbif_180mas
    , COALESCE(det_sbif_3amas, 0) AS det_sbif_3amas
    , COALESCE(dias_mora_car, 0) AS dias_mora_car
    , COALESCE(dias_mora_bco, 0) AS dias_mora_bco
FROM schm_workspace.base3 AS A 
LEFT JOIN schm_workspace.colapso_cruce AS B2
	ON(A.rut = B2.rut) AND (A.dia = B2.dia);


--21
CREATE TABLE schm_workspace.oferta_ctacte AS
SELECT DISTINCT 
    camp_cod_camp_fk AS camp
    , camp_rut_cli AS rut
    , camp_dv_cli AS dv
    , camp_cod_tip_prod AS tip_prod
    , camp_cod_cnd_prod AS cnd_prod
    , camp_nom_cli AS nombres
    , camp_ape_pat_cli AS paterno
    , camp_ape_mat_cli AS materno
    , camp_flg_camp
    , camp_est_camp
FROM br_dm_prod_bigdata_camreport_db.cbcamp_mae_ofertas AS T1
INNER JOIN (SELECT DISTINCT
                camp_cod_camp_k
                , camp_fch_ini_camp
                , camp_tip_prod
                , camp_est_camp
            FROM br_dm_prod_bigdata_camreport_db.cbcamp_mae_campana) AS T2
    ON (T1.camp_cod_camp_fk = T2.camp_cod_camp_k)
    AND camp_flg_camp = 1
    AND camp_est_camp = 2 
    AND camp_tip_prod = '13';
   
   
   
  
--22  FECHAS
CREATE TABLE schm_workspace.curse_funnel_captacion AS 
SELECT DISTINCT 
    TAR.tar_cac_nro_ctt_k AS numero_contrato
    , TAR.tar_cac_nro_pan_k AS numero_tarjeta
    , SOL.sol_cod_ide_cli AS rut_cliente
    , SOL.sol_fch_alt_sol AS fecha_solicitud
    , SOL.sol_cod_nro_sol_k AS numero_solicitud
    , SOL.sol_cod_est_sol AS estado
    , SEG.seg_cac_seg_des AS glosaseguro
    , FLJ.flj_cod_nro_eta_act || ' - ' || ETA.eta_cac_nom_eta AS etapa
    , DECODE(FLJ.flj_cod_nro_eta_act, 50, '8', '103', 8, '60', 9, '104', 9, 3, '8', '4', 9, SOL.sol_cod_est_sol) AS estado_final
    , CASE 
        WHEN SOL.sol_cod_ind_cu = 0 THEN 'SIN CLAVE UNICA' 
        ELSE 'CLAVE UNICA EXITOSA' 
    END AS clave
    , DECODE(SOL.sol_cod_cll_act, 3, 'admision', 14, 'online', 9, 'movil', SOL.sol_cod_cll_act::varchar) AS ultimo_canal 
    , TAR.tar_coc_prd
    , TAR.tar_coc_sub_prd
    , MPDT.desprod AS tipo_producto 
    , TET.ofe_cac_cod_cps AS camp
    , TET.ofe_cod_prd_ofe_k AS codigo_camp
FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol AS SOL 
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar AS TAR
    ON TAR.tar_cod_nro_sol_k = SOL.sol_cod_nro_sol_k
LEFT OUTER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_seg_asc AS SEG
    ON  SOL.sol_cod_nro_sol_k = SEG.seg_cod_nro_sol_k
    AND SEG.seg_cac_seg_chk = 1
LEFT OUTER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_fir_dct_sol AS FIR
    ON  SOL.sol_cod_nro_sol_k = FIR.fir_cod_nro_sol_k
    AND FIR.fir_cod_fir_ide_k BETWEEN 500 AND 600
    AND FIR.fir_cod_seg_ide_seg IS NOT NULL 
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_wfw_flj_sol AS FLJ -- NUEVA
    ON SOL.sol_cod_nro_sol_k = FLJ.flj_cod_nro_sol_k
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_wfw_eta AS ETA
    ON ETA.eta_cod_nro_eta_k = FLJ.flj_cod_nro_eta_act
    AND ETA.eta_cod_nro_flj_k = FLJ.flj_cod_nro_flj_act
LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt043 AS MPDT
    ON TAR.tar_coc_prd = MPDT.producto 
    AND TAR.tar_coc_sub_prd = MPDT.subprodu
LEFT JOIN (SELECT * FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe WHERE SUBSTRING(ofe_cod_prd_ofe_k, 1, 2) = '01' ) AS TET
    ON SOL.sol_cod_nro_sol_k = TET.ofe_cod_nro_sol_k
WHERE 
    SUBSTRING(TAR.tar_cod_tip_prd_k, 1, 2) = '01'
    AND SOL.sol_fch_crc_sol BETWEEN v_periodo_ini AND v_periodo_fin
    AND (SOL.sol_cod_cll_act = 14 OR SOL.sol_cod_cll_ant = 14)
    AND SOL.sol_cod_cll_adm = 2
    AND EXISTS (SELECT 
                    btc_cod_nro_sol_k
                FROM br_dm_prod_bigdata_reporitf_db.SFADMI_BCO_BTC_SOL
                WHERE btc_cod_nro_sol_k = SOL.sol_cod_nro_sol_k
                    AND btc_cod_tip_reg_k = 1
                    AND btc_cod_eta_k = 102
                    AND btc_cod_evt_k = 30)
ORDER BY SOL.sol_cod_nro_sol_k ASC;


--23 FECHAS 

CREATE TABLE schm_workspace.curse_nuevos AS 
SELECT DISTINCT 
    TAR.tar_cac_nro_ctt_k AS numero_contrato
    , TAR.tar_cac_nro_pan_k AS numero_tarjeta
    , SOL.sol_cod_ide_cli AS rut_cliente
    , SOL.sol_fch_alt_sol AS fecha_solicitud
    , SOL.sol_cod_nro_sol_k AS numero_solicitud
    , SOL.sol_cod_est_sol AS estado
    , SEG.seg_cac_seg_des AS glosaseguro
    , FLJ.flj_cod_nro_eta_act || ' - ' || ETA.eta_cac_nom_eta AS etapa
    , DECODE(FLJ.flj_cod_nro_eta_act, 50, '8', '103', 8, '60', 9, '104', 9, 3, '8', '4', 9, SOL.sol_cod_est_sol) AS estado_final
    , CASE 
        WHEN SOL.sol_cod_ind_cu = 0 THEN 'SIN CLAVE UNICA' 
        ELSE 'CLAVE UNICA EXITOSA' 
    END AS clave
    , DECODE(sol_cod_cll_act, 3, 'admision', 14, 'online', 9, 'movil', SOL.sol_cod_cll_act::varchar) AS ultimo_canal
    ,TAR.tar_coc_prd
    , TAR.tar_coc_sub_prd
    , MPDT.desprod AS tipo_producto 
    , TET.ofe_cac_cod_cps AS camp
    , TET.ofe_cod_prd_ofe_k AS codigo_camp
FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol AS SOL 
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar AS TAR
    ON TAR.tar_cod_nro_sol_k = SOL.sol_cod_nro_sol_k
LEFT OUTER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_seg_asc AS SEG
    ON  SOL.sol_cod_nro_sol_k = SEG.seg_cod_nro_sol_k
    AND SEG.seg_cac_seg_chk = 1
LEFT OUTER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_fir_dct_sol AS FIR
    ON  SOL.sol_cod_nro_sol_k = FIR.fir_cod_nro_sol_k
    AND FIR.fir_cod_fir_ide_k BETWEEN 500 AND 600
    AND FIR.fir_cod_seg_ide_seg IS NOT NULL 
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_wfw_flj_sol AS FLJ -- NUEVA
    ON SOL.sol_cod_nro_sol_k = FLJ.flj_cod_nro_sol_k
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe ofe
    ON SOL.sol_cod_nro_sol_k = OFE.ofe_cod_nro_sol_k 
    AND SUBSTRING(OFE.ofe_cod_prd_ofe_k, 1, 2) = '01' 
    AND OFE.ofe_cod_ind_drm <> 1 
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_wfw_eta AS ETA
    ON ETA.eta_cod_nro_eta_k = FLJ.flj_cod_nro_eta_act
    AND ETA.eta_cod_nro_flj_k = FLJ.flj_cod_nro_flj_act
LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt043 AS MPDT
    ON TAR.tar_coc_prd = MPDT.producto 
    AND TAR.tar_coc_sub_prd = MPDT.subprodu
LEFT JOIN (SELECT * FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe WHERE SUBSTRING(ofe_cod_prd_ofe_k, 1, 2) = '01' ) AS TET
    ON SOL.sol_cod_nro_sol_k = TET.ofe_cod_nro_sol_k
WHERE 
    SUBSTRING(TAR.tar_cod_tip_prd_k, 1, 2) = '01'
    AND SOL.sol_fch_crc_sol BETWEEN v_periodo_ini AND v_periodo_fin
    AND (SOL.sol_cod_cll_act = 14 OR SOL.sol_cod_cll_ant = 14)
    AND SOL.sol_cod_cll_adm = 2
    AND EXISTS (SELECT 
                    btc_cod_nro_sol_k
                FROM br_dm_prod_bigdata_reporitf_db.SFADMI_BCO_BTC_SOL
                WHERE btc_cod_nro_sol_k = SOL.sol_cod_nro_sol_k
                    AND btc_cod_tip_reg_k = 1
                    AND btc_cod_eta_k = 102
                    AND btc_cod_evt_k = 30)
ORDER BY SOL.sol_cod_nro_sol_k ASC;


--24 FECHAS
CREATE TABLE schm_workspace.curse_dormidos AS 
SELECT DISTINCT 
    TAR.tar_cac_nro_ctt_k AS numero_contrato
    , TAR.tar_cac_nro_pan_k AS numero_tarjeta
    , SOL.sol_cod_ide_cli AS rut_cliente
    , SOL.sol_fch_alt_sol AS fecha_solicitud
    , SOL.sol_cod_nro_sol_k AS numero_solicitud
    , SOL.sol_cod_est_sol AS estado
    , SEG.seg_cac_seg_des AS glosaseguro
    , FLJ.flj_cod_nro_eta_act || ' - ' || ETA.eta_cac_nom_eta AS etapa
    , DECODE(FLJ.flj_cod_nro_eta_act, 50, '8', '103', 8, '60', 9, '104', 9, 3, '8', '4', 9, SOL.sol_cod_est_sol) AS estado_final
    , CASE 
        WHEN SOL.sol_cod_ind_cu = 0 THEN 'SIN CLAVE UNICA' 
        ELSE 'CLAVE UNICA EXITOSA' 
    END AS clave
    , DECODE(sol_cod_cll_act, 3, 'admision', 14, 'online', 9, 'movil', SOL.sol_cod_cll_act::varchar) AS ultimo_canal
    , TAR.tar_coc_prd
    , TAR.tar_coc_sub_prd
    , MPDT.desprod AS tipo_producto 
    , TET.ofe_cac_cod_cps AS camp
    , TET.ofe_cod_prd_ofe_k AS codigo_camp
FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol AS SOL 
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar AS TAR
    ON TAR.tar_cod_nro_sol_k = SOL.sol_cod_nro_sol_k
LEFT OUTER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_seg_asc AS SEG
    ON  SOL.sol_cod_nro_sol_k = SEG.seg_cod_nro_sol_k
    AND SEG.seg_cac_seg_chk = 1
LEFT OUTER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_fir_dct_sol AS FIR
    ON  SOL.sol_cod_nro_sol_k = FIR.fir_cod_nro_sol_k
    AND FIR.fir_cod_fir_ide_k BETWEEN 500 AND 600
    AND FIR.fir_cod_seg_ide_seg IS NOT NULL
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_wfw_flj_sol AS FLJ -- Nueva
    ON SOL.sol_cod_nro_sol_k = FLJ.flj_cod_nro_sol_k
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe ofe
    ON SOL.sol_cod_nro_sol_k = OFE.ofe_cod_nro_sol_k 
    AND SUBSTRING(OFE.ofe_cod_prd_ofe_k, 1, 2) = '01' 
    AND OFE.ofe_cod_ind_drm = 1
    AND OFE.ofe_cod_ind_sol = 1
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_wfw_eta AS ETA
    ON ETA.eta_cod_nro_eta_k = FLJ.flj_cod_nro_eta_act
    AND ETA.eta_cod_nro_flj_k = FLJ.flj_cod_nro_flj_act
LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt043 AS MPDT
    ON TAR.tar_coc_prd = MPDT.producto 
    AND TAR.tar_coc_sub_prd = MPDT.subprodu
LEFT JOIN (SELECT * FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe WHERE SUBSTRING(ofe_cod_prd_ofe_k, 1, 2) = '01' ) AS TET
    ON SOL.sol_cod_nro_sol_k = TET.ofe_cod_nro_sol_k 
WHERE 
    SUBSTRING(TAR.tar_cod_tip_prd_k, 1, 2) = '01'
    AND SOL.sol_fch_crc_sol BETWEEN v_periodo_ini AND v_periodo_fin
    AND (SOL.sol_cod_cll_act = 14 OR SOL.sol_cod_cll_ant = 14)
    AND SOL.sol_cod_cll_adm = 2
    AND EXISTS (SELECT 
                    btc_cod_nro_sol_k
                FROM br_dm_prod_bigdata_reporitf_db.SFADMI_BCO_BTC_SOL
                WHERE btc_cod_nro_sol_k = SOL.sol_cod_nro_sol_k
                    AND btc_cod_tip_reg_k = 1
                    AND btc_cod_eta_k = 102
                    AND btc_cod_evt_k = 30)
ORDER BY SOL.sol_cod_nro_sol_k ASC;


--25 FECHAS
CREATE TABLE schm_workspace.curse_credito_cdp AS 
SELECT DISTINCT 
    TAR.tar_cac_nro_ctt_k  AS numero_contrato
    , TAR.tar_cac_nro_pan_k AS numero_tarjeta
    , SOL.sol_cod_ide_cli AS rut_cliente
    , SOL.sol_fch_alt_sol AS  fecha_solicitud
    , SOL.sol_cod_nro_sol_k AS numero_solicitud
    , SOL.sol_cod_est_sol AS estado
    , SEG.seg_cac_seg_des AS glosaseguro
    , FLJ.flj_cod_nro_eta_act || ' - ' || ETA.eta_cac_nom_eta AS ETAPA
    , CASE 
        WHEN FLJ.flj_cod_nro_eta_act = 50 THEN 8
        WHEN FLJ.flj_cod_nro_eta_act = 103 THEN 8
        WHEN FLJ.flj_cod_nro_eta_act = 60 THEN 9
        WHEN FLJ.flj_cod_nro_eta_act = 104 THEN 9
        WHEN FLJ.flj_cod_nro_eta_act = 3 THEN 8 
        WHEN FLJ.flj_cod_nro_eta_act = 4 THEN 9
        ELSE SOL.sol_cod_est_sol 
    END AS estado_final
    , CASE WHEN sol_cod_ind_cu = 0 THEN 'SIN CLAVE UNICA' 
        ELSE 'CLAVE UNICA EXITOSA' 
    END AS clave
    , CASE WHEN  sol_cod_cll_act = 3 THEN 'ADMISION'
        WHEN sol_cod_cll_act = 14 THEN 'ONLINE'
        WHEN sol_cod_cll_act = 9 THEN 'MOVIL'
        ELSE sol_cod_cll_act:: VARCHAR 
    END AS ultimo_canal
    , T.ofe_cac_cod_cps AS camp
    , T.ofe_cod_prd_ofe_k AS codigo_camp
FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol AS SOL 
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar AS TAR
    ON TAR.tar_cod_nro_sol_k = SOL.sol_cod_nro_sol_k
LEFT JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_seg_asc AS SEG
    ON SOL.sol_cod_nro_sol_k = SEG.seg_cod_nro_sol_k
    AND seg_cac_seg_chk = 1
LEFT JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_fir_dct_sol AS FIR
    ON SOL.sol_cod_nro_sol_k = FIR.fir_cod_nro_sol_k
    AND FIR.fir_cod_fir_ide_k BETWEEN 500 AND 600
    AND FIR.fir_cod_seg_ide_seg IS NOT NULL 
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_wfw_flj_sol AS FLJ 
    ON SOL.sol_cod_nro_sol_k = FLJ.flj_cod_nro_sol_k
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_wfw_eta AS ETA
    ON ETA.eta_cod_nro_eta_k = FLJ.flj_cod_nro_eta_act
    AND ETA.eta_cod_nro_flj_k = FLJ.flj_cod_nro_flj_act
LEFT JOIN (SELECT * FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe WHERE SUBSTRING(ofe_cod_prd_ofe_k, 1, 2) = '02' ) T
    ON SOL.sol_cod_nro_sol_k = T.ofe_cod_nro_sol_k
WHERE 
    SUBSTRING(TAR.tar_cod_tip_prd_k, 1, 2) = '02'
    AND sol_fch_crc_sol BETWEEN v_periodo_ini AND v_periodo_fin--'2023-11-01' AND '2023-11-30'  
    AND (SOL.sol_cod_cll_act = 14 OR SOL.sol_cod_cll_ant = 14)
    AND SOL.sol_cod_cll_adm = 2
    AND EXISTS (SELECT btc_cod_nro_sol_k
                FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
                WHERE btc_cod_nro_sol_k = SOL.sol_cod_nro_sol_k
                    AND btc_cod_tip_reg_k = 1
                    AND btc_cod_eta_k = 102
                    AND btc_cod_evt_k = 30)
ORDER BY SOL.sol_cod_nro_sol_k ASC;


--26 FECHAS DA 0
CREATE TABLE schm_workspace.curse_cv AS
SELECT 
    TAR.tar_cac_nro_ctt_k AS numero_contrato
    , TAR.tar_cac_nro_pan_k AS numero_tarjeta
    , SUBSTRING(PRD.prd_cac_nro_ctt, 1, 9) AS numero_cuenta_vista
    , SOL.sol_cod_ide_cli AS rut_cliente
    , PER.per_cac_ide_cli_dv AS dv
    , SOL.sol_fch_alt_sol AS fecha_solicitud
    , SOL.sol_cod_nro_sol_k AS numero_solicitud
    , SOL.sol_cod_est_sol AS estado
FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol AS SOL 
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar AS TAR
    ON TAR.tar_cod_nro_sol_k = SOL.sol_cod_nro_sol_k
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol AS PRD
    ON TAR.tar_cod_nro_sol_k = PRD.prd_cod_nro_sol_k
    AND TAR.tar_cod_tip_prd_k = PRD.prd_cod_tip_prd_k
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_dat_per  PER
    ON PRD.prd_cod_nro_sol_k = PER.per_cod_nro_sol_k
    AND SOL.sol_cod_ide_cli = PER.per_cod_ide_cli_k
WHERE 
    SUBSTRING(TAR.tar_cod_tip_prd_k,1,2) = '04'
    AND (SOL.sol_cod_cll_act = 14 OR SOL.sol_cod_cll_ant = 14)
    AND SOL.sol_cod_cll_adm = 2
    AND SOL.sol_fch_crc_sol BETWEEN v_periodo_ini AND v_periodo_fin--'2023-11-01' and '2023-11-30'
    AND EXISTS (SELECT btc_cod_nro_sol_k
                FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
                WHERE btc_cod_nro_sol_k = SOL.sol_cod_nro_sol_k
                    AND btc_cod_tip_reg_k = 1
                    AND btc_cod_eta_k = 102
                    AND btc_cod_evt_k = 30)
ORDER BY  SOL.sol_cod_nro_sol_k ASC;


--27 FECHAS
CREATE TABLE schm_workspace.curse_cc AS 
SELECT 
    TAR.tar_cac_nro_ctt_k AS numero_contrato
    , TAR.tar_cac_nro_pan_k AS numero_tarjeta
    , SUBSTRING(PRD.prd_cac_nro_ctt, 1, 9) AS numero_cuenta_vista
    , SOL.sol_cod_ide_cli AS rut_cliente
    , PER.per_cac_ide_cli_dv AS dv
    , SOL.sol_fch_alt_sol AS fecha_solicitud
    , SOL.sol_cod_nro_sol_k AS numero_solicitud
    , SOL.sol_cod_est_sol AS estado
FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol AS SOL 
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar AS TAR
    ON TAR.tar_cod_nro_sol_k = SOL.sol_cod_nro_sol_k
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol AS PRD
    ON TAR.tar_cod_nro_sol_k = PRD.prd_cod_nro_sol_k
    AND TAR.tar_cod_tip_prd_k = PRD.prd_cod_tip_prd_k
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_dat_per AS PER
    ON PRD.prd_cod_nro_sol_k = PER.per_cod_nro_sol_k
    AND SOL.sol_cod_ide_cli = PER.per_cod_ide_cli_k
WHERE 
    SUBSTRING(TAR.tar_cod_tip_prd_k, 1, 2) = '21'
    AND (SOL.sol_cod_cll_act = 14 OR SOL.sol_cod_cll_ant = 14)
    AND SOL.sol_cod_cll_adm = 2
    AND SOL.sol_fch_crc_sol BETWEEN v_periodo_ini AND v_periodo_fin--'2023-11-01' and '2023-11-30'
    AND EXISTS (SELECT btc_cod_nro_sol_k
                FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
                WHERE btc_cod_nro_sol_k = SOL.sol_cod_nro_sol_k
                    AND btc_cod_tip_reg_k = 1
                    AND btc_cod_eta_k = 102
                    AND btc_cod_evt_k = 30)
ORDER BY  SOL.sol_cod_nro_sol_k ASC;


--28
CREATE TABLE schm_workspace.cuenta_creada_limpio AS 
SELECT DISTINCT 
    numero_contrato
    , numero_tarjeta
    , rut_cliente :: BIGINT AS rut
    , fecha_solicitud AS fecha_solicitud
    , numero_solicitud
    , estado
    , tipo_producto
    , COUNT(CASE 
                WHEN glosaseguro = 'CESANTIA' THEN numero_contrato 
            END) AS cesantia
    , COUNT(CASE 
                WHEN glosaseguro = 'DESGRAVAMEN' THEN numero_contrato 
            END) AS desgravamen
    , camp
    , CASE 
        WHEN camp_tip_prod = '8' AND camp_cond_prod NOT IN ('812', '815', '814', '803', '804', '813', '816') THEN 'CDP'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('914', '915')) OR (camp_tip_prod = '8' AND camp_cond_prod IN ('814', '815')) THEN 'MCCERRADA'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('900', '901', '902', '903', '999'))  THEN 'TR'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod NOT IN ('900', '901', '902', '903', '999', '908', '917', '918')) OR (camp_tip_prod = '8' AND camp_cond_prod = '812') THEN 'TAM'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod = '908') OR (camp_tip_prod = '8' AND camp_cond_prod IN ('803', '804')) THEN 'TAMCUOTAS'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('917', '918')) OR (camp_tip_prod = '8' AND camp_cond_prod IN ('813', '816')) THEN 'MCBLACK'
    END AS producto2
    , camp_origen_base AS tipo_cliente
    , CASE 
        WHEN tipo_cliente IN ('102', '108', '201', '207') THEN 'NUEVO' 
        ELSE 'REVIGENTEADO' 
    END AS tipo_cliente2
FROM schm_workspace.curse_funnel_captacion AS A
LEFT JOIN schm_workspace.cod_fin AS B
    ON(A.CAMP = B.camp_cod_camp_k)
WHERE estado IN (9, 11)
GROUP BY 
    tipo_producto
    , numero_contrato
    , numero_tarjeta
    , rut_cliente :: BIGINT
    , camp_tip_prod
    , camp_cond_prod
    , camp_origen_base
    , fecha_solicitud
    , fecha_solicitud 
    , numero_solicitud
    , estado
    , camp; 

   
--29   
CREATE TABLE schm_workspace.cuenta_creada_limpio_nuevos AS 
SELECT DISTINCT 
    numero_contrato
    , numero_tarjeta
    , rut_cliente :: BIGINT AS rut
    , fecha_solicitud AS fecha_solicitud
    , numero_solicitud
    , estado
    , tipo_producto
    , count(CASE 
                WHEN glosaseguro = 'CESANTIA' THEN numero_contrato 
            END) AS cesantia
    , count(CASE 
                WHEN glosaseguro = 'DESGRAVAMEN' THEN numero_contrato 
            END) AS desgravamen
    , camp
    , CASE 
        WHEN camp_tip_prod = '8' AND camp_cond_prod NOT IN ('812', '815', '814', '803', '804', '813', '816') THEN 'CDP'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('914', '915')) OR (camp_tip_prod = '8' AND camp_cond_prod  IN ('814', '815')) THEN 'MCCERRADA'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('900', '901', '902', '903', '999')) THEN 'TR'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod NOT IN ('900', '901', '902', '903', '999', '908', '917', '918')) OR (camp_tip_prod = '8' AND camp_cond_prod = '812') THEN 'TAM'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod = '908') OR (camp_tip_prod = '8' AND camp_cond_prod IN ('803', '804')) THEN 'TAMCUOTAS'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod  IN ('917', '918')) OR (camp_tip_prod = '8' AND camp_cond_prod IN ('813', '816')) THEN 'MCBLACK'
    END AS producto2
    , camp_origen_base AS tipo_cliente
    , CASE 
        WHEN tipo_cliente IN ('102', '108', '201', '207') THEN 'NUEVO' 
        ELSE 'REVIGENTEADO' 
    END AS tipo_cliente2
FROM schm_workspace.curse_nuevos AS A
LEFT JOIN schm_workspace.cod_fin AS B
    ON (A.CAMP = B.camp_cod_camp_k)
WHERE estado IN (9, 11)
GROUP BY 
    tipo_producto
    , numero_contrato
    , numero_tarjeta
    , camp_tip_prod
    , camp_cond_prod
    , camp_origen_base
    , rut_cliente :: BIGINT
    , fecha_solicitud
    , numero_solicitud
    , estado
    , camp;
   
   
--30   
CREATE TABLE schm_workspace.cuenta_creada_limpio_dormidos AS 
SELECT DISTINCT 
    numero_contrato
    , numero_tarjeta
    , rut_cliente :: BIGINT AS rut
    , fecha_solicitud AS fecha_solicitud
    , numero_solicitud
    , estado
    , tipo_producto
    , COUNT(CASE 
                WHEN glosaseguro = 'CESANTIA' THEN numero_contrato 
            END) AS cesantia
    , COUNT(CASE 
                WHEN glosaseguro = 'DESGRAVAMEN' THEN numero_contrato 
            END) AS desgravamen
    , camp
    , CASE 
        WHEN camp_tip_prod = '8' AND camp_cond_prod NOT IN ('812', '815', '814', '803', '804', '813', '816') THEN 'CDP'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('914', '915')) OR (camp_tip_prod = '8' AND camp_cond_prod IN ('814', '815')) THEN 'MCCERRADA'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('900', '901', '902', '903', '999'))  THEN 'TR'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod NOT IN ('900', '901', '902', '903', '999', '908', '917', '918') OR (camp_tip_prod = '8' AND camp_cond_prod = '812')) THEN 'TAM'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod = '908') OR (camp_tip_prod = '8' AND camp_cond_prod IN ('803', '804')) THEN 'TAMCUOTAS'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod  IN ('917', '918')) OR (camp_tip_prod = '8' AND camp_cond_prod IN ('813', '816')) THEN 'MCBLACK'
    END AS producto2
    , camp_origen_base AS tipo_cliente,
    CASE 
        WHEN tipo_cliente IN ('102', '108', '201', '207') THEN 'NUEVO' 
        ELSE 'REVIGENTEADO' 
    END AS tipo_cliente2
FROM schm_workspace.curse_dormidos AS A
left joIN schm_workspace.cod_fin AS B
    ON (A.camp = B.camp_cod_camp_k)
WHERE estado IN (9, 11) 
GROUP BY 
    tipo_producto
    , numero_contrato
    , numero_tarjeta
    , camp_tip_prod
    , camp_cond_prod
    , camp_origen_base
    , rut_cliente
    , fecha_solicitud
    , numero_solicitud
    , estado
    , camp;


   
   
--31
CREATE TABLE schm_workspace.cuenta_creada_limpio_cdp AS 
SELECT DISTINCT 
    numero_contrato
    , numero_tarjeta
    , rut_cliente :: BIGINT AS rut
    , fecha_solicitud AS fecha_solicitud
    , numero_solicitud
    , estado
    , 'CDP' AS tipo_producto
    , count(CASE 
                WHEN glosaseguro = 'CESANTIA' THEN numero_contrato 
            END) AS cesantia
    , count(CASE 
                WHEN glosaseguro = 'DESGRAVAMEN' THEN numero_contrato 
            END) AS desgravamen
    , camp
    , CASE 
        WHEN camp_tip_prod = '8' AND camp_cond_prod NOT IN ('812', '815', '814', '803', '804', '813', '816') THEN 'CDP'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('914', '915')) OR (camp_tip_prod = '8' AND camp_cond_prod IN ('814', '815')) THEN 'MCCERRADA'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('900', '901', '902', '903', '999'))  THEN 'TR'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod NOT IN ('900', '901', '902', '903', '999', '908', '917', '918')) OR (camp_tip_prod = '8' AND camp_cond_prod = '812') THEN 'TAM'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod = '908') OR (camp_tip_prod = '8' AND camp_cond_prod IN ('803', '804')) THEN 'TAMCUOTAS'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('917', '918')) OR (camp_tip_prod = '8' AND camp_cond_prod IN ('813', '816')) THEN 'MCBLACK'
    END AS producto2
    , camp_origen_base AS tipo_cliente
    , CASE 
        WHEN tipo_cliente IN ('102', '108', '201', '207') THEN 'NUEVO' 
        ELSE 'REVIGENTEADO' 
    END AS tipo_cliente2
FROM schm_workspace.curse_credito_cdp AS A
LEFT JOIN schm_workspace.cod_fIN AS B
    ON (A.camp = B.camp_cod_camp_k)
WHERE estado IN (9, 11) 
GROUP BY 
    numero_contrato
    , numero_tarjeta
    , camp_tip_prod
    , camp_cond_prod
    , camp_origen_base
    , rut_cliente
    , fecha_solicitud
    , numero_solicitud
    , estado
    , camp;
   
   
--32 ESTA EN 0 
CREATE TABLE schm_workspace.cuenta_cv AS
SELECT DISTINCT 
    numero_contrato
    , numero_tarjeta
    , numero_cuenta_vista
    , rut_cliente :: BIGINT AS rut
    , fecha_solicitud AS fecha_solicitud
    , numero_solicitud
    , estado
FROM schm_workspace.curse_cv
WHERE estado IN (9, 11);


--33
CREATE TABLE schm_workspace.curse_ctacte AS 
SELECT DISTINCT 
    numero_contrato
    , numero_tarjeta
    , numero_cuenta_vista
    , rut_cliente:: BIGINT AS rut
    , fecha_solicitud AS fecha_solicitud
    , numero_solicitud
    , estado
FROM schm_workspace.curse_cc
WHERE estado IN (9, 11);



--34
CREATE TABLE schm_workspace.base5 AS 
SELECT DISTINCT 
    A.*
    ,
    CASE 
        WHEN (A.rut = B.rut) AND (A.dia = DATE_PART('day', B.fecha_solicitud)) THEN 1 
        ELSE 0 
    END AS capta_tc
    , B.numero_contrato AS numero_contrato_tc
    , B.numero_tarjeta AS numero_tarjeta_tc
    , B.tipo_producto AS tipo_producto_tc
    , B.cesantia AS cesantia_tc
    , B.desgravamen AS desgravamen_tc	
    , B.camp AS camp_tc
    , B.producto2 AS producto2_tc
    , B.tipo_cliente AS tipo_cliente_tc
    , B.tipo_cliente2 AS tipo_cliente2_tc
    , CASE 
        WHEN (A.rut = F.rut) AND (A.dia = DATE_PART('day', B.fecha_solicitud)) THEN 1 
        ELSE 0 
    END AS capta_cv
    , F.numero_contrato AS numero_contrato_cv
    , F.numero_tarjeta AS numero_tarjeta_cv	
    , F.numero_cuenta_vista
    , CASE 
        WHEN (A.rut = G.rut) AND (A.dia = DATE_PART('day', B.fecha_solicitud)) THEN 1 
        ELSE 0 
    END AS capta_cc
    , G.numero_contrato AS numero_contrato_cc
    , G.numero_tarjeta AS numero_tarjeta_cc	
    , G.numero_cuenta_vista AS numero_cuenta_corriente
FROM schm_workspace.base4 AS A
LEFT JOIN (SELECT * FROM schm_workspace.cuenta_creada_limpio 
				UNION 
			SELECT * FROM schm_workspace.cuenta_creada_limpio_cdp) AS B
	ON (A.rut = B.rut) AND (A.dia = DATE_PART('day', B.fecha_solicitud))
LEFT JOIN schm_workspace.cuenta_cv AS F
	ON (A.rut = F.rut) AND (A.dia = DATE_PART('day', F.fecha_solicitud))
LEFT JOIN schm_workspace.curse_ctacte AS G
	ON (A.rut = G.rut) AND (A.dia = DATE_PART('day', G.fecha_solicitud));


--35 2 PERIODOS
CREATE TABLE schm_workspace.base6 AS 
SELECT 
    A.*
    , B.*
FROM schm_workspace.base5 AS A 
JOIN (SELECT DISTINCT 
        A.rut AS rut2
        , A.dia AS dia2
        , A.fecha AS fecha2
        , COUNT(CASE 
                    WHEN date_part('day', B.fecha) >= A.dia THEN B.rut 
                END) AS trx_tda
        , SUM(CASE 
                WHEN date_part('day', B.fecha) >= A.dia THEN B.capital 
                ELSE 0 
            END) AS monto_tda
        , COUNT(CASE 
                    WHEN date_part('day', C.fecha) >= A.dia THEN c.rut 
                END) AS trx_spos
        , SUM(CASE 
                WHEN date_part('day', C.fecha) >= A.dia THEN C.venta_tarjeta 
                ELSE 0 
            END) AS monto_spos
FROM schm_workspace.base5 AS A
LEFT JOIN (SELECT 
                * 
            FROM schm_data_analytics.tnda_tda_itf 
            WHERE 
                (SELECT MAX(periodo) FROM schm_data_analytics.tnda_tda_itf WHERE periodo <= v_periodo)) AS B 
    ON (A.rut = B.rut) 
    AND (A.numero_contrato_tc = concat(B.codent, concat(B.centalta, B.cuenta)))
LEFT JOIN (SELECT 
                * 
            FROM schm_data_analytics.spos_aut 
            WHERE (SELECT MAX(periodo) FROM schm_data_analytics.spos_aut WHERE periodo <= v_periodo)) AS C 
    ON (A.rut = C.rut) 
    AND (A.numero_contrato_tc = concat(C.codent, concat(C.centalta, C.cuenta)))
GROUP BY 
    A.rut
    , A.dia
    , A.fecha) AS B
ON A.rut = B.rut2 AND A.dia = B.dia2;


--36 FECHAS
CREATE TABLE schm_workspace.retiro_plastico_funnel AS 
SELECT 
    SOL.sol_nro_inn_ide
    , TAR.tar_cac_nro_ctt_k AS numero_contrato
    , TAR.tar_cac_nro_pan_k AS numero_tarjeta
    , SOL.sol_cod_ide_cli AS rut_cliente
    , SOL.sol_fch_alt_sol AS fecha_solicitud
    , SOL.sol_cod_nro_sol_k AS numero_solicitud
    , SOL.sol_cod_est_sol AS estado
    , MAE.pcom_fch_k AS fecha_retiro
    , MAE.pcom_gls_usr_crc
    , DET.pcom_coc_suc AS codigo_suc
FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol AS SOL 
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar AS TAR
    ON TAR.tar_cod_nro_sol_k = SOL.sol_cod_nro_sol_k
INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_mae_reg_evt AS MAE
    ON SOL.sol_nro_inn_ide  = MAE.pcom_cod_ide_cli_k
    AND MAE.pcom_cod_evt_k IN (15, 80, 230)  
    AND  MAE.pcom_desc_doc = SOL.sol_cod_ide_cli 
INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_det_reg_evt AS DET
    ON MAE.pcom_nro_seq_k = DET.pcom_nro_seq_k 
    AND DET.pcom_cod_evt_k IN (15, 80, 230)  
    AND DET.pcom_nro_ctt = SUBSTRING(tar_cac_nro_ctt_k, 1, 4) || '-' || SUBSTRING(tar_cac_nro_ctt_k, 5, 4) || '-' || SUBSTRING(tar_cac_nro_ctt_k, 9, 12)
WHERE SUBSTRING(TAR.tar_cod_tip_prd_k, 1, 2) = '01'
    AND SOL.sol_fch_crc_sol BETWEEN v_periodo_ini AND v_periodo_fin--'2023-11-01' AND '2023-11-30'
    AND (SOL.sol_cod_cll_act = 14 OR SOL.sol_cod_cll_ant = 14)
    AND SOL.sol_cod_cll_adm = 2
    AND EXISTS (SELECT btc_cod_nro_sol_k
                FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
                WHERE btc_cod_nro_sol_k = SOL.sol_cod_nro_sol_k
                    AND btc_cod_tip_reg_k = 1
                    AND btc_cod_eta_k = 102
                    AND btc_cod_evt_k = 30)
AND EXISTS (SELECT 
                T.Cuenta 
            FROM br_dm_prod_bigdata_reporitf_db.mpdt009 t 
            WHERE 
                T.cuenta = SUBSTRING(tar_cac_nro_ctt_k, 9, 12) 
                AND T.codent = SUBSTRING(tar_cac_nro_ctt_k, 1, 4) 
                AND T.centalta = SUBSTRING(tar_cac_nro_ctt_k, 5, 4)
                AND T.numbencta = 1 AND T.numplastico > 0)
--and  fecha_retiro < '2023-12-01'                
ORDER BY SOL.sol_cod_nro_sol_k ASC;


-- 37 FECHAS ESTA EN 0
CREATE TABLE schm_workspace.retiro_plastico_cdp_funnel AS 
SELECT 
sol.sol_nro_inn_ide,
TAR.TAR_CAC_NRO_CTT_K NUMERO_CONTRATO,
TAR.TAR_CAC_NRO_PAN_K NUMERO_TARJETA,
SOL.SOL_COD_IDE_CLI RUT_CLIENTE, 
SOL.SOL_FCH_ALT_SOL FECHA_SOLICITUD,
SOL.SOL_COD_NRO_SOL_K NUMERO_SOLICITUD, 
sol.sol_cod_est_sol ESTADO, 
MAE.PCOM_FCH_K as fecha_retiro,
MAE.PCOM_GLS_USR_CRC, 
DET.PCOM_COC_SUC CODIGO_SUC
FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol SOL 
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar TAR
ON TAR.TAR_COD_NRO_SOL_K = SOL.SOL_COD_NRO_SOL_K
INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe OFE
ON OFE.OFE_COD_NRO_SOL_K = SOL.SOL_COD_NRO_SOL_K
AND OFE.OFE_COD_IND_SOL = 1 
AND OFE.OFE_COD_IND_DRM = 1
AND substring(OFE.OFE_COD_PRD_OFE_K,1,2) = '02'
INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_mae_reg_evt MAE
ON sol.SOL_NRO_INN_IDE  = mae.PCOM_COD_IDE_CLI_K
AND MAE.PCOM_COD_EVT_K in (15, 80, 230)  
and  mae.PCOM_DESC_DOC = sol.sol_cod_ide_cli 
INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_det_reg_evt DET
ON mae.PCOM_NRO_SEQ_K = det.PCOM_NRO_SEQ_K and 
det.PCOM_COD_EVT_K in (15, 80, 230)  and 
det.PCOM_NRO_CTT = substring(TAR_CAC_NRO_CTT_K,1,4) || '-' || substring(TAR_CAC_NRO_CTT_K,5,4) || '-' || substring(TAR_CAC_NRO_CTT_K,9,12)
WHERE 
substring(TAR.TAR_COD_TIP_PRD_K,1,2) = '02'
and sol.SOL_FCH_CRC_SOL between v_periodo_ini AND v_periodo_fin-- '2023-11-01' and '2023-11-30'  
AND (SOL.SOL_COD_CLL_ACT = 14 OR SOL.SOL_COD_CLL_ANT = 14)
AND SOL.SOL_COD_CLL_ADM = 2
AND EXISTS (SELECT BTC_COD_NRO_SOL_K
FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
WHERE BTC_COD_NRO_SOL_K = SOL.SOL_COD_NRO_SOL_K
AND BTC_COD_TIP_REG_K = 1
AND BTC_COD_ETA_K = 102
AND BTC_COD_EVT_K = 30)
and  exists (select t.Cuenta from br_dm_prod_bigdata_reporitf_db.mpdt009 t where 
t.cuenta = substring(TAR_CAC_NRO_CTT_K,9,12) and 
t.codent = substring(TAR_CAC_NRO_CTT_K,1,4) and 
t.centalta = substring(TAR_CAC_NRO_CTT_K,5,4)
and trim(t.pan) = trim(TAR.TAR_CAC_NRO_PAN_K));




--38 FECHAS
CREATE TABLE schm_workspace.retiro_ctacte_funnel AS 
SELECT DISTINCT 
	mae.pcom_cod_ide_cli_k, 
	 TAR.TAR_CAC_NRO_CTT_K NUMERO_CONTRATO,
	DET.PCOM_PAN NUMERO_TARJETA,  
	substring(PRD.PRD_CAC_NRO_CTT,9) NUMERO_CUENTA,
	SOL.SOL_COD_IDE_CLI RUT_CLIENTE, 
	PER.PER_CAC_IDE_CLI_DV DV, 
	SOL.SOL_FCH_ALT_SOL  FECHA_SOLICITUD,
	SOL.SOL_COD_NRO_SOL_K NUMERO_SOLICITUD, 
	SOL.SOL_COD_EST_SOL ESTADO,
	MAE.PCOM_FCH_K fecha_retiro, 
	MAE.PCOM_GLS_USR_CRC, 
	DET.PCOM_COC_SUC CODIGO_SUC
	FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol SOL
	  JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe OFE 
       ON SOL.SOL_COD_NRO_SOL_K = OFE.OFE_COD_NRO_SOL_K AND  substring(OFE.OFE_COD_PRD_OFE_K ,1,2) = '21'  AND OFE.OFE_COD_IND_NGC = 1  AND OFE.OFE_COD_IND_ALT = 1  
      JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar TAR
	   ON TAR.TAR_COD_NRO_SOL_K = SOL.SOL_COD_NRO_SOL_K
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol PRD
	   ON TAR.TAR_COD_NRO_SOL_K = PRD.PRD_COD_NRO_SOL_K
	   AND TAR.TAR_COD_TIP_PRD_K = PRD.PRD_COD_TIP_PRD_K
	INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_dat_per PER
	   ON PRD.PRD_COD_NRO_SOL_K = PER.PER_COD_NRO_SOL_K
	 AND SOL.SOL_COD_IDE_CLI = PER.PER_COD_IDE_CLI_K
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_mae_reg_evt MAE
	 ON sol.SOL_NRO_INN_IDE  = MAE.PCOM_COD_IDE_CLI_K
	 AND MAE.PCOM_COD_EVT_K = 257 
	and  MAE.PCOM_DESC_DOC = sol.sol_cod_ide_cli 
	INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_det_reg_evt DET
	ON MAE.PCOM_NRO_SEQ_K = det.PCOM_NRO_SEQ_K and 
	det.PCOM_COD_EVT_K = 257 and 
	(det.PCOM_NRO_CTT = substring(TAR_CAC_NRO_CTT_K,1,4) || '-' || substring(TAR_CAC_NRO_CTT_K,5,4) || '-' || substring(TAR_CAC_NRO_CTT_K,9,12) or 
	det.PCOM_NRO_CTT = substring(TAR_CAC_NRO_CTT_K,9,12))
	WHERE 
	substring(TAR.TAR_COD_TIP_PRD_K,1,2) = '21'
	AND (SOL.SOL_COD_CLL_ACT = 14 OR SOL.SOL_COD_CLL_ANT = 14)
	AND SOL.SOL_COD_CLL_ADM = 2
	and sol.SOL_FCH_CRC_SOL BETWEEN v_periodo_ini AND v_periodo_fin--'2023-11-01' and '2023-11-30'
	AND EXISTS (SELECT BTC_COD_NRO_SOL_K
	            FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
	            WHERE BTC_COD_NRO_SOL_K = SOL.SOL_COD_NRO_SOL_K
	            AND BTC_COD_TIP_REG_K = 1
	            AND BTC_COD_ETA_K = 102
	            AND BTC_COD_EVT_K = 30)
	and exists (select t.Cuenta from br_dm_prod_bigdata_reporitf_db.mpdt009 t where 
				t.cuenta = substring(TAR_CAC_NRO_CTT_K,9,12) and 
				t.codent = substring(TAR_CAC_NRO_CTT_K,1,4) and 
				t.centalta = substring(TAR_CAC_NRO_CTT_K,5,4)
	and t.numbencta = 1 and t.numplastico > 1)
	ORDER BY  SOL.SOL_COD_NRO_SOL_K asc;


--39
CREATE TABLE schm_workspace.base7 AS 
SELECT DISTINCT
A.*,
CASE WHEN b.rut_cliente is not null then 1 else 0 end as embozado_TC,
--case when d.rut_cliente is not null then 1 else 0 end as embozado_cv,
case when e.rut_cliente is not null then 1 else 0 end as embozado_CTACTE
from schm_workspace.base6 as a
left join (
select * from schm_workspace.RETIRO_PLASTICO_funnel
union all 
select * from schm_workspace.RETIRO_PLASTICO_cdp_funnel )as b
on(a.rut=b.rut_cliente:: bigint) and (a.NUMERO_CONTRATO_TC=b.NUMERO_CONTRATO)
--left join schm_workspace.retiro_debito as d
--on(a.rut=d.rut_cliente:: bigint) and (a.NUMERO_CONTRATO_CV
--d.NUMERO_CONTRATO)
left join schm_workspace.retiro_ctacte_funnel as e
on(a.rut=e.rut_cliente:: bigint) and (a.numero_contrato_cc=e.NUMERO_CONTRATO);


--40 PERIODO
CREATE TABLE schm_workspace.saldos_cuenta_corriente_funnel_capta_aux AS
SELECT 
	b.cli_identifica as rut,
	a.ACP_FECHA as CodFecha,
	a.ACP_FECHA, 
	a.ACP_NUMCUE, 
	sum(a.acp_salefe + a.acp_sal12h + a.acp_sal24h + a.acp_sal48h) as Saldo 
from br_dm_prod_bigdata_fisa_db.tcap_acrpas  a
left join ( select 
distinct cli_identifica ,vis_numcue
from br_dm_prod_bigdata_fisa_db.tcli_persona 
,br_dm_prod_bigdata_fisa_db.tcap_vista 
where cli_codigo=vis_codcli 
and vis_mod=4
and (VIS_PRO=1) 
and vis_tip=1  
AND (vis_status='2' or vis_status='9')) b
on(a.ACP_NUMCUE=b.vis_numcue)
where a.acp_pro = 1 and a.acp_tip = 1 
and a.periodo = v_periodo  
group by 
a.ACP_FECHA, 
a.ACP_NUMCUE,
b.cli_identifica;


--41 
create table schm_workspace.saldos_cuenta_corriente_funnel_capta as
select 
a.*,
b.Saldo as Ultimo_Saldo 
from (
select 
ACP_NUMCUE as cuenta,
max(rut) as rut,
sum(case when Saldo>1 then 1 else 0 end) as Nro_Dias_Saldo_mayor_1,
sum(case when Saldo>1 then Saldo else 0 end) as SUM_SALDO_FECHA
from schm_workspace.Saldos_Cuenta_corriente_funnel_capta_aux
group by 
ACP_NUMCUE 
) as a 
left join (
select distinct 
ACP_NUMCUE,
Saldo 
from schm_workspace.Saldos_Cuenta_corriente_funnel_capta_aux
where CodFecha=(select max(CodFecha) from schm_workspace.Saldos_Cuenta_corriente_funnel_capta_aux)
) as b 
on (a.cuenta=b.ACP_NUMCUE);


--42 PERIODO
CREATE TABLE schm_workspace.movimiento_Cuenta_corriente_funnel_capta as
select 
*,
CASE 
when tmo_tipotra='C' then 
case 
WHEN DESCRIPCION IN ('VALOR EFECTIVO','EN EFECTIVO') AND GLS_TRANSAC ='DEPOSITO' AND  SI_ABR<>1  THEN 'Depï¿½sitos en Efectivo' 
WHEN DESCRIPCION IN ('CON DOCUMENTOS') AND GLS_TRANSAC ='DEPOSITO' AND SI_ABR<>1 THEN 'Depï¿½sitos con Documento' 
WHEN DESCRIPCION IN ('TRANSFERENCIA DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas' 
WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas' 
WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR=1 THEN 'Abono de Remuneraciones' 
WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 and DESC_NEGOCIO like '%Proveedores%' THEN 'TEF Recibidas' 
WHEN DESCRIPCION IN ('POR REGULARIZACION') AND  SI_ABR<>1 THEN 'Otros (pago proveedores)' 
WHEN DESCRIPCION IN ('DESDE LINEA DE CREDITO') AND GLS_TRANSAC ='TRASPASO DE FONDOS' AND  SI_ABR<>1 THEN 'Traspaso desde LCA'
WHEN DESCRIPCION IN ('AVANCE DESDE TARJETA DE CREDITO BANCO RIPLEY') AND  SI_ABR<>1 THEN 'Avance desde Tarjeta Ripley' 
WHEN DESCRIPCION IN ('DEVOLUCION COMISION') AND  SI_ABR<>1 THEN 'DEVOLUCION COMISION' 
WHEN DESCRIPCION IN ('POR TRANSFERENCIA  DE LCA A CTA VISTA') AND  SI_ABR<>1 THEN 'Traspaso desde LCA'
WHEN DESCRIPCION IN ('TRANSFERENCIA DESDE CREDITO') AND  SI_ABR<>1 THEN 'Traspaso desde LCA' 
else 'OTROS ABONOS' 
end else ''
END AS Descripcion_Abono,
CASE 
when tmo_tipotra='D' then 
CASE
WHEN DESCRIPCION IN ('COMPRA NACIONAL CTA CTE') THEN 'Compras Redcompra' 
WHEN DESCRIPCION IN ('COMPRA INTERNACIONAL CTA CTE') THEN 'Compras Internacionales' 
WHEN DESCRIPCION IN ('CARGO POR PEC') THEN 'PEC' 
WHEN DESCRIPCION IN ('GIRO CAJERO AUTOMATICO') THEN 'Giros ATM'    
when DESCRIPCION IN ('GIRO ATM INTERNACIONAL CTA CTE') then 'Giros internacional CTA CTE'
when DESCRIPCION IN ('GIRO ATM NACIONAL CTA CTE') then 'Giros ATM CTA CTE'
WHEN DESCRIPCION IN ('GIRO POR CAJA') THEN 'Giros Caja'
WHEN DESCRIPCION IN ('GIRO INTERNACIONAL') THEN 'Giro Internacional'
WHEN DESCRIPCION IN ('TRANSFERENCIA A OTROS BANCOS') THEN 'TEF emitidas Otros Bancos'
WHEN DESCRIPCION IN ('PAGO TARJETA DE CREDITO') THEN 'Pago de Tarjeta' 
WHEN DESCRIPCION IN ('A CUENTA BANCO RIPLEY','POR TRASPASO A CUENTA')  THEN 'Pago LCA'
WHEN DESCRIPCION IN ('COSTO DE MANTENCION MENSUAL CUENTA VISTA') then 'Comision planes'
WHEN  DESCRIPCION IN ('COSTO DE MANTENCION MENSUAL CTA CTE') then 'Comision planes'
WHEN DESCRIPCION IN ('IVA COSTO DE MANTENCION MENSUAL CTA CTE') then 'IVA Com cta cte'
else 'OTROS CARGOS' 
end else ''
END AS Descripcion_Cargo 
from 
( select 
c2.cli_identifica as rut,
c1.tmo_fech as CodFecha,
c1.tmo_numcue as CUENTA, 
c1.tmo_fechcon as FECHACON, 
c1.tmo_fech as FECHA, 
c1.rub_desc as DESCRIPCION, 
c1.tmo_val as MONTO, 
c1.con_libre as Desc_negocio, 
c1.tmo_codmod, 
c1.tmo_tipotra, 
c1.tmo_rubro, 
c1.tmo_numtra, 
c1.tmo_numcue, 
c1.tmo_codusr, 
c1.tmo_codusr as tmo_codsur2, 
c1.tmo_sec, 
c1.tmo_codtra, 
(
SELECT cod_destra 
FROM  br_dm_prod_bigdata_fisa_db.tgen_codtrans
WHERE cod_tra = c1.tmo_codtra AND cod_mod = c1.tmo_codmod 
) as gls_transac,
case 
when c1.tmo_tipotra='D' then 'CARGO' 
when c1.tmo_tipotra='C' then 'ABONO' 
end as Tipo_Movimiento,
case 
when c1.tmo_tipotra='C' 
and c1.rub_desc='DESDE OTROS BANCOS' 
and ( 
c1.con_libre like '%Remuneraciones%' OR 
c1.con_libre like '%Anticipos%' OR 
c1.con_libre like '%Sueldos%')  then 1 
ELSE 0 
END as SI_ABR ,
CASE 
WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS' 
and ( c1.con_libre like '%Remuneraciones%' OR c1.con_libre like '%Anticipos%' OR c1.con_libre like '%Sueldos%')
AND c1.con_libre like '%BANCO RIPLEY%' THEN 'BANCO RIPLEY' 
WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS' 
and ( c1.con_libre like '%Remuneraciones%' OR c1.con_libre like '%Anticipos%' OR c1.con_libre like '%Sueldos%')
 AND c1.con_libre like '%CAR S.A.%' THEN 'CAR' 
WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS' 
and ( c1.con_libre like '%Remuneraciones%' OR c1.con_libre like '%Anticipos%' OR c1.con_libre like '%Sueldos%')
 AND c1.con_libre like '%RIPLEY STORE%' THEN 'RIPLEY STORE' 
WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS' 
and ( c1.con_libre like '%Remuneraciones%' OR c1.con_libre like '%Anticipos%' OR c1.con_libre like '%Sueldos%')
 AND ( 
c1.con_libre NOT like ('%RIPLEY STORE%') or 
c1.con_libre NOT like ('%CAR S.A.%') or 
c1.con_libre NOT like ('%BANCO RIPLEY%') 
) THEN 'OTROS BANCOS' else ''
END AS Descripcion_ABR,
CASE 
WHEN c1.tmo_tipotra='D' 
and (c1.con_libre like '%Ripley%' OR c1.con_libre like '%RIPLEY%') 
AND  c1.con_libre NOT like '%PAGO%' 
THEN 'COMPRA_RIPLEY' else ''
END AS COMPRA_RIPLEY
from(select * from  br_dm_prod_bigdata_fisa_db.tcap_tramon a 
   , br_dm_prod_bigdata_fisa_db.tgen_tranrubro  
   , br_dm_prod_bigdata_fisa_db.tcap_concepto  
where rub_mod    = tmo_codmod  
and rub_tra      = tmo_codtra  
and rub_rubro    = tmo_rubro  
and con_modulo  = tmo_codmod  
and con_rubro   = tmo_rubro  
and con_numtran = tmo_numtra  
and con_cuenta  = tmo_numcue  
and con_codusr  = tmo_codusr  
and con_sec     = tmo_sec 
and con_transa  = tmo_codtra  
and tmo_tipotra in ('D','C')  
and tmo_codmod = 4
and tmo_codpro = 1 
and tmo_codtip = 1 
and tmo_modo = 'N' 
and tmo_val >= 1  
and a.periodo = v_periodo 
) AS C1--ver  
left join ( 
SELECT distinct cli_identifica ,vis_numcue  
from br_dm_prod_bigdata_fisa_db.tcli_persona 
,br_dm_prod_bigdata_fisa_db.tcap_vista  
where cli_codigo=vis_codcli 
and vis_mod = 4 
and VIS_PRO = 1 
and vis_tip = 1   
AND (vis_status='2' or vis_status='9')  
)  C2 
on (c1.tmo_numcue=c2.vis_numcue) );


--43 PERIODO
CREATE TABLE schm_workspace.saldos_cuenta_vista_funnel_capta_aux AS
SELECT 
b.cli_identifica as  rut,
a.ACP_FECHA as CodFecha,
a.ACP_FECHA, 
a.ACP_NUMCUE, 
sum(a.acp_salefe + a.acp_sal12h + a.acp_sal24h + a.acp_sal48h) as saldo 
from  br_dm_prod_bigdata_fisa_db.tcap_acrpas a
left join ( select 
distinct cli_identifica ,vis_numcue
from br_dm_prod_bigdata_fisa_db.tcli_persona
,br_dm_prod_bigdata_fisa_db.tcap_vista
where cli_codigo=vis_codcli 
and vis_mod=4
and (VIS_PRO=4 or VIS_PRO=40) 
and vis_tip=1  
AND (vis_status='2' or vis_status='9')) b
on(a.ACP_NUMCUE=b.vis_numcue)
where a.acp_pro = 4 and a.acp_tip = 1 
and a.periodo = v_periodo
group by 
a.ACP_FECHA, 
a.ACP_NUMCUE,
b.cli_identifica; 


--44
create table schm_workspace.saldos_cuenta_vista_funnel_capta as
select 
a.*,
b.Saldo as Ultimo_Saldo 
from (
select 
ACP_NUMCUE as cuenta,
max(rut) as rut,
sum(case when Saldo>1 then 1 else 0 end) as Nro_Dias_Saldo_mayor_1,
sum(case when Saldo>1 then Saldo else 0 end) as SUM_SALDO_FECHA
from schm_workspace.Saldos_Cuenta_vista_funnel_capta_aux
group by 
ACP_NUMCUE 
) as a 
left join (
select distinct 
ACP_NUMCUE,
Saldo 
from schm_workspace.Saldos_Cuenta_vista_funnel_capta_aux
where CodFecha=(select max(CodFecha) from schm_workspace.Saldos_Cuenta_vista_funnel_capta_aux)
) as b 
on (a.cuenta=b.ACP_NUMCUE);


--45
create table schm_workspace.movimiento_cuenta_vista_funnel_capta  as
select 
*,
CASE 
when tmo_tipotra='C' then 
case 
WHEN DESCRIPCION IN ('VALOR EFECTIVO','EN EFECTIVO') AND GLS_TRANSAC ='DEPOSITO' AND  SI_ABR<>1  THEN 'Depï¿½sitos en Efectivo' 
WHEN DESCRIPCION IN ('CON DOCUMENTOS') AND GLS_TRANSAC ='DEPOSITO' AND SI_ABR<>1 THEN 'Depï¿½sitos con Documento' 
WHEN DESCRIPCION IN ('TRANSFERENCIA DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas' 
WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas' 
WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR=1 THEN 'Abono de Remuneraciones' 
WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 and DESC_NEGOCIO like '%Proveedores%' THEN 'TEF Recibidas' 
WHEN DESCRIPCION IN ('POR REGULARIZACION') AND  SI_ABR<>1 THEN 'Otros (pago proveedores)' 
WHEN DESCRIPCION IN ('DESDE LINEA DE CREDITO') AND GLS_TRANSAC ='TRASPASO DE FONDOS' AND  SI_ABR<>1 THEN 'Traspaso desde LCA'
WHEN DESCRIPCION IN ('AVANCE DESDE TARJETA DE CREDITO BANCO RIPLEY') AND  SI_ABR<>1 THEN 'Avance desde Tarjeta Ripley' 
WHEN DESCRIPCION IN ('DEVOLUCION COMISION') AND  SI_ABR<>1 THEN 'DEVOLUCION COMISION' 
WHEN DESCRIPCION IN ('POR TRANSFERENCIA  DE LCA A CTA VISTA') AND  SI_ABR<>1 THEN 'Traspaso desde LCA' 
else 'OTROS ABONOS' 
end else ''
END AS Descripcion_Abono,
CASE 
when tmo_tipotra='D' then 
CASE
WHEN DESCRIPCION IN ('COMPRA NACIONAL') THEN 'Compras Redcompra' 
WHEN DESCRIPCION IN ('COMPRA NACIONAL MCD') THEN 'Compras Redcompra MCD' 
WHEN DESCRIPCION IN ('COMPRA INTERNACIONAL') THEN 'Compras Internacionales' 
WHEN DESCRIPCION IN ('COMPRA INTERNACIONAL MCD') THEN 'Compras Internacionales MCD' 
WHEN DESCRIPCION IN ('CARGO POR PEC') THEN 'PEC' 
WHEN DESCRIPCION IN ('GIRO CAJERO AUTOMATICO') THEN 'Giros ATM' 
when DESCRIPCION IN ('GIRO ATM INTERNACIONAL MCD') then 'Giros internacional MCD'
when DESCRIPCION IN ('GIRO ATM NACIONAL MCD') then 'Giros ATM MCD'
WHEN DESCRIPCION IN ('GIRO POR CAJA') THEN 'Giros Caja' 
WHEN DESCRIPCION IN ('GIRO INTERNACIONAL') THEN 'Giro Internacional' 
WHEN DESCRIPCION IN ('TRANSFERENCIA A OTROS BANCOS') THEN 'TEF emitidas Otros Bancos'
WHEN DESCRIPCION IN ('PAGO TARJETA DE CREDITO') THEN 'Pago de Tarjeta' 
WHEN DESCRIPCION IN ('A CUENTA BANCO RIPLEY','POR TRASPASO A CUENTA')  THEN 'Pago LCA' 
WHEN DESCRIPCION IN ('COSTO DE MANTENCION MENSUAL CUENTA VISTA') then 'Comision planes' 
else 'OTROS CARGOS' 
end else ''
END AS Descripcion_Cargo 
from 
( select 
c2.cli_identifica as  rut,
c1.tmo_fechcon as CodFecha,
c1.tmo_numcue as CUENTA, 
c1.tmo_fechcon as FECHACON, 
c1.tmo_fechcon as FECHA, 
c1.rub_desc as DESCRIPCION, 
c1.tmo_val as MONTO, 
c1.con_libre as Desc_negocio, 
c1.tmo_codmod, 
c1.tmo_tipotra, 
c1.tmo_rubro, 
c1.tmo_numtra, 
c1.tmo_numcue, 
c1.tmo_codusr, 
c1.tmo_codusr as codsur2, 
c1.tmo_sec, 
c1.tmo_codtra, 
(
SELECT cod_destra 
FROM br_dm_prod_bigdata_fisa_db.tgen_codtrans 
WHERE cod_tra = tmo_codtra AND cod_mod = tmo_codmod 
) as gls_transac,
case 
when c1.tmo_tipotra='D' then 'CARGO' 
when c1.tmo_tipotra='C' then 'ABONO' 
end as Tipo_Movimiento,
case 
when c1.tmo_rubro = 1 and c1.tmo_codtra = 30 and c1.con_libre like 'Depo%' then 1 
else 0 
end as Marca_DAP,
case 
when c1.tmo_tipotra='C' 
and c1.rub_desc='DESDE OTROS BANCOS' 
and ( 
c1.con_libre like '%Remuneraciones%' OR 
c1.con_libre like '%Anticipos%' OR 
c1.con_libre like '%Sueldos%')  then 1 
ELSE 0 
END as SI_ABR ,
CASE 
WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS' 
and ( c1.con_libre like '%Remuneraciones%' OR c1.con_libre like '%Anticipos%' OR c1.con_libre like '%Sueldos%')
AND c1.con_libre like '%BANCO RIPLEY%' THEN 'BANCO RIPLEY' 
WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS' 
and ( c1.con_libre like '%Remuneraciones%' OR c1.con_libre like '%Anticipos%' OR c1.con_libre like '%Sueldos%')
 AND c1.con_libre like '%CAR S.A.%' THEN 'CAR' 
WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS' 
and ( c1.con_libre like '%Remuneraciones%' OR c1.con_libre like '%Anticipos%' OR c1.con_libre like '%Sueldos%')
 AND c1.con_libre like '%RIPLEY STORE%' THEN 'RIPLEY STORE' 
WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS' 
and ( c1.con_libre like '%Remuneraciones%' OR c1.con_libre like '%Anticipos%' OR c1.con_libre like '%Sueldos%')
 AND ( 
c1.con_libre NOT like ('%RIPLEY STORE%') or 
c1.con_libre NOT like ('%CAR S.A.%') or 
c1.con_libre NOT like ('%BANCO RIPLEY%') 
) THEN 'OTROS BANCOS' else ''
END AS Descripcion_ABR,
CASE 
WHEN c1.tmo_tipotra='D' 
and (c1.con_libre like '%Ripley%' OR c1.con_libre like '%RIPLEY%') 
AND  c1.con_libre NOT like '%PAGO%' 
THEN 'COMPRA_RIPLEY' else ''
END AS COMPRA_RIPLEY
from(select * from  br_dm_prod_bigdata_fisa_db.tcap_tramon as a 
   , br_dm_prod_bigdata_fisa_db.tgen_tranrubro  
   , br_dm_prod_bigdata_fisa_db.tcap_concepto  
where rub_mod    = tmo_codmod  
and rub_tra      = tmo_codtra  
and rub_rubro    = tmo_rubro  
and con_modulo  = tmo_codmod  
and con_rubro   = tmo_rubro  
and con_numtran = tmo_numtra  
and con_cuenta  = tmo_numcue  
and con_codusr  = tmo_codusr  
and con_sec    = tmo_sec  
and con_transa  = tmo_codtra 
and tmo_tipotra in ('D','C')  
and tmo_codpro = 4 
and tmo_codtip = 1 
and tmo_modo = 'N' 
and tmo_val > 1  
and a.periodo = v_periodo                  
)  C1  
left join ( 
SELECT distinct cli_identifica ,vis_numcue  
from br_dm_prod_bigdata_fisa_db.tcli_persona  
,br_dm_prod_bigdata_fisa_db.tcap_vista  
where cli_codigo=vis_codcli 
and vis_mod=4 
and (VIS_PRO = 4 or VIS_PRO = 40) 
and vis_tip=1  
AND (vis_status='2' or vis_status='9')  
)  C2 
on (c1.tmo_numcue=c2.vis_numcue)); 


--46
CREATE TABLE schm_workspace.base8 AS 
SELECT A.*,
b.*
from schm_workspace.base7 as a 
join (select distinct 
a.rut as rut3,a.dia as dia3,a.fecha as fecha3,
case when b.cuenta is not null and b.ultimo_saldo>1 then 1 else 0 end as con_saldo,
case when b.cuenta is not null and b.SUM_SALDO_FECHA>7 then b.SUM_SALDO_FECHA else 0 end as saldo_total,
case when b.cuenta is not null and b.ultimo_saldo>1 then b.ultimo_saldo else 0 end as ultimo_saldo,
count(case when date_part('day',c.fecha)>=a.dia and (c.Descripcion_Cargo in ('Compras Internacionales',
'Compras Redcompra')  or c.DESCRIPCION in('COMPRA INTERNACIONAL MCD','COMPRA NACIONAL MCD')) then c.cuenta end) as TRX_COMPRAS_cv,
sum(case when date_part('day',c.fecha)>=a.dia and (c.Descripcion_Cargo in ('Compras Internacionales',
'Compras Redcompra') or c.DESCRIPCION in('COMPRA INTERNACIONAL MCD','COMPRA NACIONAL MCD')) then c.monto  else 0 end) as monto_COMPRAS_cv,
count(case when date_part('day',c.fecha)>=a.dia and c.Descripcion_Abono in (
'Abono de Remuneraciones',
'Avance desde Tarjeta Ripley',
'Depï¿½sitos con Documento',
'Depï¿½sitos en Efectivo',
'OTROS ABONOS',
'Otros (pago proveedores)',
'TEF Recibidas',
'Traspaso desde LCA'
) then c.cuenta end) as TRX_abonos_cv,
sum(case when   date_part('day',c.fecha)>=a.dia and  c.Descripcion_Abono in (
'Abono de Remuneraciones',
'Avance desde Tarjeta Ripley',
'Depï¿½sitos con Documento',
'Depï¿½sitos en Efectivo',
'OTROS ABONOS',
'Otros (pago proveedores)',
'TEF Recibidas',
'Traspaso desde LCA'
) then c.monto else 0 end) as monto_abonos_cv,
case when b1.cuenta is not null and b1.ultimo_saldo>1 then 1 else 0 end as con_saldo_ctacte,
case when b1.cuenta is not null and b1.SUM_SALDO_FECHA>7 then b1.SUM_SALDO_FECHA else 0 end as saldo_total_ctacte,
case when b1.cuenta is not null and b1.ultimo_saldo>1 then b1.ultimo_saldo else 0 end as ultimo_saldo_ctacte,
count(case when date_part('day',c.fecha)>=a.dia and (c1.Descripcion_Cargo in ('Compras Internacionales','Compras Redcompra')  or 
c1.DESCRIPCION in('COMPRA INTERNACIONAL MCD','COMPRA NACIONAL MCD')) then c1.cuenta end) as TRX_COMPRAS_ctacte,
sum(case when date_part('day',c.fecha)>=a.dia and (c1.Descripcion_Cargo in ('Compras Internacionales',
'Compras Redcompra') or c1.DESCRIPCION in('COMPRA INTERNACIONAL MCD','COMPRA NACIONAL MCD')) then c1.monto  else 0 end) as monto_COMPRAS_ctacte,
sum(case when   date_part('day',c.fecha)>=a.dia and  c1.Descripcion_Abono in (
'Abono de Remuneraciones',
'Avance desde Tarjeta Ripley',
'Depï¿½sitos con Documento',
'Depï¿½sitos en Efectivo',
'OTROS ABONOS',
'Otros (pago proveedores)',
'TEF Recibidas',
'Traspaso desde LCA'
) then c1.monto else 0 end) as monto_abonos_ctacte
from schm_workspace.base7 as a
left join schm_workspace.Saldos_Cuenta_vista_funnel_capta as b
on(a.NUMERO_CUENTA_VISTA:: int=b.cuenta) and (a.rut=b.rut)
left join schm_workspace.movimiento_Cuenta_vista_funnel_capta as c
on(a.NUMERO_CUENTA_VISTA:: int=c.cuenta) and (a.rut=c.rut)
left join schm_workspace.Saldos_Cuenta_corriente_funnel_capta as b1
on(a.NUMERO_CUENTA_CORRIENTE:: int=b1.cuenta) and (a.rut=b1.rut)
left join schm_workspace.movimiento_Cuenta_corriente_funnel_capta as c1
on(a.NUMERO_CUENTA_CORRIENTE:: int=c1.cuenta) and (a.rut=c1.rut)
group by
a.rut,
a.dia,
a.fecha,
b.cuenta,
b1.cuenta,
b.ultimo_saldo,
b.SUM_SALDO_FECHA,
b1.ultimo_saldo,
b1.SUM_SALDO_FECHA) as b
on a.rut=b.rut3 and a.dia=b.dia3;


--47 Trae 0
CREATE TABLE schm_workspace.oferta_cv AS 
SELECT distinct 
t1.CAMP_RUT_CLI  rut 
FROM br_dm_prod_bigdata_camreport_db.cbcamp_mae_ofertas t1
join (select distinct 
CAMP_COD_CAMP_K,
CAMP_FCH_INI_CAMP,
CAMP_TIP_PROD 
FROM br_dm_prod_bigdata_camreport_db.cbcamp_mae_campana
where  CAMP_TIP_PROD='300'
and CAMP_COD_CAMP_K in ('VIST1501202104077',
'VIST1501202104057',
'VIST1501202103834',
'VIST1501202103971',
'VIST1501202103833',
'VIST1501202104080',
'VIST1501202104008',
'VIST1501202103977',
'VIST1501202104075',
'VIST1501202103930',
'VIST1501202103948',
'VIST1501202103835',
'VIST1501202103838',
'VIST1501202103967',
'VIST1501202103874',
'VIST1501202104111',
'VIST1501202104160',
'VIST1501202104186',
'VIST1501202104192',
'VIST1501202104203',
'VIST1501202104260',
'VIST1501202104285',
'VIST1501202104309',
'VIST1501202104386',
'VIST1501202104415',
'VIST1501202104429',
'VIST1501202104448',
'VIST1501202104473',
'VIST1501202104526',
'VIST1501202104567',
'VIST1501202104588',
'VIST1501202104588',
'VIST1501202104590',
'VIST1501202104632',
'VIST1501202104690',
'VIST1501202104711',
'VIST1501202104745',
'VIST1501202104777',
'VIST1501202104847',
'VIST1501202104872',
'VIST1501202104894',
'VIST1501202104897',
'VIST1501202104938',
'VIST1501202204988',
'VIST1501202204997', 
'VIST1501202205015',
'VIST1501202205031',
'VIST1501202205216',
'VIST1501202205063',
'VIST1501202205145',
'VIST1501202205183',
'VIST1501202205192',
'VIST1501202205194'
))  t2
on(t1.CAMP_COD_CAMP_FK = t2.CAMP_COD_CAMP_K);


--48
create table schm_workspace.funnel_digital_captacion as 
select 
	a.*
	,b.*,v_periodo as periodo
from schm_workspace.base8 as a 
join (select distinct 
	a.rut as rut4,a.dia as dia4,a.fecha as fecha4,
	case when b.rut is not null then 1 else 0 end as OFERTA_CV,
	case when c.rut is not null then 1 else 0 end as OFERTA_CC,
	max(case when  CON_OFERTA ='SIN OFERTA'and (UOF_CAPTA=1 ) and (r04_MOROSA_30_90+
	r04_DIRECTA_VENCIDA+
	r04_INVERSIONES_FINANCIERAS+
	r04_CASTIGADA_DIRECTA+
	r04_CASTIGADA_INDIRECT>0 or	MORA_SINACOFI>0) 
	then 1 else 0 end) as NO_oferta_mora_protesto_CAPTA,
	max(case when  CON_OFERTA ='SIN OFERTA' and
	(case when  CON_OFERTA ='SIN OFERTA'
	and (UOF_CAPTA=1 ) and (r04_MOROSA_30_90+
	r04_DIRECTA_VENCIDA+
	r04_INVERSIONES_FINANCIERAS+
	r04_CASTIGADA_DIRECTA+
	 r04_CASTIGADA_INDIRECT>0 or	MORA_SINACOFI>0) 
	then 1 else 0 end)=0
	and (UOF_CAPTA=1 ) and r04_MOROSA_30_90+
	r04_DIRECTA_VENCIDA+
	r04_INVERSIONES_FINANCIERAS+
	r04_CASTIGADA_DIRECTA+
	 r04_CASTIGADA_INDIRECT=0 and LNEGRO=1 and 	MORA_SINACOFI=0  then 1 else 0 end) as No_oferta_lnegro_CAPTA,
	max( case when  CON_OFERTA ='SIN OFERTA'
	and (UOF_CAPTA = 1)
	and 
	(case when  CON_OFERTA ='SIN OFERTA'
	and (UOF_CAPTA=1 ) and (r04_MOROSA_30_90+
	r04_DIRECTA_VENCIDA+
	r04_INVERSIONES_FINANCIERAS+
	r04_CASTIGADA_DIRECTA+
	 r04_CASTIGADA_INDIRECT>0 or	MORA_SINACOFI>0) 
	then 1 else 0 end)=0
	and 
	(case when  CON_OFERTA ='SIN OFERTA' and
	(case when  CON_OFERTA ='SIN OFERTA'
	and (UOF_CAPTA=1 ) and (r04_MOROSA_30_90+
	r04_DIRECTA_VENCIDA+
	r04_INVERSIONES_FINANCIERAS+
	r04_CASTIGADA_DIRECTA+
	 r04_CASTIGADA_INDIRECT>0 or	MORA_SINACOFI>0) 
	then 1 else 0 end)=0
	and (UOF_CAPTA=1 ) and r04_MOROSA_30_90+
	r04_DIRECTA_VENCIDA+
	r04_INVERSIONES_FINANCIERAS+
	r04_CASTIGADA_DIRECTA+
	 r04_CASTIGADA_INDIRECT=0 and LNEGRO=1 and 	MORA_SINACOFI=0  then 1 else 0 end)=0
	 then 1 else 0 end
	) as No_oferta_riesgo_capta,
	max(case when  CON_OFERTA='SIN OFERTA'
	and (UOF_CDP=1 ) and (r04_MOROSA_30_90+
	r04_DIRECTA_VENCIDA+
	r04_INVERSIONES_FINANCIERAS+
	r04_CASTIGADA_DIRECTA+
	 r04_CASTIGADA_INDIRECT>0 or	MORA_SINACOFI>0) 
	then 1 else 0 end) as NO_oferta_mora_protesto_CDP,
	max(case when  CON_OFERTA='SIN OFERTA'
	and 
	(case when  CON_OFERTA='SIN OFERTA'
	and (UOF_CDP=1 ) and (r04_MOROSA_30_90+
	r04_DIRECTA_VENCIDA+
	r04_INVERSIONES_FINANCIERAS+
	r04_CASTIGADA_DIRECTA+
	 r04_CASTIGADA_INDIRECT>0 or	MORA_SINACOFI>0) 
	then 1 else 0 end) =0
	and (UOF_CDP=1 ) and r04_MOROSA_30_90+
	r04_DIRECTA_VENCIDA+
	r04_INVERSIONES_FINANCIERAS+
	r04_CASTIGADA_DIRECTA+
	 r04_CASTIGADA_INDIRECT=0 and LNEGRO=1 and 	MORA_SINACOFI=0  then 1 else 0 end) as No_oferta_lnegro_CDP,
	max(case when  CON_OFERTA ='SIN OFERTA' and
	(case when  CON_OFERTA='SIN OFERTA'
	and (UOF_CDP=1 ) and (r04_MOROSA_30_90+
	r04_DIRECTA_VENCIDA+
	r04_INVERSIONES_FINANCIERAS+
	r04_CASTIGADA_DIRECTA+
	 r04_CASTIGADA_INDIRECT>0 or	MORA_SINACOFI>0) 
	then 1 else 0 end)=0
	and 
	(case when  CON_OFERTA='SIN OFERTA'
	and 
	(case when  CON_OFERTA='SIN OFERTA'
	and (UOF_CDP=1 ) and (r04_MOROSA_30_90+
	r04_DIRECTA_VENCIDA+
	r04_INVERSIONES_FINANCIERAS+
	r04_CASTIGADA_DIRECTA+
	 r04_CASTIGADA_INDIRECT>0 or	MORA_SINACOFI>0) 
	then 1 else 0 end) =0
	and (UOF_CDP=1 ) and r04_MOROSA_30_90+
	r04_DIRECTA_VENCIDA+
	r04_INVERSIONES_FINANCIERAS+
	r04_CASTIGADA_DIRECTA+
	 r04_CASTIGADA_INDIRECT=0 and LNEGRO=1 and 	MORA_SINACOFI=0  then 1 else 0 end)=0
	 then 1 else 0 end) as  No_oferta_riesgo_CDP
	from schm_workspace.base8 as a
	left join schm_workspace.oferta_cv as b
	on(a.rut=b.rut)
	left join schm_workspace.oferta_ctacte as c
	on(a.rut=c.rut)
	group by a.rut,a.dia,a.fecha,b.rut,c.rut) as b 
	on a.rut=b.rut4 and a.dia=b.dia4;



delete from schm_digital.dgtl_funnel_digital_captacion
where periodo = v_periodo;

insert into schm_digital.dgtl_funnel_digital_captacion
select * from schm_workspace.funnel_digital_captacion;



--01.TOTAL DIA 
create table schm_workspace.resumen_digital AS
select
    '01.TOTAL CAPTACION' AS tipo
    , dia
    , SUM(visitas_1) :: FLOAT AS visita
    , SUM(visitas_1) AS rut_digitado
    , SUM(visitas_1) / NULLIF(SUM(visitas_1)::FLOAT, 0) AS porcentaje_digitacion
    , COUNT(rut) AS rut_unico
    , COUNT(rut) / NULLIF(SUM(visitas_1) :: FLOAT, 0) AS procentaje_unico
    , COUNT(CASE WHEN uof_capta = 1 THEN rut END) AS uof
    , COUNT(CASE WHEN uof_capta = 1 THEN rut END) / NULLIF(COUNT(rut):: FLOAT, 0) AS porcentaje_uof
    , COUNT(CASE WHEN (uof_capta = 0) AND no_uof_capta_vu_activo = 1 THEN rut END) AS no_uof_1
    , COUNT(CASE WHEN (uof_capta = 0) AND no_uof_capta_vu_semi=1 THEN rut END) AS no_uof_2
    , COUNT(CASE WHEN (uof_capta = 0) AND no_uof_capta_vu_activo + no_uof_capta_vu_semi = 0 THEN rut END ) AS NO_UOF_3
    , COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA') THEN rut END) AS oferta_credito
    , COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA') THEN rut END) / NULLIF(COUNT(CASE WHEN uof_capta = 1 THEN rut END ):: FLOAT, 0) AS porcentaje_oferta
    , COUNT(CASE WHEN con_oferta IN ('CDP', 'SIN OFERTA') AND (uof_capta = 1) AND no_oferta_mora_protesto_capta = 1 THEN rut END) AS no_oferta_mora_protesto
    , COUNT(CASE WHEN con_oferta IN ('CDP', 'SIN OFERTA') AND (uof_capta = 1) AND no_oferta_lnegro_capta = 1 THEN rut END ) AS no_oferta_lnegro
    , COUNT(CASE WHEN uof_capta = 1 THEN rut END) 
        - COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA') THEN rut END) 
        - COUNT(CASE WHEN con_oferta IN ('CDP', 'SIN OFERTA') AND (uof_capta = 1) AND no_oferta_mora_protesto_capta = 1 THEN rut END)
        - COUNT(CASE WHEN con_oferta IN ('CDP', 'SIN OFERTA') AND (uof_capta = 1) AND no_oferta_lnegro_capta = 1 THEN rut END ) AS no_oferta_riesgo
    , COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA') AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0 THEN rut END) AS salta_popup 
    , COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA') AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0 THEN rut END ) 
        / NULLIF(COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA') THEN rut END):: FLOAT, 0) AS porcentaje_popup
    , COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA') AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas = 0 
        AND deu_mcc + deu_bic + monto_mora + det_sbif_3090 + det_sbif_90180 + det_sbif_180mas + det_sbif_3amas + dias_mora_car + dias_mora_bco = 0 THEN rut END) AS no_popup_ln
    , COUNT(CASE WHEN con_oferta NOT IN ('CDP','SIN OFERTA') AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas = 0 
        AND det_sbif_3090 + det_sbif_90180 + det_sbif_180mas + det_sbif_3amas > 0 THEN rut END) 
        + COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA') 
        AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas = 0 
        AND deu_mcc + deu_bic + monto_mora + dias_mora_car + dias_mora_bco > 0
        AND det_sbif_3090 + det_sbif_90180 + det_sbif_180mas + det_sbif_3amas = 0 THEN rut END) AS no_popup_mora
    , COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA')
        AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0
        AND acepta_tam + acepta_tr + acepta_mccerrada + acepta_tamcuotas > 0 THEN rut END) AS aceptacion
    , COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA')
        AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0
        AND acepta_tam + acepta_tr + acepta_mccerrada +	acepta_tamcuotas > 0 THEN rut END ) 
        / NULLIF(COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA')
        AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0 THEN rut END ):: FLOAT, 0) AS porcentaje_aceptacion
    , COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA')
        AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0
        AND acepta_tam + acepta_tr + acepta_mccerrada +	acepta_tamcuotas > 0
        AND acepta_real_tam + acepta_real_tr + acepta_real_mccerrada + acepta_real_tamcuotas > 0 THEN rut END) AS aceptacion_real
    , COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA')
        AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0
        AND acepta_tam + acepta_tr + acepta_mccerrada +	acepta_tamcuotas > 0
        AND acepta_real_tam + acepta_real_tr + acepta_real_mccerrada + acepta_real_tamcuotas > 0 THEN rut END ) 
        / NULLIF(COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA')
        AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0
        AND acepta_tam + acepta_tr + acepta_mccerrada +	acepta_tamcuotas > 0 THEN rut END ) :: FLOAT, 0) AS porcentaje_aceptacion_real
    , COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA')
        AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0
        AND acepta_tam + acepta_tr + acepta_mccerrada + acepta_tamcuotas > 0
        AND acepta_real_tam + acepta_real_tr + acepta_real_mccerrada + acepta_real_tamcuotas > 0 
        AND (capta_tc = 1 AND producto2_tc <> 'CDP') THEN rut END) AS curse_real
    , COUNT(CASE WHEN con_oferta  NOT IN ('CDP', 'SIN OFERTA')
            AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0
            AND acepta_tam + acepta_tr + acepta_mccerrada +	acepta_tamcuotas > 0
            AND (acepta_real_tam + acepta_real_tr + acepta_real_mccerrada + acepta_real_tamcuotas > 0
            AND (capta_tc = 1 AND producto2_tc NOT IN ('CDP'))) THEN rut END) 
            / NULLIF(COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA')
            AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0
            AND acepta_tam + acepta_tr + acepta_mccerrada +	acepta_tamcuotas > 0
            AND acepta_real_tam + acepta_real_tr + acepta_real_mccerrada + acepta_real_tamcuotas > 0 THEN rut END ) :: FLOAT, 0) AS porcentaje_curse_real
    , COUNT(CASE WHEN capta_tc = 1 AND producto2_tc NOT IN ('CDP') THEN rut END) AS curser_real_sin_cascada
    , COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA')
            AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0
            AND acepta_tam + acepta_tr + acepta_mccerrada +	acepta_tamcuotas > 0
            AND (acepta_real_tam + acepta_real_tr + acepta_real_mccerrada + acepta_real_tamcuotas > 0
            AND (capta_tc = 1 AND producto2_tc NOT IN ('CDP')))
            AND cesantia_TC = 1 AND desgravamen_tc = 0 THEN rut END) AS curse_con_cesantia
    , COUNT(CASE WHEN con_oferta  NOT IN ('CDP', 'SIN OFERTA')
            AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0
            AND acepta_tam + acepta_tr + acepta_mccerrada +	acepta_tamcuotas > 0
            AND (acepta_real_tam + acepta_real_tr + acepta_real_mccerrada + acepta_real_tamcuotas > 0
            AND (capta_tc = 1 AND producto2_tc NOT IN ('CDP')))
            AND cesantia_tc = 0 AND desgravamen_tc = 1 THEN rut END) AS curse_con_desgravamen
    , COUNT(CASE WHEN con_oferta  NOT IN ('CDP', 'SIN OFERTA')
            AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0
            AND acepta_tam + acepta_tr + acepta_mccerrada + acepta_tamcuotas > 0
            AND (acepta_real_tam + acepta_real_tr + acepta_real_mccerrada + acepta_real_tamcuotas > 0
            AND (capta_tc = 1 AND producto2_tc NOT IN ('CDP')))
            AND cesantia_tc = 1 AND	desgravamen_tc = 1 THEN rut END) AS curse_con_2seguros
    , COUNT(CASE WHEN con_oferta  NOT IN ('CDP', 'SIN OFERTA')
            AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0
            AND acepta_tam + acepta_tr + acepta_mccerrada + acepta_tamcuotas > 0
            AND (acepta_real_tam + acepta_real_tr + acepta_real_mccerrada + acepta_real_tamcuotas > 0
            AND (capta_tc = 1 AND producto2_tc NOT IN ('CDP')))
            AND embozado_tc = 1 THEN rut END) AS retiro_plastico
    , COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA')
            AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0
            AND acepta_tam + acepta_tr + acepta_mccerrada + acepta_tamcuotas > 0
            AND (acepta_real_tam + acepta_real_tr + acepta_real_mccerrada + acepta_real_tamcuotas > 0
            AND (capta_tc = 1 AND producto2_tc NOT IN ('CDP')))
            AND embozado_tc = 1 THEN rut END) 
            / NULLIF(COUNT(CASE WHEN con_oferta NOT IN ('CDP', 'SIN OFERTA')
            AND salta_tam + salta_tr + salta_mccerrada + salta_tamcuotas > 0
            AND acepta_tam + acepta_tr + acepta_mccerrada + acepta_tamcuotas > 0
            AND (acepta_real_tam + acepta_real_tr + acepta_real_mccerrada + acepta_real_tamcuotas > 0
            AND (capta_tc = 1 AND producto2_tc NOT IN ('CDP'))) THEN rut END):: FLOAT, 0) AS porcentaje_retiro,
            v_periodo as periodo
FROM schm_workspace.funnel_digital_captacion
WHERE dia <= v_dia--cambiar a variable
GROUP BY 
    dia;

   
--02.TAM
INSERT INTO  schm_workspace.resumen_digital
select
'02.TAM' as TIPO,
dia, 
sum(visitas_1) as visita,
sum(visitas_1) as rut_digitado,
sum(visitas_1) / NULLIF(sum(visitas_1):: float,0) as PORCENTAJE_DIGITACION,
count(rut) as rut_unico,
count(rut) / NULLIF(sum(visitas_1):: float ,0)as procentaje_UNICO, 
count(case when    UOF_capta=1 then rut end )as UOF,
count(case when    UOF_capta=1 then rut end ) / NULLIF(count(rut):: float,0) as PORCENTAJE_UOF,
count(case when  (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when  (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when  (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when  CON_OFERTA   in ('TAM') then rut end) as oferta_CREDITO,
count(case when  CON_OFERTA  in ('TAM') then rut end)
 / NULLIF(count(case when    UOF_capta=1 then rut end ):: float,0) as PORCENTAJE_OFERTA,
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when  (UOF_CAPTA=1 ) then rut end)-
count(case when  CON_OFERTA  in ('TAM') then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
COUNT(case when CON_OFERTA  in ('TAM')
AND SALTA_TAM>0
  then rut end )  AS SALTA_POPUP ,
COUNT(case when CON_OFERTA  in ('TAM')
AND SALTA_TAM>0
  then rut end ) / NULLIF(count(case when  CON_OFERTA  in ('TAM') then rut end),0)
as   PORCENTAJE_POPUP,
  count(case when 
  CON_OFERTA  in ('TAM')
and SALTA_TAM=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
  CON_OFERTA  in ('TAM')
and SALTA_TAM=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
   CON_OFERTA  in ('TAM')
and SALTA_TAM=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
count(case when CON_OFERTA  in ('TAM')
and SALTA_TAM>0
and ACEPTA_TAM>0
then rut end ) as  ACEPTACION,
count(case when CON_OFERTA  in ('TAM')
and SALTA_TAM>0
and ACEPTA_TAM>0
then rut end ) /
NULLIF(COUNT(case when CON_OFERTA  in ('TAM')
AND SALTA_TAM>0
  then rut end ):: float,0) as PORCENTAJE_ACEPTACION,
count(case when CON_OFERTA  in ('TAM')
and SALTA_TAM>0
and ACEPTA_TAM>0
and ACEPTA_REAL_TAM>0
then rut end ) as ACEPTACION_REAL,
count(case when CON_OFERTA  in ('TAM')
and SALTA_TAM>0
and ACEPTA_TAM>0
and ACEPTA_REAL_TAM>0
then rut end ) / NULLIF(count(case when CON_OFERTA  in ('TAM')
and SALTA_TAM>0
and ACEPTA_TAM>0
then rut end ):: float,0) as PORCENTAJE_ACEPTACION_REAL,
count(  
case when CON_OFERTA  in ('TAM')
and SALTA_TAM>0
and ACEPTA_TAM>0
and (ACEPTA_REAL_TAM>0
and (capta_tc=1 and 	producto2_TC  in ('TAM'))) then rut end) AS CURSE_REAL,
count(  
case when CON_OFERTA  in ('TAM')
and SALTA_TAM>0
and ACEPTA_TAM>0
and (ACEPTA_REAL_TAM>0
and (capta_tc=1 and 	producto2_TC  in ('TAM'))) then rut end)
/ NULLIF(count(case when CON_OFERTA  in ('TAM')
and SALTA_TAM>0
and ACEPTA_TAM>0
and ACEPTA_REAL_TAM>0
then rut end ):: float,0) as 
PORCENTAJE_CURSE_REAL,
count(  
case when 
 capta_tc=1 and 	producto2_TC in ('TAM') then rut end) as CURSER_REAL_SIN_CASCADA,
count(  
case when CON_OFERTA  in ('TAM')
and SALTA_TAM>0
and ACEPTA_TAM>0
and (ACEPTA_REAL_TAM>0
and (capta_tc=1 and 	producto2_TC  in ('TAM')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=0
then rut end) as curse_con_cesantia,
count(  
case when CON_OFERTA  in ('TAM')
and SALTA_TAM>0
and ACEPTA_TAM>0
and (ACEPTA_REAL_TAM>0
and (capta_tc=1 and 	producto2_TC  in ('TAM')))
and cesantia_TC=0 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_DESGRAVAMEN,
count(  
case when CON_OFERTA  in ('TAM')
and SALTA_TAM>0
and ACEPTA_TAM>0
and (ACEPTA_REAL_TAM>0
and (capta_tc=1 and 	producto2_TC  in ('TAM')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_2seguros,
count(  
case when CON_OFERTA  in ('TAM')
and SALTA_TAM>0
and ACEPTA_TAM>0
and (ACEPTA_REAL_TAM>0
and (capta_tc=1 and 	producto2_TC  in ('TAM')))
and embozado_TC=1
then rut end) as retiro_plastico,
count(  
case when CON_OFERTA  in ('TAM')
and SALTA_TAM>0
and ACEPTA_TAM>0
and (ACEPTA_REAL_TAM>0
and (capta_tc=1 and 	producto2_TC  in ('TAM')))
and embozado_TC=1
then rut end) / NULLIF(count(  
case when CON_OFERTA  in ('TAM')
and SALTA_TAM>0
and ACEPTA_TAM>0
and (ACEPTA_REAL_TAM>0
and (capta_tc=1 and 	producto2_TC  in ('TAM'))) then rut end):: float,0)
 as Porcentaje_Retiro,
            v_periodo as periodo
from schm_workspace.funnel_digital_captacion
where dia <= v_dia -- ajuste
group by 
dia;


--03 TR
INSERT INTO schm_workspace.resumen_digital
SELECT
    '03.TR' as tipo
    , dia
    , SUM(visitas_1) as visita
    , SUM(visitas_1) as rut_digitado
    , SUM(visitas_1) / NULLIF(SUM(visitas_1):: float, 0) as PORCENTAJE_DIGITACION
    , count(rut) as rut_unico
    , count(rut) / NULLIF(SUM(visitas_1):: float, 0) as procentaje_UNICO
    , count(case when UOF_capta = 1 then rut end) as UOF
    , count(case when UOF_capta=1 then rut end ) / NULLIF(count(rut):: float, 0) as PORCENTAJE_UOF
    , count(case when (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1
    , count(case when (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2
    , count(case when (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3
    , count(case when CON_OFERTA = 'TR' then rut end) as oferta_CREDITO
    , count(case when CON_OFERTA = 'TR' then rut end) / NULLIF(count(case when UOF_capta = 1 then rut end ):: float, 0) as PORCENTAJE_OFERTA 
    , count(case when CON_OFERTA = 'SIN OFERTA' and (UOF_CAPTA = 1) and NO_oferta_mora_protesto_CAPTA = 1 then rut end) as NO_oferta_mora_protesto
    , count(case when  CON_OFERTA in ('SIN OFERTA') and (UOF_CAPTA = 1) and No_oferta_lnegro_CAPTA = 1 then rut end) as No_oferta_lnegro , count(case when  (UOF_CAPTA=1 ) then rut end) - count(case when  CON_OFERTA = 'TR' then rut end) - count(case when  CON_OFERTA = 'SIN OFERTA' and (UOF_CAPTA = 1) 
          and NO_oferta_mora_protesto_CAPTA=1 then rut end) - count(case when  CON_OFERTA in ('SIN OFERTA') 
          and (UOF_CAPTA = 1) and No_oferta_lnegro_CAPTA = 1 then rut 
        end) as No_oferta_riesgo
    , COUNT(case when CON_OFERTA = 'TR' AND SALTA_TR > 0 then rut end) AS SALTA_POPUP
    , COUNT(case when CON_OFERTA  = 'TR' AND SALTA_TR > 0 then rut end ) / NULLIF(count(case when CON_OFERTA = 'TR' then rut end):: float, 0) as PORCENTAJE_POPUP
    , count(case when CON_OFERTA  = 'TR' and SALTA_TR=0 and DEU_MCC+DEU_BIC+MONTO_MORA+DET_SBIF_3090+DET_SBIF_90180+DET_SBIF_180MAS+DET_SBIF_3AMAS+DIAS_MORA_CAR+DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN
    , count(case when CON_OFERTA  = 'TR' and SALTA_TR=0 and DET_SBIF_3090+DET_SBIF_90180+DET_SBIF_180MAS+DET_SBIF_3AMAS>0 then rut end ) 
            + count(case when CON_OFERTA = 'TR'
            and SALTA_TR=0 
            and DEU_MCC+DEU_BIC+MONTO_MORA+DIAS_MORA_CAR+DIAS_MORA_BCO>0
            and DET_SBIF_3090+DET_SBIF_90180+DET_SBIF_180MAS+DET_SBIF_3AMAS=0 then rut end) as NO_popup_MORA
    , count(case when CON_OFERTA = 'TR'
        and SALTA_TR>0
        and ACEPTA_TR>0
        then rut end ) as  ACEPTACION
    , count(case when CON_OFERTA = 'TR' and SALTA_TR>0 and ACEPTA_TR>0 then rut end ) / NULLIF(COUNT(case when CON_OFERTA = 'TR' AND SALTA_TR>0 then rut end ):: float, 0) as PORCENTAJE_ACEPTACION
    , count(case when CON_OFERTA ='TR' and SALTA_TR>0 and ACEPTA_TR>0 and ACEPTA_REAL_TR>0 then rut end ) as ACEPTACION_REAL
    , count(case when CON_OFERTA  = 'TR' and SALTA_TR>0 and ACEPTA_TR>0 and ACEPTA_REAL_TR>0
        then rut end ) / NULLIF(count(case when CON_OFERTA  = 'TR' and SALTA_TR>0 and ACEPTA_TR>0
        then rut end ):: float, 0) as PORCENTAJE_ACEPTACION_REAL
    , count(  
        case when CON_OFERTA  = 'TR' and SALTA_TR>0 and ACEPTA_TR>0 and (ACEPTA_REAL_TR>0 and (capta_tc=1 and producto2_TC = 'TR')) then rut end) AS CURSE_REAL
    , count(  
        case when CON_OFERTA  = 'TR' and SALTA_TR>0 and ACEPTA_TR>0 and (ACEPTA_REAL_TR>0 and (capta_tc=1 and 	producto2_TC  = 'TR')) then rut end)
        / NULLIF(count(case when CON_OFERTA  = 'TR' and SALTA_TR>0 and ACEPTA_TR>0 and ACEPTA_REAL_TR>0 then rut end ):: float,0) as PORCENTAJE_CURSE_REAL
    , count(  
        case when capta_tc=1 and 	producto2_TC = 'TR' then rut end) as CURSER_REAL_SIN_CASCADA
    , count(  
        case when CON_OFERTA  = 'TR' and SALTA_TR>0 and ACEPTA_TR>0 and (ACEPTA_REAL_TR>0 and (capta_tc=1 and producto2_TC  = 'TR')) and cesantia_TC=1 and 	DESGRAVAMEN_TC=0
        then rut end) as curse_con_cesantia
    , count(  
        case when CON_OFERTA  = 'TR'
        and SALTA_TR>0
        and ACEPTA_TR>0
        and (ACEPTA_REAL_TR>0
        and (capta_tc=1 and 	producto2_TC  = 'TR'))
        and cesantia_TC=0 and 	DESGRAVAMEN_TC=1
        then rut end) as curse_con_DESGRAVAMEN
    , count(  
        case when CON_OFERTA  = 'TR'
        and SALTA_TR>0
        and ACEPTA_TR>0
        and (ACEPTA_REAL_TR>0
        and (capta_tc=1 and 	producto2_TC  = 'TR'))
        and cesantia_TC=1 and 	DESGRAVAMEN_TC=1
        then rut end) as curse_con_2seguros
    , count(  
        case when CON_OFERTA  = 'TR'
        and SALTA_TR>0
        and ACEPTA_TR>0
        and (ACEPTA_REAL_TR>0
        and (capta_tc=1 and 	producto2_TC  = 'TR'))
        and embozado_TC=1
        then rut end) as retiro_plastico
    , count(  
        case when CON_OFERTA  = 'TR'
        and SALTA_TR>0
        and ACEPTA_TR>0
        and (ACEPTA_REAL_TR>0
        and (capta_tc=1 and 	producto2_TC  = 'TR'))
        and embozado_TC=1
        then rut end) / NULLIF(count(  
        case when CON_OFERTA  = 'TR'
        and SALTA_TR>0
        and ACEPTA_TR>0
        and (ACEPTA_REAL_TR>0
        and (capta_tc=1 and 	producto2_TC  = 'TR')) then rut end):: float,0)
        as Porcentaje_Retiro,
            v_periodo as periodo
FROM schm_workspace.funnel_digital_captacion
WHERE dia <= v_dia  -- ajuste
GROUP BY 
    dia;

-- 04TAM CUOTAS
insert into  schm_workspace.resumen_digital
select
'04.TAMCUOTAS' as TIPO,
dia, 
sum(visitas_1) as visita,
sum(visitas_1) as rut_digitado,
sum(visitas_1) / NULLIF(sum(visitas_1):: float ,0) as PORCENTAJE_DIGITACION,
count(rut) as rut_unico,
count(rut) / NULLIF(sum(visitas_1):: float ,0) as procentaje_UNICO, 
count(case when    UOF_capta=1 then rut end )as UOF,
count(case when    UOF_capta=1 then rut end ) / NULLIF(count(rut):: float ,0) as PORCENTAJE_UOF,
count(case when  (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when  (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when  (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when  CON_OFERTA   in ('TAMCUOTAS') then rut end) as oferta_CREDITO,
count(case when  CON_OFERTA  in ('TAMCUOTAS') then rut end) / NULLIF(count(case when    UOF_capta=1 then rut end ):: float ,0) as PORCENTAJE_OFERTA,
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when  (UOF_CAPTA=1 ) then rut end)-
count(case when  CON_OFERTA  in ('TAMCUOTAS') then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
COUNT(case when CON_OFERTA  in ('TAMCUOTAS')
AND SALTA_TAMCUOTAS>0
  then rut end )  AS SALTA_POPUP ,
COUNT(case when CON_OFERTA  in ('TAMCUOTAS')
AND SALTA_TAMCUOTAS>0
  then rut end ) / NULLIF(count(case when  CON_OFERTA  in ('TAMCUOTAS') then rut end):: float ,0) as   PORCENTAJE_POPUP,
  count(case when 
  CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
  CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
   CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
count(case when CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
then rut end ) as  ACEPTACION,
count(case when CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
then rut end ) / NULLIF(
COUNT(case when CON_OFERTA  in ('TAMCUOTAS')
AND SALTA_TAMCUOTAS>0
  then rut end ):: float ,0) as PORCENTAJE_ACEPTACION,
count(case when CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and ACEPTA_REAL_TAMCUOTAS>0
then rut end ) as ACEPTACION_REAL,
count(case when CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and ACEPTA_REAL_TAMCUOTAS>0
then rut end ) / NULLIF(count(case when CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
then rut end ):: float ,0) as PORCENTAJE_ACEPTACION_REAL,
count(  
case when CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and 	producto2_TC  in ('TAMCUOTAS'))) then rut end) AS CURSE_REAL,
count(  
case when CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and 	producto2_TC  in ('TAMCUOTAS'))) then rut end)
 / NULLIF(count(case when CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and ACEPTA_REAL_TAMCUOTAS>0
then rut end ):: float ,0) as 
PORCENTAJE_CURSE_REAL,
count(  
case when 
 capta_tc=1 and 	producto2_TC in ('TAMCUOTAS') then rut end) as CURSER_REAL_SIN_CASCADA,
count(  
case when CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and 	producto2_TC  in ('TAMCUOTAS')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=0
then rut end) as curse_con_cesantia,
count(  
case when CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and 	producto2_TC  in ('TAMCUOTAS')))
and cesantia_TC=0 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_DESGRAVAMEN,
count(  
case when CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and 	producto2_TC  in ('TAMCUOTAS')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_2seguros,
count(  
case when CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and 	producto2_TC  in ('TAMCUOTAS')))
and embozado_TC=1
then rut end) as retiro_plastico,
count(  
case when CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and 	producto2_TC  in ('TAMCUOTAS')))
and embozado_TC=1
then rut end) / NULLIF(count(  
case when CON_OFERTA  in ('TAMCUOTAS')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and 	producto2_TC  in ('TAMCUOTAS'))) then rut end):: float ,0) as Porcentaje_Retiro,
            v_periodo as periodo
from schm_workspace.funnel_digital_captacion
where dia <=v_dia-- ajuste
group by 
dia;


--- MC CERRADA 
insert into  schm_workspace.resumen_digital
select
'05.MCCERRADA' as TIPO,
dia, 
sum(visitas_1) as visita,
sum(visitas_1) as rut_digitado,
sum(visitas_1) / NULLIF(sum(visitas_1):: float ,0) as PORCENTAJE_DIGITACION,
count(rut) as rut_unico,
count(rut) / NULLIF(sum(visitas_1):: float ,0) as procentaje_UNICO, 
count(case when UOF_capta=1 then rut end )as UOF,
count(case when UOF_capta=1 then rut end ) / NULLIF(count(rut):: float ,0) as PORCENTAJE_UOF,
count(case when (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when CON_OFERTA   in ('MCCERRADA') then rut end) as oferta_CREDITO,
count(case when  CON_OFERTA  in ('MCCERRADA') then rut end)  / NULLIF(count(case when    UOF_capta=1 then rut end ):: float ,0) as PORCENTAJE_OFERTA,
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when  (UOF_CAPTA=1 ) then rut end)-
count(case when  CON_OFERTA  in ('MCCERRADA') then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
COUNT(case when CON_OFERTA  in ('MCCERRADA')
AND SALTA_MCCERRADA>0
  then rut end )  AS SALTA_POPUP ,
COUNT(case when CON_OFERTA  in ('MCCERRADA')
AND SALTA_MCCERRADA>0
  then rut end ) / NULLIF(count(case when  CON_OFERTA  in ('MCCERRADA') then rut end):: float ,0) as   PORCENTAJE_POPUP,
  count(case when 
  CON_OFERTA  in ('MCCERRADA')
and SALTA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
  CON_OFERTA  in ('MCCERRADA')
and SALTA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
   CON_OFERTA  in ('MCCERRADA')
and SALTA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
count(case when CON_OFERTA  in ('MCCERRADA')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
then rut end ) as  ACEPTACION,
count(case when CON_OFERTA  in ('MCCERRADA')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
then rut end ) / NULLIF(
COUNT(case when CON_OFERTA  in ('MCCERRADA')
AND SALTA_MCCERRADA>0
  then rut end ):: float ,0) as PORCENTAJE_ACEPTACION,
count(case when CON_OFERTA  in ('MCCERRADA')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and ACEPTA_REAL_MCCERRADA>0
then rut end ) as ACEPTACION_REAL,
count(case when CON_OFERTA  in ('MCCERRADA')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and ACEPTA_REAL_MCCERRADA>0
then rut end ) / NULLIF( count(case when CON_OFERTA  in ('MCCERRADA')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
then rut end ):: float ,0) as PORCENTAJE_ACEPTACION_REAL,
count(  
case when CON_OFERTA  in ('MCCERRADA')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and 	producto2_TC  in ('MCCERRADA'))) then rut end) AS CURSE_REAL,
count(  
case when CON_OFERTA  in ('MCCERRADA')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and 	producto2_TC  in ('MCCERRADA'))) then rut end)
 / NULLIF(count(case when CON_OFERTA  in ('MCCERRADA')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and ACEPTA_REAL_MCCERRADA>0
then rut end ):: float ,0) as 
PORCENTAJE_CURSE_REAL,
count(  
case when 
 capta_tc=1 and 	producto2_TC in ('MCCERRADA') then rut end) as CURSER_REAL_SIN_CASCADA,
count(  
case when CON_OFERTA  in ('MCCERRADA')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and 	producto2_TC  in ('MCCERRADA')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=0
then rut end) as curse_con_cesantia,
count(  
case when CON_OFERTA  in ('MCCERRADA')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and 	producto2_TC  in ('MCCERRADA')))
and cesantia_TC=0 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_DESGRAVAMEN,
count(  
case when CON_OFERTA  in ('MCCERRADA')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and 	producto2_TC  in ('MCCERRADA')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_2seguros,
count(  
case when CON_OFERTA  in ('MCCERRADA')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and 	producto2_TC  in ('MCCERRADA')))
and embozado_TC=1
then rut end) as retiro_plastico,
	count(  
	case when CON_OFERTA  in ('MCCERRADA')
	and SALTA_MCCERRADA>0
	and ACEPTA_MCCERRADA>0
	and (ACEPTA_REAL_MCCERRADA>0
	and (capta_tc=1 and 	producto2_TC  in ('MCCERRADA')))
	and embozado_TC=1
then rut end) / NULLIF(count(  
case when CON_OFERTA  in ('MCCERRADA')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and 	producto2_TC  in ('MCCERRADA'))) then rut end):: float, 0) as Porcentaje_Retiro,
            v_periodo as periodo
from schm_workspace.funnel_digital_captacion
where dia <= v_dia -- ajuste
group by 
dia;


-- CDP
insert into  schm_workspace.resumen_digital
select
'06.CDP' as TIPO,
dia, 
sum(visitas_1) as visita,
sum(visitas_1) as rut_digitado,
sum(visitas_1)/ NULLIF(sum(visitas_1):: float ,0) as PORCENTAJE_DIGITACION,
count(rut) as rut_unico,
count(rut) / NULLIF(sum(visitas_1):: float ,0) as procentaje_UNICO, 
count(case when    UOF_CDP=1 then rut end )as UOF,
count(case when    UOF_CDP=1 then rut end ) / NULLIF(count(rut):: float ,0)as PORCENTAJE_UOF,
count(case when  (UOF_CDP=0) and NO_UOF_CDP1=1 and NO_UOF_CDP2=0 and  NO_UOF_CDP3=0 then rut end ) as NO_UOF_1,
count(case when  (UOF_CDP=0) and NO_UOF_CDP1=0 and NO_UOF_CDP2=1 and  NO_UOF_CDP3=0 then rut end ) as NO_UOF_2,
count(case when  (UOF_CDP=0) and  ((NO_UOF_CDP3=1 and NO_UOF_CDP2=0 and NO_UOF_CDP1=0)
or (NO_UOF_CDP1+NO_UOF_CDP2+NO_UOF_CDP3=0)
or (NO_UOF_CDP1+NO_UOF_CDP2+NO_UOF_CDP3>=2))  then rut end ) as NO_UOF_3,
count(case when  CON_OFERTA   in ('CDP') then rut end) as oferta_CREDITO,
count(case when  CON_OFERTA  in ('CDP') then rut end) / NULLIF(count(case when UOF_CDP=1 then rut end ):: float ,0) as PORCENTAJE_OFERTA,
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CDP=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CDP=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when  (UOF_CDP=1 ) then rut end)-
count(case when  CON_OFERTA  in ('CDP') then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CDP=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CDP=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
COUNT(case when CON_OFERTA  in ('CDP')
AND SALTA_CDP>0
  then rut end )  AS SALTA_POPUP ,
COUNT(case when CON_OFERTA  in ('CDP')
AND SALTA_CDP>0
  then rut end ) / NULLIF(count(case when  CON_OFERTA  in ('CDP') then rut end):: float ,0) as PORCENTAJE_POPUP,
  count(case when 
  CON_OFERTA  in ('CDP')
and SALTA_CDP=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
  CON_OFERTA  in ('CDP')
and SALTA_CDP=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
   CON_OFERTA  in ('CDP')
and SALTA_CDP=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
count(case when CON_OFERTA  in ('CDP')
and SALTA_CDP>0
and ACEPTA_CDP>0
then rut end ) as  ACEPTACION,
count(case when CON_OFERTA  in ('CDP')
and SALTA_CDP>0
and ACEPTA_CDP>0
then rut end ) / NULLIF(COUNT(case when CON_OFERTA  in ('CDP') AND SALTA_CDP>0 then rut end ):: float ,0) as PORCENTAJE_ACEPTACION,
count(case when CON_OFERTA  in ('CDP')
and SALTA_CDP>0
and ACEPTA_CDP>0
and ACEPTA_REAL_CDP>0
then rut end ) as ACEPTACION_REAL,
count(case when CON_OFERTA  in ('CDP')
and SALTA_CDP>0
and ACEPTA_CDP>0
and ACEPTA_REAL_CDP>0
then rut end ) / NULLIF( count(case when CON_OFERTA  in ('CDP') and SALTA_CDP>0 and ACEPTA_CDP>0 then rut end ):: float ,0) as PORCENTAJE_ACEPTACION_REAL,
count(  
case when CON_OFERTA  in ('CDP')
and SALTA_CDP>0
and ACEPTA_CDP>0
and (ACEPTA_REAL_CDP>0
and (capta_tc=1 and producto2_TC  in ('CDP'))) then rut end) AS CURSE_REAL,
count(  
case when CON_OFERTA in ('CDP')
and SALTA_CDP>0
and ACEPTA_CDP>0
and (ACEPTA_REAL_CDP>0
and (capta_tc=1 and producto2_TC  in ('CDP'))) then rut end)  / NULLIF(count(case when CON_OFERTA  in ('CDP')
        and SALTA_CDP>0 and ACEPTA_CDP>0 and ACEPTA_REAL_CDP>0 then rut end ):: float ,0) as PORCENTAJE_CURSE_REAL,
count(  
case when 
 capta_tc=1 and 	producto2_TC in ('CDP') then rut end) as CURSER_REAL_SIN_CASCADA,
count(  
case when CON_OFERTA  in ('CDP')
and SALTA_CDP>0
and ACEPTA_CDP>0
and (ACEPTA_REAL_CDP>0
and (capta_tc=1 and 	producto2_TC  in ('CDP')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=0
then rut end) as curse_con_cesantia,
count(  
case when CON_OFERTA  in ('CDP')
and SALTA_CDP>0
and ACEPTA_CDP>0
and (ACEPTA_REAL_CDP>0
and (capta_tc=1 and 	producto2_TC  in ('CDP')))
and cesantia_TC=0 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_DESGRAVAMEN,
count(  
case when CON_OFERTA  in ('CDP')
and SALTA_CDP>0
and ACEPTA_CDP>0
and (ACEPTA_REAL_CDP>0
and (capta_tc=1 and 	producto2_TC  in ('CDP')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_2seguros,
count(  
case when CON_OFERTA  in ('CDP')
and SALTA_CDP>0
and ACEPTA_CDP>0
and (ACEPTA_REAL_CDP>0
and (capta_tc=1 and 	producto2_TC  in ('CDP')))
and embozado_TC=1
then rut end) as retiro_plastico,
count(  
case when CON_OFERTA  in ('CDP')
and SALTA_CDP>0
and ACEPTA_CDP>0
and (ACEPTA_REAL_CDP>0
and (capta_tc=1 and 	producto2_TC  in ('CDP')))
and embozado_TC=1
then rut end) / NULLIF(count(  
    case when CON_OFERTA  in ('CDP')
    and SALTA_CDP>0
    and ACEPTA_CDP>0
    and (ACEPTA_REAL_CDP>0
    and (capta_tc=1 and 	producto2_TC  in ('CDP'))) then rut end):: float, 0) as Porcentaje_Retiro,
            v_periodo as periodo
from schm_workspace.funnel_digital_captacion
where dia <= v_dia -- ajuste
group by 
dia;


--TAM NUEVOS 
insert into  schm_workspace.resumen_digital
select
'07.TAM_NUEVOS' as TIPO,
dia, 
sum(visitas_1) as visita,
sum(visitas_1) as rut_digitado,
sum(visitas_1) / NULLIF(sum(visitas_1):: float ,0) as PORCENTAJE_DIGITACION,
count(rut) as rut_unico,
count(rut) / NULLIF(sum(visitas_1):: float ,0) as procentaje_UNICO, 
count(case when    UOF_capta=1 and UOF_NUEVOS = 1 then rut end )as UOF,
count(case when    UOF_capta=1 and UOF_NUEVOS = 1 then rut end ) / NULLIF(count(rut):: float ,0) as PORCENTAJE_UOF,
count(case when  (UOF_CAPTA=0 and UOF_NUEVOS = 0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when  (UOF_CAPTA=0 and UOF_NUEVOS = 0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when  (UOF_CAPTA=0 and UOF_NUEVOS = 0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when  CON_OFERTA in ('TAM') and tipo_cliente in('102','108','201','207') then rut end) as oferta_CREDITO,
count(case when  CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207') then rut end) / NULLIF(count(case when (UOF_capta=1 and UOF_NUEVOS=1) then rut end ):: float ,0) as PORCENTAJE_OFERTA,
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_NUEVOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_NUEVOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when  (UOF_CAPTA=1 and UOF_NUEVOS=1 ) then rut end)-
count(case when  CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207') then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA') and (UOF_CAPTA=1 and UOF_NUEVOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_NUEVOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
COUNT(case when CON_OFERTA  in ('TAM') AND SALTA_TAM>0 and tipo_cliente in('102','108','201','207')  then rut end )  AS SALTA_POPUP ,
COUNT(case when CON_OFERTA  in ('TAM') AND SALTA_TAM>0 and tipo_cliente in('102','108','201','207') then rut end ) 
/ NULLIF(
count(case when CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207') then rut end):: float ,0) as PORCENTAJE_POPUP,
count(case when 
CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
and SALTA_TAM=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
and SALTA_TAM=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
and SALTA_TAM=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
count(case when CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
then rut end ) as  ACEPTACION,
count(case when CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
then rut end ) / NULLIF(
COUNT(case when CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
AND SALTA_TAM>0
  then rut end ):: float ,0) as PORCENTAJE_ACEPTACION,
count(case when CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
and ACEPTA_REAL_TAM>0
then rut end ) as ACEPTACION_REAL,
count(case when CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
and ACEPTA_REAL_TAM>0
then rut end ) / NULLIF( count(case when CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
then rut end ):: float ,0) as PORCENTAJE_ACEPTACION_REAL,
count(case when CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
and SALTA_TAM>0 and ACEPTA_TAM>0 and (ACEPTA_REAL_TAM>0 and (capta_tc=1 and producto2_TC  in ('TAM'))) then rut end) AS CURSE_REAL,
count(case when CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
and SALTA_TAM>0 and ACEPTA_TAM>0 and (ACEPTA_REAL_TAM>0 and (capta_tc=1 and producto2_TC  in ('TAM'))) then rut end)
 / NULLIF(count(case when CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207') and SALTA_TAM>0 and ACEPTA_TAM>0 and ACEPTA_REAL_TAM>0 
then rut end ):: float ,0) as PORCENTAJE_CURSE_REAL,
count(case when capta_tc=1 and producto2_TC in ('TAM') and tipo_cliente in('102','108','201','207') then rut end) as CURSER_REAL_SIN_CASCADA,
count(case when CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
and SALTA_TAM>0 and ACEPTA_TAM>0 and (ACEPTA_REAL_TAM>0 and (capta_tc=1 and producto2_TC in ('TAM')))
and cesantia_TC=1 and DESGRAVAMEN_TC=0 then rut end) as curse_con_cesantia,
count(case when CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
and SALTA_TAM>0 and ACEPTA_TAM>0 and (ACEPTA_REAL_TAM>0 and (capta_tc=1 and producto2_TC in ('TAM')))
and cesantia_TC=0 and DESGRAVAMEN_TC=1
then rut end) as curse_con_DESGRAVAMEN,
count( 
case when CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
and (ACEPTA_REAL_TAM>0
and (capta_tc=1 and producto2_TC  in ('TAM')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_2seguros,
count(  
case when CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
and (ACEPTA_REAL_TAM>0
and (capta_tc=1 and 	producto2_TC  in ('TAM')))
and embozado_TC=1
then rut end) as retiro_plastico,
count(  
case when CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
and (ACEPTA_REAL_TAM>0
and (capta_tc=1 and producto2_TC  in ('TAM')))
and embozado_TC=1
then rut end) / NULLIF(count(  
case when CON_OFERTA  in ('TAM') and tipo_cliente in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
and (ACEPTA_REAL_TAM>0
and (capta_tc=1 and producto2_TC  in ('TAM'))) then rut end):: float ,0) as Porcentaje_Retiro,
            v_periodo as periodo
from schm_workspace.funnel_digital_captacion
where dia <= v_dia -- ajuste
group by 
dia;


--- TAM Dormidos
insert into  schm_workspace.resumen_digital
select
'08.TAM_DORMIDOS' as TIPO,
dia, 
sum(visitas_1) as visita,
sum(visitas_1) as rut_digitado,
sum(visitas_1) / NULLIF(sum(visitas_1):: float ,0) as PORCENTAJE_DIGITACION,
count(rut) as rut_unico,
count(rut) / NULLIF(sum(visitas_1):: float ,0) as procentaje_UNICO, 
count(case when UOF_capta=1 and UOF_DORMIDOS=1 then rut end )as UOF,
count(case when UOF_capta=1 and UOF_DORMIDOS=1 then rut end ) / NULLIF(count(rut):: float ,0) as PORCENTAJE_UOF,
count(case when (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when CON_OFERTA in ('TAM') and tipo_cliente not in('102','108','201','207') then rut end) as oferta_CREDITO,
count(case when  CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207') then rut end) / NULLIF(count(case when (UOF_capta=1 and UOF_DORMIDOS=1) then rut end ):: float ,0) as PORCENTAJE_OFERTA,
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when  CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207') then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA') and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
COUNT(case when CON_OFERTA  in ('TAM') AND SALTA_TAM>0 and tipo_cliente not in('102','108','201','207')  then rut end )  AS SALTA_POPUP ,
COUNT(case when CON_OFERTA  in ('TAM') AND SALTA_TAM>0 and tipo_cliente not in('102','108','201','207') then rut end ) 
/ NULLIF(
count(case when CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207') then rut end):: float ,0) as PORCENTAJE_POPUP,
count(case when 
CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_TAM=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,count(case when 
CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_TAM=0 and DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) + count(
case when 
CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_TAM=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,count(case when CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
then rut end ) as  ACEPTACION,count(case when CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
then rut end ) 
/ NULLIF(COUNT(case when CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207') AND SALTA_TAM>0
  then rut end ):: float ,0) as PORCENTAJE_ACEPTACION
,count(case when CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
and ACEPTA_REAL_TAM>0then rut end ) as ACEPTACION_REAL,
count(case when CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
and ACEPTA_REAL_TAM>0then rut end ) / NULLIF( count(case when CON_OFERTA in ('TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
then rut end ):: float ,0) as PORCENTAJE_ACEPTACION_REAL
,count(case when CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_TAM>0 and ACEPTA_TAM>0 and (ACEPTA_REAL_TAM>0 and (capta_tc=1 and producto2_TC  in ('TAM'))) then rut end) AS CURSE_REAL,
count(case when CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_TAM>0 and ACEPTA_TAM>0 and (ACEPTA_REAL_TAM>0 and (capta_tc=1 and producto2_TC  in ('TAM'))) then rut end)
 / NULLIF(count(case when CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207') and SALTA_TAM>0 and ACEPTA_TAM>0 and ACEPTA_REAL_TAM>0 
then rut end ):: float ,0) as PORCENTAJE_CURSE_REAL
,count(case when capta_tc=1 and producto2_TC in ('TAM') and tipo_cliente not in('102','108','201','207') then rut end) as CURSER_REAL_SIN_CASCADA,
count(case when CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_TAM>0 and ACEPTA_TAM>0 and (ACEPTA_REAL_TAM>0 and (capta_tc=1 and producto2_TC in ('TAM')))
and cesantia_TC=1 and DESGRAVAMEN_TC=0 then rut end) as curse_con_cesantia,count(case when CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_TAM>0 and ACEPTA_TAM>0 and (ACEPTA_REAL_TAM>0 and (capta_tc=1 and producto2_TC in ('TAM')))
and cesantia_TC=0 and DESGRAVAMEN_TC=1
then rut end) as curse_con_DESGRAVAMEN,count( 
case when CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
and (ACEPTA_REAL_TAM>0
and (capta_tc=1 and producto2_TC in ('TAM')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_2seguros,count(  
case when CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
and (ACEPTA_REAL_TAM>0
and (capta_tc=1 and 	producto2_TC  in ('TAM')))
and embozado_TC=1then rut end) as retiro_plastico,
count(  
case when CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
and (ACEPTA_REAL_TAM>0
and (capta_tc=1 and producto2_TC  in ('TAM')))
and embozado_TC=1then rut end) / NULLIF(count(  
case when CON_OFERTA  in ('TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_TAM>0
and ACEPTA_TAM>0
and (ACEPTA_REAL_TAM>0
and (capta_tc=1 and producto2_TC  in ('TAM'))) then rut end):: float, 0) as Porcentaje_Retiro,
            v_periodo as periodo
from schm_workspace.funnel_digital_captacion
where dia <= v_dia -- ajuste
group by 
dia;


--- TAM Cuotas Nuevo PROBLEMA "TIPO" MUY LARGO 
insert into  schm_workspace.resumen_digital
select
'09.TAMCUOTAS_NEW'::varchar as TIPO,--arreglar este error
dia, 
sum(visitas_1) as visita,
sum(visitas_1) as rut_digitado,
sum(visitas_1) / NULLIF(sum(visitas_1):: float ,0) as PORCENTAJE_DIGITACION,
count(rut) as rut_unico,
count(rut) / NULLIF(sum(visitas_1):: float ,0) as procentaje_UNICO, 
count(case when    UOF_capta=1 and UOF_NUEVOS=1 then rut end )as UOF,
count(case when    UOF_capta=1 and UOF_NUEVOS=1 then rut end ) / NULLIF(count(rut):: float ,0) as PORCENTAJE_UOF,
count(case when  (UOF_CAPTA=0 and UOF_NUEVOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when  (UOF_CAPTA=0 and UOF_NUEVOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when  (UOF_CAPTA=0 and UOF_NUEVOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when  CON_OFERTA in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207') then rut end) as oferta_CREDITO,count(case when  CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207') then rut end)
 / NULLIF(count(case when (UOF_capta=1 and UOF_NUEVOS=1) then rut end ):: float ,0) as PORCENTAJE_OFERTA,
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_NUEVOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto, count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_NUEVOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,count(case when  (UOF_CAPTA=1 and UOF_NUEVOS=1 ) then rut end)-
count(case when  CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207') then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA') and (UOF_CAPTA=1 and UOF_NUEVOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_NUEVOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
COUNT(case when CON_OFERTA  in ('TAMCUOTAS') AND SALTA_TAMCUOTAS>0 and tipo_cliente in('102','108','201','207')  then rut end )  AS SALTA_POPUP ,COUNT(case when CON_OFERTA  in ('TAMCUOTAS') AND SALTA_TAMCUOTAS>0 and tipo_cliente in('102','108','201','207') then rut end ) 
/ NULLIF(
count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207') then rut end):: float ,0) as PORCENTAJE_POPUP
,count(case when 
CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,count(case when 
CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
and SALTA_TAMCUOTAS=0 and DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) + count(
case when 
CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
then rut end ) as  ACEPTACION,count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
then rut end ) / NULLIF(
COUNT(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
AND SALTA_TAMCUOTAS>0
  then rut end ):: float ,0) as PORCENTAJE_ACEPTACION
,count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and ACEPTA_REAL_TAMCUOTAS>0then rut end ) as ACEPTACION_REAL,
count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and ACEPTA_REAL_TAMCUOTAS>0then rut end ) / NULLIF( count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
then rut end ):: float ,0) as PORCENTAJE_ACEPTACION_REAL,count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and (ACEPTA_REAL_TAMCUOTAS>0 and (capta_tc=1 and producto2_TC  in ('TAMCUOTAS'))) then rut end) AS CURSE_REAL,
count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and (ACEPTA_REAL_TAMCUOTAS>0 and (capta_tc=1 and producto2_TC  in ('TAMCUOTAS'))) then rut end)
 / NULLIF(count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207') and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and ACEPTA_REAL_TAMCUOTAS>0 
then rut end ):: float ,0) as PORCENTAJE_CURSE_REAL
,count(case when capta_tc=1 and producto2_TC in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207') then rut end) as CURSER_REAL_SIN_CASCADA,
count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and (ACEPTA_REAL_TAMCUOTAS>0 and (capta_tc=1 and producto2_TC in ('TAMCUOTAS')))
and cesantia_TC=1 and DESGRAVAMEN_TC=0 then rut end) as curse_con_cesantia,count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and (ACEPTA_REAL_TAMCUOTAS>0 and (capta_tc=1 and producto2_TC in ('TAMCUOTAS')))
and cesantia_TC=0 and DESGRAVAMEN_TC=1
then rut end) as curse_con_DESGRAVAMEN,count( 
case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and producto2_TC  in ('TAMCUOTAS')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_2seguros,count(  
case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and 	producto2_TC  in ('TAMCUOTAS')))
and embozado_TC=1then rut end) as retiro_plastico,
count(  
case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and producto2_TC  in ('TAMCUOTAS')))
and embozado_TC=1then rut end) / NULLIF(count(  
case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente in('102','108','201','207')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and producto2_TC  in ('TAMCUOTAS'))) then rut end):: float ,0) as Porcentaje_Retiro ,
            v_periodo as periodo
from schm_workspace.funnel_digital_captacion
where dia <= v_dia -- ajuste
group by 
dia;


--- TAM Cuotas Dormidos PROBLEMA "TIPO" MUY LARGO
insert into  schm_workspace.resumen_digital
select
'10.TAMCUOTAS_DORMI' as TIPO, --ARREGLAR ESTO
dia, 
sum(visitas_1) as visita,
sum(visitas_1) as rut_digitado,
sum(visitas_1) / NULLIF(sum(visitas_1):: float ,0) as PORCENTAJE_DIGITACION,
count(rut) as rut_unico,
count(rut) / NULLIF(sum(visitas_1):: float ,0) as procentaje_UNICO, 
count(case when    UOF_capta=1 and UOF_DORMIDOS=1 then rut end )as UOF,
count(case when    UOF_capta=1 and UOF_DORMIDOS=1 then rut end )/count(rut):: float as PORCENTAJE_UOF,
count(case when  (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when  (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when  (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when  CON_OFERTA in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207') then rut end) as oferta_CREDITO,count(case when  CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207') then rut end)
    / NULLIF(count(case when (UOF_capta=1 and UOF_DORMIDOS=1) then rut end ):: float ,0) as PORCENTAJE_OFERTA
,count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto, count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,count(case when  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when  CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207') then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA') and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,COUNT(case when CON_OFERTA  in ('TAMCUOTAS') AND SALTA_TAMCUOTAS>0 and tipo_cliente not in('102','108','201','207')  then rut end )  AS SALTA_POPUP ,COUNT(case when CON_OFERTA  in ('TAMCUOTAS') AND SALTA_TAMCUOTAS>0 and tipo_cliente not in('102','108','201','207') then rut end )
    / NULLIF(count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207') then rut end):: float ,0)as PORCENTAJE_POPUP
,count(case when 
CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207')
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,count(case when 
CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207')
and SALTA_TAMCUOTAS=0 and DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) + count(
case when 
CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207')
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
then rut end ) as  ACEPTACION,count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
then rut end ) / NULLIF(COUNT(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207') AND SALTA_TAMCUOTAS>0
  then rut end ):: float ,0) as PORCENTAJE_ACEPTACION
,count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and ACEPTA_REAL_TAMCUOTAS>0then rut end ) as ACEPTACION_REAL,count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and ACEPTA_REAL_TAMCUOTAS>0then rut end ) / NULLIF(count(case when CON_OFERTA in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207')
    and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0
    then rut end ):: float ,0) as PORCENTAJE_ACEPTACION_REAL,count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207')
and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and (ACEPTA_REAL_TAMCUOTAS>0 and (capta_tc=1 and producto2_TC  in ('TAMCUOTAS'))) then rut end) AS CURSE_REAL,count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207')
and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and (ACEPTA_REAL_TAMCUOTAS>0 and (capta_tc=1 and producto2_TC  in ('TAMCUOTAS'))) then rut end)
    / NULLIF(count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207') and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and ACEPTA_REAL_TAMCUOTAS>0 
    then rut end) :: float ,0) as PORCENTAJE_CURSE_REAL,count(case when capta_tc=1 and producto2_TC in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207') then rut end) as CURSER_REAL_SIN_CASCADA,count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207')
and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and (ACEPTA_REAL_TAMCUOTAS>0 and (capta_tc=1 and producto2_TC in ('TAMCUOTAS')))
and cesantia_TC=1 and DESGRAVAMEN_TC=0 then rut end) as curse_con_cesantia,count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207')
and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and (ACEPTA_REAL_TAMCUOTAS>0 and (capta_tc=1 and producto2_TC in ('TAMCUOTAS')))
and cesantia_TC=0 and DESGRAVAMEN_TC=1
then rut end) as curse_con_DESGRAVAMEN,
count( 
case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and producto2_TC in ('TAMCUOTAS')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_2seguros,count(  
case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and 	producto2_TC  in ('TAMCUOTAS')))
and embozado_TC=1then rut end) as retiro_plastico,count(  
case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207')
and SALTA_TAMCUOTAS>0
and ACEPTA_TAMCUOTAS>0
and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and producto2_TC  in ('TAMCUOTAS')))
and embozado_TC=1then rut end) 
    / NULLIF(count(case when CON_OFERTA  in ('TAMCUOTAS') and tipo_cliente not in('102','108','201','207')
    and SALTA_TAMCUOTAS>0
    and ACEPTA_TAMCUOTAS>0
    and (ACEPTA_REAL_TAMCUOTAS>0
    and (capta_tc=1 and producto2_TC  in ('TAMCUOTAS'))) then rut end):: float ,0) as Porcentaje_Retiro,
            v_periodo as periodo
from schm_workspace.funnel_digital_captacion
where dia <= v_dia -- ajuste
group by 
dia;


--- MC Cerrada Nuevo PROBLEMA "TIPO" MUY LARGO 
insert into  schm_workspace.resumen_digital
select
'11.MCCERRADA_NEW' as TIPO,
dia, 
sum(visitas_1) as visita,
sum(visitas_1) as rut_digitado,
sum(visitas_1) / NULLIF(sum(visitas_1):: float ,0)as PORCENTAJE_DIGITACION,
count(rut) as rut_unico,
count(rut) / NULLIF(sum(visitas_1):: float ,0) as procentaje_UNICO, 
count(case when    UOF_capta=1 and UOF_NUEVOS=1 then rut end )as UOF,
count(case when    UOF_capta=1 and UOF_NUEVOS=1 then rut end ) / NULLIF(count(rut):: float ,0) as PORCENTAJE_UOF,
count(case when  (UOF_CAPTA=0 and UOF_NUEVOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when  (UOF_CAPTA=0 and UOF_NUEVOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when  (UOF_CAPTA=0 and UOF_NUEVOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when  CON_OFERTA in ('MCCERRADA') and tipo_cliente in('102','108','201','207') then rut end) as oferta_CREDITO,
count(case when  CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207') then rut end)
 / NULLIF(count(case when (UOF_capta=1 and UOF_NUEVOS=1) then rut end ):: float ,0) as PORCENTAJE_OFERTA,
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_NUEVOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_NUEVOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when  (UOF_CAPTA=1 and UOF_NUEVOS=1 ) then rut end)-
count(case when  CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207') then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA') and (UOF_CAPTA=1 and UOF_NUEVOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_NUEVOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
COUNT(case when CON_OFERTA  in ('MCCERRADA') AND SALTA_MCCERRADA>0 and tipo_cliente in('102','108','201','207')  then rut end )  AS SALTA_POPUP ,
COUNT(case when CON_OFERTA  in ('MCCERRADA') AND SALTA_MCCERRADA>0 and tipo_cliente in('102','108','201','207') then rut end ) 
/ NULLIF(count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207') then rut end):: float ,0) as PORCENTAJE_POPUP,
count(case when 
CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
and SALTA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
and SALTA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
and SALTA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
then rut end ) as  ACEPTACION,
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
then rut end ) / NULLIF(
COUNT(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
AND SALTA_MCCERRADA>0
  then rut end ):: float ,0)as PORCENTAJE_ACEPTACION,
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and ACEPTA_REAL_MCCERRADA>0
then rut end ) as ACEPTACION_REAL,
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and ACEPTA_REAL_MCCERRADA>0
then rut end ) / NULLIF(count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
then rut end ):: float ,0) as PORCENTAJE_ACEPTACION_REAL,
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and (ACEPTA_REAL_MCCERRADA>0 and (capta_tc=1 and producto2_TC  in ('MCCERRADA'))) then rut end) AS CURSE_REAL,
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and (ACEPTA_REAL_MCCERRADA>0 and (capta_tc=1 and producto2_TC  in ('MCCERRADA'))) then rut end)
 / NULLIF(count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207') and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and ACEPTA_REAL_MCCERRADA>0 
then rut end):: float ,0)as PORCENTAJE_CURSE_REAL,
count(case when capta_tc=1 and producto2_TC in ('MCCERRADA') and tipo_cliente in('102','108','201','207') then rut end) as CURSER_REAL_SIN_CASCADA,
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and (ACEPTA_REAL_MCCERRADA>0 and (capta_tc=1 and producto2_TC in ('MCCERRADA')))
and cesantia_TC=1 and DESGRAVAMEN_TC=0 then rut end) as curse_con_cesantia,
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and (ACEPTA_REAL_MCCERRADA>0 and (capta_tc=1 and producto2_TC in ('MCCERRADA')))
and cesantia_TC=0 and DESGRAVAMEN_TC=1
then rut end) as curse_con_DESGRAVAMEN,
count( 
case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and producto2_TC  in ('MCCERRADA')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_2seguros,
count(  
case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and 	producto2_TC  in ('MCCERRADA')))
and embozado_TC=1
then rut end) as retiro_plastico,
count(  
case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and producto2_TC  in ('MCCERRADA')))
and embozado_TC=1
then rut end) / NULLIF(count(  
case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and producto2_TC  in ('MCCERRADA'))) then rut end):: float, 0) as Porcentaje_Retiro,
            v_periodo as periodo
from schm_workspace.funnel_digital_captacion
where dia <= v_dia -- ajuste
group by 
dia;


--- MC Cerrada Dormidos 
insert into  schm_workspace.resumen_digital
select
'12.MCCERRADA_DORMI' as TIPO,
dia, 
sum(visitas_1) as visita,
sum(visitas_1) as rut_digitado,
sum(visitas_1) / NULLIF(sum(visitas_1):: float ,0) as PORCENTAJE_DIGITACION,
count(rut) as rut_unico,
count(rut) / NULLIF(sum(visitas_1):: float ,0) as procentaje_UNICO, 
count(case when    UOF_capta=1 and UOF_DORMIDOS=1 then rut end )as UOF,
count(case when    UOF_capta=1 and UOF_DORMIDOS=1 then rut end ) / NULLIF(count(rut):: float ,0) as PORCENTAJE_UOF,
count(case when  (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when  (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when  (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when  CON_OFERTA in ('MCCERRADA') and tipo_cliente not in('102','108','201','207') then rut end) as oferta_CREDITO,
count(case when  CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207') then rut end)
 / NULLIF(count(case when (UOF_capta=1 and UOF_DORMIDOS=1) then rut end ):: float ,0) as PORCENTAJE_OFERTA,
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when  CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207') then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA') and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
COUNT(case when CON_OFERTA  in ('MCCERRADA') AND SALTA_MCCERRADA>0 and tipo_cliente not in('102','108','201','207')  then rut end )  AS SALTA_POPUP ,
COUNT(case when CON_OFERTA  in ('MCCERRADA') AND SALTA_MCCERRADA>0 and tipo_cliente not in('102','108','201','207') then rut end ) 
/ NULLIF(
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207') then rut end):: float ,0) as PORCENTAJE_POPUP,
count(case when 
CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
and SALTA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
and SALTA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
and SALTA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
then rut end ) as  ACEPTACION,
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
then rut end ) / NULLIF(
COUNT(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
AND SALTA_MCCERRADA>0
  then rut end ):: float ,0) as PORCENTAJE_ACEPTACION,
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and ACEPTA_REAL_MCCERRADA>0
then rut end ) as ACEPTACION_REAL,
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and ACEPTA_REAL_MCCERRADA>0
then rut end ) / NULLIF( count(case when CON_OFERTA in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
then rut end ):: float, 0) as PORCENTAJE_ACEPTACION_REAL,
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and (ACEPTA_REAL_MCCERRADA>0 and (capta_tc=1 and producto2_TC  in ('MCCERRADA'))) then rut end) AS CURSE_REAL,
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and (ACEPTA_REAL_MCCERRADA>0 and (capta_tc=1 and producto2_TC  in ('MCCERRADA'))) then rut end)
 / NULLIF(count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207') and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and ACEPTA_REAL_MCCERRADA>0 
then rut end ):: float, 0) as PORCENTAJE_CURSE_REAL,
count(case when capta_tc=1 and producto2_TC in ('MCCERRADA') and tipo_cliente not in('102','108','201','207') then rut end) as CURSER_REAL_SIN_CASCADA,
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and (ACEPTA_REAL_MCCERRADA>0 and (capta_tc=1 and producto2_TC in ('MCCERRADA')))
and cesantia_TC=1 and DESGRAVAMEN_TC=0 then rut end) as curse_con_cesantia,
count(case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and (ACEPTA_REAL_MCCERRADA>0 and (capta_tc=1 and producto2_TC in ('MCCERRADA')))
and cesantia_TC=0 and DESGRAVAMEN_TC=1
then rut end) as curse_con_DESGRAVAMEN,
count( 
case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and producto2_TC in ('MCCERRADA')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_2seguros,
count(  
case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and 	producto2_TC  in ('MCCERRADA')))
and embozado_TC=1
then rut end) as retiro_plastico,
count(  
case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and producto2_TC  in ('MCCERRADA')))
and embozado_TC=1
then rut end) / NULLIF(count(  
case when CON_OFERTA  in ('MCCERRADA') and tipo_cliente not in('102','108','201','207')
and SALTA_MCCERRADA>0
and ACEPTA_MCCERRADA>0
and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and producto2_TC  in ('MCCERRADA'))) then rut end):: float, 0) as Porcentaje_Retiro,
            v_periodo as periodo
from schm_workspace.funnel_digital_captacion
where dia <= v_dia -- ajuste
group by 
dia;


--- TR Nuevos
insert into  schm_workspace.resumen_digital
select
'13.TR_NUEVOS' as TIPO,
dia, 
sum(visitas_1) as visita,
sum(visitas_1) as rut_digitado,
sum(visitas_1) / NULLIF(sum(visitas_1):: float ,0) as PORCENTAJE_DIGITACION,
count(rut) as rut_unico,
count(rut) / NULLIF(sum(visitas_1):: float ,0) as procentaje_UNICO, 
count(case when    UOF_capta=1 and UOF_NUEVOS = 1 then rut end )as UOF,
count(case when    UOF_capta=1 and UOF_NUEVOS = 1 then rut end ) / NULLIF(count(rut):: float ,0) as PORCENTAJE_UOF,
count(case when  (UOF_CAPTA=0 and UOF_NUEVOS = 0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when  (UOF_CAPTA=0 and UOF_NUEVOS = 0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when  (UOF_CAPTA=0 and UOF_NUEVOS = 0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when  CON_OFERTA in ('TR') and tipo_cliente in('102','108','201','207') then rut end) as oferta_CREDITO,
count(case when  CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207') then rut end)
 / NULLIF(count(case when (UOF_capta=1 and UOF_NUEVOS=1) then rut end ):: float ,0) as PORCENTAJE_OFERTA,
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_NUEVOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_NUEVOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when  (UOF_CAPTA=1 and UOF_NUEVOS=1 ) then rut end)-
count(case when  CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207') then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA') and (UOF_CAPTA=1 and UOF_NUEVOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_NUEVOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
COUNT(case when CON_OFERTA  in ('TR') AND SALTA_TR>0 and tipo_cliente in('102','108','201','207')  then rut end )  AS SALTA_POPUP ,
COUNT(case when CON_OFERTA  in ('TR') AND SALTA_TR>0 and tipo_cliente in('102','108','201','207') then rut end ) 
/ NULLIF( count(case when CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207') then rut end):: float ,0) as PORCENTAJE_POPUP,
count(case when 
CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
and SALTA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
and SALTA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
and SALTA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
count(case when CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
then rut end ) as  ACEPTACION,
count(case when CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
then rut end ) 
/ NULLIF(COUNT(case when CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
AND SALTA_TR>0
  then rut end):: float ,0) as PORCENTAJE_ACEPTACION,
count(case when CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
and ACEPTA_REAL_TR>0
then rut end ) as ACEPTACION_REAL,
count(case when CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
and ACEPTA_REAL_TR>0
then rut end ) / NULLIF(count(case when CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
then rut end ):: float ,0) as PORCENTAJE_ACEPTACION_REAL,
count(case when CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
and SALTA_TR>0 and ACEPTA_TR>0 and (ACEPTA_REAL_TR>0 and (capta_tc=1 and producto2_TC  in ('TR'))) then rut end) AS CURSE_REAL,
count(case when CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
and SALTA_TR>0 and ACEPTA_TR>0 and (ACEPTA_REAL_TR>0 and (capta_tc=1 and producto2_TC  in ('TR'))) then rut end)
 / NULLIF(count(case when CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207') and SALTA_TR>0 and ACEPTA_TR>0 and ACEPTA_REAL_TR>0 
then rut end):: float ,0) as PORCENTAJE_CURSE_REAL,
count(case when capta_tc=1 and producto2_TC in ('TR') and tipo_cliente in('102','108','201','207') then rut end) as CURSER_REAL_SIN_CASCADA,
count(case when CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
and SALTA_TR>0 and ACEPTA_TR>0 and (ACEPTA_REAL_TR>0 and (capta_tc=1 and producto2_TC in ('TR')))
and cesantia_TC=1 and DESGRAVAMEN_TC=0 then rut end) as curse_con_cesantia,
count(case when CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
and SALTA_TR>0 and ACEPTA_TR>0 and (ACEPTA_REAL_TR>0 and (capta_tc=1 and producto2_TC in ('TR')))
and cesantia_TC=0 and DESGRAVAMEN_TC=1
then rut end) as curse_con_DESGRAVAMEN,
count( 
case when CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
and (ACEPTA_REAL_TR>0
and (capta_tc=1 and producto2_TC  in ('TR')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_2seguros,
count(  
case when CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
and (ACEPTA_REAL_TR>0
and (capta_tc=1 and 	producto2_TC  in ('TR')))
and embozado_TC=1
then rut end) as retiro_plastico,
count(  
case when CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
and (ACEPTA_REAL_TR>0
and (capta_tc=1 and producto2_TC  in ('TR')))
and embozado_TC=1
then rut end) / 
NULLIF(count(  
case when CON_OFERTA  in ('TR') and tipo_cliente in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
and (ACEPTA_REAL_TR>0
and (capta_tc=1 and producto2_TC  in ('TR'))) then rut end):: float, 0) as Porcentaje_Retiro,
            v_periodo as periodo
from schm_workspace.funnel_digital_captacion
where dia <= v_dia -- ajuste
group by 
dia;


--- TR Dormidos
insert into  schm_workspace.resumen_digital
select
'14.TR_DORMIDOS' as TIPO,
dia, 
sum(visitas_1) as visita,
sum(visitas_1) as rut_digitado,
sum(visitas_1) / NULLIF(sum(visitas_1):: float ,0)as PORCENTAJE_DIGITACION,
count(rut) as rut_unico,
count(rut) / NULLIF(sum(visitas_1):: float ,0)as procentaje_UNICO, 
count(case when    UOF_capta=1 and UOF_DORMIDOS=1 then rut end )as UOF,
count(case when    UOF_capta=1 and UOF_DORMIDOS=1 then rut end ) / NULLIF(count(rut):: float ,0)as PORCENTAJE_UOF,
count(case when  (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when  (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when  (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when  CON_OFERTA in ('TR') and tipo_cliente not in('102','108','201','207') then rut end) as oferta_CREDITO,
count(case when  CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207') then rut end)
 / NULLIF(count(case when (UOF_capta=1 and UOF_DORMIDOS=1) then rut end ):: float ,0) as PORCENTAJE_OFERTA,
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when  CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207') then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA') and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
COUNT(case when CON_OFERTA  in ('TR') AND SALTA_TR>0 and tipo_cliente not in('102','108','201','207')  then rut end )  AS SALTA_POPUP ,
COUNT(case when CON_OFERTA  in ('TR') AND SALTA_TR>0 and tipo_cliente not in('102','108','201','207') then rut end ) 
/ NULLIF(count(case when CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207') then rut end):: float ,0) as PORCENTAJE_POPUP,
count(case when 
CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207')
and SALTA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207')
and SALTA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207')
and SALTA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
count(case when CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
then rut end ) as  ACEPTACION,
count(case when CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
then rut end ) 
/ NULLIF(COUNT(case when CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207')
AND SALTA_TR>0
  then rut end ):: float ,0) as PORCENTAJE_ACEPTACION,
count(case when CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
and ACEPTA_REAL_TR>0
then rut end ) as ACEPTACION_REAL,
count(case when CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
and ACEPTA_REAL_TR>0
then rut end ) / NULLIF( count(case when CON_OFERTA in ('TR') and tipo_cliente not in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
then rut end ):: float ,0) as PORCENTAJE_ACEPTACION_REAL,
count(case when CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207')
and SALTA_TR>0 and ACEPTA_TR>0 and (ACEPTA_REAL_TR>0 and (capta_tc=1 and producto2_TC  in ('TR'))) then rut end) AS CURSE_REAL,
count(case when CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207')
and SALTA_TR>0 and ACEPTA_TR>0 and (ACEPTA_REAL_TR>0 and (capta_tc=1 and producto2_TC  in ('TR'))) then rut end)
 / NULLIF(count(case when CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207') and SALTA_TR>0 and ACEPTA_TR>0 and ACEPTA_REAL_TR>0 
then rut end ):: float ,0) as PORCENTAJE_CURSE_REAL,
count(case when capta_tc=1 and producto2_TC in ('TR') and tipo_cliente not in('102','108','201','207') then rut end) as CURSER_REAL_SIN_CASCADA,
count(case when CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207')
and SALTA_TR>0 and ACEPTA_TR>0 and (ACEPTA_REAL_TR>0 and (capta_tc=1 and producto2_TC in ('TR')))
and cesantia_TC=1 and DESGRAVAMEN_TC=0 then rut end) as curse_con_cesantia,
count(case when CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207')
and SALTA_TR>0 and ACEPTA_TR>0 and (ACEPTA_REAL_TR>0 and (capta_tc=1 and producto2_TC in ('TR')))
and cesantia_TC=0 and DESGRAVAMEN_TC=1
then rut end) as curse_con_DESGRAVAMEN,
count( 
case when CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
and (ACEPTA_REAL_TR>0
and (capta_tc=1 and producto2_TC in ('TR')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_2seguros,
count(  
case when CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
and (ACEPTA_REAL_TR>0
and (capta_tc=1 and 	producto2_TC  in ('TR')))
and embozado_TC=1
then rut end) as retiro_plastico,
count(  
case when CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
and (ACEPTA_REAL_TR>0
and (capta_tc=1 and producto2_TC  in ('TR')))
and embozado_TC=1
then rut end) / NULLIF(count(  
case when CON_OFERTA  in ('TR') and tipo_cliente not in('102','108','201','207')
and SALTA_TR>0
and ACEPTA_TR>0
and (ACEPTA_REAL_TR>0
and (capta_tc=1 and producto2_TC  in ('TR'))) then rut end):: float ,0) as Porcentaje_Retiro,
            v_periodo as periodo
from schm_workspace.funnel_digital_captacion
where dia <= v_dia -- ajuste
group by 
dia;


--- CTA CTE
insert into  schm_workspace.resumen_digital
select
'15.CCTE' as TIPO,
dia, 
sum(visitas_1) as visita,
sum(visitas_1) as rut_digitado,
sum(visitas_1) / NULLIF(sum(visitas_1):: float ,0) as PORCENTAJE_DIGITACION,
count(rut) as rut_unico,
count(rut) / NULLIF(sum(visitas_1):: float ,0) as procentaje_UNICO, 
count(case when UOF_CC=1 then rut end )as UOF,
count(case when UOF_CC=1 then rut end ) / NULLIF(count(rut):: float ,0) as PORCENTAJE_UOF,
0 as NO_UOF_1,
0 as NO_UOF_2,
0 as NO_UOF_3,
count(case when OFERTA_CC = 1 then rut end) as oferta_CREDITO,
count(case when  OFERTA_CC = 1 then rut end)
 / NULLIF(count(case when    UOF_CC=1 then rut end ) ,0) as PORCENTAJE_OFERTA,
0 as NO_oferta_mora_protesto,
0 as No_oferta_lnegro,
0 as No_oferta_riesgo,
COUNT(case when OFERTA_CC = 1 AND SALTA_Cc>0 then rut end ) AS SALTA_POPUP ,
COUNT(case when OFERTA_CC = 1 AND SALTA_Cc>0  then rut end ) / NULLIF(count(case when  OFERTA_CC = 1 then rut end):: float ,0) as PORCENTAJE_POPUP,
0 as NO_POPUP_LN,
0 as NO_popup_MORA,
count(case when OFERTA_CC = 1 and SALTA_Cc>0 and ACEPTA_Cc>0
then rut end ) as  ACEPTACION,
count(case when OFERTA_CC = 1 and SALTA_Cc>0 and ACEPTA_Cc>0 then rut end ) / NULLIF(
COUNT(case when OFERTA_CC = 1 AND SALTA_Cc>0 then rut end ):: float ,0) as PORCENTAJE_ACEPTACION,
count(case when  SALTA_Cc>0 and ACEPTA_Cc>0 and ACEPTA_REAL_CC>0 
then rut end ) as ACEPTACION_REAL,
count(case when  SALTA_Cc>0 and ACEPTA_Cc>0 and ACEPTA_REAL_CC>0
then rut end ) / NULLIF( count(case when  salta_cc>0 and ACEPTA_Cc>0
then rut end ):: float ,0) as PORCENTAJE_ACEPTACION_REAL,
count(case when  SALTA_Cc>0 and ACEPTA_Cc>0 and ACEPTA_REAL_CC>0
--and capta_cC=1 
then rut end) AS CURSE_REAL,
count( case when  SALTA_Cc>0 and ACEPTA_Cc>0 and (ACEPTA_REAL_CC>0 and (capta_cC=1 )) then rut end)
 / NULLIF(count(case when  SALTA_Cc>0 and ACEPTA_Cc>0 and ACEPTA_REAL_CC>0
then rut end ):: float ,0) as PORCENTAJE_CURSE_REAL,
count(case when capta_cC=1 then rut end) as CURSER_REAL_SIN_CASCADA,
0 as curse_con_cesantia,
0 as curse_con_DESGRAVAMEN,
0 as curse_con_2seguros,
count(case when  SALTA_Cc>0 and ACEPTA_Cc>0 and (ACEPTA_REAL_CC>0 and capta_cC=1) and embozado_CTACTE=1 then rut end) as retiro_plastico,
0.0 as Porcentaje_Retiro,
            v_periodo as periodo
from schm_workspace.funnel_digital_captacion
where dia <= v_dia-- ajuste
group by 
dia;


--- MC Black
insert into  schm_workspace.resumen_digital
select
'16.MCBLACK' as TIPO,
dia, 
sum(visitas_1) as visita,
sum(visitas_1) as rut_digitado,
sum(visitas_1) / NULLIF(sum(visitas_1):: float ,0) as PORCENTAJE_DIGITACION,
count(rut) as rut_unico,
count(rut) / NULLIF(sum(visitas_1):: float ,0) as procentaje_UNICO, 
count(case when UOF_capta=1 then rut end )as UOF,
count(case when UOF_capta=1 then rut end ) / NULLIF(count(rut):: float ,0) as PORCENTAJE_UOF,
count(case when (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when CON_OFERTA   in ('MCBLACK') then rut end) as oferta_CREDITO,
count(case when  CON_OFERTA  in ('MCBLACK') then rut end)
 / NULLIF(count(case when    UOF_capta=1 then rut end ):: float ,0) as PORCENTAJE_OFERTA,
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when  (UOF_CAPTA=1 ) then rut end)-
count(case when  CON_OFERTA  in ('MCBLACK') then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
COUNT(case when CON_OFERTA  in ('MCBLACK')
AND SALTA_MCBLACK>0
  then rut end )  AS SALTA_POPUP ,
COUNT(case when CON_OFERTA  in ('MCBLACK')
AND SALTA_MCBLACK>0
  then rut end ) / NULLIF(count(case when  CON_OFERTA  in ('MCBLACK') then rut end):: float, 0) as   PORCENTAJE_POPUP,
  count(case when 
  CON_OFERTA  in ('MCBLACK')
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
  CON_OFERTA  in ('MCBLACK')
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
   CON_OFERTA  in ('MCBLACK')
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
count(case when CON_OFERTA  in ('MCBLACK','TAM')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
then rut end ) as  ACEPTACION,
count(case when CON_OFERTA  in ('MCBLACK','TAM')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
then rut end ) / NULLIF(
COUNT(case when CON_OFERTA  in ('MCBLACK','TAM')
AND SALTA_MCBLACK>0
  then rut end ):: float, 0) as PORCENTAJE_ACEPTACION,
count(case when CON_OFERTA  in ('MCBLACK','TAM')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and ACEPTA_REAL_MCBLACK>0
then rut end ) as ACEPTACION_REAL,
count(case when CON_OFERTA  in ('MCBLACK','TAM')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and ACEPTA_REAL_MCBLACK>0
then rut end ) / NULLIF( count(case when CON_OFERTA  in ('MCBLACK','TAM')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
then rut end ):: float ,0) as PORCENTAJE_ACEPTACION_REAL,
count(  
case when CON_OFERTA  in ('MCBLACK','TAM')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and 	producto2_TC  in ('MCBLACK'))) then rut end) AS CURSE_REAL,
count(  
case when CON_OFERTA  in ('MCBLACK','TAM')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and 	producto2_TC  in ('MCBLACK'))) then rut end)
 / NULLIF(count(case when CON_OFERTA  in ('MCBLACK','TAM')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and ACEPTA_REAL_MCBLACK>0
then rut end ):: float ,0) as 
PORCENTAJE_CURSE_REAL,
count(  
case when 
 capta_tc=1 and producto2_TC in ('MCBLACK') then rut end) as CURSER_REAL_SIN_CASCADA,
count(  
case when CON_OFERTA  in ('MCBLACK','TAM')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and 	producto2_TC  in ('MCBLACK')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=0
then rut end) as curse_con_cesantia,
count(  
case when CON_OFERTA  in ('MCBLACK','TAM')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and 	producto2_TC  in ('MCBLACK')))
and cesantia_TC=0 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_DESGRAVAMEN,
count(  
case when CON_OFERTA  in ('MCBLACK','TAM')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and 	producto2_TC  in ('MCBLACK')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_2seguros,
count(  
case when CON_OFERTA  in ('MCBLACK','TAM')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and 	producto2_TC  in ('MCBLACK')))
and embozado_TC=1
then rut end) as retiro_plastico,
count(  
case when CON_OFERTA  in ('MCBLACK','TAM')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and 	producto2_TC  in ('MCBLACK')))
and embozado_TC=1
then rut end) / NULLIF(count(  
case when CON_OFERTA  in ('MCBLACK','TAM')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and 	producto2_TC  in ('MCBLACK'))) then rut end):: float, 0) as Porcentaje_Retiro,
            v_periodo as periodo
from schm_workspace.funnel_digital_captacion
where dia <= v_dia-- ajuste
group by 
dia;


--- MC Black Nuevos
insert into  schm_workspace.resumen_digital
select
'17.MCBLACK_NUEVOS' as TIPO,
dia, 
sum(visitas_1) as visita,
sum(visitas_1) as rut_digitado,
sum(visitas_1) / NULLIF(sum(visitas_1):: float ,0) as PORCENTAJE_DIGITACION,
count(rut) as rut_unico,
count(rut) / NULLIF(sum(visitas_1):: float ,0) as procentaje_UNICO, 
count(case when    UOF_capta=1 and UOF_NUEVOS=1 then rut end )as UOF,
count(case when    UOF_capta=1 and UOF_NUEVOS=1 then rut end ) / NULLIF(count(rut):: float ,0) as PORCENTAJE_UOF,
count(case when  (UOF_CAPTA=0 and UOF_NUEVOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when  (UOF_CAPTA=0 and UOF_NUEVOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when  (UOF_CAPTA=0 and UOF_NUEVOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when  CON_OFERTA in ('MCBLACK') and tipo_cliente in('102','108','201','207') then rut end) as oferta_CREDITO,
count(case when  CON_OFERTA  in ('MCBLACK') and tipo_cliente in('102','108','201','207') then rut end)
 / NULLIF(count(case when (UOF_capta=1 and UOF_NUEVOS=1) then rut end ):: float ,0) as PORCENTAJE_OFERTA,
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_NUEVOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_NUEVOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when  (UOF_CAPTA=1 and UOF_NUEVOS=1 ) then rut end)-
count(case when  CON_OFERTA  in ('MCBLACK') and tipo_cliente in('102','108','201','207') then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA') and (UOF_CAPTA=1 and UOF_NUEVOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_NUEVOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
COUNT(case when CON_OFERTA  in ('MCBLACK') AND SALTA_MCBLACK>0 and tipo_cliente in('102','108','201','207')  then rut end )  AS SALTA_POPUP ,
COUNT(case when CON_OFERTA  in ('MCBLACK') AND SALTA_MCBLACK>0 and tipo_cliente in('102','108','201','207') then rut end ) 
/ NULLIF(count(case when CON_OFERTA  in ('MCBLACK') and tipo_cliente in('102','108','201','207') then rut end):: float ,0) as PORCENTAJE_POPUP,
count(case when 
CON_OFERTA  in ('MCBLACK') and tipo_cliente in('102','108','201','207')
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
CON_OFERTA  in ('MCBLACK') and tipo_cliente in('102','108','201','207')
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
CON_OFERTA  in ('MCBLACK') and tipo_cliente in('102','108','201','207')
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
then rut end ) as  ACEPTACION,
count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
then rut end ) / NULLIF(
COUNT(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente in('102','108','201','207')
AND SALTA_MCBLACK>0
  then rut end ):: float ,0) as PORCENTAJE_ACEPTACION,
count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and ACEPTA_REAL_MCBLACK>0
then rut end ) as ACEPTACION_REAL,
count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and ACEPTA_REAL_MCBLACK>0
then rut end ) / NULLIF( count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
then rut end ):: float, 0) as PORCENTAJE_ACEPTACION_REAL,
count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente in('102','108','201','207')
and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and (ACEPTA_REAL_MCBLACK>0 and (capta_tc=1 and producto2_TC  in ('MCBLACK'))) then rut end) AS CURSE_REAL,
count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente in('102','108','201','207')
and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and (ACEPTA_REAL_MCBLACK>0 and (capta_tc=1 and producto2_TC  in ('MCBLACK'))) then rut end)
 / NULLIF(count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente in('102','108','201','207') and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and ACEPTA_REAL_MCBLACK>0 
then rut end ):: float ,0) as PORCENTAJE_CURSE_REAL,
count(case when capta_tc=1 and producto2_TC in ('MCBLACK') and tipo_cliente in('102','108','201','207') then rut end) as CURSER_REAL_SIN_CASCADA,
count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente in('102','108','201','207')
and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and (ACEPTA_REAL_MCBLACK>0 and (capta_tc=1 and producto2_TC in ('MCBLACK')))
and cesantia_TC=1 and DESGRAVAMEN_TC=0 then rut end) as curse_con_cesantia,
count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente in('102','108','201','207')
and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and (ACEPTA_REAL_MCBLACK>0 and (capta_tc=1 and producto2_TC in ('MCBLACK')))
and cesantia_TC=0 and DESGRAVAMEN_TC=1
then rut end) as curse_con_DESGRAVAMEN,
count( 
case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and producto2_TC  in ('MCBLACK')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_2seguros,
count(  
case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and 	producto2_TC  in ('MCBLACK')))
and embozado_TC=1
then rut end) as retiro_plastico,
count(  
case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and producto2_TC  in ('MCBLACK')))
and embozado_TC=1
then rut end) / NULLIF(count(  
case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and producto2_TC  in ('MCBLACK'))) then rut end):: float ,0) as Porcentaje_Retiro,
            v_periodo as periodo
from schm_workspace.funnel_digital_captacion
where dia <=v_dia-- ajuste
group by 
dia;


--- MC Black 
insert into  schm_workspace.resumen_digital
select
'18.MCBLACK_DORMIDO' as TIPO,
dia, 
sum(visitas_1) as visita,
sum(visitas_1) as rut_digitado,
sum(visitas_1) / NULLIF(sum(visitas_1):: float , 0) as PORCENTAJE_DIGITACION,
count(rut) as rut_unico,
count(rut) / NULLIF(sum(visitas_1):: float, 0) as procentaje_UNICO, 
count(case when UOF_capta = 1 and UOF_DORMIDOS = 1 then rut end ) as UOF,
count(case when    UOF_capta=1 and UOF_DORMIDOS=1 then rut end ) / NULLIF(count(rut):: float, 0) as PORCENTAJE_UOF,
count(case when  (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when  (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when  (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when  CON_OFERTA in ('MCBLACK') and tipo_cliente not in('102','108','201','207') then rut end) as oferta_CREDITO,
count(case when  CON_OFERTA  in ('MCBLACK') and tipo_cliente not in('102','108','201','207') then rut end)
 / NULLIF(count(case when (UOF_capta=1 and UOF_DORMIDOS=1) then rut end ):: float, 0) as PORCENTAJE_OFERTA,
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when  CON_OFERTA  in ('MCBLACK') and tipo_cliente not in('102','108','201','207') then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA') and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
count(case when  CON_OFERTA in ('SIN OFERTA')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
COUNT(case when CON_OFERTA  in ('MCBLACK') AND SALTA_MCBLACK>0 and tipo_cliente not in('102','108','201','207')  then rut end )  AS SALTA_POPUP ,
COUNT(case when CON_OFERTA  in ('MCBLACK') AND SALTA_MCBLACK>0 and tipo_cliente not in('102','108','201','207') then rut end ) / NULLIF(
count(case when CON_OFERTA  in ('MCBLACK') and tipo_cliente not in('102','108','201','207') then rut end):: float, 0) as PORCENTAJE_POPUP,
count(case when 
CON_OFERTA  in ('MCBLACK') and tipo_cliente not in('102','108','201','207')
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
CON_OFERTA  in ('MCBLACK') and tipo_cliente not in('102','108','201','207')
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
CON_OFERTA  in ('MCBLACK') and tipo_cliente not in('102','108','201','207')
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
then rut end ) as  ACEPTACION,
count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
then rut end ) / NULLIF(
COUNT(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente not in('102','108','201','207')
AND SALTA_MCBLACK>0
  then rut end ):: float, 0) as PORCENTAJE_ACEPTACION,
count(case when CON_OFERTA  in ('MCBLACK', 'TAM') and tipo_cliente not in ('102','108','201','207')
	and SALTA_MCBLACK>0
	and ACEPTA_MCBLACK>0
	and ACEPTA_REAL_MCBLACK>0
	then rut end) AS ACEPTACION_REAL,
count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and ACEPTA_REAL_MCBLACK>0
then rut end ) / NULLIF( count(case when CON_OFERTA in ('MCBLACK','TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
then rut end ):: float, 0) as PORCENTAJE_ACEPTACION_REAL,
count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and (ACEPTA_REAL_MCBLACK>0 and (capta_tc=1 and producto2_TC  in ('MCBLACK'))) then rut end) AS CURSE_REAL,
count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and (ACEPTA_REAL_MCBLACK>0 and (capta_tc=1 and producto2_TC  in ('MCBLACK'))) then rut end)
 / NULLIF(count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente not in('102','108','201','207') and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and ACEPTA_REAL_MCBLACK>0 
then rut end ):: float, 0) as PORCENTAJE_CURSE_REAL,
count(case when capta_tc=1 and producto2_TC in ('MCBLACK') and tipo_cliente not in('102','108','201','207') then rut end) as CURSER_REAL_SIN_CASCADA,
count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and (ACEPTA_REAL_MCBLACK>0 and (capta_tc=1 and producto2_TC in ('MCBLACK')))
and cesantia_TC=1 and DESGRAVAMEN_TC=0 then rut end) as curse_con_cesantia,
count(case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and (ACEPTA_REAL_MCBLACK>0 and (capta_tc=1 and producto2_TC in ('MCBLACK')))
and cesantia_TC=0 and DESGRAVAMEN_TC=1
then rut end) as curse_con_DESGRAVAMEN,
count( 
case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and producto2_TC in ('MCBLACK')))
and cesantia_TC=1 and 	DESGRAVAMEN_TC=1
then rut end) as curse_con_2seguros,
count(  
case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and 	producto2_TC  in ('MCBLACK')))
and embozado_TC=1
then rut end) as retiro_plastico,
count(  
case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and producto2_TC  in ('MCBLACK')))
and embozado_TC=1
then rut end) / NULLIF(count(  
case when CON_OFERTA  in ('MCBLACK','TAM') and tipo_cliente not in('102','108','201','207')
and SALTA_MCBLACK>0
and ACEPTA_MCBLACK>0
and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and producto2_TC  IN ('MCBLACK'))) then rut end):: float, 0) as Porcentaje_Retiro,
            v_periodo as periodo
from schm_workspace.funnel_digital_captacion
where dia <= v_dia -- ajuste
group by 
dia;



delete from schm_digital.dgtl_funnel_captacion_digital_resumen
where periodo = v_periodo;

insert into schm_digital.dgtl_funnel_captacion_digital_resumen
select * from schm_workspace.resumen_digital; 





-- Biometría SinacofI 

create table schm_workspace.base_biometria as  
select 
Identificador_Enrolamiento ,
Tipo_Usuario ,
Identificador_Usuario ,
Fin_Enrolamiento as Fecha_Fin_Enrr ,
Sistema_Operativo ,
Score_Final	,
Nombre_Paso as Metodo,
schm_artifacts.f_period(Fin_Enrolamiento) as periodo
FROM br_dm_prod_bigdata_idnow_db.reporte_enrolamientos
where Sistema_Operativo='WEB' and tipo_enrolamiento='RIPLEY CHILE'
and schm_artifacts.f_period(Fin_Enrolamiento)=v_periodo;


create table schm_workspace.data_limpia2  as 
select 
Identificador_Usuario as rut,
date_part('day',Fecha_Fin_Enrr) as dia,
max (case when  metodo='ANALIZE DNI CL' then 1 else 0 end ) as ANALIZE_DNI_CL,
max (case when  metodo='FINALIZAR ENROLAMIENTO' then 1 else 0 end ) as FINALIZAR_ENROLAMIENTO,
max (case when  metodo='INICIO ENROLAMIENTO' then 1 else 0 end ) as INICIO_ENROLAMIENTO,
max (case when  metodo='MATCH FACIAL DNI' then 1 else 0 end ) as MATCH_FACIAL_DNI,
max(Score_Final) as score_final
from   schm_workspace.base_biometria
group by Identificador_Usuario,
date_part('day',Fecha_Fin_Enrr);


/*aqui se estan agregando las marcas de aceptacion de oferta, aceptacion real y curse del producto 
por tipo de combinatoria*/




create table schm_workspace.base_paso as 
select 
dia,
rut,
/********************/
/*****vista total****/
/********************/
count(case when CON_OFERTA  NOT in ('CDP','SIN OFERTA') and SALTA_TAM+SALTA_TR+SALTA_MCCERRADA+SALTA_TAMCUOTAS>0
and ACEPTA_TAM+	ACEPTA_TR+	ACEPTA_MCCERRADA+	ACEPTA_TAMCUOTAS>0 then rut end ) as  ACEPTA_OFERTA_TOTAL,
count(case when CON_OFERTA  NOT in ('CDP','SIN OFERTA') and SALTA_TAM+SALTA_TR+SALTA_MCCERRADA+SALTA_TAMCUOTAS>0
and ACEPTA_TAM+	ACEPTA_TR+	ACEPTA_MCCERRADA+	ACEPTA_TAMCUOTAS>0 and ACEPTA_REAL_TAM+ACEPTA_REAL_TR+ACEPTA_REAL_MCCERRADA+ACEPTA_REAL_TAMCUOTAS>0
then rut end ) as ACEPTACION_REAL_TOTAL,
count(  
case when CON_OFERTA  NOT in ('CDP','SIN OFERTA') and SALTA_TAM+SALTA_TR+SALTA_MCCERRADA+SALTA_TAMCUOTAS>0
and ACEPTA_TAM+	ACEPTA_TR+	ACEPTA_MCCERRADA+	ACEPTA_TAMCUOTAS>0 and (ACEPTA_REAL_TAM+ACEPTA_REAL_TR+ACEPTA_REAL_MCCERRADA+ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and producto2_TC not in ('CDP'))) then rut end) AS CURSE_REAL_TOTAL,
/********************/
/******VISTA TR******/
/********************/
count(case when CON_OFERTA  in ('TR') and SALTA_TR>0 and ACEPTA_TR>0 then rut end ) as  ACEPTACION_TR, /*as acepta_oferta_TR,*/
count(case when CON_OFERTA  in ('TR') and SALTA_TR>0 and ACEPTA_TR>0 and ACEPTA_REAL_TR>0 then rut end ) as ACEPTACION_REAL_TR, /*aceptacion_real_TR, */
count(case when CON_OFERTA  in ('TR') and SALTA_TR>0 and ACEPTA_TR>0 and (ACEPTA_REAL_TR>0 
and (capta_tc=1 and 	producto2_TC  in ('TR'))) then rut end) AS CURSE_REAL_TR,/*as curse_real_TR,*/
/*********************/
/******VISTA TAM******/
/*********************/
count(case when CON_OFERTA  in ('TAM') and SALTA_TAM>0 and ACEPTA_TAM>0 then rut end ) as  ACEPTACION_TAM,
count(case when CON_OFERTA  in ('TAM') and SALTA_TAM>0 and ACEPTA_TAM>0 and ACEPTA_REAL_TAM>0 then rut end ) as ACEPTACION_REAL_TAM,
count(case when CON_OFERTA  in ('TAM') and SALTA_TAM>0 and ACEPTA_TAM>0 and (ACEPTA_REAL_TAM>0 and (capta_tc=1 and 	producto2_TC  in ('TAM'))) then rut end) 
AS CURSE_REAL_TAM,
/************************** */
/******** TAM CUOTAS ********/
/*****************************/
count(case when CON_OFERTA  in ('TAMCUOTAS')and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 then rut end ) as  ACEPTACION_TAMCUOTA,
count(case when CON_OFERTA  in ('TAMCUOTAS') and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and ACEPTA_REAL_TAMCUOTAS>0 
then rut end ) as ACEPTA_REAL_TAMCUOTA,
count(case when CON_OFERTA in ('TAMCUOTAS') and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and producto2_TC  in ('TAMCUOTAS'))) then rut end) AS CURSE_REAL_TAMCUOTA,
/*****************************/
/******** TAM CERRADA  *******/
/*****************************/
count(case when CON_OFERTA  in ('MCCERRADA') and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 then rut end ) as  ACEPTACION_MCC,
count(case when CON_OFERTA  in ('MCCERRADA') and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and ACEPTA_REAL_MCCERRADA>0 then rut end ) as ACEPTA_REAL_MCC,
count(case when CON_OFERTA  in ('MCCERRADA') and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and producto2_TC  in ('MCCERRADA'))) then rut end) AS CURSE_REAL_MCC,
/*****************************/
/******** MCBLACK  *******/
/*****************************/
count(case when CON_OFERTA  in ('MCBLACK') and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 then rut end ) as  ACEPTACION_MCBLACK,
count(case when CON_OFERTA  in ('MCBLACK') and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and ACEPTA_REAL_MCBLACK>0 then rut end ) as ACEPTA_REAL_MCBLACK,
count(case when CON_OFERTA  in ('MCBLACK') and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and producto2_TC  in ('MCBLACK'))) then rut end) AS CURSE_REAL_MCBLACK,
/************/
/*  CDP     */
/************/
count(case when CON_OFERTA  in ('CDP') and SALTA_CDP>0 and ACEPTA_CDP>0 then rut end ) as  ACEPTACION_CDP,
count(case when CON_OFERTA  in ('CDP') and SALTA_CDP>0 and ACEPTA_CDP>0 and ACEPTA_REAL_CDP>0 then rut end ) as ACEPTACION_REAL_CDP,
count(case when CON_OFERTA  in ('CDP') and SALTA_CDP>0 and ACEPTA_CDP>0 and (ACEPTA_REAL_CDP>0 and (capta_tc=1 and 	producto2_TC  in ('CDP'))) then rut end) 
AS CURSE_REAL_CDP,
/************/
/*  CTACTE  */
/************/
count(distinct case when OFERTA_CC=1 and SALTA_Cc=1 and ACEPTA_Cc=1 /*and capta_cc=1*/  then rut end ) as acepta_oferta_CTE,
count(distinct case when OFERTA_CC=1 and SALTA_Cc=1 and ACEPTA_Cc=1 /*and capta_cc=1*/ and ACEPTA_REAL_Cc=1 then rut end ) as acepta_real_CTE,
count(distinct case when OFERTA_CC=1 and SALTA_Cc=1 and ACEPTA_Cc=1 /*and capta_cc=1*/ and (ACEPTA_REAL_Cc=1 or capta_cc=1) then rut end ) as curse_real_CTE,
/***************************/
/******VISTA TR NUEVOS******/
/***************************/
count(case when CON_OFERTA  in ('TR') and SALTA_TR>0 and ACEPTA_TR>0 and tipo_cliente in ('102','108','201','207') then rut end ) as  ACEPTACION_TR_NUEVO, /*as acepta_oferta_TR,*/
count(case when CON_OFERTA  in ('TR') and SALTA_TR>0 and ACEPTA_TR>0 and tipo_cliente in ('102','108','201','207') then rut end ) as ACEPTACION_REAL_TR_NUEVO, /*aceptacion_real_TR, */
count(case when CON_OFERTA  in ('TR') and SALTA_TR>0 and ACEPTA_TR>0 and (ACEPTA_REAL_TR>0 
and (capta_tc=1 and producto2_TC  in ('TR'))) and tipo_cliente in ('102','108','201','207') then rut end) AS CURSE_REAL_TR_NUEVO,
/***************************/
/******VISTA TR DORMIDOS****/
/***************************/
count(case when CON_OFERTA  in ('TR') and SALTA_TR>0 and ACEPTA_TR>0 and tipo_cliente not in ('102','108','201','207') then rut end ) as  ACEPTACION_TR_DORM, /*as acepta_oferta_TR,*/
count(case when CON_OFERTA  in ('TR') and SALTA_TR>0 and ACEPTA_TR>0 and ACEPTA_REAL_TR>0 and tipo_cliente not in ('102','108','201','207') then rut end ) as ACEPTACION_REAL_TR_DORM, /*aceptacion_real_TR, */
count(case when CON_OFERTA  in ('TR') and SALTA_TR>0 and ACEPTA_TR>0 and (ACEPTA_REAL_TR>0 
and (capta_tc=1 and producto2_TC  in ('TR'))) and tipo_cliente not in ('102','108','201','207') then rut end) AS CURSE_REAL_TR_DORM,
/****************************/
/******VISTA TAM NUEVOS******/
/****************************/
count(case when CON_OFERTA  in ('TAM') and SALTA_TAM>0 and ACEPTA_TAM>0 and tipo_cliente in ('102','108','201','207') then rut end ) as  ACEPTACION_TAM_NUEVO,
count(case when CON_OFERTA  in ('TAM') and SALTA_TAM>0 and ACEPTA_TAM>0 and tipo_cliente in ('102','108','201','207') then rut end ) as ACEPTACION_REAL_TAM_NUEVO,
count(case when CON_OFERTA  in ('TAM') and SALTA_TAM>0 and ACEPTA_TAM>0 and (ACEPTA_REAL_TAM>0 and (capta_tc=1 and 	producto2_TC  in ('TAM'))) and tipo_cliente in ('102','108','201','207') then rut end) 
AS CURSE_REAL_TAM_NUEVO,
/*******************************/
/******VISTA TAM DORMIDOS ******/
/******************************/
count(case when CON_OFERTA  in ('TAM') and SALTA_TAM>0 and ACEPTA_TAM>0 and tipo_cliente not in ('102','108','201','207') then rut end ) as  ACEPTACION_TAM_DORM,
count(case when CON_OFERTA  in ('TAM') and SALTA_TAM>0 and ACEPTA_TAM>0 and tipo_cliente not in ('102','108','201','207') and ACEPTA_REAL_TAM>0 then rut end ) as ACEPTACION_REAL_TAM_DORM,
count(case when CON_OFERTA  in ('TAM') and SALTA_TAM>0 and ACEPTA_TAM>0 and tipo_cliente not in ('102','108','201','207') 
and (ACEPTA_REAL_TAM>0 and (capta_tc=1 and producto2_TC  in ('TAM'))) then rut end) AS CURSE_REAL_TAM_DORM,
/******************************** */
/******** TAM CUOTAS NUEVOS********/
/**********************************/
count(case when CON_OFERTA  in ('TAMCUOTAS')and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and tipo_cliente in ('102','108','201','207') then rut end ) as  ACEPTACION_TAMCUOTA_NUEVO,
count(case when CON_OFERTA  in ('TAMCUOTAS') and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and ACEPTA_REAL_TAMCUOTAS>0 and tipo_cliente in ('102','108','201','207') 
then rut end ) as ACEPTA_REAL_TAMCUOTA_NUEVO,
count(case when CON_OFERTA in ('TAMCUOTAS') and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and (ACEPTA_REAL_TAMCUOTAS>0
and (capta_tc=1 and producto2_TC  in ('TAMCUOTAS'))) and tipo_cliente in ('102','108','201','207') then rut end) AS CURSE_REAL_TAMCUOTA_NUEVO,
/************************************ */
/******** TAM CUOTAS DORMIDOS  ********/
/**************************************/
count(case when CON_OFERTA  in ('TAMCUOTAS')and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and tipo_cliente not in ('102','108','201','207') then rut end ) as  ACEPTACION_TAMCUOTA_DORM,
count(case when CON_OFERTA  in ('TAMCUOTAS') and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and ACEPTA_REAL_TAMCUOTAS>0 and tipo_cliente not in ('102','108','201','207') 
then rut end ) as ACEPTA_REAL_TAMCUOTA_DORM,
count(case when CON_OFERTA in ('TAMCUOTAS') and SALTA_TAMCUOTAS>0 and ACEPTA_TAMCUOTAS>0 and (ACEPTA_REAL_TAMCUOTAS>0 and (capta_tc=1 and producto2_TC in ('TAMCUOTAS'))) and tipo_cliente not in ('102','108','201','207') then rut end) AS CURSE_REAL_TAMCUOTA_DORM,
/***********************************/
/******** TAM CERRADA NUEVOS *******/
/***********************************/
count(case when CON_OFERTA  in ('MCCERRADA') and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and tipo_cliente in ('102','108','201','207') then rut end ) as  ACEPTACION_MCC_NUEVO,
count(case when CON_OFERTA  in ('MCCERRADA') and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and tipo_cliente in ('102','108','201','207') and ACEPTA_REAL_MCCERRADA>0 then rut end ) as ACEPTA_REAL_MCC_NUEVO,
count(case when CON_OFERTA  in ('MCCERRADA') and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and tipo_cliente in ('102','108','201','207') and (ACEPTA_REAL_MCCERRADA>0
and (capta_tc=1 and producto2_TC  in ('MCCERRADA'))) then rut end) AS CURSE_REAL_MCC_NUEVO,
/*************************************/
/******** TAM CERRADA DORMIDOS *******/
/*************************************/
count(case when CON_OFERTA  in ('MCCERRADA') and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and tipo_cliente not in ('102','108','201','207') then rut end ) as  ACEPTACION_MCC_DORM,
count(case when CON_OFERTA  in ('MCCERRADA') and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and tipo_cliente not in ('102','108','201','207') and ACEPTA_REAL_MCCERRADA>0 then rut end ) as ACEPTA_REAL_MCC_DORM,
count(case when CON_OFERTA  in ('MCCERRADA') and SALTA_MCCERRADA>0 and ACEPTA_MCCERRADA>0 and tipo_cliente not in ('102','108','201','207') and (ACEPTA_REAL_MCCERRADA>0 and (capta_tc=1 and producto2_TC  in ('MCCERRADA'))) then rut end) AS CURSE_REAL_MCC_DORM,
/***********************************/
/******** BLACK NUEVOS *******/
/***********************************/
count(case when CON_OFERTA  in ('MCBLACK') and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and tipo_cliente in ('102','108','201','207') then rut end ) as  ACEPTACION_MCBLACK_NUEVO,
count(case when CON_OFERTA  in ('MCBLACK') and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and tipo_cliente in ('102','108','201','207') and ACEPTA_REAL_MCBLACK>0 then rut end ) as ACEPTA_REAL_MCBLACK_NUEVO,
count(case when CON_OFERTA  in ('MCBLACK') and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and tipo_cliente in ('102','108','201','207') and (ACEPTA_REAL_MCBLACK>0
and (capta_tc=1 and producto2_TC  in ('MCBLACK'))) then rut end) AS CURSE_REAL_MCBLACK_NUEVO,
/*************************************/
/******** BLACK DORMIDOS *******/
/*************************************/
count(case when CON_OFERTA  in ('MCBLACK') and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and tipo_cliente not in ('102','108','201','207') then rut end ) as  ACEPTACION_MCBLACK_DORM,
count(case when CON_OFERTA  in ('MCBLACK') and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and tipo_cliente not in ('102','108','201','207') and ACEPTA_REAL_MCBLACK>0 then rut end ) as ACEPTA_REAL_MCBLACK_DORM,
count(case when CON_OFERTA  in ('MCBLACK') and SALTA_MCBLACK>0 and ACEPTA_MCBLACK>0 and tipo_cliente not in ('102','108','201','207') and (ACEPTA_REAL_MCBLACK>0 
and (capta_tc=1 and producto2_TC  in ('MCBLACK'))) then rut end) AS CURSE_REAL_MCBLACK_DORM
from schm_workspace.funnel_digital_captacion as a
group by a.rut,a.dia;


/*pegado de marcas de biometria*/

create table schm_workspace.base_paso2 as 
select 
a.*,
ANALIZE_DNI_CL,
FINALIZAR_ENROLAMIENTO,
INICIO_ENROLAMIENTO,
MATCH_FACIAL_DNI,
score_final
from schm_workspace.base_paso as a 
left join schm_workspace.data_limpia2 as b
on(a.dia=b.dia) 
and (a.rut=substring(b.rut,1,length(b.rut)-1):: int);



CREATE TABLE schm_workspace.QUERY_FOR_SINACOFI AS 
SELECT 
SIN_FCH_HOR_AUD,
date_part('day',SIN_FCH_HOR_AUD) as dia, 
SIN_COD_IDE_CLI, /*rut*/  
SIN_COD_DV_CLI, /*dv*/
SIN_COD_NRO_ERR,  /*´parametria error*/
case when SIN_COD_NRO_ERR='10008' then	'La cédula de identidad consultada no se encuentra vigente'
when SIN_COD_NRO_ERR='10002' then	'Error interno del servicio'
when SIN_COD_NRO_ERR='10005' then	'Rut no válido'
when SIN_COD_NRO_ERR='10009' then	'Servicio disponible solo para personas naturales'
when SIN_COD_NRO_ERR='10010' then	'No es posible realizar una verificación de identidad mediante preguntas para este Rut'
when SIN_COD_NRO_ERR='10011' then	'No es posible generar el desafío por superar máximo de intentos permitidos'
when SIN_COD_NRO_ERR='10302' then	'PREVIRED no ha podido completar la acción, re ingrese nuevamente'
when SIN_COD_NRO_ERR='10004' then	'Error de permiso'
when SIN_COD_NRO_ERR='10006' then	'No es posible generar el desafío'
when SIN_COD_NRO_ERR='10306' then	'Favor intente nuevamente, PREVIRED no ha podido completar la acción'
when SIN_COD_NRO_ERR='10308' then	'Favor intente nuevamente, PREVIRED no ha podido completar la acción'
when SIN_COD_NRO_ERR='10306' then	'Favor intente nuevamente, PREVIRED no ha podido completar la acción'
when SIN_COD_NRO_ERR='10308' then	'Favor intente nuevamente, PREVIRED no ha podido completar la acción'
when SIN_COD_NRO_ERR='10012' then	'Ha superado el tiempo límite para responder, intente nuevamente'
when SIN_COD_NRO_ERR='10013' then 'El RUN no presenta cotizaciones en los últimos 12 meses'
when SIN_COD_NRO_ERR='10014' then 'El RUN no registra información en Previred'
when SIN_COD_NRO_ERR='10015' then 'No existe detalle asociado al RUN consultado'
when SIN_COD_NRO_ERR='10016' then 'Error en la comunicación con Previred, intente mas tarde'
end  as descr
FROM br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf a -- ajustar base
where a.sin_cod_nro_err<>'10000' /*rechazo*/
and a.SIN_COD_IDE_CLI is not null
and a.SIN_COD_IDE_EJE=42222222 and  a.SIN_COD_DV_EJE='7'
and periodo = v_periodo;




create table schm_workspace.base_paso3 as 
select a.*,b.SIN_COD_NRO_ERR
from schm_workspace.base_paso2 as a
join (select distinct 
a.rut as rut5, a.dia as dia5,
max(b.SIN_COD_NRO_ERR) as SIN_COD_NRO_ERR
from schm_workspace.base_paso2 as a 
left join schm_workspace.QUERY_FOR_SINACOFI as b
	on(a.rut=b.SIN_COD_IDE_CLI) 
	and (a.dia=b.dia)
group by a.rut,
a.dia) as b 
on a.rut=b.rut5 and a.dia=b.dia5;


create table schm_workspace.base_paso4 as 
select 
*,
case when SIN_COD_NRO_ERR='10008' then	'La cédula de identidad consultada no se encuentra vigente'
when SIN_COD_NRO_ERR='10002' then	'Error interno del servicio'
when SIN_COD_NRO_ERR='10005' then	'Rut no válido'
when SIN_COD_NRO_ERR='10009' then	'Servicio disponible solo para personas naturales'
when SIN_COD_NRO_ERR='10010' then	'No es posible realizar una verificación de identidad mediante preguntas para este Rut'
when SIN_COD_NRO_ERR='10011' then	'No es posible generar el desafío por superar máximo de intentos permitidos'
when SIN_COD_NRO_ERR='10302' then	'PREVIRED no ha podido completar la acción, re ingrese nuevamente'
when SIN_COD_NRO_ERR='10004' then	'Error de permiso'
when SIN_COD_NRO_ERR='10006' then	'No es posible generar el desafío'
when SIN_COD_NRO_ERR='10306' then	'Favor intente nuevamente, PREVIRED no ha podido completar la acción'
when SIN_COD_NRO_ERR='10308' then	'Favor intente nuevamente, PREVIRED no ha podido completar la acción'
when SIN_COD_NRO_ERR='10306' then	'Favor intente nuevamente, PREVIRED no ha podido completar la acción'
when SIN_COD_NRO_ERR='10308' then	'Favor intente nuevamente, PREVIRED no ha podido completar la acción'
when SIN_COD_NRO_ERR='10012' then	'Ha superado el tiempo límite para responder, intente nuevamente'
when SIN_COD_NRO_ERR='10013' then 'El RUN no presenta cotizaciones en los últimos 12 meses'
when SIN_COD_NRO_ERR='10014' then 'El RUN no registra información en Previred'
when SIN_COD_NRO_ERR='10015' then 'No existe detalle asociado al RUN consultado'
when SIN_COD_NRO_ERR='10016' then 'Error en la comunicación con Previred, intente mas tarde'
end  as descr
from schm_workspace.base_paso3;


create table schm_workspace.INCORPORAR_BIOMETRIA as 
select 
v_periodo as periodo,
dia,
/* totales */
CASE WHEN ACEPTA_OFERTA_TOTAL=1 AND ACEPTACION_REAL_TOTAL=0 AND CURSE_REAL_TOTAL=0 THEN 1 ELSE 0 END AS TOTAL,
CASE WHEN ACEPTACION_TR=1 AND ACEPTACION_REAL_TR=0 AND CURSE_REAL_TR=0 THEN 1 ELSE 0 END AS TR,
CASE WHEN ACEPTACION_TAM=1 AND ACEPTACION_REAL_TAM=0 AND curse_REAL_TAM=0 THEN 1 ELSE 0 END AS TAM,
CASE WHEN ACEPTACION_TAMCUOTA=1 AND ACEPTA_REAL_TAMCUOTA=0 AND CURSE_REAL_TAMCUOTA=0 THEN 1 ELSE 0 END AS TAM_CUOTAS,
CASE WHEN ACEPTACION_MCC=1 AND ACEPTA_REAL_MCC=0 AND CURSE_REAL_MCC=0 THEN 1 ELSE 0 END AS TAM_CERRADA,
CASE WHEN ACEPTACION_MCBLACK=1 AND ACEPTA_REAL_MCBLACK=0 AND CURSE_REAL_MCBLACK=0 THEN 1 ELSE 0 END AS TAM_MCBLACK,
/********************************************************************************************************************************/
/* nuevos y dormidos */
CASE WHEN ACEPTACION_TR_NUEVO=1 AND ACEPTACION_REAL_TR_NUEVO=0 AND CURSE_REAL_TR_NUEVO=0 THEN 1 ELSE 0 END AS TR_NUEVO,
CASE WHEN ACEPTACION_TR_DORM=1 AND ACEPTACION_REAL_TR_DORM=0 AND CURSE_REAL_TR_DORM=0 THEN 1 ELSE 0 END AS TR_DORMIDO,
CASE WHEN ACEPTACION_TAM_NUEVO=1 AND ACEPTACION_REAL_TAM_NUEVO=0 AND curse_REAL_TAM_NUEVO=0 THEN 1 ELSE 0 END AS TAM_NUEVO,
CASE WHEN ACEPTACION_TAM_DORM=1 AND ACEPTACION_REAL_TAM_DORM=0 AND curse_REAL_TAM_DORM=0 THEN 1 ELSE 0 END AS TAM_DORMIDO,
CASE WHEN ACEPTACION_TAMCUOTA_NUEVO=1 AND ACEPTA_REAL_TAMCUOTA_NUEVO=0 AND CURSE_REAL_TAMCUOTA_NUEVO=0 THEN 1 ELSE 0 END AS TAM_CUOTAS_NUEVO,
CASE WHEN ACEPTACION_TAMCUOTA_DORM=1 AND ACEPTA_REAL_TAMCUOTA_DORM=0 AND CURSE_REAL_TAMCUOTA_DORM=0 THEN 1 ELSE 0 END AS TAM_CUOTAS_DORM,
CASE WHEN ACEPTACION_MCC_NUEVO=1 AND ACEPTA_REAL_MCC_NUEVO=0 AND CURSE_REAL_MCC_NUEVO=0 THEN 1 ELSE 0 END AS TAM_CERRADA_NUEVO,
CASE WHEN ACEPTACION_MCC_DORM=1 AND ACEPTA_REAL_MCC_DORM=0 AND CURSE_REAL_MCC_DORM=0 THEN 1 ELSE 0 END AS TAM_CERRADA_DORMIDOS,
CASE WHEN ACEPTACION_MCBLACK_NUEVO=1 AND ACEPTA_REAL_MCBLACK_NUEVO=0 AND CURSE_REAL_MCBLACK_NUEVO=0 THEN 1 ELSE 0 END AS TAM_MCBLACK_NUEVO,
CASE WHEN ACEPTACION_MCBLACK_DORM=1 AND ACEPTA_REAL_MCBLACK_DORM=0 AND CURSE_REAL_MCBLACK_DORM=0 THEN 1 ELSE 0 END AS TAM_MCBLACK_DORMIDOS,
CASE WHEN ACEPTACION_CDP=1 AND ACEPTACION_REAL_CDP=0 AND CURSE_REAL_CDP=0 THEN 1 ELSE 0 END AS CDP,
CASE WHEN acepta_oferta_CTE=1 AND acepta_real_CTE=0 AND curse_real_CTE=0 THEN 1 ELSE 0 END AS CTACTE,
ANALIZE_DNI_CL,
FINALIZAR_ENROLAMIENTO,
INICIO_ENROLAMIENTO,
MATCH_FACIAL_DNI,
SIN_COD_NRO_ERR,
descr,
count(rut) as cant
from schm_workspace.base_paso4
group by 
dia,
CASE WHEN ACEPTA_OFERTA_TOTAL=1 AND ACEPTACION_REAL_TOTAL=0 AND CURSE_REAL_TOTAL=0 THEN 1 ELSE 0 END,
CASE WHEN ACEPTACION_TR=1 AND ACEPTACION_REAL_TR=0 AND CURSE_REAL_TR=0 THEN 1 ELSE 0 END,
CASE WHEN ACEPTACION_TAM=1 AND ACEPTACION_REAL_TAM=0 AND curse_REAL_TAM=0 THEN 1 ELSE 0 END,
CASE WHEN ACEPTACION_TAMCUOTA=1 AND ACEPTA_REAL_TAMCUOTA=0 AND CURSE_REAL_TAMCUOTA=0 THEN 1 ELSE 0 END,
CASE WHEN ACEPTACION_MCC=1 AND ACEPTA_REAL_MCC=0 AND CURSE_REAL_MCC=0 THEN 1 ELSE 0 END,
CASE WHEN ACEPTACION_MCBLACK=1 AND ACEPTA_REAL_MCBLACK=0 AND CURSE_REAL_MCBLACK=0 THEN 1 ELSE 0 end,
CASE WHEN ACEPTACION_TR_NUEVO=1 AND ACEPTACION_REAL_TR_NUEVO=0 AND CURSE_REAL_TR_NUEVO=0 THEN 1 ELSE 0 END,
CASE WHEN ACEPTACION_TR_DORM=1 AND ACEPTACION_REAL_TR_DORM=0 AND CURSE_REAL_TR_DORM=0 THEN 1 ELSE 0 END,
CASE WHEN ACEPTACION_TAM_NUEVO=1 AND ACEPTACION_REAL_TAM_NUEVO=0 AND curse_REAL_TAM_NUEVO=0 THEN 1 ELSE 0 END,
CASE WHEN ACEPTACION_TAM_DORM=1 AND ACEPTACION_REAL_TAM_DORM=0 AND curse_REAL_TAM_DORM=0 THEN 1 ELSE 0 END,
CASE WHEN ACEPTACION_TAMCUOTA_NUEVO=1 AND ACEPTA_REAL_TAMCUOTA_NUEVO=0 AND CURSE_REAL_TAMCUOTA_NUEVO=0 THEN 1 ELSE 0 END,
CASE WHEN ACEPTACION_TAMCUOTA_DORM=1 AND ACEPTA_REAL_TAMCUOTA_DORM=0 AND CURSE_REAL_TAMCUOTA_DORM=0 THEN 1 ELSE 0 END,
CASE WHEN ACEPTACION_MCC_NUEVO=1 AND ACEPTA_REAL_MCC_NUEVO=0 AND CURSE_REAL_MCC_NUEVO=0 THEN 1 ELSE 0 END,
CASE WHEN ACEPTACION_MCC_DORM=1 AND ACEPTA_REAL_MCC_DORM=0 AND CURSE_REAL_MCC_DORM=0 THEN 1 ELSE 0 END,
CASE WHEN ACEPTACION_MCBLACK_NUEVO=1 AND ACEPTA_REAL_MCBLACK_NUEVO=0 AND CURSE_REAL_MCBLACK_NUEVO=0 THEN 1 ELSE 0 END,
CASE WHEN ACEPTACION_MCBLACK_DORM=1 AND ACEPTA_REAL_MCBLACK_DORM=0 AND CURSE_REAL_MCBLACK_DORM=0 THEN 1 ELSE 0 END,
CASE WHEN ACEPTACION_CDP=1 AND ACEPTACION_REAL_CDP=0 AND CURSE_REAL_CDP=0 THEN 1 ELSE 0 END,
CASE WHEN acepta_oferta_CTE=1 AND acepta_real_CTE=0 AND curse_real_CTE=0 THEN 1 ELSE 0 END,
ANALIZE_DNI_CL,
FINALIZAR_ENROLAMIENTO,
INICIO_ENROLAMIENTO,
MATCH_FACIAL_DNI,
SIN_COD_NRO_ERR,
descr
;


delete from schm_digital.dgtl_funnel_captacion_digital_biometria
where periodo = v_periodo;

insert into schm_digital.dgtl_funnel_captacion_digital_biometria
select * from schm_workspace.INCORPORAR_BIOMETRIA; 



CREATE TABLE schm_digital.dgtl_funnel_captacion_solicitudes_online AS 
SELECT 
            sol.sol_cod_ide_cli, 
            substring(ofe.OFE_COD_PRD_OFE_K,1,2) as CODIGO_PRODUCTO ,
            ofe.OFE_COD_IND_DRM,  sol.sol_fch_crc_sol fechasol, 
            OFE_CAC_COD_CPS campana, 
            OFE_GLS_DES_CPS descampana, 
            OFE_GLS_DES_OFE
FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol  SOL 
JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe  OFE
   ON OFE.OFE_COD_NRO_SOL_K = SOL.SOL_COD_NRO_SOL_K
WHERE 
    substring(ofe.OFE_COD_PRD_OFE_K,1,2) in ('01','02','21') /* *TC*->('01','02') *CCT*->('21') */
	AND OFE.OFE_COD_IND_sol = 1
 	AND SOL_FCH_CRC_SOL between  v_periodo_ini AND v_periodo_fin
	AND SOL.SOL_COD_CLL_ADM = 2;





CREATE TABLE schm_digital.dgtl_funnel_captacion_antecedentes_ok AS 
SELECT 
            sol.sol_cod_ide_cli, 
            substring(ofe.OFE_COD_PRD_OFE_K,1,2) as CODIGO_PRODUCTO , 
            ofe.OFE_COD_IND_DRM, 
            sol.sol_fch_crc_sol fechasol, 
            OFE_CAC_COD_CPS campana, 
            OFE_GLS_DES_CPS descampana,
            OFE_GLS_DES_OFE
 FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol SOL 
 JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe OFE
   ON OFE.OFE_COD_NRO_SOL_K = SOL.SOL_COD_NRO_SOL_K
WHERE 
    substring(ofe.OFE_COD_PRD_OFE_K,1,2) in ('01','02','21') /* *TC*->('01','02') *CCT*->('21') */
    AND OFE.OFE_COD_IND_sol = 1
 	AND SOL_FCH_CRC_SOL between  v_periodo_ini AND v_periodo_fin
	AND SOL.SOL_COD_CLL_ADM = 2
and exists(select * from br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol  btc where sol.sol_cod_nro_sol_k = btc.btc_cod_nro_sol_k and 
btc.btc_cod_eta_k = 102 and btc.btc_cod_evt_k = 30)
and ((  exists (select * from br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf   A where a.sin_cod_ide_cli = sol_cod_ide_cli  and trunc(a.sin_fch_hor_aud) =  sol.sol_fch_crc_sol and a.sin_cod_nro_sol = SOL.sol_cod_nro_sol_k
and a.sin_cod_srv_k = 'CEDU0702' AND a.SIN_COD_NRO_ERR =  10000)) or
( exists (select * from br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf A where a.sin_cod_ide_cli = sol_cod_ide_cli  and trunc(a.sin_fch_hor_aud) =  sol.sol_fch_crc_sol and a.sin_cod_nro_sol = SOL.sol_cod_nro_sol_k
and a.sin_cod_srv_k = 'CEDU0701' AND a.SIN_COD_NRO_ERR =  10000)))
and ((exists (select * from br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf b where b.sin_cod_ide_cli = sol_cod_ide_cli  and trunc(b.sin_fch_hor_aud) =  sol.sol_fch_crc_sol  and b.sin_cod_nro_sol = SOL.sol_cod_nro_sol_k
and b.sin_cod_srv_k = 'SNPV1802' AND b.SIN_COD_NRO_ERR in ( 10000,10014,10013))) or 
(exists (select * from br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf b where b.sin_cod_ide_cli = sol_cod_ide_cli  and trunc(b.sin_fch_hor_aud) = sol.sol_fch_crc_sol  and b.sin_cod_nro_sol = SOL.sol_cod_nro_sol_k
and b.sin_cod_srv_k  = 'SNPV1804' AND b.SIN_COD_NRO_ERR in  (10000, 10013, 10014))))
and exists(select * from br_dm_prod_bigdata_reporitf_db.sfadmi_bco_fir_dct_sol f where f.fir_cod_nro_sol_k = sol.sol_cod_nro_sol_k) 
;



CREATE TABLE schm_digital.dgtl_funnel_captacion_autentificacion_facial AS 
SELECT 
         sol.sol_cod_ide_cli, 
         substring(ofe.OFE_COD_PRD_OFE_K,1,2) as CODIGO_PRODUCTO ,
         ofe.OFE_COD_IND_DRM,  
         sol.sol_fch_crc_sol fechasol,  
         OFE_CAC_COD_CPS campana, 
         OFE_GLS_DES_CPS descampana,
         OFE_GLS_DES_OFE
 FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol SOL 
 JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe OFE
   ON OFE.OFE_COD_NRO_SOL_K = SOL.SOL_COD_NRO_SOL_K
WHERE 
    substring(ofe.OFE_COD_PRD_OFE_K,1,2) in ('01','02','21') /* *TC*->('01','02') *CCT*->('21') */
      AND OFE.OFE_COD_IND_sol = 1
 AND SOL_FCH_CRC_SOL between  v_periodo_ini AND v_periodo_fin
AND SOL.SOL_COD_CLL_ADM = 2
and ((  exists (select * from br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf A where a.sin_cod_ide_cli = sol_cod_ide_cli  and trunc(a.sin_fch_hor_aud) = sol.sol_fch_crc_sol  and a.sin_cod_nro_sol = SOL.sol_cod_nro_sol_k
and a.sin_cod_srv_k = 'CEDU0702' AND a.SIN_COD_NRO_ERR =  10000)) or
( exists (select * from br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf A where a.sin_cod_ide_cli = sol_cod_ide_cli  and trunc(a.sin_fch_hor_aud) = sol.sol_fch_crc_sol  and a.sin_cod_nro_sol = SOL.sol_cod_nro_sol_k
and a.sin_cod_srv_k = 'CEDU0701' AND a.SIN_COD_NRO_ERR =  10000)))
and ((exists (select * from br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf b where b.sin_cod_ide_cli = sol_cod_ide_cli  and trunc(b.sin_fch_hor_aud) = sol.sol_fch_crc_sol  and b.sin_cod_nro_sol = SOL.sol_cod_nro_sol_k
and b.sin_cod_srv_k = 'SNPV1802' )) OR 
(exists (select * from br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf b where b.sin_cod_ide_cli = sol_cod_ide_cli  and trunc(b.sin_fch_hor_aud) = sol.sol_fch_crc_sol  and b.sin_cod_nro_sol = SOL.sol_cod_nro_sol_k
and b.sin_cod_srv_k  = 'SNPV1804'))) 
;


CREATE TABLE schm_digital.dgtl_funnel_captacion_formalizacion_ok AS 
SELECT 
        sol.sol_cod_ide_cli,
        substring(ofe.OFE_COD_PRD_OFE_K,1,2) as CODIGO_PRODUCTO , 
        ofe.OFE_COD_IND_DRM,  
        sol.sol_fch_crc_sol fechasol, 
        OFE_CAC_COD_CPS campana,
        OFE_GLS_DES_CPS descampana,
        OFE_GLS_DES_OFE 
 FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol SOL 
 JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe OFE
   ON OFE.OFE_COD_NRO_SOL_K = SOL.SOL_COD_NRO_SOL_K
WHERE 
    substring(ofe.OFE_COD_PRD_OFE_K,1,2) in ('01','02','21')/* *TC*->('01','02') *CCT*->('21') */
     AND OFE.OFE_COD_IND_sol = 1
	AND SOL_FCH_CRC_SOL between v_periodo_ini AND v_periodo_fin
AND SOL.SOL_COD_CLL_ADM = 2
and exists(select * from br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol btc where sol.sol_cod_nro_sol_k = btc.btc_cod_nro_sol_k and 
btc.btc_cod_eta_k = 103 and btc.btc_cod_evt_k = 30)
and ((  exists (select * from br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf A where a.sin_cod_ide_cli = sol_cod_ide_cli  and trunc(a.sin_fch_hor_aud) =  sol.sol_fch_crc_sol and a.sin_cod_nro_sol = SOL.sol_cod_nro_sol_k
and a.sin_cod_srv_k = 'CEDU0702' AND a.SIN_COD_NRO_ERR =  10000)) or
( exists (select * from br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf A where a.sin_cod_ide_cli = sol_cod_ide_cli  and trunc(a.sin_fch_hor_aud) =  sol.sol_fch_crc_sol and a.sin_cod_nro_sol = SOL.sol_cod_nro_sol_k
and a.sin_cod_srv_k = 'CEDU0701' AND a.SIN_COD_NRO_ERR =  10000)))
and ((exists (select * from br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf b where b.sin_cod_ide_cli = sol_cod_ide_cli  and trunc(b.sin_fch_hor_aud) =  sol.sol_fch_crc_sol  and b.sin_cod_nro_sol = SOL.sol_cod_nro_sol_k
and b.sin_cod_srv_k = 'SNPV1802' AND b.SIN_COD_NRO_ERR in ( 10000,10014,10013))) or 
(exists (select * from br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf b where b.sin_cod_ide_cli = sol_cod_ide_cli  and trunc(b.sin_fch_hor_aud) = sol.sol_fch_crc_sol  and b.sin_cod_nro_sol = SOL.sol_cod_nro_sol_k
and b.sin_cod_srv_k  = 'SNPV1804' AND b.SIN_COD_NRO_ERR in  (10000, 10013, 10014))))
;



CREATE TABLE schm_digital.dgtl_funnel_captacion_sinacofi_ok AS 
SELECT 
         sol.sol_cod_ide_cli,
         substring(ofe.OFE_COD_PRD_OFE_K,1,2) as CODIGO_PRODUCTO ,
         ofe.OFE_COD_IND_DRM, 
         sol.sol_fch_crc_sol fechasol, 
         OFE_CAC_COD_CPS campana, 
         OFE_GLS_DES_CPS descampana, 
         OFE_GLS_DES_OFE
 FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol SOL 
 JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe OFE
   ON OFE.OFE_COD_NRO_SOL_K = SOL.SOL_COD_NRO_SOL_K
WHERE 
    substring(ofe.OFE_COD_PRD_OFE_K,1,2) in ('01','02','21')/* *TC*->('01','02') *CCT*->('21') */
	AND OFE.OFE_COD_IND_sol = 1
 AND SOL_FCH_CRC_SOL between v_periodo_ini AND v_periodo_fin 
AND SOL.SOL_COD_CLL_ADM = 2
and ((  exists (select * from br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf A where a.sin_cod_ide_cli = sol_cod_ide_cli  and trunc(a.sin_fch_hor_aud) =  sol.sol_fch_crc_sol and a.sin_cod_nro_sol = SOL.sol_cod_nro_sol_k
and a.sin_cod_srv_k = 'CEDU0702' AND a.SIN_COD_NRO_ERR =  10000)) or
( exists (select * from br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf A where a.sin_cod_ide_cli = sol_cod_ide_cli  and trunc(a.sin_fch_hor_aud) =  sol.sol_fch_crc_sol and a.sin_cod_nro_sol = SOL.sol_cod_nro_sol_k
and a.sin_cod_srv_k = 'CEDU0701' AND a.SIN_COD_NRO_ERR =  10000)))
and ((exists (select * from br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf b where b.sin_cod_ide_cli = sol_cod_ide_cli  and trunc(b.sin_fch_hor_aud) =  sol.sol_fch_crc_sol  and b.sin_cod_nro_sol = SOL.sol_cod_nro_sol_k
and b.sin_cod_srv_k = 'SNPV1802' AND b.SIN_COD_NRO_ERR in ( 10000,10014,10013))) or 
(exists (select * from br_dm_prod_bigdata_segcom2_db.sfadmi_bco_aud_sncf b where b.sin_cod_ide_cli = sol_cod_ide_cli  and trunc(b.sin_fch_hor_aud) = sol.sol_fch_crc_sol  and b.sin_cod_nro_sol = SOL.sol_cod_nro_sol_k
and b.sin_cod_srv_k  = 'SNPV1804' AND b.SIN_COD_NRO_ERR in  (10000, 10013, 10014))))
;

CREATE TABLE schm_digital.dgtl_funnel_captacion_solicitud_online_bio AS 
select a.*,a.fechasol as FECHA,
/*case when b.rut is not null then 1 else 0 end as IDKNOW*/
ANALIZE_DNI_CL,
FINALIZAR_ENROLAMIENTO,
INICIO_ENROLAMIENTO,
MATCH_FACIAL_DNI
FROM schm_digital.dgtl_funnel_captacion_solicitudes_online A
left join schm_workspace.data_limpia2 b
on SOL_COD_IDE_CLI:: int = substring(b.rut,1,length(b.rut)-1):: int
and date_part('day',a.fechasol)=b.dia
;


EXECUTE 'UNLOAD(' || quote_literal('select * from schm_digital.dgtl_funnel_captacion_digital_resumen') || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/dgtl/banco/dgtl_funnel_captacion/' || 'funnel_captacion_resumen'  || '_' || concat(concat(substring( cast(current_date as varchar),1,4),substring( cast(current_date  as varchar),6,2)),substring( cast(current_date as varchar),9,2))  || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
EXECUTE 'UNLOAD(' || quote_literal('select * from schm_digital.dgtl_funnel_captacion_solicitudes_online ') || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/dgtl/banco/dgtl_funnel_captacion/' || 'funnel_captacion_solicitudes_online'  || '_' || concat(concat(substring( cast(current_date as varchar),1,4),substring( cast(current_date  as varchar),6,2)),substring( cast(current_date as varchar),9,2))   || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
EXECUTE 'UNLOAD(' || quote_literal('select * from schm_digital.dgtl_funnel_captacion_antecedentes_ok ') || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/dgtl/banco/dgtl_funnel_captacion/' || 'funnel_captacion_antecedentes_ok'  || '_' || concat(concat(substring( cast(current_date as varchar),1,4),substring( cast(current_date  as varchar),6,2)),substring( cast(current_date as varchar),9,2))   || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
EXECUTE 'UNLOAD(' || quote_literal('select * from schm_digital.dgtl_funnel_captacion_autentificacion_facial ') || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/dgtl/banco/dgtl_funnel_captacion/' || 'funnel_captacion_autentificacion_facial'  || '_' || concat(concat(substring( cast(current_date as varchar),1,4),substring( cast(current_date  as varchar),6,2)),substring( cast(current_date as varchar),9,2))   || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
EXECUTE 'UNLOAD(' || quote_literal('select * from schm_digital.dgtl_funnel_captacion_formalizacion_ok ') || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/dgtl/banco/dgtl_funnel_captacion/' || 'funnel_captacion_formalizacion_ok'  || '_' || concat(concat(substring( cast(current_date as varchar),1,4),substring( cast(current_date  as varchar),6,2)),substring( cast(current_date as varchar),9,2))   || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
EXECUTE 'UNLOAD(' || quote_literal('select * from schm_digital.dgtl_funnel_captacion_sinacofi_ok') || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/dgtl/banco/dgtl_funnel_captacion/' || 'funnel_captacion_sinacofi_ok'  || '_' || concat(concat(substring( cast(current_date as varchar),1,4),substring( cast(current_date  as varchar),6,2)),substring( cast(current_date as varchar),9,2))   || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
EXECUTE 'UNLOAD(' || quote_literal('select * from schm_digital.dgtl_funnel_captacion_solicitud_online_bio ') || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/dgtl/banco/dgtl_funnel_captacion/' || 'funnel_captacion_solicitud_online_bio'  || '_' || concat(concat(substring( cast(current_date as varchar),1,4),substring( cast(current_date  as varchar),6,2)),substring( cast(current_date as varchar),9,2))   || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';


END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_dgtl_funnel_cuotizacion(v_periodo int4, v_fecha date)
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN

	
drop table if exists schm_workspace.log_mes_actual_funnel_cuotizacion;
drop table if exists schm_workspace.simul_cuotizacion;
drop table if exists schm_workspace.pagos_funnel_cuotizacion;
drop table if exists schm_workspace.pagos_funnel_cuotizacion;
drop table if exists schm_workspace.periodos_funnel_cuotizacion;
drop table if exists schm_workspace.base_1_funnel_cuotizacion;
drop table if exists schm_workspace.base_2_funnel_cuotizacion;
drop table if exists schm_workspace.curses_cuotizacion;
drop table if exists schm_workspace.trx_cotizacion_idnow_2;
drop table if exists schm_workspace.trx_cuotizacion_idnow;
drop table if exists schm_workspace.oferta_cuotizacion;
drop table if exists schm_workspace.base_4_funnel_cuotizacion;
drop table if exists schm_workspace.base_3_funnel_cuotizacion;
drop table if exists schm_workspace.curses_cuotizacion_total;

create table schm_workspace.periodos_funnel_cuotizacion as 
select schm_artifacts.f_period(v_fecha) as periodo_actual,
v_fecha as fecha;

/*
create table schm_workspace.periodos_funnel_cuotizacion as 
select schm_artifacts.f_period(current_date) as periodo_actual,
current_date as fecha;
*/


create table schm_workspace.log_mes_actual_funnel_cuotizacion as
select rut,fecha,count(*) as cant_log
from (select rut, fecha
from schm_data_analytics.dgtl_logueos_internet
where periodo = (select periodo_actual from schm_workspace.periodos_funnel_cuotizacion))
group by rut,fecha;


create table schm_workspace.pagos_funnel_cuotizacion as
select distinct rut 
from schm_data_analytics.mdpg_pagos_digitales
where espago=1 and periodo = (select periodo_actual from schm_workspace.periodos_funnel_cuotizacion)
and monto > 0;

create table schm_workspace.oferta_cuotizacion as
select camp_rut_cli as rut
from br_dm_prod_bigdata_camreport_db.cbcamp_mae_ofertas
where periodo in (202401,202312)
and camp_COD_TIP_PROD = 710 and camp_COD_CND_PROD = 7101 
and camp_desc_ofe = 'OFERTA DE CUOTIZACION DEUDA FACTURADA';





create table schm_workspace.base_1_funnel_cuotizacion as
select a.rut,
a.fecha,
case when b.rut is not null then 1 else 0 end as pagos,
case when c.rut is not null then 1 else 0 end as oferta_cuoti
from schm_workspace.log_mes_actual_funnel_cuotizacion as a 
left join schm_workspace.pagos_funnel_cuotizacion as b 
on a.rut=b.rut
left join schm_workspace.oferta_cuotizacion as c
on a.rut=c.rut;


create table schm_workspace.simul_cuotizacion as
select 
rut,
max(monto) as monto,
max(cuotas) as cuotas,
max(costo_total) as costo_total,
fecha as fecha
from (select b.session_rut  as rut, 
a.totalinstallmentsnumber as cuotas,
a.invoiceamount as monto,
a.totalamount as costo_total,
b.created_at_utc_cl as fecha
from br_dm_prod_bigdata_pwa_db.sim_quotation as a 
join br_dm_prod_bigdata_pwa_db.login as b 
on a.token = b.token
where b.periodo =(select periodo_actual from schm_workspace.periodos_funnel_cuotizacion)) 
group by rut,fecha;



create table schm_workspace.base_2_funnel_cuotizacion as
select a.*,
case when b.rut is not null and oferta_cuoti=1  then 1 else 0 end as simul_cuoti
from schm_workspace.base_1_funnel_cuotizacion as a 
left join schm_workspace.simul_cuotizacion as b 
on a.rut=b.rut and a.fecha=b.fecha;


create table schm_workspace.curses_cuotizacion as
select b.session_rut  as rut, 
split_part(a.invoiceamount,'.',1):: bigint as monto_cuota,
split_part(a.totalinstallmentnumber,'.',1):: bigint  as cuotas,
split_part(totalamount,'.',1):: bigint as monto,
authenticationtype as id_transaccion,
replace(a.interestamount ,'.',',') as interes,
b.created_at_utc_cl as fecha
from br_dm_prod_bigdata_pwa_db.confirm_quotation as a 
join br_dm_prod_bigdata_pwa_db.login as b 
on a.token = b.token
where b.periodo = (select periodo_actual from schm_workspace.periodos_funnel_cuotizacion);




create table schm_workspace.curses_cuotizacion_total as
select b.session_rut  as rut, 
split_part(a.invoiceamount,'.',1):: bigint as monto_cuota,
split_part(a.totalinstallmentnumber,'.',1):: bigint  as cuotas,
split_part(totalamount,'.',1):: bigint as monto,
authenticationtype as id_transaccion,
replace(a.interestamount ,'.',',') as interes,
b.created_at_utc_cl as fecha
from br_dm_prod_bigdata_pwa_db.confirm_quotation as a 
join br_dm_prod_bigdata_pwa_db.login as b 
on a.token = b.token
where b.periodo <= (select periodo_actual from schm_workspace.periodos_funnel_cuotizacion);





create table schm_workspace.base_3_funnel_cuotizacion as
select a.*,
case when b.rut is not null  then 1 else 0 end as curse,
case when b.rut is not null then monto else 0 end as monto_curse,
case when b.rut is not null then cuotas else 0 end as cuota_curse,
case when b.rut is not null then monto_cuota else 0 end as monto_cuota_curse
from schm_workspace.base_2_funnel_cuotizacion as a 
left join schm_workspace.curses_cuotizacion as b 
on a.rut=b.rut and a.fecha=b.fecha;


create table schm_workspace.trx_cuotizacion_idnow as 
select substring(cliente,1,length(cliente)-1) as rut,
fecha_autorizacion  as fecha,
case when metodo_aplicado = 'PUSH AUTH' then 'RPASS'
when metodo_aplicado = 'SMS OTP' then 'SMS'
when metodo_aplicado = 'CLAVE COORDENADA' then 'CC'
else 'OTRO' end as metodo_aplicado,
estado,
id_transaccion
from br_dm_prod_bigdata_idnow_db.reporte_transacciones 
where nombre_transaccion = 'CUOTIZACION'
and periodo = (select periodo_actual from schm_workspace.periodos_funnel_cuotizacion)
;



create table schm_workspace.trx_cotizacion_idnow_2 as 
select fecha,
count(distinct id_transaccion) as cantidad_intentos,
count(distinct rut) as cantidad_usuarios_unicos,
count(distinct case when estado = 'A' then rut end ) as trx_autorizada,
count(distinct case when estado not in ('A') then rut end ) as trx_rechazada,
count(distinct case when metodo_aplicado = 'RPASS' and estado = 'A' then rut end) as trx_rpass_autorizada,
count(distinct case when metodo_aplicado = 'RPASS' and estado not in ('A') then rut end) as trx_rpass_rechazada,
count(distinct case when metodo_aplicado = 'CC' and estado = 'A' then rut end) as trx_cc_autorizada,
count(distinct case when metodo_aplicado = 'CC' and estado not in ('A') then rut end) as trx_cc_rechazada,
count(distinct case when metodo_aplicado = 'SMS' and estado = 'A' then rut end) as trx_sms_autorizada,
count(distinct case when metodo_aplicado = 'SMS' and estado not in ('A') then rut end) as trx_sms_rechazada,
count(distinct case when metodo_aplicado = 'OTRO' and estado = 'A' then rut end) as trx_otro_autorizada,
count(distinct case when metodo_aplicado = 'OTRO' and estado not in ('A') then rut end) as trx_otro_rechazada
from schm_workspace.trx_cuotizacion_idnow 
group by fecha;



create table schm_workspace.base_4_funnel_cuotizacion as
select a.*,
case when b.rut is not null and a.fecha=b.fecha then trx_autorizada else 0 end as trx_autorizada,
case when b.rut is not null and a.fecha=b.fecha then trx_rechazada else 0 end as trx_rechazada,
case when b.rut is not null and a.fecha=b.fecha then trx_rpass_autorizada else 0 end as trx_rpass_autorizada,
case when b.rut is not null and a.fecha=b.fecha then trx_rpass_rechazada else 0 end as trx_rpass_rechazada,
case when b.rut is not null and a.fecha=b.fecha then trx_cc_autorizada else 0 end as trx_cc_autorizada,
case when b.rut is not null and a.fecha=b.fecha then trx_cc_rechazada else 0 end as trx_cc_rechazada,
case when b.rut is not null and a.fecha=b.fecha then trx_sms_autorizada else 0 end as trx_sms_autorizada,
case when b.rut is not null and a.fecha=b.fecha then trx_sms_rechazada else 0 end as trx_sms_rechazada,
case when b.rut is not null and a.fecha=b.fecha then trx_otro_autorizada else 0 end as trx_otro_autorizada,
case when b.rut is not null and a.fecha=b.fecha then trx_otro_rechazada else 0 end as trx_otro_rechazada
from schm_workspace.base_3_funnel_cuotizacion as a 
left join (
select rut,fecha,
count(distinct case when estado = 'A' then rut end ) as trx_autorizada,
count(distinct case when estado not in ('A') then rut end ) as trx_rechazada,
count(distinct case when metodo_aplicado = 'RPASS' and estado = 'A' then rut end) as trx_rpass_autorizada,
count(distinct case when metodo_aplicado = 'RPASS' and estado not in ('A') then rut end) as trx_rpass_rechazada,
count(distinct case when metodo_aplicado = 'CC' and estado = 'A' then rut end) as trx_cc_autorizada,
count(distinct case when metodo_aplicado = 'CC' and estado not in ('A') then rut end) as trx_cc_rechazada,
count(distinct case when metodo_aplicado = 'SMS' and estado = 'A' then rut end) as trx_sms_autorizada,
count(distinct case when metodo_aplicado = 'SMS' and estado not in ('A') then rut end) as trx_sms_rechazada,
count(distinct case when metodo_aplicado = 'OTRO' and estado = 'A' then rut end) as trx_otro_autorizada,
count(distinct case when metodo_aplicado = 'OTRO' and estado not in ('A') then rut end) as trx_otro_rechazada
from schm_workspace.trx_cuotizacion_idnow 
group by rut,fecha
) as b 
on a.rut=b.rut and a.fecha=b.fecha;


delete from schm_digital.dgtl_funnel_ppff_cuoti
where periodo = (select periodo_actual from schm_workspace.periodos_funnel_cuotizacion);






DECLARE 
	cnt INTEGER :=1;
BEGIN
  WHILE cnt <=  (select datepart('day',fecha) from  schm_workspace.periodos_funnel_cuotizacion)
  LOOP 
	  create table  schm_workspace.vista_diaria_funnel_cuoti as 
	  select schm_artifacts.f_period(fecha)as periodo,
	  'Mensual' as tipo,
	  cnt as dia,
      max(fecha)  AS fecha,
count(distinct A.RUT  ) as visita_mix,
count(distinct case when pagos=1 then A.RUT end) as pagos,
count(distinct case when pagos=1 and oferta_cuoti=1 then A.RUT end ) as pagos_oferta_cuoti,
count(distinct case when oferta_cuoti=1 then A.RUT end ) as oferta_cuoti,
count(distinct case when  simul_cuoti=1 then a.rut end ) as simul_cuoti,
count(distinct case when  curse=1 then a.rut end ) as trx_curse_cuoti,
sum( case when oferta_cuoti=1 and curse=1  then monto_curse end ) as monto_curse_cuoti,
avg (case when oferta_cuoti=1 and curse=1 then cuota_curse end) as prom_cuotas,
avg (case when oferta_cuoti=1 and curse=1 then monto_cuota_curse end) prom_valor_cuota,
count(distinct case when trx_autorizada=1 or trx_rechazada=1 then A.RUT end) as trx_intentos_totales,
count(distinct case when trx_autorizada=1 then A.RUT end) as trx_autorizada,
count(distinct case when trx_rechazada=1 then A.RUT end) as trx_rechazada,
count(distinct case when trx_rpass_autorizada=1 then A.RUT end) as trx_rpass_autorizada,
count(distinct case when trx_rpass_rechazada=1 then A.RUT end) as trx_rpass_rechazada,
count(distinct case when trx_cc_autorizada=1 then A.RUT end) as trx_cc_autorizada,
count(distinct case when trx_cc_rechazada=1 then A.RUT end) as trx_cc_rechazada,
count(distinct case when trx_sms_autorizada=1 then A.RUT end) as trx_sms_autorizada,
count(distinct case when trx_sms_rechazada=1 then A.RUT end) as trx_sms_rechazada,
count(distinct case when trx_otro_autorizada=1 then A.RUT end) as trx_otro_autorizada,
count(distinct case when trx_otro_rechazada=1 then A.RUT end) as trx_otro_rechazada
from schm_workspace.base_4_funnel_cuotizacion as a 
where date_part('day',fecha) <= cnt 
group by schm_artifacts.f_period(fecha);

insert into schm_digital.dgtl_funnel_ppff_cuoti
select * from  schm_workspace.vista_diaria_funnel_cuoti;
	 
drop table schm_workspace.vista_diaria_funnel_cuoti;
	  
RAISE INFO 'Count: %', cnt;
cnt = cnt + 1;
END LOOP;
 RAISE INFO 'Loop Statement Executed!!!';
END;



insert into schm_digital.dgtl_funnel_ppff_cuoti
select schm_artifacts.f_period(fecha)as periodo,
'Diario' as tipo,
date_part('day',fecha) as dia,
fecha  AS fecha,
count(distinct A.RUT  ) as visita_mix,
count(distinct case when pagos=1 then A.RUT end) as pagos,
count(distinct case when pagos=1 and oferta_cuoti=1 then A.RUT end ) as pagos_oferta_cuoti,
count(distinct case when oferta_cuoti=1 then A.RUT end ) as oferta_cuoti,
count(distinct case when  simul_cuoti=1 then a.rut end ) as simul_cuoti,
count(distinct case when  curse=1 then a.rut end ) as trx_curse_cuoti,
sum( case when oferta_cuoti=1 and curse=1  then monto_curse end ) as monto_curse_cuoti,
avg (case when oferta_cuoti=1 and curse=1 then cuota_curse end) as prom_cuotas,
avg (case when oferta_cuoti=1 and curse=1 then monto_cuota_curse end) prom_valor_cuota,
count(distinct case when trx_autorizada=1 or trx_rechazada=1 then A.RUT end) as trx_intentos_totales,
count(distinct case when trx_autorizada=1 then A.RUT end) as trx_autorizada,
count(distinct case when trx_rechazada=1 then A.RUT end) as trx_rechazada,
count(distinct case when trx_rpass_autorizada=1 then A.RUT end) as trx_rpass_autorizada,
count(distinct case when trx_rpass_rechazada=1 then A.RUT end) as trx_rpass_rechazada,
count(distinct case when trx_cc_autorizada=1 then A.RUT end) as trx_cc_autorizada,
count(distinct case when trx_cc_rechazada=1 then A.RUT end) as trx_cc_rechazada,
count(distinct case when trx_sms_autorizada=1 then A.RUT end) as trx_sms_autorizada,
count(distinct case when trx_sms_rechazada=1 then A.RUT end) as trx_sms_rechazada,
count(distinct case when trx_otro_autorizada=1 then A.RUT end) as trx_otro_autorizada,
count(distinct case when trx_otro_rechazada=1 then A.RUT end) as trx_otro_rechazada
from schm_workspace.base_4_funnel_cuotizacion as a 
group by schm_artifacts.f_period(fecha),fecha;



EXECUTE 'UNLOAD(' || quote_literal('select * from schm_digital.dgtl_funnel_ppff_cuoti') || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/dgtl/banco/dgtl_funnel_cuotizacion/' || 'funnel_ppff_cuotizacion'  || '_' || concat(concat(substring( cast(v_fecha as varchar),1,4),substring( cast(v_fecha  as varchar),6,2)),substring( cast(v_fecha as varchar),9,2))  || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
EXECUTE 'UNLOAD(' || quote_literal('select * from schm_workspace.trx_cotizacion_idnow_2') || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/dgtl/banco/dgtl_funnel_cuotizacion/' || 'detalle_auotizacion_trx'  || '_' || concat(concat(substring( cast(v_fecha as varchar),1,4),substring( cast(v_fecha  as varchar),6,2)),substring( cast(v_fecha as varchar),9,2))   || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
EXECUTE 'UNLOAD(' || quote_literal('select * from schm_workspace.curses_cuotizacion_total') || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/dgtl/banco/dgtl_funnel_cuotizacion/' || 'curses_cuotizacion'  || '_' || concat(concat(substring( cast(v_fecha as varchar),1,4),substring( cast(v_fecha  as varchar),6,2)),substring( cast(v_fecha as varchar),9,2))   || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';


   END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_dgtl_funnel_dap(v_periodo int4, v_fecha date)
	LANGUAGE plpgsql
AS $$
	
	
	
	
	
	
	
	
begin

	
drop table if exists schm_workspace.log_mes_actual_funnel_dap;
drop table if exists schm_workspace.periodos_funnel_dap;
drop table if exists schm_workspace.simul_dap;
drop table if exists schm_workspace.base_1_funnel_dap;
drop table if exists schm_workspace.curses_dap;
drop table if exists schm_workspace.base_2_funnel_dap;
drop table if exists schm_workspace.base_3_funnel_dap;
drop table if exists schm_workspace.curses_liquidados_dap;
drop table if exists schm_workspace.Saldos_Cuenta_vista_funnel_dap;
drop table if exists schm_workspace.Saldos_Cuenta_corriente_funnel_dap;
drop table if exists schm_workspace.consolidado_saldos_funnel_dap;

create table schm_workspace.periodos_funnel_dap as 
select schm_artifacts.f_period(v_fecha) as periodo_actual,
v_fecha as fecha;

/*
create table schm_workspace.periodos_funnel_dap as 
select schm_artifacts.f_period(current_date) as periodo_actual,
current_date as fecha;
*/


create table schm_workspace.log_mes_actual_funnel_dap as
select rut,fecha,count(*) as cant_log
from (select rut, fecha
from schm_data_analytics.dgtl_logueos_internet
where periodo = (select periodo_actual from schm_workspace.periodos_funnel_dap))
group by rut,fecha;

/* Saldo CC*/
		
		
create table schm_workspace.Saldos_Cuenta_corriente_funnel_dap  as
select 
b.cli_identifica as rut,
a.ACP_FECHA as CodFecha,
a.ACP_FECHA, 
a.ACP_NUMCUE, 
sum(a.acp_salefe + a.acp_sal12h + a.acp_sal24h + a.acp_sal48h) as Saldo 
from br_dm_prod_bigdata_fisa_db.tcap_acrpas  a
left join ( select 
distinct cli_identifica ,vis_numcue
from br_dm_prod_bigdata_fisa_db.tcli_persona 
,br_dm_prod_bigdata_fisa_db.tcap_vista 
where cli_codigo=vis_codcli 
and vis_mod=4
and (VIS_PRO=1) 
and vis_tip=1  
AND (vis_status='2' or vis_status='9')) b
on(a.ACP_NUMCUE=b.vis_numcue)
where a.acp_pro = 1 and a.acp_tip = 1 
and a.periodo = (select periodo_actual from schm_workspace.periodos_funnel_dap)
group by 
a.ACP_FECHA, 
a.ACP_NUMCUE,
b.cli_identifica;

create table schm_workspace.Saldos_Cuenta_vista_funnel_dap  as 
select 
b.cli_identifica as  rut,
a.ACP_FECHA as CodFecha,
a.ACP_FECHA, 
a.ACP_NUMCUE, 
sum(a.acp_salefe + a.acp_sal12h + a.acp_sal24h + a.acp_sal48h) as Saldo 
from  br_dm_prod_bigdata_fisa_db.tcap_acrpas a
left join ( select 
distinct cli_identifica ,vis_numcue
from br_dm_prod_bigdata_fisa_db.tcli_persona
,br_dm_prod_bigdata_fisa_db.tcap_vista
where cli_codigo=vis_codcli 
and vis_mod=4
and (VIS_PRO=4 or VIS_PRO=40) 
and vis_tip=1  
AND (vis_status='2' or vis_status='9')) b
on(a.ACP_NUMCUE=b.vis_numcue)
where a.acp_pro = 4 and a.acp_tip = 1 
and a.periodo=(select periodo_actual from schm_workspace.periodos_funnel_dap)
group by 
a.ACP_FECHA, 
a.ACP_NUMCUE,
b.cli_identifica;


create table schm_workspace.consolidado_saldos_funnel_dap  as 
select distinct rut
from schm_workspace.Saldos_Cuenta_corriente_funnel_dap
where saldo>=10000
union 
select distinct rut
from schm_workspace.Saldos_Cuenta_vista_funnel_dap
where saldo>=10000;


create table schm_workspace.base_1_funnel_dap as
select a.rut,
a.fecha,
case when b.rut is not null  then 1 else 0 end as saldo_td
from schm_workspace.log_mes_actual_funnel_dap as a 
left join schm_workspace.consolidado_saldos_funnel_dap as b 
on a.rut=b.rut ;



create table schm_workspace.simul_dap as
select 
rut,
max(monto) as monto,
fecha as fecha
from (select b.session_rut  as rut, 
a.investment_amount  as monto,
a.deposit_Account_Term_Simulated as plazo_simulado,
a.deposit_Account_Term as PlazoEntregado,
a.interest_Amount as Interes,
a.maturity_Amount as MontoTotalVencimiento,
a.investment_Base_Rate as TasaMensual,
a.investment_Rate as TasaPeriodo,
a.maturity_Date as FechaVencimiento,
b.created_at_utc_cl as fecha
from br_dm_prod_bigdata_pwa_db.sim_dap_new as a 
join br_dm_prod_bigdata_pwa_db.login as b 
on a.token = b.token
where b.periodo =(select periodo_actual from schm_workspace.periodos_funnel_dap)) 
group by rut,fecha;



create table schm_workspace.base_2_funnel_dap as
select a.*,
case when b.rut is not null  then 1 else 0 end as simul_dap,
case when b.rut is not null  then monto else 0 end as monto_simul_dap
from schm_workspace.base_1_funnel_dap as a 
left join schm_workspace.simul_dap as b 
on a.rut=b.rut and a.fecha=b.fecha;



create table schm_workspace.curses_dap  as
select b.session_rut  as rut, 
case WHEN UPPER(b.device) LIKE '%APP%' THEN 'APP'
     WHEN b.device IS NULL THEN 'APP' ELSE b.device
 END AS dispositivo,
a.token,
CASE a.deposit_type 
        WHEN 'N' THEN 'FIJO'
        WHEN 'S' THEN 'RENOVABLE'
        end as tipo_inversion,
c.investment_amount  as monto,
c.deposit_Account_Term_Simulated as plazo_simulado,
c.deposit_Account_Term as PlazoEntregado,
c.interest_Amount as Interes,
c.maturity_Amount as MontoTotalVencimiento,
c.investment_Base_Rate as TasaMensual,
c.investment_Rate as TasaPeriodo,
c.maturity_Date as FechaVencimiento,
b.created_at_utc_cl as fecha
from br_dm_prod_bigdata_pwa_db.dap_new as a 
join br_dm_prod_bigdata_pwa_db.login as b 
on a.token = b.token
join br_dm_prod_bigdata_pwa_db.sim_dap_new as c 
on a.uuid = c.uuid
where b.periodo = (select periodo_actual from schm_workspace.periodos_funnel_dap);




create table schm_workspace.base_3_funnel_dap as
select a.*,
case when b.rut is not null  then 1 else 0 end as curse,
b.tipo_inversion as tipo_inversion,
case when b.rut is not null then monto else 0 end as monto_dap,
case when b.rut is not null then plazo_simulado else 0 end as plazo_simulado,
case when b.rut is not null then interes else 0 end as interes,
case when b.rut is not null then montototalvencimiento else 0 end as monto_vencimiento,
0 as dap_liquidado
from schm_workspace.base_2_funnel_dap as a 
left join schm_workspace.curses_dap as b 
on a.rut=b.rut and a.fecha=b.fecha;

create table schm_workspace.curses_liquidados_dap as  
select b.session_rut as rut,
a.created_at_utc_cl as fecha
from br_dm_prod_bigdata_pwa_db.liquidate_dap as a 
join br_dm_prod_bigdata_pwa_db.login as b 
on a.token = b.token
where a.periodo = (select periodo_actual from schm_workspace.periodos_funnel_dap);


insert into schm_workspace.base_3_funnel_dap
select 
rut,
fecha,
0 as saldo_td,
0 as simul_dap,
0 as monto_simul_dap,
0 as curse,
0 as monto_dap,
0 as plazo_simulado,
0 as interes,
0 as monto_vencimiento,
1 as dap_liquidado
from schm_workspace.curses_liquidados_dap;



delete from schm_digital.dgtl_funnel_ppff_dap 
where periodo = (select periodo_actual from schm_workspace.periodos_funnel_dap);



DECLARE 
	cnt INTEGER :=1;
BEGIN
  WHILE cnt <=  (select datepart('day',fecha) from  schm_workspace.periodos_funnel_dap)
  LOOP 
	  create table  schm_workspace.vista_diaria_funnel_dap as 
	  select schm_artifacts.f_period(fecha)as periodo,
	  'Mensual' as tipo,
	  cnt as dia,
      max(fecha)  AS fecha,
count(distinct A.RUT  ) as visita_mix,
count(distinct case when saldo_td=1 then rut end) as saldo_td,
count(distinct case when simul_dap = 1 then rut end) as simul_dap,
sum( case when simul_dap = 1 then monto_simul_dap end) as monto_simul_dap,
count( case when curse = 1 then rut end) as curse_dap,
count( case when curse = 1 and tipo_inversion='FIJO'  then rut end) as curse_dap_fijo,
count( case when curse = 1 and tipo_inversion='RENOVABLE'   then rut end) as curse_dap_renov,
sum( case when curse = 1 then monto_dap end) as monto_dap,
sum( case when curse = 1 and tipo_inversion='FIJO'   then monto_dap end) as monto_dap_fijo,
sum( case when curse = 1 and tipo_inversion='RENOVABLE'   then monto_dap end) as monto_dap_renov,
avg( case when curse = 1 then plazo_simulado end) as plazo_simulado_dap,
avg( case when curse = 1 and tipo_inversion='FIJO'   then plazo_simulado end) as plazo_simulado_fijo,
avg( case when curse = 1 and tipo_inversion='RENOVABLE'  then plazo_simulado end) as plazo_simulado_renov,
sum( case when curse = 1 then interes end) as interes_dap,
sum( case when curse = 1 and tipo_inversion='FIJO'   then interes end) as interes_dap_fijo,
sum( case when curse = 1 and tipo_inversion='RENOVABLE'   then interes end) as interes_dap_renov,
sum( case when curse = 1 then monto_vencimiento end) as monto_vencimiento_dap,
sum( case when curse = 1 and tipo_inversion='FIJO'   then monto_vencimiento end) as monto_vencimiento_fijo,
sum( case when curse = 1 and tipo_inversion='RENOVABLE'   then monto_vencimiento end) as monto_vencimiento_renov,
count(distinct case when dap_liquidado=1 then rut end ) as dap_liquidado
from schm_workspace.base_3_funnel_dap as a 
where date_part('day',fecha) <= cnt
group by schm_artifacts.f_period(fecha);


insert into schm_digital.dgtl_funnel_ppff_dap
select * from  schm_workspace.vista_diaria_funnel_dap;
	 
drop table schm_workspace.vista_diaria_funnel_dap;
	  
RAISE INFO 'Count: %', cnt;
cnt = cnt + 1;
END LOOP;
 RAISE INFO 'Loop Statement Executed!!!';
END;

insert into schm_digital.dgtl_funnel_ppff_dap
select schm_artifacts.f_period(fecha)as periodo,
	  'Diario' as tipo,
	  date_part('day',fecha) as dia, 
      fecha  AS fecha,
count(distinct A.RUT  ) as visita_mix,
count(distinct case when saldo_td=1 then rut end) as saldo_td,
count(distinct case when simul_dap = 1 then rut end) as simul_dap,
sum( case when simul_dap = 1 then monto_simul_dap end) as monto_simul_dap,
count( case when curse = 1 then rut end) as curse_dap,
count( case when curse = 1 and tipo_inversion='FIJO'  then rut end) as curse_dap_fijo,
count( case when curse = 1 and tipo_inversion='RENOVABLE'   then rut end) as curse_dap_renov,
sum( case when curse = 1 then monto_dap end) as monto_dap,
sum( case when curse = 1 and tipo_inversion='FIJO'   then monto_dap end) as monto_dap_fijo,
sum( case when curse = 1 and tipo_inversion='RENOVABLE'   then monto_dap end) as monto_dap_renov,
avg( case when curse = 1 then plazo_simulado end) as plazo_simulado_dap,
avg( case when curse = 1 and tipo_inversion='FIJO'   then plazo_simulado end) as plazo_simulado_fijo,
avg( case when curse = 1 and tipo_inversion='RENOVABLE'  then plazo_simulado end) as plazo_simulado_renov,
sum( case when curse = 1 then interes end) as interes_dap,
sum( case when curse = 1 and tipo_inversion='FIJO'   then interes end) as interes_dap_fijo,
sum( case when curse = 1 and tipo_inversion='RENOVABLE'   then interes end) as interes_dap_renov,
sum( case when curse = 1 then monto_vencimiento end) as monto_vencimiento_dap,
sum( case when curse = 1 and tipo_inversion='FIJO'   then monto_vencimiento end) as monto_vencimiento_fijo,
sum( case when curse = 1 and tipo_inversion='RENOVABLE'   then monto_vencimiento end) as monto_vencimiento_renov,
count(distinct case when dap_liquidado=1 then rut end ) as dap_liquidado
from schm_workspace.base_3_funnel_dap as a 
group by schm_artifacts.f_period(fecha),fecha;





EXECUTE 'UNLOAD(' || quote_literal('select * from schm_digital.dgtl_funnel_ppff_dap') || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/dgtl/banco/dgtl_funnel_ppff_dap/' || 'funnel_ppff_dap'  || '_' || concat(concat(substring( cast(v_fecha as varchar),1,4),substring( cast(v_fecha  as varchar),6,2)),substring( cast(v_fecha as varchar),9,2))  || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
EXECUTE 'UNLOAD(' || quote_literal('select * from schm_workspace.curses_dap') || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/dgtl/banco/dgtl_funnel_ppff_dap/' || 'detalle_curses_dap'  || '_' || concat(concat(substring( cast(v_fecha as varchar),1,4),substring( cast(v_fecha  as varchar),6,2)),substring( cast(v_fecha as varchar),9,2))   || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';



   END;






$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_dgtl_login_pwa(v_año int4, v_mes int4)
	LANGUAGE plpgsql
AS $$
	
	

BEGIN

drop table if exists schm_digital.dgtl_login_diario_total_pwa_aux;
drop table if exists schm_digital.dgtl_login_mensual_total_pwa_aux;
drop table if exists schm_digital.dgtl_login_diario_unicos_pwa_aux;


create table schm_digital.dgtl_login_diario_total_pwa_aux as 
select 
year as año,
month as mes,
created_at_utc_cl as  fecha, 
count( case when device in ('Mobile','Desktop','App') then  session_rut end) as  cantidad_login,
count( case when device in ('App') then  session_rut end) as  cantidad_login_app,
count( case when device in ('Mobile','Desktop') then  session_rut end) as  cantidad_login_hb
from br_dm_prod_bigdata_pwa_db.login
where year=v_año and month = v_mes
group by year,month,created_at_utc_cl;

delete from schm_digital.dgtl_login_diario_total_pwa
where año=v_año and mes = v_mes;

insert into schm_digital.dgtl_login_diario_total_pwa
select * from  schm_digital.dgtl_login_diario_total_pwa_aux;


create table schm_digital.dgtl_login_mensual_total_pwa_aux as 
select
year as año,
month as mes,
periodo, 
count( case when device in ('Mobile','Desktop','App') then  session_rut end) as  cantidad_login,
count( case when device in ('App') then  session_rut end) as  cantidad_login_app,
count( case when device in ('Mobile','Desktop') then  session_rut end) as  cantidad_login_hb
from br_dm_prod_bigdata_pwa_db.login
where year=v_año and month = v_mes
group by year,month,periodo;

delete from schm_digital.dgtl_login_mensual_total_pwa
where año=v_año and mes = v_mes;

insert into schm_digital.dgtl_login_mensual_total_pwa
select * from  schm_digital.dgtl_login_mensual_total_pwa_aux;


create table schm_digital.dgtl_login_diario_unicos_pwa_aux as 
select 
year as año,
month as mes,
created_at_utc_cl as  fecha, 
count(distinct case when device in ('Mobile','Desktop','App') then  session_rut end) as  cantidad_login,
count(distinct case when device in ('App') then  session_rut end) as  cantidad_login_app,
count(distinct case when device in ('Mobile','Desktop') then  session_rut end) as  cantidad_login_hb
from br_dm_prod_bigdata_pwa_db.login
where year=v_año and month = v_mes
group by year,month,created_at_utc_cl;

delete from schm_digital.dgtl_login_diario_unicos_pwa
where año=v_año and mes = v_mes;

insert into schm_digital.dgtl_login_diario_unicos_pwa
select * from  schm_digital.dgtl_login_diario_unicos_pwa_aux;




  END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_dgtl_logueos_internet(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
	
BEGIN


	DROP TABLE IF EXISTS schm_workspace.dgtl_logeo_int_fisa;
	DROP TABLE IF EXISTS schm_workspace.dgtl_pwa_login;
	DROP TABLE IF EXISTS schm_workspace.dgtl_logueos_internet;
	DROP TABLE IF EXISTS schm_workspace.dgtl_logeo_int;
    DROP TABLE IF EXISTS schm_workspace.dgtl_logueos_internet_total;


	CREATE TABLE schm_workspace.dgtl_logeo_int_fisa AS
	SELECT
	    rut_enlog_coc_nom_usr AS rut
	    , dv_enlog_coc_nom_usr AS rut_dv
	    , enlog_fch_crc AS fecha_logueo
	    ,enlog_fch_crc_hora as hora_logueo
	    , CASE
	        WHEN enlog_coc_cnl = '85' THEN 'APP'
	        WHEN rut_enlog_coc_nom_usr IS NOT NULL AND enlog_gls_stc_err_k IS NULL AND enlog_nom_url like ('%login.handler%') THEN 'HB'
	    END AS tipo_logueo
	    , DATE_PART(day, enlog_fch_crc) AS dia
	    , DATE_PART(month, enlog_fch_crc) AS mes
	    , DATE_PART(year, enlog_fch_crc) AS anio
	FROM br_dm_prod_bigdata_camreport_db.hbpri_log_ent_log
	WHERE schm_artifacts.f_period(enlog_fch_crc::DATE) = v_periodo 
		AND ( enlog_coc_cnl = '85'
	    OR  ( rut_enlog_coc_nom_usr IS NOT NULL
	    AND enlog_gls_stc_err_k IS NULL
	    AND enlog_nom_url LIKE ('%login.handler%')));


	CREATE TABLE schm_workspace.dgtl_pwa_login AS
	SELECT 
		DISTINCT 
	    L.session_rut AS rut
	    ,L.created_at_utc_cl AS fecha
	    ,L.created_at_utc_cl_hora as hora
	    , L."year" 
	    , L."month" 
	    , CASE
	        WHEN UPPER(L.device) LIKE '%APP%' THEN 'APP'
	        WHEN L.device IS NULL THEN 'APP'
	        ELSE L.device
	    END AS device
	    , v_periodo AS periodo
	FROM br_dm_prod_bigdata_pwa_db.login L
	WHERE L.created_at_utc_cl BETWEEN v_fecha_inicio AND v_fecha_fin;
	

	CREATE TABLE schm_workspace.dgtl_logueos_internet AS
	SELECT
	    T1.rut AS rut
	    , fecha_logueo AS fecha
	    , fecha_logueo
	    , 'APP' AS tipo_logueo
	    , 'APP_1' AS dispositivo
	    , v_periodo AS periodo
	FROM schm_workspace.dgtl_logeo_int_fisa T1
	LEFT JOIN schm_workspace.dgtl_pwa_login T2
		ON T1.rut = T2.rut
		AND T1.fecha_logueo::date = T2.fecha::date
	WHERE T1.tipo_logueo = 'APP'
		AND T2.rut IS NULL
	UNION
	SELECT
	    rut
	    , fecha AS fecha
	    , fecha AS fecha_logueo
	    , CASE
	        WHEN UPPER(device) LIKE '%APP%' THEN 'APP'
	        ELSE 'HB'
	    END AS tipo_logueo
	    , UPPER(device) AS dispositivo
		, v_periodo AS periodo
	FROM schm_workspace.dgtl_pwa_login;


	DELETE FROM schm_data_analytics.dgtl_logueos_internet
    WHERE periodo = v_periodo;


	INSERT INTO schm_data_analytics.dgtl_logueos_internet(
		rut
		, fecha
		, fecha_logueo
		, tipo_logueo
		, dispositivo
		, periodo)
		SELECT
			rut
			, fecha::date AS fecha
			, fecha_logueo::date AS fecha_logueo
			, tipo_logueo
			, dispositivo
			, periodo
	FROM schm_workspace.dgtl_logueos_internet;


	CREATE TABLE schm_workspace.dgtl_logueos_internet_total AS
	SELECT
	    T1.rut AS rut
	    , fecha_logueo AS fecha
	    , fecha_logueo
	    ,T1.hora_logueo as hora
	    , tipo_logueo AS tipo_logueo
	    , case when tipo_logueo = 'APP' then 'APP_1'
	    else 'HB_1' end AS dispositivo
	    , v_periodo AS periodo
	FROM schm_workspace.dgtl_logeo_int_fisa T1
	LEFT JOIN schm_workspace.dgtl_pwa_login T2
		ON T1.rut = T2.rut
		AND T1.fecha_logueo::date = T2.fecha::date
		and T1.hora_logueo=T2.hora
	WHERE 
	T2.rut IS null and t2.fecha is null and t2.hora is null
	UNION
	SELECT
	    rut
	    , fecha AS fecha
	    , fecha AS fecha_logueo
	    ,hora
	    , CASE
	        WHEN UPPER(device) LIKE '%APP%' THEN 'APP'
	        ELSE 'HB'
	    END AS tipo_logueo
	    , UPPER(device) AS dispositivo
		, v_periodo AS periodo
	FROM schm_workspace.dgtl_pwa_login;

    
	DELETE FROM schm_data_analytics.dgtl_logueos_internet_total
    WHERE periodo = v_periodo;


	INSERT INTO schm_data_analytics.dgtl_logueos_internet_total(
		rut
		, fecha
		, fecha_logueo
		,hora
		, tipo_logueo
		, dispositivo
		, periodo)
		SELECT
			rut
			, fecha::date AS fecha
			, fecha_logueo::date AS fecha_logueo
			,hora
			, tipo_logueo
			, dispositivo
			, periodo
	FROM schm_workspace.dgtl_logueos_internet_total;


	DROP TABLE IF EXISTS schm_workspace.dgtl_logeo_int_fisa;
	DROP TABLE IF EXISTS schm_workspace.dgtl_pwa_login;
	DROP TABLE IF EXISTS schm_workspace.dgtl_logueos_internet;
	DROP TABLE IF EXISTS schm_workspace.dgtl_logeo_int;
	DROP TABLE IF EXISTS schm_workspace.dgtl_logueos_internet_total;


END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_dgtl_mc_chek_tableau()
	LANGUAGE plpgsql
AS $$
	


BEGIN

    DROP TABLE IF EXISTS schm_workspace.cuentas_trxs_paso;
    DROP TABLE IF EXISTS schm_workspace.cuentas_trxs;
    DROP TABLE IF EXISTS schm_workspace.cuentas;

    CREATE TABLE schm_workspace.cuentas_trxs_paso AS
    SELECT
        CAST(A2.pemid_gls_nro_dct_ide_k AS INT) AS rut
        ,A.codent
        ,A.centalta
        ,A.cuenta
        ,A1.producto
        ,A.codpais
        ,A.localidad
        ,A.fectrn
        ,A.hortrn
        ,CAST(REPLACE(A.fectrn, '-', '') AS INT) AS cod_fecha --aaaammdd casteado a int
        ,A.codact
        ,A.codcom
        ,A.codcom AS codigo_comercio_ant
        ,A.nomcom
        ,SUM(A.imptrn) AS venta_tarjeta
        ,A.tipfran
        ,A.totcuotas
        ,A.porint
        ,A.tipofac
        ,A.impcca
        ,A.clamoncca
        ,A.impdiv
        ,A.indcruce
        ,SUBSTRING(A.modentdat, 1, 2) AS ind_online
        ,A.numaut
        ,A3.desact AS rubro
        ,A.codrespu
    FROM br_dm_prod_bigdata_reporitf_db.mpdt004 A
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 A1
        ON A.codent = a1.codent
        AND A.centalta = A1.centalta
        AND A.cuenta = A1.cuenta
    INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide A2
        ON A1.identcli = A2.pemid_nro_inn_ide
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt039 A3
        ON A.codact = A3.codact
    WHERE A1.producto = 12
    AND A.tipfran <> 1004
    AND SUBSTRING(A.pan, 1, 6) = '525384'
    GROUP BY
        A.codent
        ,A.centalta
        ,A.cuenta
        ,A.codpais
        ,A.localidad
        ,A.fectrn
        ,A.hortrn
        ,A.codact
        ,A.codcom
        ,A.nomcom
        ,A.tipfran
        ,A.totcuotas
        ,A.porint
        ,A.tipofac
        ,A.impcca
        ,A.clamoncca
        ,A.impdiv
        ,SUBSTRING(A.modentdat, 1, 2)
        ,A.numaut
        ,CAST(A2.pemid_gls_nro_dct_ide_k AS INT)
        ,A3.desact
        ,A1.producto
        ,A.indcruce
        ,A.codrespu
        ;


    CREATE TABLE schm_workspace.cuentas_trxs AS
    SELECT
        A.*
        ,B.rubros_spos
    FROM schm_workspace.cuentas_trxs_paso AS A
    LEFT JOIN (select distinct cod_act,rubro_gestion_spos AS rubros_spos from schm_data_analytics.spos_tabla_arbol) AS B
        ON A.codact = B.cod_act
        ;




    CREATE TABLE schm_workspace.cuentas AS
    SELECT
        CAST(B.pemid_gls_nro_dct_ide_k AS INT) AS rut
        ,A.codent
        ,A.centalta
        ,A.cuenta
        ,A.fecalta AS fecalta_ctto
        ,A.fecbaja AS fecbaja_ctto
        ,CAST(REPLACE(A.fecalta, '-', '') AS INT) fecha_alta
        ,A.producto
        ,A.subprodu
        ,A.conprod
    FROM br_dm_prod_bigdata_reporitf_db.mpdt007 A
    INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide B
        ON A.identcli = B.pemid_nro_inn_ide
    WHERE A.producto = '12'
    ;


    DELETE FROM schm_data_analytics.dgtl_cuentas_trxs;


    INSERT INTO schm_data_analytics.dgtl_cuentas_trxs(
        rut
        ,codent
        ,centalta
        ,cuenta
        ,producto
        ,codpais
        ,localidad
        ,fectrn
        ,hortrn
        ,cod_fecha
        ,codact
        ,codcom
        ,codigo_comercio_ant
        ,nomcom
        ,venta_tarjeta
        ,tipfran
        ,totcuotas
        ,porint
        ,tipofac
        ,impcca
        ,clamoncca
        ,impdiv
        ,indcruce
        ,ind_online
        ,numaut
        ,rubro
        ,codrespu
        ,rubros_spos
        )
        SELECT
            rut
            ,codent
            ,centalta
            ,cuenta
            ,producto
            ,codpais
            ,localidad
            ,fectrn
            ,hortrn
            ,cod_fecha
            ,codact
            ,codcom
            ,codigo_comercio_ant
            ,nomcom
            ,venta_tarjeta
            ,tipfran
            ,totcuotas
            ,porint
            ,tipofac
            ,impcca
            ,clamoncca
            ,impdiv
            ,indcruce
            ,ind_online
            ,numaut
            ,rubro
            ,codrespu
            ,rubros_spos
        FROM schm_workspace.cuentas_trxs;

    DELETE FROM schm_data_analytics.dgtl_cuentas;

    INSERT INTO schm_data_analytics.dgtl_cuentas(
        rut
        ,codent
        ,centalta
        ,cuenta
        ,fecalta_ctto
        ,fecha_alta
        ,producto
        ,subprodu
        ,conprod
        )
        SELECT
            rut
            ,codent
            ,centalta
            ,cuenta
            ,fecalta_ctto
            ,fecha_alta
            ,producto
            ,subprodu
            ,conprod
        FROM schm_workspace.cuentas;

    DROP TABLE IF EXISTS schm_workspace.cuentas_trxs_paso;
    DROP TABLE IF EXISTS schm_workspace.cuentas_trxs;
    DROP TABLE IF EXISTS schm_workspace.cuentas;

    /*  ===========================================================================================================
        === Control de versiones visual ===
        2023-10-30 -- v02 -- Rodrigo Gonzalez   --  Se agrega "IF EXISTS" al drop inicial por errores.
        2023-00-00 -- v01 -- Rodrigo Gonzalez   --  Versión original.

        === Información adicional:
        Proceso que ...
        ===========================================================================================================
    */

END;







$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_dgtl_pagos_digitales(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
BEGIN


	DELETE FROM schm_data_analytics.dgtl_pagos_digitales
	WHERE periodo = v_periodo;


	INSERT INTO schm_data_analytics.dgtl_pagos_digitales
	SELECT
		tipofac
		, codcom
		, comercio
		, rut
		, codent
		, centalta
		, cuenta
		, fecha
		, sucursal
		, caja
		, monto
		, nomcomred
		, CASE
			WHEN codcom = '000000000009818' THEN 'KIPHU'
			WHEN sucursal = 39 THEN 'HB_SERV'
			WHEN codcom = '000000000007453' AND sucursal = 51 THEN 'SERVIPAG_internet'
			WHEN codcom = '000000000009727' THEN 'SANTANDER'
			WHEN codcom = '000000000009774' THEN 'CHILEEXPRESS'
			WHEN codcom = '000000000007704' THEN 'HB_APP_OTRO'
			WHEN codcom = '000000000009819' THEN 'CAJA_VECINA'
			WHEN codcom = '000000000009820' THEN 'UNIRED'
			WHEN sucursal < 100 AND caja <= 200 AND codcom in ('000000000000001','000000000000029')  AND sucursal NOT IN (1, 39, 63, 51) THEN 'TIENDA'
			WHEN sucursal = 63 THEN 'BANCO'
			WHEN nomcomred= 'Servipag' THEN 'SERV_fisico'
			WHEN sucursal IN (42, 401, 403, 450) THEN 'OTROS_PRESENCIALES'
			WHEN sucursal = 51 AND caja <= 200 AND codcom in ('000000000000001','000000000000029') THEN 'TIENDA'
			WHEN comercio IN (9, 7) AND sucursal NOT IN (39, 51, 63)
			THEN 'OTROS_PRESENCIALES'
			WHEN sucursal = 51 AND comercio IN (7, 9) THEN 'OTROS_PRESENCIALES'
			ELSE  'CCSS'
		END AS tipo
		,v_periodo AS periodo
	FROM (
		SELECT
			B.rut
			, A.codent
			, A.centalta
			, A.cuenta
			, A.tipofac
			, A.codcom
			, CASE
				WHEN regexp_replace(A.codcom,'([^0-9])','') SIMILAR TO '[0-9]+(.[0-9][0-9])?' THEN regexp_replace(A.codcom,'([^0-9])','')::BIGINT
				ELSE 0
			END AS comercio
			, CASE
				WHEN regexp_replace(SUBSTRING(A.sucursal, 1, 4),'([^0-9])','') SIMILAR TO '[0-9]+(.[0-9][0-9])?' THEN regexp_replace(SUBSTRING(A.sucursal, 1, 4),'([^0-9])','')::INTEGER
				ELSE 0
			END AS sucursal
		    ,CASE
				WHEN regexp_replace(SUBSTRING(A.sucursal, 5, 4),'([^0-9])','') SIMILAR TO '[0-9]+(.[0-9][0-9])?' THEN regexp_replace(SUBSTRING(A.sucursal, 5, 4),'([^0-9])','')::INTEGER
				ELSE 0
			END AS caja
			, A.fecfac AS fecha
			, A.impfac AS monto
			, A.nomcomred
		FROM br_dm_prod_bigdata_reporitf_db.mpdt012 A
		INNER JOIN (
			SELECT
				T1.codent
				, T1.centalta
				, T1.cuenta
				, T2.pemid_gls_nro_dct_ide_k AS rut
			FROM br_dm_prod_bigdata_reporitf_db.mpdt007 T1
			INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide T2
				ON (CAST(T1.identcli AS INT) = T2.pemid_nro_inn_ide)) B
		ON A.codent = B.codent
		AND A.centalta = B.centalta
		AND A.cuenta = B.cuenta
	WHERE A.fecfac BETWEEN v_fecha_inicio AND v_fecha_fin
	AND A.tipofac IN (1, 41, 42, 43, 52, 53, 54, 68, 91, 97, 99, 208, 411, 415, 1495, 4000)
	AND A.linea = '0000') A;


END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_dgtl_ppff_leads_ref(v_periodo int4, v_fecha date)
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN 


DROP TABLE IF EXISTS schm_workspace.leads_ref_1;
DROP TABLE IF EXISTS schm_workspace.leads_ref_2;
DROP TABLE IF EXISTS schm_workspace.leads_ref_3;
DROP TABLE IF EXISTS schm_workspace.leads_ref_4;
DROP TABLE IF EXISTS schm_workspace.leads_ref_5;
DROP TABLE IF EXISTS schm_workspace.leads_ref_6;
DROP TABLE IF EXISTS schm_workspace.leads_ref_7;
DROP TABLE IF EXISTS schm_workspace.leads_ref_8;
DROP TABLE IF EXISTS schm_workspace.leads_ref_9;
DROP TABLE IF EXISTS schm_workspace.leads_ref_10;
DROP TABLE IF EXISTS schm_workspace.base_saldo_itf_leads_ref;
DROP TABLE IF EXISTS schm_workspace.leads_ref_salida;

CREATE TABLE schm_workspace.leads_ref_1 as
SELECT 
t2.session_rut AS rut, 
t1."TOKEN",
max(t2.created_at_utc_cl) as fecha,
MAX(t1.renegotiation_amount) AS monto_renegociacion, 
MAX(t1.number_of_installments) AS cuotas 
FROM br_dm_prod_bigdata_pwa_db.sim_ref t1
INNER JOIN br_dm_prod_bigdata_pwa_db.login t2
on(t1."TOKEN" = t2."TOKEN")
WHERE t2.created_at_utc_cl >= dateadd(day,-7,v_fecha)::date 
GROUP BY t2.session_rut, t1."token" 
;


CREATE TABLE schm_workspace.leads_ref_2 AS
select *
from (SELECT t1.*,
case when t2.token is not null then 1 else 0 end as curse_ref
FROM schm_workspace.leads_ref_1 t1
LEFT JOIN br_dm_prod_bigdata_pwa_db.voucher_ref t2
ON (t1.token=t2.TOKEN))
where curse_ref=0;


CREATE TABLE schm_workspace.leads_ref_3 AS 
SELECT DISTINCT t1.rut, 
MAX(t1.Cuotas) AS Numero_Cuotas, 
MAX(t1.monto_renegociacion) AS Monto_Simulado, 
MAX(t1.Fecha) AS FechaSimulacion
FROM schm_workspace.leads_ref_2 t1
WHERE t1.rut is not null
GROUP BY t1.rut;


CREATE TABLE schm_workspace.leads_ref_4 AS 
SELECT  
t1.Rut, 
t1.Numero_Cuotas, 
t1.Monto_Simulado, 
t1.FechaSimulacion, 
t2.NOMBRES, 
t2.PATERNO, 
t2.MATERNO, 
t3.TELEFONO AS CELULAR
FROM schm_workspace.leads_ref_3 t1
LEFT JOIN schm_data_analytics.ctbl_base_nombres t2 ON (t1.rut = t2.rut)
LEFT JOIN (select * from schm_data_analytics.ctbl_fonos_movil_final where periodo=v_periodo) t3 ON (t1.rut = t3.clirut);



CREATE TABLE schm_workspace.leads_ref_5 AS 
select *
from(
SELECT t1.Rut,
t1.Numero_Cuotas, 
t1.Monto_Simulado, 
t1.FechaSimulacion, 
t1.NOMBRES, 
t1.PATERNO, 
t1.MATERNO, 
t1.CELULAR, 
case when t2.rut is not null then 1 else 0 end as oferta_ref,
t2.saldo_total as deuda_total
FROM schm_workspace.leads_ref_4 t1
JOIN schm_productos_financieros.ppff_ref_fin t2 /* Ajustar tabla definitiva*/
ON (t1.Rut = t2.rut)
where periodo = v_periodo)
where oferta_ref=1;



CREATE TABLE schm_workspace.leads_ref_6 AS 
SELECT t1.*
FROM schm_workspace.leads_ref_5 t1
LEFT JOIN (select distinct rut 
from schm_data_analytics.ppff_trx_refinanciamiento
where periodo = v_periodo) t2 
ON (t1.Rut = t2.RUT) 
WHERE t2.RUT is null ;


CREATE TABLE schm_workspace.leads_ref_7 AS 
SELECT t1.CODENT, 
t1.CENTALTA, 
t1.CUENTA, 
t1.FECALTA, 
t1.FECULTCAR, 
t1.IDENTCLI, 
t1.FECBAJA, 
t1.MOTBAJA, 
t1.IDENTCLI as ID, 
t1.PRODUCTO, 
t1.SUBPRODU
FROM br_dm_prod_bigdata_reporitf_db.mpdt007 AS t1 
;

CREATE TABLE schm_workspace.leads_ref_8 AS 
SELECT A.*, 
B.PEMID_GLS_NRO_DCT_IDE_K AS RUT, 
B.PEMID_DVR_NRO_DCT_IDE AS DV,
B.PEMID_GLS_NRO_DCT_IDE_K as RUT1
FROM schm_workspace.leads_ref_7 AS A 
JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide AS B 
ON (A.ID = B.PEMID_NRO_INN_IDE);

     
CREATE TABLE schm_workspace.base_saldo_itf_leads_ref AS 
SELECT 
substring(t1.EVAAM_NRO_CTT, 9, 12 )AS CUENTA,
substring(t1.EVAAM_NRO_CTT, 5, 4 )AS CENTALTA,
t1.EVAAM_SLD_TTL,
t1.EVAAM_DIA_MOR,
t1.EVAAM_CIF_ID,
t1.EVAAM_FCH_PRO,
t1.EVAAM_NRO_CTT
FROM br_dm_prod_bigdata_reporitf_db.sfries_alt_mor AS t1 
WHERE t1.EVAAM_FCH_PRO >= (select max(EVAAM_FCH_PRO) from br_dm_prod_bigdata_reporitf_db.sfries_alt_mor where EVAAM_FCH_PRO<= v_fecha)
and t1.EVAAM_SLD_TTL >= 500000 AND t1.EVAAM_DIA_MOR <= 30
;

CREATE TABLE schm_workspace.leads_ref_9 AS 
SELECT t1.EVAAM_CIF_ID, 
t1.EVAAM_NRO_CTT, 
t1.EVAAM_FCH_PRO, 
t1.CUENTA, 
t1.CENTALTA, 
t1.EVAAM_SLD_TTL, 
t1.EVAAM_DIA_MOR, 
t2.RUT1 AS RUT
FROM schm_workspace.base_saldo_itf_leads_ref t1
LEFT JOIN schm_workspace.leads_ref_8 t2
ON (t1.CENTALTA = t2.CENTALTA) 
AND (t1.CUENTA = t2.CUENTA) 
AND (t1.EVAAM_CIF_ID = t2.ID)
;


CREATE TABLE schm_workspace.leads_ref_10 AS 
SELECT t1.Rut,
t1.Numero_Cuotas, 
t1.Monto_Simulado, 
t1.FechaSimulacion,  
t1.NOMBRES, 
t1.PATERNO, 
t1.MATERNO, 
t1.CELULAR, 
t2.EVAAM_SLD_TTL AS SALDO_ACTUAL, 
t2.EVAAM_DIA_MOR
FROM schm_workspace.leads_ref_6 t1
JOIN schm_workspace.leads_ref_9 t2 
ON (t1.Rut = t2.RUT);


CREATE TABLE schm_workspace.leads_ref_salida AS 
 SELECT t1.Rut,
t1.Numero_Cuotas, 
t1.Monto_Simulado, 
t1.FechaSimulacion,   
t1.NOMBRES, 
t1.PATERNO, 
t1.MATERNO, 
t1.CELULAR, 
t1.SALDO_ACTUAL AS SALDO, 
t1.EVAAM_DIA_MOR AS DIAS_MORA
FROM schm_workspace.leads_ref_10 t1;


EXECUTE 'UNLOAD(' || quote_literal('select * from schm_workspace.leads_ref_salida') || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/dgtl/banco/dgtl_leads_ppff_ref/' || 'leads_ref'  || '_' || concat(concat(substring( cast(v_fecha as varchar),1,4),substring( cast(v_fecha  as varchar),6,2)),substring( cast(v_fecha as varchar),9,2))  || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
RETURN;


END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_dgtl_reporte_rpass_nuevo(v_año int4, v_mes int4, v_periodo int4, v_fecha date)
	LANGUAGE plpgsql
AS $$
	
	
	
	
	
	
	
	
	
begin
	

drop table if exists schm_workspace.dgtl_param_mes_act_rpass;
drop table if exists schm_workspace.enrolamiento_total;
drop table if exists schm_workspace.enrolamiento_mensual;
drop table if exists schm_workspace.enrolamiento_diario;
drop table if exists schm_workspace.primer_enrolamiento;
drop table if exists schm_workspace.intentos_enrolamiento_rpass;
drop table if exists schm_workspace.cons_enrolamiento_mensual;
drop table if exists schm_workspace.cons_enrolamiento_indicadores;
drop table if exists schm_workspace.login_rpass_ult_3m_diario;
drop table if exists schm_workspace.login_rpass_ult_3m_cierre;
drop table if exists schm_workspace.enrol_rpass_sin_mes_actual;
drop table if exists schm_workspace.enrol_rpass_mes_actual;
drop table if exists schm_workspace.enrolamiento_acumulado_mes_actual;
drop table if exists schm_workspace.enrolamiento_acumulado_salida_mensual;
drop table if exists schm_workspace.ult_enrolamiento_rpass;



create table schm_workspace.dgtl_param_mes_act_rpass as 
select v_año as año,
v_mes as mes,
v_periodo as periodo,
v_fecha as fecha;

/*
create table schm_workspace.dgtl_param_mes_act_rpass as 
select 2024 as año,
02 as mes,
202402 as periodo,
current_date as fecha;
*/



create table schm_workspace.enrolamiento_total as
select identificador_usuario as rut, 
inicio_enrolamiento as fecha,
hora_inicio as hora,
nombre_paso,
estado_paso,
tipo_enrolamiento,
identificador_enrolamiento as id_enrolamiento,
schm_artifacts.f_period(inicio_enrolamiento) as periodo
from br_dm_prod_bigdata_idnow_db.reporte_enrolamientos
where tipo_enrolamiento in ('RIPLEY CHILE PIN','RIPLEY RE ENROLL PIN');


create table schm_workspace.enrolamiento_mensual as
select 
periodo,
tipo_enrolamiento,
nombre_paso,
count(distinct id_enrolamiento) as cantidad_intentos,
count(distinct case when estado_paso='A' then id_enrolamiento end) as cantidad_intentos_aprob,
count(distinct case when estado_paso not in ('A') then id_enrolamiento end) as cantidad_intentos_recha,
count(distinct rut) as cantidad_unicos,
count(distinct case when estado_paso='A' then rut end) as cantidad_intentos_aprob_unicos,
count(distinct case when estado_paso not in ('A') then rut end) as cantidad_intentos_recha_unicos
from schm_workspace.enrolamiento_total
where periodo = (select periodo from schm_workspace.dgtl_param_mes_act_rpass)
group by periodo,tipo_enrolamiento,nombre_paso
union 
select 
periodo,
'Total' as tipo_enrolamiento,
nombre_paso,
count(distinct id_enrolamiento) as cantidad_intentos,
count(distinct case when estado_paso='A' then id_enrolamiento end) as cantidad_intentos_aprob,
count(distinct case when estado_paso not in ('A') then id_enrolamiento end) as cantidad_intentos_recha,
count(distinct rut) as cantidad_unicos,
count(distinct case when estado_paso='A' then rut end) as cantidad_intentos_aprob_unicos,
count(distinct case when estado_paso not in ('A') then rut end) as cantidad_intentos_recha_unicos
from schm_workspace.enrolamiento_total
where periodo = (select periodo from schm_workspace.dgtl_param_mes_act_rpass)
group by periodo,nombre_paso
;


create table schm_workspace.enrolamiento_diario as
select 
fecha,
tipo_enrolamiento,
nombre_paso,
count(distinct id_enrolamiento) as cantidad_intentos,
count(distinct case when estado_paso='A' then id_enrolamiento end) as cantidad_intentos_aprob,
count(distinct case when estado_paso not in ('A') then id_enrolamiento end) as cantidad_intentos_recha,
count(distinct rut) as cantidad_unicos,
count(distinct case when estado_paso='A' then rut end) as cantidad_intentos_aprob_unicos,
count(distinct case when estado_paso not in ('A') then rut end) as cantidad_intentos_recha_unicos
from schm_workspace.enrolamiento_total
where periodo = (select periodo from schm_workspace.dgtl_param_mes_act_rpass)
group by 1,2,3
union 
select 
fecha,
'Total' as tipo_enrolamiento,
nombre_paso,
count(distinct id_enrolamiento) as cantidad_intentos,
count(distinct case when estado_paso='A' then id_enrolamiento end) as cantidad_intentos_aprob,
count(distinct case when estado_paso not in ('A') then id_enrolamiento end) as cantidad_intentos_recha,
count(distinct rut) as cantidad_unicos,
count(distinct case when estado_paso='A' then rut end) as cantidad_intentos_aprob_unicos,
count(distinct case when estado_paso not in ('A') then rut end) as cantidad_intentos_recha_unicos
from schm_workspace.enrolamiento_total
where periodo = (select periodo from schm_workspace.dgtl_param_mes_act_rpass)
group by fecha,nombre_paso;


create table schm_workspace.primer_enrolamiento as
select a.rut,
a.fecha,
a.tipo_enrolamiento,
b.fecha_primer_enrolamiento,
case when b.rut is not null and a.fecha=b.fecha_primer_enrolamiento then 1 else 0 end as primer_enrolamiento
from (select 
rut,fecha,tipo_enrolamiento
from schm_workspace.enrolamiento_total
where nombre_paso='FINALIZAR ENROLAMIENTO' and estado_paso ='A'
and periodo = (select periodo from schm_workspace.dgtl_param_mes_act_rpass)) as a
left join (select 
rut,min(fecha) as fecha_primer_enrolamiento
from schm_workspace.enrolamiento_total
where nombre_paso='FINALIZAR ENROLAMIENTO' and estado_paso ='A'
and periodo <= (select periodo from schm_workspace.dgtl_param_mes_act_rpass)
group by rut) as b 
on a.rut=b.rut 
union 
select a.rut,
a.fecha,
a.tipo_enrolamiento,
b.fecha_primer_enrolamiento,
case when b.rut is not null and a.fecha=b.fecha_primer_enrolamiento then 1 else 0 end as primer_enrolamiento
from (select 
rut,max(fecha) as fecha,'Total' as tipo_enrolamiento
from schm_workspace.enrolamiento_total
where nombre_paso='FINALIZAR ENROLAMIENTO' and estado_paso ='A'
and periodo = (select periodo from schm_workspace.dgtl_param_mes_act_rpass)
group by rut) as a
left join (select 
rut,min(fecha) as fecha_primer_enrolamiento
from schm_workspace.enrolamiento_total
where nombre_paso='FINALIZAR ENROLAMIENTO' and estado_paso ='A'
and periodo <= (select periodo from schm_workspace.dgtl_param_mes_act_rpass)
group by rut) as b 
on a.rut=b.rut 

;

create table schm_workspace.ult_enrolamiento_rpass as 
select a.*,
case when b.rut is not null and a.fecha=b.fecha  then 1 else 0 end as ult_enrolamiento
from (select 
rut,fecha,hora,id_enrolamiento
from schm_workspace.enrolamiento_total
where nombre_paso='FINALIZAR ENROLAMIENTO' and estado_paso ='A' 
and periodo <= (select periodo from schm_workspace.dgtl_param_mes_act_rpass)
) as a 
left join (
(select 
rut,max(fecha) as fecha
from schm_workspace.enrolamiento_total
where nombre_paso='FINALIZAR ENROLAMIENTO' and estado_paso ='A' 
and periodo = (select periodo from schm_workspace.dgtl_param_mes_act_rpass)
group by rut)
)as b 
on a.rut= b.rut;




create table schm_workspace.intentos_enrolamiento_rpass as
select schm_artifacts.f_period(fecha) as periodo,
tipo_enrolamiento,
count(distinct case when cantidad_intento = 1 then rut end ) as _1_intento,
count(distinct case when cantidad_intento = 2 then rut end ) as _2_intento,
count(distinct case when cantidad_intento = 3 then rut end ) as _3_intento,
count(distinct case when cantidad_intento >= 4 then rut end ) as _4_intento_o_mas
from (
select rut,
tipo_enrolamiento,
fecha,
count(distinct case when intento_valido=1 then id_enrolamiento end) as cantidad_intento
from (select a.*,
b.fecha as fecha_intento,
case when b.fecha <= a.fecha and b.fecha>= dateadd(day,-30,a.fecha)
and a.tipo_enrolamiento = b.tipo_enrolamiento then 1 else 0 end as intento_valido,
dateadd(day,-30,a.fecha) as  fecha_validacion,
b.id_enrolamiento
from (select 
rut,tipo_enrolamiento,max(fecha) as fecha
from schm_workspace.enrolamiento_total
where nombre_paso='FINALIZAR ENROLAMIENTO' and estado_paso ='A' 
and periodo = (select periodo from schm_workspace.dgtl_param_mes_act_rpass)
group by rut,tipo_enrolamiento) as a 
left join (
select 
rut,fecha,tipo_enrolamiento,id_enrolamiento,count(*) as  cantidad
from schm_workspace.enrolamiento_total
where nombre_paso='INICIO ENROLAMIENTO' 
and periodo <= (select periodo from schm_workspace.dgtl_param_mes_act_rpass)
and id_enrolamiento not in ( select id_enrolamiento from schm_workspace.ult_enrolamiento_rpass where ult_enrolamiento=0)
group by rut,fecha,tipo_enrolamiento,id_enrolamiento
) as b 
on a.rut=b.rut)
group by rut,tipo_enrolamiento,fecha)
group by schm_artifacts.f_period(fecha),tipo_enrolamiento

union 

select schm_artifacts.f_period(fecha) as periodo,
tipo_enrolamiento,
count(distinct case when cantidad_intento = 1 then rut end ) as _1_intento,
count(distinct case when cantidad_intento = 2 then rut end ) as _2_intento,
count(distinct case when cantidad_intento = 3 then rut end ) as _3_intento,
count(distinct case when cantidad_intento >= 4 then rut end ) as _4_intento_o_mas
from (
select rut,
tipo_enrolamiento,
fecha,
count(distinct case when intento_valido=1 then id_enrolamiento end) as cantidad_intento
from (select a.*,
b.fecha as fecha_intento,
case when b.fecha <= a.fecha and b.fecha>= dateadd(day,-30,a.fecha)
and a.tipo_enrolamiento = b.tipo_enrolamiento then 1 else 0 end as intento_valido,
dateadd(day,-30,a.fecha) as  fecha_validacion,
b.id_enrolamiento
from (select 
rut,'Total' as tipo_enrolamiento,max(fecha) as fecha
from schm_workspace.enrolamiento_total
where nombre_paso='FINALIZAR ENROLAMIENTO' and estado_paso ='A' 
and periodo = (select periodo from schm_workspace.dgtl_param_mes_act_rpass)
group by rut) as a 
left join (
select 
rut,fecha,'Total' as tipo_enrolamiento,id_enrolamiento,count(*) as  cantidad
from schm_workspace.enrolamiento_total
where nombre_paso='INICIO ENROLAMIENTO' 
and periodo <= (select periodo from schm_workspace.dgtl_param_mes_act_rpass)
and id_enrolamiento not in ( select id_enrolamiento from schm_workspace.ult_enrolamiento_rpass where ult_enrolamiento=0)
group by rut,fecha,id_enrolamiento
) as b 
on a.rut=b.rut)
group by rut,tipo_enrolamiento,fecha)
group by schm_artifacts.f_period(fecha),tipo_enrolamiento
;





create table schm_workspace.cons_enrolamiento_mensual as 
select periodo,'mensual' as tipo,last_day( (select fecha from  schm_workspace.dgtl_param_mes_act_rpass)) as fecha,tipo_enrolamiento,nombre_paso,cantidad_intentos,cantidad_intentos_aprob,cantidad_intentos_recha,cantidad_unicos,cantidad_intentos_aprob_unicos,cantidad_intentos_recha_unicos
from schm_workspace.enrolamiento_mensual
union 
select schm_artifacts.f_period(fecha) as periodo,'diario' as tipo,fecha,tipo_enrolamiento,nombre_paso,cantidad_intentos,cantidad_intentos_aprob,cantidad_intentos_recha,cantidad_unicos,cantidad_intentos_aprob_unicos,cantidad_intentos_recha_unicos
from schm_workspace.enrolamiento_diario;


delete from schm_digital.consolidado_enrolamiento_rpass_mensual 
where periodo = (select periodo from schm_workspace.dgtl_param_mes_act_rpass);

insert into schm_digital.consolidado_enrolamiento_rpass_mensual 
select * from schm_workspace.cons_enrolamiento_mensual; 


create table schm_workspace.cons_enrolamiento_indicadores as 
select 
a.periodo,
a.tipo_enrolamiento,
a.primer_enrolamiento_intentos,
a.no_primer_enrolamiento_intentos,
a.primer_enrolamiento_unicos,
a.no_primer_enrolamiento_unicos,
b._1_intento,
b._2_intento,
b._3_intento,
b._4_intento_o_mas
from (select schm_artifacts.f_period(fecha) as periodo,
tipo_enrolamiento,
count( case when primer_enrolamiento = 1 then rut end) as primer_enrolamiento_intentos,
count( case when primer_enrolamiento = 0 then rut end) as no_primer_enrolamiento_intentos,
count(distinct case when primer_enrolamiento = 1 then rut end) as primer_enrolamiento_unicos,
count(distinct case when primer_enrolamiento = 0 then rut end) as no_primer_enrolamiento_unicos
from schm_workspace.primer_enrolamiento
group by schm_artifacts.f_period(fecha),tipo_enrolamiento) as a 
join schm_workspace.intentos_enrolamiento_rpass as b 
on a.periodo=b.periodo and a.tipo_enrolamiento = b.tipo_enrolamiento;

delete from schm_digital.consolidado_enrolamiento_rpass_indicadores 
where periodo = (select periodo from schm_workspace.dgtl_param_mes_act_rpass);

insert into schm_digital.consolidado_enrolamiento_rpass_indicadores 
select * from schm_workspace.cons_enrolamiento_indicadores; 



delete from schm_digital.consolidado_enrolamiento_rpass_indicadores_totales
where periodo = (select periodo from schm_workspace.dgtl_param_mes_act_rpass);



create table schm_workspace.login_rpass_ult_3m_diario as
select distinct rut 
from schm_data_analytics.dgtl_logueos_internet
where periodo < (select periodo from schm_workspace.dgtl_param_mes_act_rpass)
and periodo >= schm_artifacts.f_period_add_n_months((select periodo from schm_workspace.dgtl_param_mes_act_rpass), -3);

create table schm_workspace.login_rpass_ult_3m_cierre as
select distinct rut 
from schm_data_analytics.dgtl_logueos_internet
where periodo <= (select periodo from schm_workspace.dgtl_param_mes_act_rpass)
and periodo >= schm_artifacts.f_period_add_n_months((select periodo from schm_workspace.dgtl_param_mes_act_rpass), -2);


create table schm_workspace.enrol_rpass_sin_mes_actual as
select 
distinct rut
from schm_workspace.enrolamiento_total
where nombre_paso='FINALIZAR ENROLAMIENTO' and estado_paso ='A' 
and periodo < (select periodo from schm_workspace.dgtl_param_mes_act_rpass);

create table schm_workspace.enrol_rpass_mes_actual as
select 
distinct rut,fecha
from schm_workspace.enrolamiento_total
where nombre_paso='FINALIZAR ENROLAMIENTO' and estado_paso ='A' 
and periodo = (select periodo from schm_workspace.dgtl_param_mes_act_rpass);


create table schm_workspace.enrolamiento_acumulado_mes_actual as
select rut,max(fecha) as fecha_max
from schm_workspace.enrolamiento_total
where nombre_paso='FINALIZAR ENROLAMIENTO' and estado_paso ='A'
and periodo <= (select periodo from schm_workspace.dgtl_param_mes_act_rpass)
group by rut;

create table schm_workspace.enrolamiento_acumulado_salida_mensual as
select (select periodo from schm_workspace.dgtl_param_mes_act_rpass) as periodo,
'mensual' as tipo,
last_day((select fecha from schm_workspace.dgtl_param_mes_act_rpass)) as fecha,
date_part('day',last_day((select fecha from schm_workspace.dgtl_param_mes_act_rpass))) as dia,
count(distinct rut) as enrolados_unicos
from schm_workspace.enrolamiento_acumulado_mes_actual;



delete from schm_digital.consolidado_enrolamiento_acumulado_rpass
where periodo = (select periodo from schm_workspace.dgtl_param_mes_act_rpass); 

insert into schm_digital.consolidado_enrolamiento_acumulado_rpass
select * from schm_workspace.enrolamiento_acumulado_salida_mensual; 



DECLARE 
	cnt INTEGER :=1;
BEGIN
  WHILE cnt <=  (select datepart('day',fecha) from  schm_workspace.dgtl_param_mes_act_rpass)
  LOOP 
	  
create table schm_workspace.indicadores_rpass_diario as 
select 
periodo,
cnt as dia,
'diario' as tipo,
count(distinct rut) as cantidad_login,
count(distinct case when tenencia_rpass=1 then rut end) as tenencia_rpass,
count(distinct case when tenencia_rpass=1 then rut end):: float/
count(distinct rut) as porc_tenencia_rpass
from (
select (select periodo from schm_workspace.dgtl_param_mes_act_rpass) as periodo,
a.rut,
case when b.rut is not null then 1 else 0 end as tenencia_rpass
from schm_workspace.login_rpass_ult_3m_diario as a 
left join (
select distinct rut
from (select 
distinct substring(trim(rut),1,length(rut)-1) as rut
from schm_workspace.enrol_rpass_mes_actual
where datepart('day',fecha) <= cnt
union 
select 
distinct substring(trim(rut),1,length(rut)-1) as rut
from schm_workspace.enrol_rpass_sin_mes_actual
)
) as b 
on a.rut::varchar = b.rut)
group by periodo
union
select 
periodo,
cnt as dia,
'cierre' as tipo,
count(distinct rut) as cantidad_login,
count(distinct case when tenencia_rpass=1 then rut end) as tenencia_rpass,
count(distinct case when tenencia_rpass=1 then rut end):: float/
count(distinct rut) as porc_tenencia_rpass
from (
select (select periodo from schm_workspace.dgtl_param_mes_act_rpass) as periodo,
a.rut,
case when b.rut is not null then 1 else 0 end as tenencia_rpass
from schm_workspace.login_rpass_ult_3m_cierre as a 
left join (
select distinct rut
from (select 
distinct substring(trim(rut),1,length(rut)-1) as rut
from schm_workspace.enrol_rpass_mes_actual
where datepart('day',fecha) <= cnt
union 
select 
distinct substring(trim(rut),1,length(rut)-1) as rut
from schm_workspace.enrol_rpass_sin_mes_actual
)
) as b 
on a.rut::varchar = b.rut)
group by periodo
;


insert into schm_digital.consolidado_enrolamiento_rpass_indicadores_totales
select * from  schm_workspace.indicadores_rpass_diario;
	 
drop table schm_workspace.indicadores_rpass_diario;


create table schm_workspace.enrolamiento_acumulado_diario as 
select (select periodo from schm_workspace.dgtl_param_mes_act_rpass) as periodo,
'diario' as tipo,
max(fecha_max) as fecha,
cnt as dia,
count(distinct rut) as enrolados_unicos
from (
select rut,fecha_max
from schm_workspace.enrolamiento_acumulado_mes_actual
where schm_artifacts.f_period(fecha_max)<(select periodo from schm_workspace.dgtl_param_mes_act_rpass)
union 
select rut,fecha_max
from schm_workspace.enrolamiento_acumulado_mes_actual
where schm_artifacts.f_period(fecha_max)=(select periodo from schm_workspace.dgtl_param_mes_act_rpass)
and datepart('day',fecha_max) <= cnt); 

insert into schm_digital.consolidado_enrolamiento_acumulado_rpass
select * from  schm_workspace.enrolamiento_acumulado_diario
where dia < (select date_part('day',fecha) from schm_workspace.dgtl_param_mes_act_rpass); 

drop table schm_workspace.enrolamiento_acumulado_diario;

	  
RAISE INFO 'Count: %', cnt;
cnt = cnt + 1;
END LOOP;
 RAISE INFO 'Loop Statement Executed!!!';
END;


  END;






$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_earq_drop_tb_schm_workspace()
	LANGUAGE plpgsql
AS $$
	
	
	

DECLARE 
    tables RECORD;

BEGIN

FOR tables in   SELECT tablename 
                FROM pg_tables 
                WHERE  schemaname = 'schm_workspace'  
                order by tablename
        LOOP
        EXECUTE 'drop table if exists schm_workspace.' || quote_ident(tables.tablename) ;
        END LOOP;
RETURN;

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_earq_tablas_compartidas_bi_riesgo_analytics(v_nombre_tabla varchar, v_origen varchar, v_destino varchar, v_fecha varchar, v_correos_notificados varchar)
	LANGUAGE plpgsql
AS $$
	
		
	BEGIN
		
		INSERT INTO schm_data_analytics.earq_tablas_compartidas_bi_riesgo_analytics
		        (id,nombre_tabla,origen,destino,fecha,correos_notificados)
		    values 
		        ((select max(id)+1 from schm_data_analytics.earq_tablas_compartidas_bi_riesgo_analytics)
		        ,v_nombre_tabla,v_origen,v_destino,v_fecha,v_correos_notificados)
		    ;
	
	END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_eval_day_leads(v_day_of_the_week int4)
	LANGUAGE plpgsql
AS $$
	
	
	
	BEGIN
		DROP TABLE IF EXISTS schm_workspace.simulaciones_now;
	
	    --  Un ejemplo que verifica si la fecha actual corresponde al día 15 o al día 30
	   IF v_day_of_the_week=1 THEN
	
	CREATE TABLE schm_workspace.simulaciones_now AS 
		SELECT 
		v_day_of_the_week AS day_of_the_week,
		rut,
		producto,
		simulation_amount AS monto,
		total AS costo_final,
		special_installment AS cuotas,
		number_of_installments AS nro_cuotas,
		insurance_amount AS monto_seguro,
		fecha,
		EXTRACT(DAY FROM fecha) AS dia,
		hora::time,
		(dateadd(DAY,-3,current_date)) AS fecha_r,
		dispositivo
	FROM
		schm_workspace.union_simulations
	WHERE
		to_timestamp((fecha||' '||hora::time), 'YYYY-MM-DD HH:MI:SS') >=
		((dateadd(DAY,-3,current_date))::date||' '||'19:00:00')::timestamp
		AND rut IN (SELECT rut FROM schm_workspace.oferta_sav_aprobado)
		
	UNION ALL
		
		SELECT
		v_day_of_the_week AS day_of_the_week,
		rut,
		'CONSUMO' AS producto,
		simulation_amount AS monto,
		total_amount AS costo_final,
		installment_amount AS cuotas,
		installments_number AS nro_cuotas,
		life_insurance_amount AS monto_seguro,
		created_at_utc_cl AS fecha,
		EXTRACT(DAY	FROM created_at_utc_cl) AS dia,
		created_at_utc_cl_hora::time AS hora,
		(dateadd(DAY,-3,current_date)) AS fecha_r,
		'' AS dispositivo
	FROM
		schm_workspace.simulation_personal_loan
	WHERE
		to_timestamp((created_at_utc_cl||' '||created_at_utc_cl_hora::time), 'YYYY-MM-DD HH:MI:SS') >=
		((dateadd(DAY,-3,current_date))::date||' '||'19:00:00')::timestamp
		AND rut IN (SELECT rut FROM schm_workspace.of_aprobada_con_cup)
		;
	
	ELSE 
	
	CREATE TABLE schm_workspace.simulaciones_now AS 
		SELECT
		v_day_of_the_week AS day_of_the_week,
		rut,
		producto AS producto,
		simulation_amount AS monto,
		total AS costo_final,
		special_installment AS cuotas,
		number_of_installments AS nro_cuotas,
		insurance_amount AS monto_seguro, 
		fecha,
		EXTRACT(DAY FROM fecha) AS dia,
		hora::time,
		dateadd(DAY,-1,current_date) AS fecha_r,
		dispositivo
	FROM schm_workspace.union_simulations
	WHERE 
		to_timestamp((fecha||' '||hora::time), 'YYYY-MM-DD HH:MI:SS') >=
		((dateadd(DAY,-1,current_date))::date||' '||'18:00:00')::timestamp
		AND rut IN (SELECT rut FROM schm_workspace.oferta_sav_aprobado)	
		
	UNION ALL
		
		SELECT  
		v_day_of_the_week AS day_of_the_week,
		rut, 
		'CONSUMO' AS producto, 
		simulation_amount AS monto, 
		total_amount AS costo_final, 
		installment_amount AS cuotas, 
		installments_number AS nro_cuotas,
		life_insurance_amount AS monto_seguro, 
		created_at_utc_cl AS fecha,
		EXTRACT(DAY FROM created_at_utc_cl) AS dia,
		created_at_utc_cl_hora::time as hora,
		(dateadd(day,-1,current_date)) AS fecha_r,
		'' AS dispositivo
	FROM schm_workspace.simulation_personal_loan
	WHERE 
		to_timestamp((created_at_utc_cl||' '||created_at_utc_cl_hora::time), 'YYYY-MM-DD HH:MI:SS') >=
		((dateadd(DAY,-1,current_date))::date||' '||'18:00:00')::timestamp
		AND rut IN (SELECT RUT FROM schm_workspace.of_aprobada_con_cup)
		;
	    
	    END IF;
	END;
	

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_cargos_pat(indice int4)
	LANGUAGE plpgsql
AS $$
	 

BEGIN 
	
	DROP TABLE IF EXISTS  schm_workspace.mdpg_cargos_pat2;
	DROP TABLE IF EXISTS  schm_workspace.mdpg_periodos;
	DROP TABLE IF EXISTS  schm_workspace.mdpg_cargos_pat_final;	
	DROP TABLE IF EXISTS  schm_workspace.mdpg_fecha_proceso;
	DROP TABLE IF EXISTS  schm_workspace.mdpg_apilado3;
	DROP TABLE IF EXISTS  schm_workspace.mdpg_cargos_pat1;
		
		
	create table schm_workspace.mdpg_periodos(
	nombre VARCHAR(64), value INT );


	INSERT INTO schm_workspace.mdpg_periodos (nombre,value)
	VALUES('PERIODO',DATE_PART(YEAR,dateadd(MONTH,-indice, CURRENT_DATE))*100+DATE_PART(MONTH,DATEADD(MONTH,-indice, current_date)));


	--####################################################################################################
	--Me traigo todos los cargos PAT
	--####################################################################################################


	CREATE TABLE schm_workspace.mdpg_cargos_pat2 AS 
	SELECT 
		fecha 
		,periodo 
		,codigo_comercio 
		,rut 
		,venta_tarjeta  
		,pan 
		,codact 
		,codent 
		,centalta 
		,cuenta 
		,tipo_tarjeta 
		,tgdtg_gls_coo_uno 
		,tgdtg_gls_lar_uno
		,tgdtg_fch_acl_reg 
		,tgmdo_gls_dom
		,(rut || ' ' || (TO_CHAR(fecha, 'YYYYMMDD')::INTEGER) || ' ' || venta_tarjeta) AS llave
	FROM schm_data_analytics.spos_aut
	WHERE presencial = 'PAT' AND periodo=(SELECT value FROM schm_workspace.mdpg_periodos WHERE nombre='PERIODO')
	ORDER BY llave 
	;

	CREATE TABLE schm_workspace.mdpg_cargos_pat_final  AS 
	SELECT 
		periodo 
		,fecha as fectrn 
		,tipo_tarjeta AS tipo_tr	
		,codigo_comercio
		,tgdtg_gls_coo_uno 
		,tgdtg_gls_lar_uno 
		,tgmdo_gls_dom
		,COUNT(DISTINCT rut) AS clientes
		,count(rut) AS trx
		,sum(venta_tarjeta) AS monto
	FROM schm_workspace.mdpg_cargos_pat2 
	GROUP BY 
		periodo 
		,fecha
		,tipo_tarjeta	
		,codigo_comercio
		,tgdtg_gls_coo_uno 
		,tgdtg_gls_lar_uno 
		,tgmdo_gls_dom
	;


	--#########################################################
	--BORRADO DEL PERIODO
	--#########################################################	

	DELETE 
	FROM schm_data_analytics.mdpg_cargos_pat 
	WHERE periodo=(SELECT value FROM schm_workspace.mdpg_periodos WHERE nombre='PERIODO')
	;

	DELETE 
	FROM schm_data_analytics.mdpg_cargos_pat_tam 
	WHERE periodo=(SELECT value FROM schm_workspace.mdpg_periodos WHERE nombre='PERIODO')
	;

	--#########################################################
	--INSERTAR PERIODO
	--#########################################################	

	INSERT INTO schm_data_analytics.mdpg_cargos_pat 
	SELECT 
		*
	FROM schm_workspace.mdpg_cargos_pat_final
	;

	--#########################################################
	--PARTE PROCESO DE RESUMEN CARGOS
	--#########################################################	

	CREATE TABLE schm_workspace.mdpg_apilado3 AS
	SELECT 
		fectrn
		,(TO_CHAR(fectrn, 'YYYYMM')::INTEGER) AS periodo 
		,clientes 
		,tipo_tr 
		,monto 
		,trx
		,codigo_comercio 
		,tgdtg_gls_lar_uno 
		,tgmdo_gls_dom
	FROM  schm_data_analytics.mdpg_cargos_pat 
	WHERE periodo=(SELECT value FROM schm_workspace.mdpg_periodos WHERE nombre='PERIODO')
	;


	INSERT INTO schm_data_analytics.mdpg_cargos_pat_tam 
	SELECT 
		*
	FROM schm_workspace.mdpg_apilado3
	;

	CREATE TABLE schm_workspace.mdpg_cargos_pat1 AS
	SELECT
		CURRENT_DATE AS fecha_proceso
		,*
	FROM schm_data_analytics.mdpg_cargos_pat_tam 
	;



	DROP TABLE IF EXISTS schm_data_analytics.mdpg_resumen_cargos
	;

	CREATE TABLE schm_data_analytics.mdpg_resumen_cargos AS 
	SELECT 
		fecha_proceso 
		,tgdtg_gls_lar_uno 
		,tgmdo_gls_dom 
		,tipo_tr 
		,periodo 
		,SUM(monto) AS monto 
		,COUNT(clientes) AS clientes 
		,COUNT(trx) AS trx
	FROM schm_workspace.mdpg_cargos_pat1 
	GROUP BY 
		fecha_proceso
		,tgdtg_gls_lar_uno
		,tgmdo_gls_dom
		,tipo_tr
		,periodo
	ORDER BY tgmdo_gls_dom ASC	
	 ;

	--#########################################################
	--borrado de tablas 
	--#########################################################	

	DROP TABLE IF EXISTS  schm_workspace.mdpg_cargos_pat2;
	DROP TABLE IF EXISTS  schm_workspace.mdpg_periodos;
	DROP TABLE IF EXISTS  schm_workspace.mdpg_cargos_pat_final;
	DROP TABLE IF EXISTS  schm_workspace.mdpg_fecha_proceso;
	DROP TABLE IF EXISTS  schm_workspace.mdpg_apilado3;
	DROP TABLE IF EXISTS  schm_workspace.mdpg_cargos_pat1;
	
	--CALL schm_artifacts.sp_mdpg_cargos_pat(0);
	--CALL schm_artifacts.sp_mdpg_cargos_pat(1);
	--CALL schm_artifacts.sp_mdpg_cargos_pat(2);
	--CALL schm_artifacts.sp_mdpg_cargos_pat(3);
	--CALL schm_artifacts.sp_mdpg_cargos_pat(4);

	DROP TABLE IF EXISTS  schm_workspace.mdpg_ultimo_bic;
	DROP TABLE IF EXISTS  schm_data_analytics.mdpg_suscripciones_dia;

	CREATE TABLE schm_workspace.mdpg_ultimo_bic as
	SELECT 
		t1.id_archivo
		,t1.fecha_ingreso
		,t1.fecha_alta
		,(RIGHT(t1.fecha_ingreso,2)) :: int AS dia_alta
		,t1.fecha_baja	
		,t1.rut	
		,t1.tipo_registro_bic	
		,t1.codigo_comercio
		,t1.id_servicio_bic
		,concat(t1.codigo_comercio, t1.id_servicio_bic) AS llave	
		,t1.rut_bic
		,t1.numero_pan
		,t1.monte_tope
		,t1.monto_aporte_pesos
		,t1.tipo_instruccion
		,t1.origen
		,t1.canal_origen
		,t1.fecha_modificacion
		,t1.fecha_invalidez	
		,t1.usuario
		,t1.estado_ic
		,t1.nombre_fantasia
		,t1.rubro
		,t1.origen_movimiento
		,t1.canal_movimiento
		,t1.fecha_primer_cargo
		,t1.fecha_ultimo_cargo
		,t1.rut_vendedor
		,t1.usuario_alta
		,t1.fch_crc_aud
		,t1.periodo
		,CASE WHEN t1.fecha_baja IS NULL THEN 'VIGENTE' ELSE 'DE BAJA' END AS marca_estado_suscrip	
		,CASE WHEN t1.origen='01' AND t1.canal_origen='1' THEN 'BANCO'
			  WHEN t1.origen='01' AND t1.canal_origen='5' THEN 'HB'
			  WHEN t1.origen='01' AND t1.canal_origen='3' THEN 'ASISTENTES'	
			  ELSE 'COMERCIO' END AS canal_suscripcion
	FROM br_dm_prod_bigdata_reporitf_db.sfpaci_bic AS t1
	INNER JOIN (
		SELECT 
			id_archivo
			,nombre
			,fch_crc_aud
		FROM br_dm_prod_bigdata_reporitf_db.sfpaci_archivo
		WHERE nombre LIKE '%BIC%' AND fch_crc_aud=(SELECT max(fch_crc_aud) FROM br_dm_prod_bigdata_reporitf_db.sfpaci_archivo WHERE nombre LIKE '%BIC%')
			   ) AS t2 ON (t1.id_archivo=t2.id_archivo)
	;

	CREATE TABLE schm_data_analytics.mdpg_suscripciones_dia AS
	SELECT 
		CURRENT_DATE AS fecha_proceso
		,t1.dia_alta
		,t1.fecha_ingreso
		,t1.periodo
		,t1.origen
		,t1.canal_origen	
		,marca_estado_suscrip	
		,canal_suscripcion
		,count(t1.llave) AS suscripciones
		,count(DISTINCT t1.rut) AS clientes
		,t1.rubro ::int
		,codigo_rubo_tbk
		,CASE WHEN t2.rubo_description IS NOT NULL THEN t2.rubo_description ELSE 'Otros' END AS rubo_description
		,CASE WHEN t2.macro_des IS NOT NULL THEN t2.macro_des ELSE 'Otros' END AS macro_des
		,t3.nombre_completo
		,t3.usuario AS usuario2
		,t3.tienda	
	FROM schm_workspace.mdpg_ultimo_bic AS t1
	LEFT JOIN schm_facturacion.rubros_bic_pat AS t2 ON (t1.rubro ::int =t2.codigo_rubo_tbk)
	LEFT JOIN schm_facturacion.seguimiento_pat_pass AS t3 ON (t1.rut_vendedor=t3.rut)
	GROUP BY
		fecha_proceso
		,t1.dia_alta
		,t1.fecha_ingreso
		,t1.periodo
		,t1.origen
		,t1.canal_origen	
		,marca_estado_suscrip
		,canal_suscripcion
		,t1.rubro
		,codigo_rubo_tbk
		,rubo_description
		,macro_des
		,t3.nombre_completo
		,usuario2
		,t3.tienda	
	;

	     /*  ===========================================================================================================
         === Control de versiones visual ===
         2024-01-03 -- v00 -- Pedro Muñoz         -- Versión original refactorizada.

         === Información adicional:
         Proceso que..
         ===========================================================================================================
     */
  
END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_cascada_medio_pago()
	LANGUAGE plpgsql
AS $$
	 
	
BEGIN	
	
	
	DROP TABLE IF EXISTS  schm_workspace.iplaza_periodos;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_uso_tr;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_uso_tr2;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_uso_lugar;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_uso_lugar2;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_uso_lugar3;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_uso_lugar4;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_cuentas;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_panes;	
	DROP TABLE IF EXISTS  schm_workspace.iplaza_panes2;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_panes3;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_max_fecha;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_bloqueos;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_mora;
	DROP TABLE IF EXISTS  schm_workspace.cascada_semanas_tda;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_bloqueos2;


	CREATE TABLE schm_workspace.iplaza_uso_tr AS
	SELECT 
		DISTINCT rut_cpd as rut
		,SUM(CASE WHEN marca_tipo_tr ='TR' THEN 1 END) AS compra_tr
		,SUM(CASE WHEN marca_tipo_tr <>'TR' THEN 1 END) AS compra_omp
		,SUM(CASE WHEN sucursal=39 THEN 1 ELSE 0 END) AS si_com
		,SUM(CASE WHEN sucursal<>39 THEN 1 ELSE 0 END) AS si_tda
	FROM br_dm_prod_bigdata_sasdata_db.sas_tnda_uso_tr_marca
	WHERE fecha BETWEEN (to_char(GETDATE() - INTERVAL '7 days', 'YYYYMMDD')::int) AND (to_char(GETDATE() - INTERVAL '1 days', 'YYYYMMDD')::int) 
		AND rut_cpd BETWEEN 1000000 AND 49000000
	AND tipo_compra='COMPRA'
	GROUP BY 
		rut_cpd
	UNION 
	SELECT
		DISTINCT rut_cpd as rut
		,SUM(CASE WHEN marca_tipo_tr ='TR' THEN 1 END) AS compra_tr
		,SUM(CASE WHEN marca_tipo_tr <>'TR' THEN 1 END) AS compra_omp
		,SUM(CASE WHEN sucursal = 39 THEN 1 ELSE 0 END) AS si_com
		,SUM(CASE WHEN sucursal <> 39 THEN 1 ELSE 0 END) AS si_tda
	FROM br_dm_prod_bigdata_sasdata_db.sas_tnda_uso_tr_marca
	WHERE fecha BETWEEN (to_char(GETDATE() - INTERVAL '7 days', 'YYYYMMDD') ::int) AND (to_char(GETDATE() - INTERVAL '1 days', 'YYYYMMDD')::int) 
		AND rut_cpd BETWEEN 1000000 AND 49000000
	AND tipo_compra='COMPRA'
	GROUP BY 
		rut_cpd
	;


	CREATE TABLE schm_workspace.iplaza_uso_tr2 AS
	SELECT
		rut
		,COALESCE(SUM(compra_tr),0) AS compra_tr
		,COALESCE(SUM(compra_omp),0) AS compra_omp
		,CASE 
			WHEN SUM(compra_tr) > 0 THEN 1 
			ELSE 0 
		END AS si_tr
		,CASE 
			WHEN SUM(compra_omp)>0 THEN 1 
			ELSE 0 
		END AS si_omp
		,CASE 
			WHEN si_com > 0 THEN 1 
			ELSE 0 
		END AS si_com
		,CASE 
			WHEN si_tda > 0 THEN 1 
			ELSE 0 
		END AS si_tda
	FROM schm_workspace.iplaza_uso_tr
	GROUP BY
		rut
		,si_com
		,si_tda
	;

  

	CREATE TABLE schm_workspace.iplaza_uso_lugar AS
	SELECT 
		*,
		'TOTAL' AS lugar
	FROM
		schm_workspace.iplaza_uso_tr2

	UNION ALL

	SELECT 
		*,
		'tda' AS lugar
	FROM
		schm_workspace.iplaza_uso_tr2
	WHERE si_tda = 1

	UNION ALL

	SELECT 
		*,
		'COM' AS lugar
	FROM
		schm_workspace.iplaza_uso_tr2
	WHERE si_com = 1
	;


	CREATE TABLE schm_workspace.iplaza_uso_lugar2 AS
	SELECT DISTINCT 
		lugar
	FROM schm_workspace.iplaza_uso_lugar
	;


	CREATE TABLE schm_workspace.iplaza_USO_lugar3 AS
	SELECT
		*
		,(ROW_NUMBER() OVER (ORDER BY lugar)) AS ind
	FROM schm_workspace.iplaza_USO_lugar2
	;


	CREATE TABLE schm_workspace.iplaza_uso_lugar4 AS
	SELECT 
		T1.*,
		T2.ind
	FROM schm_workspace.iplaza_uso_lugar AS T1
	LEFT JOIN schm_workspace.iplaza_uso_lugar3 AS T2 
		ON T1.lugar = T2.lugar
	;


	CREATE TABLE schm_workspace.iplaza_cuentas  AS
	SELECT 
		B.pemid_gls_nro_dct_ide_k:: INT AS rut
		,A.codent
		,A.centalta
		,A.cuenta
		,A.fecalta AS fecalta_ctto
		,A.fecbaja AS fecbaja_ctto
		,A.producto
		,A.subprodu
		,A.conprod
		,A.identcli
	FROM br_dm_prod_bigdata_reporitf_db.mpdt007 a
	INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide B 
		ON A.identcli::INT = B.pemid_nro_inn_ide
	WHERE A.producto NOT IN ('08','12','13') AND (CAST(A.fecbaja AS VARCHAR(10)) = '0001-12-30' 
		OR A.fecbaja BETWEEN (TO_CHAR(GETDATE() - INTERVAL '1 days', 'YYYY-MM-DD')::DATE) AND (TO_CHAR(GETDATE() - INTERVAL '7 days', 'YYYY-MM-DD')::DATE)) 
		AND A.fecalta <= (TO_CHAR(GETDATE() - INTERVAL '7 days', 'YYYY-MM-DD')::DATE)
	;


	CREATE TABLE schm_workspace.iplaza_Panes AS 
	SELECT  
		B.pemid_gls_nro_dct_ide_k::INT AS rut,
		A.codent,
		A.centalta,
		A.cuenta,
		A.calpart,
		A.codent || A.centalta || A.cuenta AS ctto,
		C.fecalta AS fecalta_ctto,
		C.fecbaja AS fecbaja_ctto,
		G.numplastico,
		G.feccadtar,
		G.indulttar,
		G.numbencta,
		G.fecalta AS fecalta_tr,
		G.fecbaja AS fecbaja_tr,
		G.indsittar,
		g.codmar,
		g.indtipt,
		J.destipt AS tipo_tarjeta_rsat,
		H.dessittar,
		G.fecultblq,
		g.codblq,
		g.texblq,
		G.pan,
		SUBSTRING(G.pan,13,4) AS pan2, 
		A.codent || A.centalta || A.cuenta || SUBSTRING(G.pan,13,4) AS contrato_pan
	FROM br_dm_prod_bigdata_reporitf_db.mpdt013 A /*CONTRATO de Tarjeta*/
	INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 C /*CONTRATO*/
		ON A.codent = C.codent AND A.centalta = C.centalta AND A.cuenta = C.cuenta 
	INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide B 
		ON A.identcli::INT = B.pemid_nro_inn_ide   
	INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt009 G /*Tarjeta*/ 
		ON A.codent = G.codent 
		AND A.centalta = G.centalta 
		AND A.cuenta = G.cuenta 
		AND A.numbencta = G.numbencta
	INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt063 H 
		ON G.codent = H.codent AND G.indsittar = H.indsittar
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt060 I 
		ON G.codblq = I.codblq
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt026 J
		ON J.codmar = G.codmar 
		AND J.indtipt = G.indtipt
	WHERE C.producto NOT IN ('08','12','13') 
		AND G.indulttar='S' 
		AND CAST(G.fecbaja AS varchar(10)) = '0001-12-30' 
		AND A.calpart='TI' 
		AND G.indsittar=5
	;

	CREATE TABLE schm_workspace.iplaza_panes2 AS 
	SELECT 
		*
		,((SUBSTRING(fecalta_ctto,1,4)) || SUBSTRING(fecalta_ctto,6,2) || SUBSTRING(fecalta_ctto,9,2))::INT AS fecalta_ctto2
	FROM schm_workspace.iplaza_panes
	; 

	CREATE TABLE schm_workspace.iplaza_max_fecha AS 
	SELECT 
		rut,  
		MAX(fecalta_ctto2) AS fecalta_ctto2
	FROM schm_workspace.iplaza_panes2 
	GROUP BY 
		rut
	;

	CREATE TABLE schm_workspace.iplaza_PANES3 AS
	SELECT  
		T1.rut,  
		T1.fecalta_ctto2,
		T2.codent,
		T2.centalta,
		T2.cuenta,	
		T2.calpart,
		T2.ctto,
		T2.fecalta_ctto,
		T2.fecbaja_ctto,
		T2.feccadtar,
		T2.codblq
	FROM schm_workspace.iplaza_max_fecha AS T1
	LEFT JOIN schm_workspace.iplaza_panes2 AS T2 
		ON T1.rut = T2.rut 
		AND T1.fecalta_ctto2 = T2.fecalta_ctto2
	;


	CREATE TABLE schm_workspace.iplaza_bloqueos AS 
	SELECT 
		A.codent 
		,A.centalta 
		,A.cuenta 
		,A.codblq
		,B.desblq
		,B.desblqred
		,B.indaplemisor
		,B.contcur
	FROM br_dm_prod_bigdata_reporitf_db.mpdt178 A
	INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt060 B 
		ON A.codblq = B.codblq 
	INNER JOIN (
		SELECT 
			A.codent 
			,A.centalta 
			,A.cuenta 
			,MAX(B.contcur) AS max_fec
		FROM br_dm_prod_bigdata_reporitf_db.mpdt178 A
		INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt060 B 
			ON A.codblq = B.codblq
		WHERE A.linea = '0000'
		GROUP BY 
			A.codent 
			,A.centalta 
			,A.cuenta
		       ) C 
		ON (A.codent = C.codent 
			AND A.centalta = C.centalta 
			AND A.cuenta = C.cuenta 
			AND B.contcur = C.max_fec)
	WHERE A.linea = '0000'
	;


	CREATE TABLE schm_workspace.iplaza_bloqueos2 AS 
	SELECT DISTINCT
		codent 
		,centalta 
		,cuenta
		,(codent || centalta || cuenta) AS ctto
		,codblq 
		,desblq 
		,desblqred 
		,indaplemisor
	FROM schm_workspace.iplaza_bloqueos 
	;


	CREATE TABLE schm_workspace.iplaza_mora AS
	SELECT 
		B.evaam_nro_ctt,
		evaam_dia_mor
	FROM br_dm_prod_bigdata_reporitf_db.sfries_alt_mor B
	WHERE B.evaam_fch_pro = (TO_CHAR(GETDATE() - INTERVAL '2 days', 'YYYY-MM-DD')::DATE)
	;
	

	CALL schm_workspace.test_iplaza_cascada(1);
	CALL schm_workspace.test_iplaza_cascada(2);
	CALL schm_workspace.test_iplaza_cascada(3);
	

	DELETE 
	FROM schm_data_analytics.mdpg_cascada_sem_tda_save 
	WHERE fecha_inicio = (TO_CHAR(GETDATE() - INTERVAL '7 days', 'YYYYMMDD')::INT) AND fecha_fin = (to_char(GETDATE() - INTERVAL '1 days', 'YYYYMMDD') ::int) 
		AND marca_fecha = ((TO_CHAR(GETDATE() - INTERVAL '7 days', 'YYYYMMDD')::INT) || ' | | ' || (to_char(GETDATE() - INTERVAL '1 days', 'YYYYMMDD') ::int))
	;


	INSERT INTO schm_data_analytics.mdpg_cascada_sem_tda_save 
	SELECT 
		(TO_CHAR(GETDATE() - INTERVAL '7 days', 'YYYYMMDD')::INT) AS fecha_inicio
		,(TO_CHAR(GETDATE() - INTERVAL '1 days', 'YYYYMMDD')::INT) AS fecha_fin
		,(fecha_inicio || ' | | ' || fecha_fin) AS marca_fecha
		,*
	FROM schm_workspace.cascada_semanas_tda
	;


	DROP TABLE IF EXISTS  schm_workspace.iplaza_periodos;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_uso_tr;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_uso_tr2;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_uso_lugar;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_uso_lugar2;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_uso_lugar3;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_uso_lugar4;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_cuentas;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_panes;	
	DROP TABLE IF EXISTS  schm_workspace.iplaza_panes2;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_panes3;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_max_fecha;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_bloqueos;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_mora;
	DROP TABLE IF EXISTS  schm_workspace.cascada_semanas_tda;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_bloqueos2;


END; 

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_clave_coordenadas(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	

begin

--.. =========================================================================== --..
--.. DROP TABLE IF EXISTS */
    DROP TABLE IF EXISTS schm_workspace.mdpg_cards;
    DROP TABLE IF EXISTS schm_workspace.mdpg_cards_max_fecha;
    DROP TABLE IF EXISTS schm_workspace.mdpg_cards_rut_unico;
    DROP TABLE IF EXISTS schm_workspace.mdpg_clave_coordenadas;


--.. =========================================================================== --..
--.. Obtenemos solo los estados requeridos del origen
    CREATE TABLE schm_workspace.mdpg_cards AS
    SELECT
	     user_id_rut AS rut
	    ,serial_number
	    ,card_state
	    ,generate_date
	    ,generate_date_hora
	    ,periodo
    FROM br_dm_prod_bigdata_repitfh_db.cards
    WHERE card_state IN ('PENDING','CURRENT','HOLD_PENDING');


--.. =========================================================================== --..
--.. Fecha max o más reciente por rut registrado
    CREATE TABLE schm_workspace.mdpg_cards_max_fecha AS
    SELECT
	     rut
	    ,MAX(generate_date) AS max_fecha
    FROM schm_workspace.mdpg_cards
    GROUP BY rut
    ORDER BY rut;


--.. =========================================================================== --..
--.. Join entre todos y la fecha max
    CREATE TABLE schm_workspace.mdpg_cards_rut_unico AS
    SELECT
	     a.rut
	    ,a.serial_number
	    ,a.card_state
	    ,a.generate_date
	    ,a.generate_date_hora
	    ,a.periodo
    FROM schm_workspace.mdpg_cards AS a
    INNER JOIN schm_workspace.mdpg_cards_max_fecha AS b
    ON a.rut = b.rut AND a.generate_date = b.max_fecha
    ORDER BY rut;


--.. =========================================================================== --..
--.. Normalizar nombre de columnas para insertar en tabla final
   CREATE TABLE schm_workspace.mdpg_clave_coordenadas AS
    SELECT
	     rut
	    ,card_state AS estado
	    ,generate_date AS Fecha
	    ,v_periodo AS periodo
    FROM schm_workspace.mdpg_cards_rut_unico
    ORDER BY periodo, rut;


--.. =========================================================================== --..
--.. Eliminar periodo a procesar */
    DELETE FROM schm_data_analytics.mdpg_clave_coordenadas
    WHERE periodo = v_periodo;


--.. =========================================================================== --..
--.. Insertar lo nuevo para el periodo*/
    INSERT INTO schm_data_analytics.mdpg_clave_coordenadas
    SELECT
          rut
	    ,estado
	    ,fecha
	    ,periodo
    FROM schm_workspace.mdpg_clave_coordenadas;


--.. =========================================================================== --..
--.. DROP TABLE IF EXISTS */
    DROP TABLE IF EXISTS schm_workspace.mdpg_cards;
    DROP TABLE IF EXISTS schm_workspace.mdpg_cards_max_fecha;
    DROP TABLE IF EXISTS schm_workspace.mdpg_cards_rut_unico;
    DROP TABLE IF EXISTS schm_workspace.mdpg_clave_coordenadas;

   /*	===========================================================================================================
	=== Control de versiones visual ===
	2023-06-20	-- v02	--	David Vásquez	--	Se actualiza ya que el filtro periodo había quedado fijo.
	2023-06-16	-- v01	--	David Vásquez	--	Versión original validada en Redshift vs código SAS.

	=== Información adicional:
	Proceso que guarda una foto por periodo del registro de clave de coordenadas de nuestros clientes y su estado,
	ya sea estos PENDING, CURRENT o HOLD_PENDING.
	===========================================================================================================
    */

END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_clave_unica(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	

begin

--.. =========================================================================== --..
--.. DROP TABLE IF EXISTS */
    DROP TABLE IF EXISTS schm_workspace.mdpg_users;
    DROP TABLE IF EXISTS schm_workspace.mdpg_users_max_fecha;
    DROP TABLE IF EXISTS schm_workspace.mdpg_users_rut_unico;
    DROP TABLE IF EXISTS schm_workspace.mdpg_clave_unica;


--.. =========================================================================== --..
--.. Obtenemos solo los campos requeridos del origen
    CREATE TABLE schm_workspace.mdpg_users AS
    SELECT
	     user_id_rut AS rut
	    ,psswd_lastchngdate AS fecha
    FROM br_dm_prod_bigdata_repitfh_db.repitfh_users
    WHERE user_id_rut > 99999 
    AND user_id_rut < 99999999
    AND psswd_lastchngdate IS NOT null;


--.. =========================================================================== --..
--.. Fecha max o más reciente por rut registrado
    CREATE TABLE schm_workspace.mdpg_users_max_fecha AS
    SELECT
	     rut
	    ,MAX(fecha) AS max_fecha
    FROM schm_workspace.mdpg_users
    GROUP BY rut
    ORDER BY rut;


--.. =========================================================================== --..
--.. Join entre todos y la fecha max
    CREATE TABLE schm_workspace.mdpg_users_rut_unico AS
    SELECT
	     a.rut
	    ,a.fecha
    FROM schm_workspace.mdpg_users AS a
    INNER JOIN schm_workspace.mdpg_users_max_fecha AS b
    ON a.rut = b.rut AND a.fecha = b.max_fecha
    ORDER BY rut;


--.. =========================================================================== --..
--.. Normalizar nombre de columnas para insertar en tabla final
   CREATE TABLE schm_workspace.mdpg_clave_unica AS
    SELECT
	     rut
	    ,fecha
	    ,v_periodo AS periodo
    FROM schm_workspace.mdpg_users_rut_unico
    ORDER BY periodo, rut;


--.. =========================================================================== --..
--.. Eliminar periodo a procesar */
    DELETE FROM schm_data_analytics.mdpg_clave_unica
    WHERE periodo = v_periodo;


--.. =========================================================================== --..
--.. Insertar lo nuevo para el periodo*/
    INSERT INTO schm_data_analytics.mdpg_clave_unica
    SELECT
          rut
	    ,fecha
	    ,periodo
    FROM schm_workspace.mdpg_clave_unica;


--.. =========================================================================== --..
--.. DROP TABLE IF EXISTS */
    DROP TABLE IF EXISTS schm_workspace.mdpg_users;
    DROP TABLE IF EXISTS schm_workspace.mdpg_users_max_fecha;
    DROP TABLE IF EXISTS schm_workspace.mdpg_users_rut_unico;
    DROP TABLE IF EXISTS schm_workspace.mdpg_clave_unica;

   /*	===========================================================================================================
	=== Control de versiones visual ===
	2023-06-20	-- v01	--	David Vásquez	--	Versión original validada en Redshift vs código SAS.

	=== Información adicional:
	Proceso que guarda una foto por periodo del registro de clave unica de nuestros clientes.
	===========================================================================================================
    */

END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_cliente_unico_uso_corte(periodo_paso int4)
	LANGUAGE plpgsql
AS $$
	

DECLARE 
	contador INTEGER;

BEGIN 

	DROP TABLE IF EXISTS schm_workspace.Spos_unicos;
	DROP TABLE IF EXISTS schm_workspace.tda_unicos;
	DROP TABLE IF EXISTS schm_workspace.av_unicos;
	DROP TABLE IF EXISTS schm_workspace.sav_unicos;
	DROP TABLE IF EXISTS schm_workspace.DEBITO_UNICOS;
	DROP TABLE IF EXISTS schm_workspace.rutero_unico;
	DROP TABLE IF EXISTS schm_workspace.dimension_mes_CLIENTE_UNICO;
	DROP TABLE IF EXISTS schm_workspace.llenado_cliente_unico;
	DROP TABLE IF EXISTS schm_workspace.llenado_cliente_unico2;
	DROP TABLE IF EXISTS schm_workspace.combinatorias_uso_paso;


   

 ------- extracción de información para generar vista de clientes unicos 
   
CREATE TABLE schm_workspace.Spos_unicos AS 
SELECT 
'SPOS TC' AS tipo,
rut,
fecha,
sum(venta_tarjeta) AS monto 
FROM schm_data_analytics.spos_aut
WHERE periodo=periodo_paso AND centalta<>'0105'
GROUP BY 2,3
UNION ALL 
SELECT 
'SEG' AS tipo,
rut,
fecmov AS fecha,
sum(monto_recaudado) AS monto 
FROM schm_data_analytics.spos_trx_seguros
Where upper(TIPO_SEGURO)='SEGUROS OPEN MARKET'
and CODCONREC not in ('S201','S083','S170')
AND periodo=periodo_paso
GROUP BY 2,3
;


CREATE TABLE schm_workspace.tda_unicos AS 
SELECT 
'TDA TC' AS tipo,
rut,
fecha,
sum(capital) AS monto 
FROM schm_data_analytics.tnda_tda_itf
WHERE periodo=periodo_paso AND centalta<>'0105'
GROUP BY 2,3
;

CREATE TABLE schm_workspace.av_unicos AS 
SELECT 
'AV' AS tipo,
rut,
fecfac AS fecha,
sum(capital) AS monto 
FROM schm_data_analytics.ppff_trx_av
WHERE periodo=periodo_paso
GROUP BY 2,3
;

CREATE TABLE schm_workspace.sav_unicos AS 
SELECT 
'SAV' AS tipo,
rut,
fecfac AS fecha,
sum(capital) AS monto 
FROM schm_data_analytics.ppff_trx_sav
WHERE periodo=periodo_paso
GROUP BY 2,3
;

CREATE TABLE schm_workspace.DEBITO_UNICOS AS 
SELECT 
tipo_compra ||' '||'TD' AS tipo,
rut,
fecha,
sum(venta_tarjeta) AS monto
FROM schm_data_analytics.mpdg_movimientos_debito 
WHERE periodo=periodo_paso
GROUP BY 1,2,3
;


CREATE TABLE schm_workspace.rutero_unico AS
SELECT 
*
FROM schm_workspace.Spos_unicos
UNION ALL 
SELECT 
*
FROM schm_workspace.tda_unicos
UNION ALL 
SELECT 
*
FROM schm_workspace.av_unicos
UNION ALL 
SELECT 
*
FROM schm_workspace.sav_unicos
UNION ALL 
SELECT 
*
FROM schm_workspace.DEBITO_UNICOS
;

------- base fecha del periodo

CREATE TABLE schm_workspace.dimension_mes_CLIENTE_UNICO AS 
SELECT 
full_date AS fecha, 
month_day_number AS dia

FROM schm_planificacion_comercial.dim_dates
WHERE year_number*100+month_number=periodo_paso
;



CREATE TABLE schm_workspace.llenado_cliente_unico AS 
SELECT 
a.fecha,
a.dia,
b.tipo,
b.rut,
b.fecha AS fecha_movimiento,
b.monto
FROM schm_workspace.dimension_mes_CLIENTE_UNICO AS a 
LEFT JOIN schm_workspace.rutero_unico AS b
on(b.fecha<=a.fecha)
;


CREATE TABLE schm_workspace.llenado_cliente_unico2 AS 
SELECT 
fecha,
dia,
rut,
CASE WHEN sum(CASE WHEN tipo='SPOS TC' THEN monto ELSE 0 END )>0 THEN 1 ELSE 0 END  AS SPOS_TC,
CASE WHEN sum(CASE WHEN tipo='SEG' THEN monto ELSE 0 END )>0 THEN 1 ELSE 0 END  AS SEG,
CASE WHEN sum(CASE WHEN tipo='TDA TC' THEN monto ELSE 0 END )>0 THEN 1 ELSE 0 END  AS TNDA_TC,
CASE WHEN sum(CASE WHEN tipo='SAV' THEN monto ELSE 0 END )>0 THEN 1 ELSE 0 END  AS SAV,
CASE WHEN sum(CASE WHEN tipo='AV' THEN monto ELSE 0 END )>0 THEN 1 ELSE 0 END  AS AV,
CASE WHEN sum(CASE WHEN tipo='TNDA TD' THEN monto ELSE 0 END )>0 THEN 1 ELSE 0 END  AS TNDA_TD,
CASE WHEN sum(CASE WHEN tipo='SPOS TD' THEN monto ELSE 0 END )>0 THEN 1 ELSE 0 END  AS SPOS_TD
FROM schm_workspace.llenado_cliente_unico 
GROUP BY 1,2,3
;


CREATE TABLE schm_workspace.combinatorias_uso_paso AS 
SELECT 
dia,
count(CASE WHEN SPOS_TC+SEG>0 THEN rut end) AS TOTAL_spos_TC,
count(CASE WHEN TNDA_TC>0 THEN rut end) AS TOTAL_TNDA_TC,
count(CASE WHEN SPOS_TC+SEG>0 AND TNDA_TC=0 THEN rut end) AS SOLO_spos_TC,
count(CASE WHEN SPOS_TC+SEG=0 AND TNDA_TC>0 THEN rut end) AS SOLO_TNDA_TC,
count(CASE WHEN SPOS_TC+SEG>0 AND TNDA_TC>0 THEN rut end) AS SPOS_TNDA_TC,
count(CASE WHEN SAV+AV>0 THEN rut end) AS PPFF,
count(CASE WHEN TNDA_TD>0 THEN rut end) AS TOTAL_TNDA_TD,
count(CASE WHEN SPOS_TD>0 THEN rut end) AS TOTAL_SPOS_TD,
count(CASE WHEN TNDA_TC>0 OR TNDA_TD>0 THEN rut end) AS TOTAL_TNDA,
count(CASE WHEN SPOS_TC>0 OR SPOS_TD>0 THEN rut end) AS TOTAL_SPOS,
count(CASE WHEN spos_tc+seg>0 OR Tnda_tc>0 OR SAV+AV>0 THEN rut end) AS TOTAL_TC,
count(CASE WHEN SPOS_TD>0 OR TNDA_TD>0 THEN rut end) AS TOTAL_TD,
count(CASE WHEN spos_tc+seg>0 OR Tnda_tc>0 OR SAV+AV>0 OR SPOS_TD>0 OR TNDA_TD>0 THEN rut end) AS TOTAL
FROM schm_workspace.llenado_cliente_unico2
GROUP BY dia;

CREATE TABLE IF NOT EXISTS  schm_data_analytics.mdpg_cliente_unico_uso_corte
(fecha_actualizacion date,
tipo varchar,
periodo int,
dia int ,
TOTAL_spos_TC bigint,
TOTAL_TNDA_TC bigint,
SOLO_spos_TC bigint,
SOLO_TNDA_TC bigint,
SPOS_TNDA_TC bigint,
PPFF bigint,
TOTAL_TNDA_TD bigint,
TOTAL_SPOS_TD bigint,
TOTAL_TNDA bigint,
TOTAL_SPOS bigint,
TOTAL_TC bigint,
TOTAL_TD bigint,
TOTAL bigint
);


DELETE FROM schm_data_analytics.mdpg_cliente_unico_uso_corte
WHERE periodo=periodo_paso;

IF periodo_paso=date_part(MONTH,current_date)*100+date_part(day,current_date) THEN 

INSERT INTO schm_data_analytics.mdpg_cliente_unico_uso_corte
SELECT 
current_date AS fecha_actualizacion,
'DIARIO' AS tipo,
periodo_paso AS periodo,
*
FROM schm_workspace.combinatorias_uso_paso
WHERE to_date(periodo_paso*100+dia,'YYYYMMDD')<current_date
UNION 
SELECT 
current_date AS fecha_actualizacion,
'CIERRE' AS tipo,
periodo_paso AS periodo,
*
FROM schm_workspace.combinatorias_uso_paso
WHERE to_date(periodo_paso*100+dia,'YYYYMMDD')=dateadd('day',-1,current_date)
;

ELSE
	
	INSERT INTO schm_data_analytics.mdpg_cliente_unico_uso_corte
SELECT current_date AS fecha_actualizacion,
'DIARIO' AS tipo,
periodo_paso AS periodo,
*
FROM schm_workspace.combinatorias_uso_paso
UNION 
SELECT current_date AS fecha_actualizacion,
'CIERRE' AS tipo,
periodo_paso AS periodo,
*
FROM schm_workspace.combinatorias_uso_paso
WHERE to_date(periodo_paso*100+dia,'YYYYMMDD')=last_day(to_date(periodo_paso,'YYYYMM'))
;
	
END IF;


	DROP TABLE IF EXISTS schm_workspace.Spos_unicos;
	DROP TABLE IF EXISTS schm_workspace.tda_unicos;
	DROP TABLE IF EXISTS schm_workspace.av_unicos;
	DROP TABLE IF EXISTS schm_workspace.sav_unicos;
	DROP TABLE IF EXISTS schm_workspace.DEBITO_UNICOS;
	DROP TABLE IF EXISTS schm_workspace.rutero_unico;
	DROP TABLE IF EXISTS schm_workspace.dimension_mes_CLIENTE_UNICO;
	DROP TABLE IF EXISTS schm_workspace.llenado_cliente_unico;
	DROP TABLE IF EXISTS schm_workspace.llenado_cliente_unico2;
	DROP TABLE IF EXISTS schm_workspace.combinatorias_uso_paso;

    /*  ===========================================================================================================
         === Control de versiones visual ===
         2024-02-19 -- v01 -- Pedro Muñoz         -- Se modificó forma de conteo y se agregó débito.
         2024-01-18 -- v00 -- Pedro Muñoz         -- Versión original refactorizada.

         === Información adicional:
         Proceso que..
         ===========================================================================================================
    */

  
END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_contrato_epu(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
	
	



BEGIN


    DROP TABLE IF EXISTS schm_workspace.mdpg_epu_cortes;
    DROP TABLE IF EXISTS schm_workspace.mdpg_epu_cobro;
    DROP TABLE IF EXISTS schm_workspace.mdpg_epu_cobro2;
    DROP TABLE IF EXISTS schm_workspace.mdpg_base_epu;
    DROP TABLE IF EXISTS schm_workspace.mdpg_unicos;
    DROP TABLE IF EXISTS schm_workspace.mdpg_epu_mesactual;
    DROP TABLE IF EXISTS schm_workspace.mdpg_mpdt012_v2;
    DROP TABLE IF EXISTS schm_workspace.mdpg_mpdt012_v3;
    DROP TABLE IF EXISTS schm_workspace.mdpg_epu_mesactual;
    DROP TABLE IF EXISTS schm_workspace.mdpg_contratoepu;
    DROP TABLE IF EXISTS schm_workspace.mdpg_mpdt012;
    DROP TABLE IF EXISTS schm_workspace.mdpg_cuentas;
    DROP TABLE IF EXISTS schm_workspace.mdpg_epu_mes_actual;


    CREATE TABLE schm_workspace.mdpg_epu_cortes AS
    SELECT
        semuc_coc_eda_k	as entidad,
        semuc_coc_cen_ata_k	as  sucursal,
        semuc_coc_nro_cta_k as contrato,
        semuc_clv_enc_rut as rut,
        semuc_fch_fcn_k as corte,
        semuc_mnt_cuo_mes as monto_facturado,
        semuc_coc_prd as producto,
        semuc_mnt_pag_min_per as pago_minimo,
        CASE
            WHEN semuc_est_dir_epu in (0,1,2) THEN 1
            ELSE 0
        END AS si_epu_fisico,
        CASE
            WHEN semuc_est_dir_epu = 3 THEN 1
            ELSE 0
        END AS si_epu_mail
    FROM br_dm_prod_bigdata_reporitf_db.sfepus_mae_nuc_cab
    WHERE semuc_fch_fcn_k BETWEEN (v_fecha_inicio)::date and (v_fecha_fin)::date
      AND semuc_gls_emr ='S'
      AND semuc_dia_mor < 80;


    CREATE TABLE schm_workspace.mdpg_epu_cobro AS
    SELECT
        sednd_coc_cen_ata_k	as sucursal,
        sednd_coc_nro_cta_k as contrato,
        sednd_cod_tip_fac,
        sednd_fch_fcn_k,
        sednd_mnt_fac,
        sednd_gls_trn
    FROM br_dm_prod_bigdata_reporitf_db.sfepus_det_nuc_det
    WHERE sednd_fch_fcn_k BETWEEN (v_fecha_inicio)::date and (v_fecha_fin)::date
       AND sednd_cod_tip_fac in (201,237);


    CREATE TABLE schm_workspace.mdpg_epu_cobro2 AS
    SELECT
        a.*,
        b.sednd_cod_tip_fac as tip_fac_201,
        b.sednd_fch_fcn_k as fec_201,
        b.sednd_mnt_fac as monto_201,
        b.sednd_gls_trn as glosa_201,
        c.sednd_cod_tip_fac as tip_fac_237,
        c.sednd_fch_fcn_k as fec_237,
        c.sednd_mnt_fac as monto_237,
        c.sednd_gls_trn as glosa_237
    FROM (
        SELECT
            DISTINCT sucursal,
            contrato
        FROM schm_workspace.mdpg_epu_cobro
        ) as a
        LEFT JOIN (
            SELECT * FROM schm_workspace.mdpg_epu_cobro where sednd_cod_tip_fac in (201)
        ) as b on (a.contrato=b.contrato) and (a.sucursal=b.sucursal)
        LEFT JOIN (
            SELECT * FROM schm_workspace.mdpg_epu_cobro where sednd_cod_tip_fac in (237)
        ) as c on (a.contrato=c.contrato) and (a.sucursal=c.sucursal);


    CREATE TABLE schm_workspace.mdpg_base_epu as
    SELECT
        a.*,
        CASE
            WHEN b.contrato is not null then coalesce(b.glosa_201,b.glosa_237)
        END as glosa,
        CASE
            WHEN b.contrato is not null then 1
            ELSE 0
        END  as si_mantencionepu,
        CASE
            WHEN b.contrato is not null then coalesce(b.monto_201,0)+coalesce(b.monto_237,0)
        END as sednd_mnt_fac
    FROM schm_workspace.mdpg_epu_cortes as a
    LEFT JOIN schm_workspace.mdpg_epu_cobro2 as b
        on(a.contrato=b.contrato) and (a.sucursal=b.sucursal);


    CREATE TABLE schm_workspace.mdpg_unicos AS
    SELECT
        entidad,
        sucursal,
        contrato,
        RUT as rut,
        CORTE as facturacion,
        monto_facturado*1 as saldo,
        case
            when producto='01' then 'TR (con revolving)'
            when producto='03' then 'TR (sin revolving)'
            when producto='05' then 'TAM (con revolving)'
            when producto='06' then 'TAM (sin revolving)'
            when producto='07' then 'TAM chip'
            when producto='10' then 'Mastercard Cerrada'
            when producto='14' then 'Mastercard Black'
        END as tipo_producto,
        pago_minimo*1 as pago_minimo,
        si_epu_fisico as si_epufisico,
        si_epu_mail as si_epumail,
        si_mantencionepu,
        glosa,
        sum(sednd_mnt_fac*1) as mto_mantencion
    FROM schm_workspace.mdpg_base_epu
    GROUP BY
        entidad,
        sucursal,
        contrato,
        rut,
        corte,
        monto_facturado,
        tipo_producto,
        pago_minimo,
        si_epu_fisico,
        si_epu_mail,
        si_mantencionepu,
        glosa;


    CREATE TABLE schm_workspace.mdpg_contratoepu as
    SELECT
        rut,
        cast(contrato AS BIGINT) AS contrato,
        cast(sucursal AS BIGINT) AS sucursal,
        facturacion,
        saldo,
        pago_minimo,
        tipo_producto,
        si_epumail AS si_epu_mail,
        si_epufisico AS si_epu_fisico,
        si_mantencionepu,
        CASE
            WHEN si_mantencionepu=1 THEN facturacion
        END AS fecha_corte,
        glosa,
        mto_mantencion,
        v_periodo AS periodo
    FROM schm_workspace.mdpg_unicos;


    CREATE TABLE schm_workspace.mdpg_mpdt012 AS
    SELECT
        codent,
        centalta,
        cuenta,
        indnorcor,
        tipofac,
        fecfac,
        indmovanu,
        impfac,
        descuento,
        linea,
        pan
    FROM br_dm_prod_bigdata_reporitf_db.mpdt012
    WHERE
          fecfac between (v_fecha_inicio)::date and (v_fecha_fin)::date
      AND tipofac in (237,76);


    CREATE TABLE schm_workspace.mdpg_cuentas AS
    SELECT
        b.pemid_gls_nro_dct_ide_k as rut,
        a.codent,
        a.centalta,
        a.cuenta,
        a.fecalta as fecalta_ctto,
        a.fecbaja as fecbaja_ctto,
        a.producto,
        a.subprodu,
        a.conprod,
        a.grupoliq,
        a.indblqope,
        CASE
            WHEN a.grupoliq=1 THEN 5
            WHEN a.grupoliq=2 THEN 10
            WHEN a.grupoliq=3 THEN 15
            WHEN a.grupoliq=4 THEN 20
            WHEN a.grupoliq=5 THEN 25
            WHEN a.grupoliq=6 THEN 30
            WHEN a.grupoliq=7 THEN 18
        END as corte
    FROM br_dm_prod_bigdata_reporitf_db.mpdt007 a
    INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide B
       ON a.identcli::integer=b.pemid_nro_inn_ide
    WHERE a.producto NOT IN ('08','12','13')
   ;

    CREATE TABLE schm_workspace.mdpg_mpdt012_v2 AS
    SELECT
        a.*,
        b.rut ,
        b.producto,
        b.subprodu,
        b.conprod,
        b.corte
    FROM schm_workspace.mdpg_mpdt012 AS a
    LEFT JOIN schm_workspace.mdpg_cuentas AS b
        ON (a.cuenta=b.cuenta) AND (a.centalta=b.centalta);


    CREATE TABLE schm_workspace.mdpg_mpdt012_v3 AS
    SELECT
        a.*,
        b.facturacion,
        b.si_mantencionepu
    from schm_workspace.mdpg_mpdt012_v2 AS a
    LEFT JOIN schm_workspace.mdpg_contratoepu AS b
        ON cast(a.cuenta as bigint)  = b.contrato;


    CREATE TABLE schm_workspace.mdpg_epu_mes_actual AS
    SELECT
        rut,
        producto,
        subprodu,
        conprod,
        pan,
        fecfac,
        CASE
            WHEN si_mantencionepu=1 THEN DATE_PART(day, facturacion)
            ELSE corte
        END AS corte2,
        codent,
        centalta,
        cuenta,
        sum(IMPFAC) AS monto,
        count(cuenta) AS trx,
        sum(
            CASE
                WHEN si_mantencionepu=1 AND fecfac <= facturacion THEN impfac
            ELSE 0
            END
        ) AS monto_actual,
        COUNT(
            CASE
                WHEN si_mantencionepu=1 AND fecfac <= facturacion THEN cuenta
            END
        ) AS trx_actual,
        SUM(
            CASE WHEN  fecfac > facturacion THEN  impfac
            ELSE 0
            END
        ) AS monto_des,
        COUNT(
            CASE
                WHEN fecfac > facturacion THEN cuenta
            END
        ) AS trx_DES,
        v_periodo AS periodo
    FROM schm_workspace.mdpg_mpdt012_v3
    group by
        rut,
        producto,
        subprodu,
        conprod,
        corte2,
        CASE WHEN si_mantencionepu=1 THEN DATE_PART(day, facturacion) ELSE corte END,
        codent,
        centalta,
        cuenta,
        fecfac,
        pan,
        DATE_PART(year, v_fecha_inicio)||DATE_PART(month, v_fecha_inicio);


    -- ---------------------------
    -- Tabla Final
    -- ---------------------------
    DELETE
        FROM schm_data_analytics.mdpg_epu_mes_actual
    WHERE
        periodo = v_periodo;


    INSERT INTO schm_data_analytics.mdpg_epu_mes_actual
        (rut, producto, subprodu, conprod, pan, fecfac, corte, codent, centalta, cuenta, monto, trx, monto_actual, trx_actual, monto_des, trx_des, periodo)
    SELECT rut, producto, subprodu, conprod, pan, fecfac, corte2, codent, centalta, cuenta, monto, trx, monto_actual, trx_actual, monto_des, trx_des, periodo
    FROM schm_workspace.mdpg_epu_mes_actual;


    -- ---------------------------
    -- Tabla Final CONTRATO EPU
    -- ---------------------------
    DELETE
        FROM schm_data_analytics.mdpg_contrato_epu
    WHERE
        periodo = v_periodo;


    INSERT INTO schm_data_analytics.mdpg_contrato_epu
        (contrato,facturacion,fecha_corte,glosa,mto_mantencion,pago_minimo,rut,saldo,si_epu_fisico,si_epu_mail,si_mantencion_epu,sucursal,tipo_producto,periodo)
       SELECT
        cast(contrato as BIGINT) as contrato,
        facturacion,
        CASE
            WHEN si_mantencionepu=1 THEN facturacion
        END as fecha_corte,
        glosa,
        mto_mantencion,
        pago_minimo,
        rut,
        saldo,
        si_epu_fisico,
        si_epu_mail,
        si_mantencionepu,     
        sucursal,
        tipo_producto,
        v_periodo as periodo
      FROM schm_workspace.mdpg_contratoepu;


    /*DROP TABLE IF EXISTS schm_workspace.mdpg_epu_cortes;
    DROP TABLE IF EXISTS schm_workspace.mdpg_epu_cobro;
    DROP TABLE IF EXISTS schm_workspace.mdpg_epu_cobro2;
    DROP TABLE IF EXISTS schm_workspace.mdpg_base_epu;
    DROP TABLE IF EXISTS schm_workspace.mdpg_unicos;
    DROP TABLE IF EXISTS schm_workspace.mdpg_epu_mesactual;
    DROP TABLE IF EXISTS schm_workspace.mdpg_mpdt012_v2;
    DROP TABLE IF EXISTS schm_workspace.mdpg_mpdt012_v3;
    DROP TABLE IF EXISTS schm_workspace.mdpg_epu_mesactual;
    DROP TABLE IF EXISTS schm_workspace.mdpg_contratoepu;
    DROP TABLE IF EXISTS schm_workspace.mdpg_mpdt012;
    DROP TABLE IF EXISTS schm_workspace.mdpg_cuentas;*/

    /*  ===========================================================================================================
        === Control de versiones visual ===
        2024-01-12 -- v03 -- David Vásquez          -- Ajustes para normalizar nombres de tablas y campos en cruces requeridos.
        2024-01-11 -- v02 -- Alejandra Marinao      -- Se agrega lógica para crear la tabla schm_data_analytics.mdpg_contrato_epu y quede persistida por periodo.
        2023-05-31 -- v01 -- Patricio Quintero      -- Versión originalmente refactorizada.

        === Información adicional:
        Proceso que..
        ===========================================================================================================
    */

END;




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_contratos_itf()
	LANGUAGE plpgsql
AS $$
	
BEGIN


	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_con_saldo;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_bloqueos;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_todo_contratos;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_distintos_ruts;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_todo_contratos2;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_vigentes;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_vigentes2;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_por_eliminar;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_no_vigentes;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_no_vigentes2;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_por_eliminar2;


	CREATE TABLE schm_workspace.mdpg_contratos_itf_con_saldo AS
	SELECT 
		H.codent
		, H.cuenta
		, H.centalta
	FROM br_dm_prod_bigdata_reporitf_db.sfries_alt_mor AS A
	INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 H 
		ON SUBSTRING(A.evaam_nro_ctt, 5, 4) = H.centalta 
		AND SUBSTRING(A.evaam_nro_ctt, 9, 12) = H.cuenta
	WHERE A.evaam_fch_pro = (SELECT MAX(evaam_fch_pro) FROM br_dm_prod_bigdata_reporitf_db.sfries_alt_mor)
		AND evaam_sld_ttl >= 1;


	CREATE TABLE schm_workspace.mdpg_contratos_itf_bloqueos AS 
	SELECT 
		A.codent
		, A.centalta
		, A.cuenta
		, A.codblq
		, B.desblq
		, B.desblqred
		, B.indaplemisor
		, B.contcur
	FROM br_dm_prod_bigdata_reporitf_db.mpdt178 A
	INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt060 B 
		ON A.codblq = B.codblq 
	INNER JOIN (
				SELECT 
					A.codent
					, A.centalta
					, A.cuenta
					, MAX(B.contcur) AS max_fec
				FROM br_dm_prod_bigdata_reporitf_db.mpdt178 A
				INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt060 B 
					ON A.codblq = B.codblq
				WHERE A.linea = '0000'
				GROUP BY A.codent
					, A.centalta
					, A.cuenta
				) C 
		ON A.codent = C.codent 
		AND A.centalta = C.centalta 
		AND A.cuenta = C.cuenta 
		AND B.contcur = C.max_fec
	WHERE A.linea = '0000';


	CREATE TABLE schm_workspace.mdpg_contratos_itf_todo_contratos AS 
	SELECT 
		A.*
		, CASE 
			WHEN B.cuenta IS NOT NULL THEN 1 
			ELSE 0 
		END AS t_saldo
		, CASE 
			WHEN C.cuenta IS NOT NULL THEN 1 
			ELSE 0 
		END AS t_blq
		, C.codblq
		, C.desblq
		, C.desblqred
		, CASE 
			WHEN fecbaja::varchar(10) = '0001-12-30' AND t_pan = 1 THEN 1 
			ELSE 0 
		END AS ccto_vigente
		FROM (
			SELECT 
				DISTINCT 
				A.codent
				, A.cuenta
				, A.centalta
				, A.codent||A.centalta||A.cuenta AS contrato
				, A.fecalta
				, A.fecbaja
				, A.producto
				, A.grupoliq
				, B.pemid_gls_nro_dct_ide_k AS rut
				, CASE 
					WHEN B.pemid_gls_nro_dct_ide_k > 0 THEN 1 
					ELSE 0 
				END AS t_rut
				, CASE 
					WHEN C.cuenta IS NOT NULL THEN 1 
					ELSE 0 
				END AS t_pan
				, A.motbaja
				, D.desmot
				, D.desmotred
				, B.pemid_nro_inn_ide AS id
				, E.conprod
				, E.descon
				, E.desconred
				, F.version
				, F.clamon
				, G.descred AS dia_de_pago
				, G.descripcion
			FROM br_dm_prod_bigdata_reporitf_db.mpdt007 A 
			LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide B 
				ON B.pemid_nro_inn_ide = CAST(A.identcli AS BIGINT)
			LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt008 C 
				ON A.codent = C.codent 
				AND A.centalta = C.centalta 
				AND A.cuenta = C.cuenta 
				AND C.fecacuser::varchar(10) <> '0001-12-30'
			LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt028 D 
				ON A.motbaja = D.motbaja
			LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt167 E 
				ON A.codent = E.codent 
				AND A.producto = E.producto 
				AND A.subprodu = E.subprodu
				AND A.conprod = E.conprod
			LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt494 F 
				ON A.codent = F.codent 
				AND A.centalta = F.centalta 
				AND A.cuenta = F.cuenta 
			LEFT JOIN br_dm_prod_bigdata_reporitf_db.MPDT086 G 
				ON A.grupoliq = G.codgrupo 
				AND G.codproceso = '1'
			WHERE A.producto NOT IN ('08', '12', '13') 
			) A
		LEFT JOIN schm_workspace.mdpg_contratos_itf_con_saldo B 
			ON A.codent = B.codent 
			AND A.centalta = B.centalta 
			AND A.cuenta = B.cuenta
		LEFT JOIN schm_workspace.mdpg_contratos_itf_bloqueos C 
			ON A.codent = C.codent 
			AND A.centalta = C.centalta 
			AND A.cuenta = C.cuenta 
			AND C.desblq <> ('MOROSIDAD RIESGO')
		WHERE A.producto NOT IN ('08', '12', '13');


	CREATE TABLE schm_workspace.mdpg_contratos_itf_distintos_ruts AS
	SELECT 
		rut
		, MAX(ccto_vigente) AS ccto_vigente 
	FROM schm_workspace.mdpg_contratos_itf_todo_contratos
	WHERE rut IS NOT NULL
	GROUP BY rut;


	CREATE TABLE schm_workspace.mdpg_contratos_itf_todo_contratos2 AS
	SELECT 
		*
		, CASE 
			WHEN ccto_vigente = 1 AND t_saldo = 1 AND producto IN ('07', '06', '05', '10', '14') THEN 1
			WHEN ccto_vigente = 1 AND t_saldo = 0 AND producto IN ('07', '06', '05', '10', '14') THEN 2
			WHEN ccto_vigente = 1 AND t_saldo = 1 AND producto NOT IN ('07', '06', '05', '10', '14') THEN 3
			WHEN ccto_vigente = 1 AND t_saldo = 0 AND producto NOT IN ('07', '06', '05', '10', '14') THEN 4 
		END AS prioridad_vig
		, CASE 
			WHEN ccto_vigente = 0 AND fecbaja::varchar(10) = '0001-12-30' AND t_pan = 0 AND t_saldo = 1 AND producto IN ('07', '06', '05', '10', '14') THEN 1
			WHEN ccto_vigente = 0 AND fecbaja::varchar(10) = '0001-12-30' AND t_pan = 0 AND t_saldo = 1 AND producto NOT IN ('07', '06', '05', '10', '14') THEN 2
			WHEN ccto_vigente = 0 AND fecbaja::varchar(10) = '0001-12-30' AND t_pan = 0 AND t_saldo = 0 AND producto IN ('07', '06', '05', '10', '14') THEN 3
			WHEN ccto_vigente = 0 AND fecbaja::varchar(10) = '0001-12-30' AND t_pan = 0 AND t_saldo = 0 AND producto NOT IN ('07', '06', '05', '10', '14') THEN 4
			WHEN ccto_vigente = 0 AND fecbaja::varchar(10) <> '0001-12-30' AND t_pan = 1 AND t_saldo = 1 AND producto IN ('07', '06', '05', '10', '14') THEN 5
			WHEN ccto_vigente = 0 AND fecbaja::varchar(10) <> '0001-12-30' AND t_pan = 1 AND t_saldo = 1 AND producto NOT IN ('07', '06', '05', '10', '14') THEN 6
			WHEN ccto_vigente = 0 AND fecbaja::varchar(10) <> '0001-12-30' AND t_pan = 1 AND t_saldo = 0 AND producto IN ('07', '06', '05', '10', '14') THEN 7
			WHEN ccto_vigente = 0 AND fecbaja::varchar(10) <> '0001-12-30' AND t_pan = 1 AND t_saldo = 0 AND producto NOT IN ('07', '06', '05', '10', '14') THEN 8
			WHEN ccto_vigente = 0 AND fecbaja::varchar(10) <> '0001-12-30' AND t_pan = 0 AND t_saldo = 1 AND producto IN ('07', '06', '05', '10', '14') THEN 9
			WHEN ccto_vigente = 0 AND fecbaja::varchar(10) <> '0001-12-30' AND t_pan = 0 AND t_saldo = 1 AND producto NOT IN ('07', '06', '05', '10', '14') THEN 10
			WHEN ccto_vigente = 0 AND fecbaja::varchar(10) <> '0001-12-30' AND t_pan = 0 AND t_saldo = 0 AND producto IN ('07', '06', '05', '10', '14') THEN 11
			WHEN ccto_vigente = 0 AND fecbaja::varchar(10) <> '0001-12-30' AND t_pan = 0 AND t_saldo = 0 AND producto NOT IN ('07', '06', '05', '10', '14') THEN 12
		END AS prioridad_no_vig
	FROM schm_workspace.mdpg_contratos_itf_todo_contratos;


	CREATE TABLE schm_workspace.mdpg_contratos_itf_vigentes AS
	SELECT 
		*
	FROM schm_workspace.mdpg_contratos_itf_todo_contratos2
	WHERE ccto_vigente = 1
	ORDER BY rut
		, prioridad_vig
		, fecalta DESC;


	CREATE TABLE schm_workspace.mdpg_contratos_itf_vigentes2 AS
	SELECT 
		*
		, CASE WHEN rut = LAG(rut) OVER (ORDER BY rut ASC) THEN 1 ELSE 0 END filtro
	FROM schm_workspace.mdpg_contratos_itf_vigentes;


	CREATE TABLE schm_workspace.mdpg_contratos_itf_por_eliminar AS
	SELECT * FROM schm_workspace.mdpg_contratos_itf_vigentes2
	WHERE filtro = 1
	ORDER BY rut;


	DELETE FROM schm_workspace.mdpg_contratos_itf_vigentes2 
	WHERE filtro = 1;


	CREATE TABLE schm_workspace.mdpg_contratos_itf_no_vigentes AS
	SELECT A.*
	FROM schm_workspace.mdpg_contratos_itf_todo_contratos2 A
	LEFT JOIN schm_workspace.mdpg_contratos_itf_vigentes2 B 
		ON A.rut = B.rut
	WHERE A.ccto_vigente = 0
		AND B.rut IS NULL
	ORDER BY A.rut
		, A.prioridad_no_vig
		, A.fecalta DESC
		, A.fecbaja DESC;


	CREATE TABLE schm_workspace.mdpg_contratos_itf_no_vigentes2 AS
	SELECT 
		*
		, CASE WHEN rut = lag(rut) OVER (ORDER BY RUT ASC) THEN 1 ELSE 0 END FILTRO
	FROM schm_workspace.mdpg_contratos_itf_no_vigentes;


	/* Esta tabla no tiene sentido */
	CREATE TABLE schm_workspace.mdpg_contratos_itf_por_eliminar2 AS
	SELECT * FROM schm_workspace.mdpg_contratos_itf_no_vigentes2
	WHERE filtro = 1
	ORDER BY rut;


	DELETE FROM schm_workspace.mdpg_contratos_itf_no_vigentes2 
	WHERE filtro = 1;


	DELETE FROM schm_data_analytics.mdpg_contratos_itf;


	INSERT INTO schm_data_analytics.mdpg_contratos_itf
	SELECT 
		codent
        , cuenta
        , centalta
        , contrato
        , fecalta
        , fecbaja
        , producto
        , grupoliq
        , rut
        , t_rut
        , t_pan
        , motbaja
        , desmot
        , desmotred
        , id
        , conprod
        , descon
        , desconred
        , version
        , clamon
        , dia_de_pago
        , descripcion
        , t_saldo
        , t_blq
        , codblq
        , desblq
        , desblqred
        , ccto_vigente
        , prioridad_vig
        , prioridad_no_vig
		, GETDATE()::DATE AS fecha_act
		, schm_artifacts.f_period(fecalta::DATE) AS periodo
	FROM schm_workspace.mdpg_contratos_itf_vigentes2
	WHERE rut IS NOT NULL;


	DELETE FROM schm_data_analytics.mdpg_contratos_itf_riesgo
	WHERE periodo = schm_artifacts.f_period(getdate()::DATE);


	INSERT INTO schm_data_analytics.mdpg_contratos_itf_riesgo 
	SELECT 
		codent
		, cuenta
		, centalta
		, contrato
		, fecalta
		, fecbaja
		, producto
		, grupoliq
		, rut
		, t_rut
		, t_pan
		, motbaja
		, desmot
		, desmotred
		, id
		, conprod
		, descon
		, desconred
		, version
		, clamon
		, dia_de_pago
		, descripcion
		, t_saldo
		, t_blq
		, codblq
		, desblq
		, desblqred
		, ccto_vigente
		, prioridad_vig
		, prioridad_no_vig
		, GETDATE()::DATE AS fecha_act 
		, schm_artifacts.f_period(getdate()::DATE) AS periodo
	FROM schm_workspace.mdpg_contratos_itf_vigentes2
	WHERE rut IS NOT NULL
	UNION
	SELECT 
		codent
		, cuenta
		, centalta
		, contrato
		, fecalta
		, fecbaja
		, producto
		, grupoliq
		, rut
		, t_rut
		, t_pan
		, motbaja
		, desmot
		, desmotred
		, id
		, conprod
		, descon
		, desconred
		, version
		, clamon
		, dia_de_pago
		, descripcion
		, t_saldo
		, t_blq
		, codblq
		, desblq
		, desblqred
		, ccto_vigente
		, prioridad_vig
		, prioridad_no_vig
		, GETDATE()::DATE AS fecha_act
		, schm_artifacts.f_period(getdate()::DATE) AS periodo
	FROM schm_workspace.mdpg_contratos_itf_no_vigentes2
	WHERE rut IS NOT NULL;


	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_con_saldo;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_bloqueos;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_todo_contratos;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_distintos_ruts;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_todo_contratos2;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_vigentes;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_vigentes2;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_por_eliminar;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_no_vigentes;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_no_vigentes2;
	DROP TABLE IF EXISTS schm_workspace.mdpg_contratos_itf_por_eliminar2;
	

END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_cup_presencial()
	LANGUAGE plpgsql
AS $$
	
	
BEGIN
    DROP TABLE IF EXISTS schm_workspace.cup_presencial;
    DROP TABLE IF EXISTS schm_workspace.mpdt666;
    DROP TABLE IF EXISTS schm_workspace.cup_presencial2;
    DROP TABLE IF EXISTS schm_workspace.tipo_contrato;
    DROP TABLE IF EXISTS schm_workspace.cup_presencial3;
    DROP TABLE IF EXISTS schm_data_analytics.cup_vigente;


    CREATE TABLE schm_workspace.cup_presencial AS
    SELECT
        CASE
            WHEN c.ofe_cod_prd_ofe_k LIKE '01%' THEN 'TARJETA CREDITO'
            WHEN c.ofe_cod_prd_ofe_k LIKE '02%' THEN 'CAMBIO PRODUCTO'
            WHEN c.ofe_cod_prd_ofe_k LIKE '04%' THEN 'CUENTA VISTA'
            ELSE ' '
        END  AS producto,
        CASE
            WHEN c.ofe_cod_prd_ofe_k LIKE '04%' THEN SUBSTRING(c.ofe_cac_nro_ctt,9,10)
            ELSE c.ofe_cac_nro_ctt
        END    AS contrato,
        a.sol_cod_ide_cli::int         AS rut,
        a.sol_fch_crc_sol              AS fecha_creacion,
        a.sol_cod_nro_sol_k            AS nro_solicitud,
        a.sol_cod_est_sol              AS sol_cod_est_sol,
        b.fir_cod_ind_mau_fin          AS indicador_firma_manual,
        b.fir_cod_ind_dig_fin          AS indicador_firma_digital

    FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol A
        JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_fir_dct_sol B
            ON b.fir_cod_nro_sol_k = a.sol_cod_nro_sol_k
        JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe C
            ON b.fir_cod_nro_sol_k = c.ofe_cod_nro_sol_k
    WHERE true
        AND a.sol_cod_cll_adm <>  2
        AND a.sol_cod_est_sol = 11
        AND b.fir_cod_fir_ide_k = 3
        AND c.ofe_cod_ind_ngc = 1
        AND (b.fir_cod_ind_dig_fin = 1 OR b.fir_cod_ind_mau_fin = 1)
        AND SUBSTRING(c.ofe_cod_prd_ofe_k,1,2) IN ('01','02','04')
        AND NOT EXISTS (
            SELECT btc_cod_nro_sol_k
            FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol E
            WHERE E.btc_cod_nro_sol_k = a.sol_cod_nro_sol_k
                AND E.btc_cod_tip_reg_k = 1
                AND E.btc_cod_eta_k = 102
                AND E.btc_cod_evt_k = 30
            )
    ;


    CREATE TABLE schm_workspace.mpdt666 AS
    SELECT
        codent1,
        centalta1,
        cuenta1,
        cuenta2 as cv,
        case
            when REGEXP_REPLACE(cuenta2, '[^[:digit:]]', '') = '' then null
            else REGEXP_REPLACE(cuenta2, '[^[:digit:]]', '')::bigint
        end  as cv2  --input(cuenta2,best.) as cv
    FROM br_dm_prod_bigdata_reporitf_db.mpdt666
    WHERE true
    ;


    CREATE TABLE schm_workspace.cup_presencial2 AS
    SELECT --1779234  /   1779242
        a.*,
        CASE
            WHEN a.producto IN ('TARJETA CREDITO','CAMBIO PRODUCTO') THEN a.contrato
            WHEN a.producto NOT IN ('TARJETA CREDITO','CAMBIO PRODUCTO') AND b.cv IS NOT NULL THEN b.codent1||b.centalta1||b.cuenta1
        END AS contrato_rsat
    FROM schm_workspace.cup_presencial a
    LEFT JOIN schm_workspace.mpdt666 b
        ON a.contrato = b.cv2
    ;

    --  [0.3] TIPO DE CONTRATO;

    CREATE TABLE schm_workspace.tipo_contrato AS
        WITH tmp AS (
            select
                a.codent,
                a.centalta,
                a.cuenta,
                a.codent||a.centalta||a.cuenta as contrato,
                a.version, b.version as versio2,
                b.desversion
            FROM br_dm_prod_bigdata_reporitf_db.mpdt494 a
                JOIN br_dm_prod_bigdata_reporitf_db.mpdt496 b
                    ON a.version = b.version
        )

        SELECT
            a.codent,
            a.centalta,
            a.cuenta,
            b.contrato,
            a.fecalta,
            a.fecbaja,
            b.version,
            b.desversion
        FROM br_dm_prod_bigdata_reporitf_db.mpdt007  a
            JOIN tmp b
                ON (a.codent||a.centalta||a.cuenta = b.contrato)
    ;

    CREATE TABLE schm_workspace.cup_presencial3 AS
        SELECT DISTINCT
            a.*,
            b.fecbaja,
            b.version,
            b.desversion
        FROM schm_workspace.cup_presencial2 as a
        LEFT JOIN schm_workspace.tipo_contrato as b
            on(a.contrato_rsat=b.contrato)
    ;


    CREATE TABLE schm_data_analytics.cup_vigente AS
        SELECT DISTINCT
            producto,
            contrato,
            contrato_rsat,
            rut,
            fecha_creacion             as fecha_firma,
            indicador_firma_manual,
            indicador_firma_digital,
            version                    as version_contrato,
            desversion                 as desc_contrato
        FROM schm_workspace.cup_presencial3 a
        WHERE fecbaja = '0001-12-30 BC'
    ;


    DROP TABLE IF EXISTS schm_workspace.cup_presencial;
    DROP TABLE IF EXISTS schm_workspace.mpdt666;
    DROP TABLE IF EXISTS schm_workspace.cup_presencial2;
    DROP TABLE IF EXISTS schm_workspace.tipo_contrato;
    DROP TABLE IF EXISTS schm_workspace.cup_presencial3;
END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_loop_cascada_medio_pago(ind_paso int4)
	LANGUAGE plpgsql
AS $$
	 

BEGIN 	


	DROP TABLE IF EXISTS schm_workspace.iplaza_cruza1_loop;
	DROP TABLE IF EXISTS schm_workspace.iplaza_cruza2_loop;
	DROP TABLE IF EXISTS schm_workspace.iplaza_cruza3_loop;	
	DROP TABLE IF EXISTS schm_workspace.iplaza_cruza4_loop;
	DROP TABLE IF EXISTS schm_workspace.iplaza_cruza5_loop;		
	DROP TABLE IF EXISTS schm_workspace.iplaza_periodo_capta;
	DROP TABLE IF EXISTS schm_workspace.iplaza_cruza6_loop;		
	DROP TABLE IF EXISTS schm_workspace.iplaza_marcaje_loop;
	DROP TABLE IF EXISTS schm_workspace.iplaza_marcaje2_loop;	
	DROP TABLE IF EXISTS schm_workspace.iplaza_marcaje3_loop;	
	DROP TABLE IF EXISTS schm_workspace.iplaza_marcaje4_loop;	
	DROP TABLE IF EXISTS schm_workspace.iplaza_marcaje5_loop;
	
		
	CREATE TABLE schm_workspace.iplaza_cruza1_loop AS
	SELECT 
		T1.rut
		,T1.si_tr
		,T1.si_omp
		,T1.lugar
		,T1.ind
		,CASE 
			WHEN T2.rut IS NOT NULL THEN 1 
			ELSE 0 
		END AS si_ctto
	FROM 
		(SELECT 
			* 
		FROM schm_workspace.iplaza_uso_lugar4 
			WHERE ind = ind_paso) AS T1
	LEFT JOIN 
		(SELECT DISTINCT 
			rut 
		FROM schm_workspace.iplaza_cuentas) AS T2 
			ON T1.rut = T2.rut
	; 
	

	CREATE TABLE schm_workspace.iplaza_cruza2_loop AS
	SELECT 
		T1.*
		,CASE 
			WHEN (T2.ctto IS NOT NULL) OR (T1.codblq <> 80) THEN 1 
			ELSE 0 
		END AS si_bloqueo_duro
		,T3.evaam_dia_mor AS dia_mora
	FROM schm_workspace.iplaza_panes3 AS T1
	LEFT JOIN schm_workspace.iplaza_bloqueos2 AS T2 
		ON T1.ctto = T2.ctto
	LEFT JOIN schm_workspace.iplaza_mora AS T3 
		ON T1.ctto = T3.evaam_nro_ctt
	WHERE T1.rut IN (SELECT rut FROM schm_workspace.iplaza_cruza1_loop)
	;


	CREATE TABLE schm_workspace.iplaza_cruza3_loop AS 
	SELECT DISTINCT
		T1.rut 
		,T1.feccadtar 
		,T1.codblq 
		,T1.dia_mora
		,T1.si_bloqueo_duro
		,CASE 
			WHEN codblq = 80 THEN 1 
			ELSE 0 
		END AS si_bloqueo_80
		,CASE 
			WHEN CODBLQ = 1 THEN 1 
			ELSE 0 
		END AS si_bloqueo_1
		,CASE 
			WHEN CODBLQ = 2 THEN 1 
			ELSE 0 
		END AS si_bloqueo_2
		,CASE 
			WHEN CODBLQ = 4 THEN 1 
			ELSE 0 
		END AS si_bloqueo_4
		,CASE 
			WHEN CODBLQ = 40 THEN 1 
			ELSE 0 
		END AS si_bloqueo_40
		,CASE 
			WHEN CODBLQ = 43 THEN 1 
			ELSE 0 
		END AS si_bloqueo_43
		,CASE 
			WHEN codblq NOT IN (80, 1, 2, 4, 40, 43) THEN 1 
			ELSE 0 
		END AS si_bloqueo_dist_d
		,CASE 
			WHEN feccadtar < (DATE_PART(YEAR,DATEADD(MONTH,0, CURRENT_DATE))*100+DATE_PART(MONTH,DATEADD(MONTH,0, current_date))) THEN 1 
			ELSE 0 
		END AS SI_VENCIDOS
      FROM schm_workspace.iplaza_cruza2_loop t1
	; 
		

	CREATE TABLE schm_workspace.iplaza_cruza4_loop AS 
	SELECT DISTINCT
		T1.rut 
		,SUM(T1.si_bloqueo_duro) AS si_bloqueo_duro 
		,SUM(T1.si_bloqueo_80) AS si_bloqueo_80 
		,SUM(T1.si_bloqueo_1) AS si_bloqueo_1 
		,SUM(T1.si_bloqueo_2) AS si_bloqueo_2 
		,SUM(T1.si_bloqueo_4) AS si_bloqueo_4 
		,SUM(T1.si_bloqueo_40) AS si_bloqueo_40 
		,SUM(T1.si_bloqueo_43) AS si_bloqueo_43 
		,SUM(T1.si_bloqueo_dist_d) AS si_bloqueo_dist_d 
		,SUM(T1.si_vencidos) AS si_vencidos 
		,MAX(T1.dia_mora) AS DIA_MORA
	FROM schm_workspace.iplaza_cruza3_loop t1
	GROUP BY
		rut
	;

	CREATE TABLE schm_workspace.iplaza_cruza5_loop AS 
	SELECT 
		T1.rut 
		,CASE 
			WHEN T1.si_bloqueo_duro >= 1 THEN 1 
			ELSE 0 
		END AS si_bloqueo_duro 
		,CASE 
			WHEN T1.si_bloqueo_80 >= 1 THEN 1 
			ELSE 0 
		END AS si_bloqueo_80 
		,CASE 
			WHEN T1.si_bloqueo_1 >= 1 THEN 1 
			ELSE 0 
		END AS si_bloqueo_1 
		,CASE 
			WHEN T1.si_bloqueo_2 >= 1 THEN 1 
			ELSE 0 
		END AS si_bloqueo_2 
		,CASE 
			WHEN T1.si_bloqueo_4 >= 1 THEN 1 
			ELSE 0 
		END AS si_bloqueo_4 
		,CASE 
			WHEN T1.si_bloqueo_40 >= 1 THEN 1 
			ELSE 0 
		END AS si_bloqueo_40 
		,CASE 
			WHEN T1.si_bloqueo_43 >= 1 THEN 1 
			ELSE 0 
		END AS si_bloqueo_43 
		,CASE 
			WHEN T1.si_bloqueo_dist_d >= 1 THEN 1 
			ELSE 0 
		END AS si_bloqueo_dist_d 
		,CASE 
			WHEN T1.si_vencidos >= 1 THEN 1 
			ELSE 0 
		END AS si_vencidos 
		,T1.dia_mora
	FROM schm_workspace.iplaza_cruza4_loop t1
	;


	CREATE TABLE schm_workspace.iplaza_periodo_capta AS 
	SELECT 
		MAX(periodo) as periodo_oferta_capta
	FROM br_dm_prod_bigdata_sasdata_db.sas_ppff_capta_cdp	
	;		
	

	CREATE TABLE schm_workspace.iplaza_cruza6_loop AS 
	SELECT
		T1.*
		,T2.si_bloqueo_duro 
		,T2.si_bloqueo_80
		,si_bloqueo_1 
		,si_bloqueo_2 
		,si_bloqueo_4
		,si_bloqueo_40
		,si_bloqueo_43 
		,si_bloqueo_dist_d
		,T2.si_vencidos 
		,T2.dia_mora
		,CASE 
			WHEN T2.dia_mora BETWEEN 4 AND 90 THEN 1 
			ELSE 0 
		END AS mora_marca
		,CASE 
			WHEN T3.rut IS NOT NULL THEN 1 
			ELSE 0 
		END AS si_oferta
	FROM schm_workspace.iplaza_cruza1_loop AS T1
	LEFT JOIN schm_workspace.iplaza_cruza5_loop AS T2 ON (T1.RUT=T2.RUT)
	LEFT JOIN (
		SELECT 
			DISTINCT RUT 
		FROM br_dm_prod_bigdata_sasdata_db.sas_ppff_capta_cdp
		WHERE periodo = (SELECT max(periodo) FROM br_dm_prod_bigdata_sasdata_db.sas_ppff_capta_cdp)
		) AS T3 ON (T1.RUT=T3.RUT)
	;

	CREATE TABLE schm_workspace.iplaza_marcaje_loop AS  
	SELECT  
		'01.TOTAL CLIENTES' AS tipo
		,lugar
		,si_oferta AS con_oferta
		,COUNT(rut) AS clientes 
	FROM schm_workspace.iplaza_cruza6_loop
	GROUP BY
		lugar
		,si_oferta
		
	UNION ALL

	SELECT  
		'02.Clientes TR' AS tipo
		,lugar
		,si_oferta AS con_oferta
		,COUNT(rut) AS clientes 
	FROM schm_workspace.iplaza_cruza6_loop
	WHERE si_ctto = 1
	GROUP BY 
		lugar
		,si_oferta
		
	UNION ALL

	SELECT 
		CASE 
			WHEN (si_tr = 1 AND si_omp = 0) THEN  '04.Clientes con Compra SOLO TR' 
			WHEN (si_tr = 0 AND si_omp = 1) THEN  '05.Clientes con Compra SOLO OMP' 
			WHEN (si_tr = 1 AND si_omp = 1) THEN  '06.Clientes con Compra MIXTA' 
		END AS tipo
		,lugar
		,si_oferta AS con_oferta
		,COUNT(rut) AS clientes 
	FROM schm_workspace.iplaza_cruza6_loop
	WHERE si_tr = 1 OR si_omp = 1 
	GROUP BY 
		lugar
		,si_oferta
		,tipo
		
	UNION ALL  

	SELECT  
		'09.Mora de 4 a 90 días' AS tipo
		,lugar
		,si_oferta AS con_oferta
		,COUNT(rut) AS clientes 
	FROM schm_workspace.iplaza_cruza6_loop
	WHERE si_tr = 0 
		AND si_omp = 1 
		AND si_ctto = 1 
		AND coalesce(dia_mora,0) BETWEEN 4 AND 90
	GROUP BY 
		lugar
		,si_oferta
		,tipo
		
	UNION ALL 

	SELECT 
		'10.Vencido'  AS tipo
		,lugar
		,si_oferta AS con_oferta
		,COUNT(rut) AS clientes 
	FROM schm_workspace.iplaza_cruza6_loop
	WHERE si_tr = 0 
		AND si_omp = 1 
		AND si_ctto = 1 
		AND COALESCE(dia_mora,0) < 4 
		AND COALESCE(si_vencidos,0) = 1
	GROUP BY 
		LUGAR
		,SI_OFERTA
		,tipo
		
	UNION ALL  

	SELECT 
		'11.BLOQUEO 80' AS tipo
		,lugar
		,si_oferta AS con_oferta
		,COUNT(rut) AS clientes 
	FROM schm_workspace.iplaza_cruza6_loop
	WHERE si_tr = 0 
		AND si_omp = 1 
		AND si_ctto = 1 
		AND COALESCE(dia_mora,0) < 4 
		AND COALESCE(si_vencidos,0) = 0 AND COALESCE(si_bloqueo_80,0) = 1
	GROUP BY 
		lugar
		,si_oferta
		,tipo
		
	UNION ALL 

	SELECT  
		'12.BLOQUEO DURO'  AS tipo
		,lugar
		,si_oferta AS con_oferta
		,COUNT(rut) AS clientes 
	FROM schm_workspace.iplaza_cruza6_loop
	WHERE si_tr = 0 
		AND si_omp = 1 
		AND si_ctto = 1 
		AND COALESCE(dia_mora,0) < 4 
		AND COALESCE(si_vencidos,0) = 0 
		AND COALESCE(si_bloqueo_80,0) = 0 
		AND COALESCE(si_bloqueo_duro,0) = 1
	GROUP BY 
		lugar
		,si_oferta
		,tipo
		
	UNION ALL 

	SELECT 
		'12.BLOQUEO DURO | 1 ROBO' AS tipo
		,lugar
		,si_oferta AS con_oferta
		,COUNT(rut) AS clientes 
	FROM schm_workspace.iplaza_cruza6_loop
	WHERE si_tr = 0 
		AND si_omp = 1 
		AND si_ctto = 1 
		AND COALESCE(dia_mora,0) < 4 
		AND COALESCE(si_vencidos,0) = 0 
		AND COALESCE(si_bloqueo_80,0) = 0 
		AND COALESCE(si_bloqueo_1,0) = 1 
		AND COALESCE(si_bloqueo_duro,0) = 1
	GROUP BY 
		lugar
		,si_oferta
		,tipo
	UNION ALL  

	SELECT 
		'12.BLOQUEO DURO | 2 EXTRAVIO' AS tipo
		,lugar
		,si_oferta AS con_oferta
		,COUNT(rut) AS clientes 
	FROM schm_workspace.iplaza_cruza6_loop
	WHERE si_tr = 0 
		AND si_omp = 1 
		AND si_ctto = 1 
		AND COALESCE(dia_mora,0) < 4 
		AND COALESCE(si_vencidos,0) = 0 
		AND COALESCE(si_bloqueo_80,0) = 0 
		AND COALESCE(si_bloqueo_2,0) = 1 
		AND COALESCE(si_bloqueo_duro,0) = 1
	GROUP BY 
		lugar
		,si_oferta
		,tipo
		
	UNION ALL  

	SELECT 
		'12.BLOQUEO DURO | 4 DETERIORO' AS tipo
		,lugar
		,si_oferta AS con_oferta
		,COUNT(rut) AS clientes 
	FROM schm_workspace.iplaza_cruza6_loop
	WHERE si_tr = 0 
		AND si_omp = 1 
		AND si_ctto = 1 
		AND COALESCE(dia_mora,0) < 4 
		AND COALESCE(si_vencidos,0) = 0 
		AND COALESCE(si_bloqueo_80,0) = 0 
		AND COALESCE(si_bloqueo_4,0) = 1 AND COALESCE(si_bloqueo_duro,0) = 1
	GROUP BY 
		lugar
		,si_oferta
		,tipo
		
	UNION ALL 

	SELECT 
		'12.BLOQUEO DURO | 40 REEMISION' AS tipo
		,lugar
		,si_oferta AS con_oferta
		,COUNT(rut) AS clientes 
	FROM schm_workspace.iplaza_cruza6_loop
	WHERE si_tr = 0 
		AND si_omp = 1 
		AND si_ctto = 1 
		AND COALESCE(dia_mora,0) < 4 
		AND COALESCE(si_vencidos,0) = 0 
		AND COALESCE(si_bloqueo_80,0) = 0 
		AND COALESCE(si_bloqueo_40,0) = 1 
		AND COALESCE(si_bloqueo_duro,0) = 1
	GROUP BY 
		lugar
		,si_oferta
		,tipo
		
	UNION ALL

	SELECT 
		'12.BLOQUEO DURO | 43 F. PREVENT' AS tipo
		,lugar
		,si_oferta AS con_oferta
		,COUNT(rut) AS clientes 
	FROM schm_workspace.iplaza_cruza6_loop
	WHERE si_tr = 0 
		AND si_omp = 1 
		AND si_ctto = 1 
		AND COALESCE(dia_mora,0) < 4 
		AND COALESCE(si_vencidos,0) = 0 
		AND COALESCE(si_bloqueo_80,0) = 0 
		AND COALESCE(si_bloqueo_43,0) = 1 
		AND COALESCE(si_bloqueo_duro,0) = 1
	GROUP BY 
		lugar
		,si_oferta
		,tipo
		
	UNION ALL 
	
	SELECT  
		'12.BLOQUEO DURO | RESTO'  AS tipo
		,lugar
		,si_oferta AS con_oferta
		,COUNT(rut) AS clientes 
	FROM schm_workspace.iplaza_cruza6_loop
	WHERE si_tr = 0 
		AND si_omp = 1 
		AND si_ctto = 1 
		AND COALESCE(dia_mora,0) < 4 
		AND COALESCE(si_vencidos,0) = 0 AND COALESCE(si_bloqueo_80,0) = 0 
		AND COALESCE(si_bloqueo_dist_d,0) = 1 AND COALESCE(si_bloqueo_duro,0) = 1
	GROUP BY 
		lugar
	 	,si_oferta
		,tipo
	;

	CREATE TABLE schm_workspace.iplaza_marcaje2_loop AS 
	SELECT 
		*
	FROM schm_workspace.iplaza_marcaje_loop
	
	UNION ALL 

	SELECT
		'08.BLOQUEO BLANDO'  AS tipo
		,lugar
		,con_oferta
		,SUM(CASE WHEN tipo IN ('09.Mora de 4 a 90 días', '10.Vencido','11.BLOQUEO 80') THEN clientes END) AS clientes
	FROM schm_workspace.iplaza_marcaje_loop
	GROUP BY 
		tipo
		,lugar
		,con_oferta
	;

	CREATE TABLE schm_workspace.iplaza_marcaje3_loop AS 
	SELECT 
		*
	FROM schm_workspace.iplaza_marcaje2_loop
	UNION ALL 

	SELECT
		'07.CLIENTES NO HABILITADOS' AS tipo
		,lugar
		,con_oferta
		,SUM(CASE WHEN tipo IN ('12.BLOQUEO DURO', '12.BLOQUEO DURO', '08.BLOQUEO BLANDO', '08.BLOQUEO BLANDO') THEN clientes END) AS clientes
	FROM schm_workspace.iplaza_marcaje2_loop
	GROUP BY 
		tipo
		,lugar
		,con_oferta
	;




	CREATE TABLE schm_workspace.iplaza_marcaje4_loop AS 
	SELECT 
		*
	FROM schm_workspace.iplaza_marcaje3_loop
	
	UNION ALL

	SELECT
		'03.Clientes con TR Habilitada' AS tipo
		,lugar
		,con_oferta
		--,sum(CASE WHEN TIPO IN ('02.Clientes TR') THEN CLIENTES END) AS part1
		--,sum(CASE WHEN TIPO IN ('07.CLIENTES NO HABILITADOS') THEN CLIENTES END) AS part2
		,COALESCE(SUM(CASE WHEN tipo IN ('02.Clientes TR') THEN CLIENTES END),0) - COALESCE(SUM(CASE WHEN tipo IN ('07.CLIENTES NO HABILITADOS') THEN clientes END),0) AS clientes
	FROM schm_workspace.iplaza_marcaje3_loop
	GROUP BY 
		tipo
		,lugar
		,con_oferta
	;

	CREATE TABLE schm_workspace.iplaza_marcaje5_loop AS
	SELECT 
		T1.tipo
		,T1.lugar
		,T1.con_oferta
		,COALESCE(T1.clientes,0) AS clientes
		,T2.ind
	FROM schm_workspace.iplaza_marcaje4_loop AS T1
	LEFT JOIN schm_workspace.iplaza_uso_lugar3 AS T2 
		ON T1.lugar = T2.lugar
	;	



	CREATE TABLE IF NOT EXISTS schm_workspace.CASCADA_SEMANAS_TDA
	(
		tipo varchar(31),
		lugar varchar(5),
		con_oferta INT4,
		clientes INT8,
		ind INT8
	)
	;


	DELETE
	FROM schm_workspace.CASCADA_SEMANAS_TDA 
	WHERE ind = ind_paso
	;


	INSERT INTO schm_workspace.cascada_semanas_tda
	SELECT 
		*
	FROM schm_workspace.iplaza_marcaje5_loop
	;

	DROP TABLE IF EXISTS schm_workspace.iplaza_cruza1_loop;
	DROP TABLE IF EXISTS schm_workspace.iplaza_cruza2_loop;
	DROP TABLE IF EXISTS schm_workspace.iplaza_cruza3_loop;	
	DROP TABLE IF EXISTS schm_workspace.iplaza_cruza4_loop;
	DROP TABLE IF EXISTS schm_workspace.iplaza_cruza5_loop;		
	DROP TABLE IF EXISTS schm_workspace.iplaza_periodo_capta;
	DROP TABLE IF EXISTS schm_workspace.iplaza_cruza6_loop;		
	DROP TABLE IF EXISTS schm_workspace.iplaza_marcaje_loop;
	DROP TABLE IF EXISTS schm_workspace.iplaza_marcaje2_loop;	
	DROP TABLE IF EXISTS schm_workspace.iplaza_marcaje3_loop;	
	DROP TABLE IF EXISTS schm_workspace.iplaza_marcaje4_loop;
	DROP TABLE IF EXISTS schm_workspace.iplaza_marcaje5_loop;

END; 

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_mora_car_sinacofi()
	LANGUAGE plpgsql
AS $$
	
DECLARE MAX_FECHA DATE := (select MAX(EVAAM_FCH_PRO) AS dt from br_dm_prod_bigdata_reporitf_db.sfries_alt_mor);
BEGIN


	DROP TABLE IF EXISTS schm_workspace.mdpg_mora_car;
	DROP TABLE IF EXISTS schm_workspace.mdpg_consulta_fec;
	DROP TABLE IF EXISTS schm_workspace.mdpg_consolidado_a;
	DROP TABLE IF EXISTS schm_workspace.mdpg_boletin_a;
	DROP TABLE IF EXISTS schm_workspace.mdpg_consolidado_b;
	DROP TABLE IF EXISTS schm_workspace.mdpg_boletin_b;
	DROP TABLE IF EXISTS schm_workspace.mdpg_sinacofi;
	DROP TABLE IF EXISTS schm_workspace.mdpg_sinacofib;


	CREATE TABLE schm_workspace.mdpg_mora_car AS 
	SELECT 
		I.pemid_gls_nro_dct_ide_k AS rut
		, A.evaam_sld_ttl AS saldo_total
		, A.evaam_sld_mor AS saldo_mora
		, A.evaam_dia_mor AS dias_mora
		, getdate()::date AS fec_ex
	FROM br_dm_prod_bigdata_reporitf_db.sfries_alt_mor A
	INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 H 
		ON SUBSTRING(A.evaam_nro_ctt, 5, 4) = H.centalta 
		AND SUBSTRING(A.evaam_nro_ctt, 9, 12) = H.cuenta 
		AND H.fecbaja = '0000-12-30'
	INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide I 
		ON H.identcli::BIGINT = I.pemid_nro_inn_ide
	WHERE A.evaam_fch_pro = MAX_FECHA 
		AND A.evaam_dia_mor > 1;


	CREATE TABLE schm_workspace.mdpg_consulta_fec AS
	SELECT * FROM br_dm_prod_bigdata_repitfh_db.bodeu_aux_vrs_acv;


	CREATE TABLE schm_workspace.mdpg_consolidado_a AS
   	SELECT 
   		cmor_rut_k AS rut
		, (cmor_mnt_dct_mtr1 + cmor_mnt_dct_mtr2 + cmor_mnt_dct_mtr3 + cmor_mnt_dct_mtr4) AS mora_consolidada
      FROM br_dm_prod_bigdata_repitfh_db.bodeu_mae_cns_mor_a;


    CREATE TABLE schm_workspace.mdpg_boletin_a AS 
   	SELECT 
   		pbln_rut_k AS rut
   		, (pbln_mnt_ptt_mtr1 + pbln_mnt_ptt_mtr2 + pbln_mnt_ptt_mtr3 + pbln_mnt_ptt_mtr4) AS protesto_boletin
    FROM br_dm_prod_bigdata_repitfh_db.bodeu_mae_ptt_bln_a;


    CREATE TABLE schm_workspace.mdpg_consolidado_b AS
   	SELECT 
   		cmor_rut_k AS rut
   		, (cmor_mnt_dct_mtr1 + cmor_mnt_dct_mtr2 + cmor_mnt_dct_mtr3 + cmor_mnt_dct_mtr4) AS mora_consolidada
    FROM br_dm_prod_bigdata_repitfh_db.bodeu_mae_cns_mor_b;


    CREATE TABLE schm_workspace.mdpg_boletin_b AS 
   	SELECT 
   		pbln_rut_k AS rut 
   		, (pbln_mnt_ptt_mtr1 + pbln_mnt_ptt_mtr2 + pbln_mnt_ptt_mtr3 + pbln_mnt_ptt_mtr4) AS protesto_boletin
    FROM br_dm_prod_bigdata_repitfh_db.bodeu_mae_ptt_bln_b;


    CREATE TABLE schm_workspace.mdpg_sinacofi AS
	SELECT * FROM schm_workspace.mdpg_consolidado_a
	WHERE mora_consolidada > 10000
		UNION
	SELECT * FROM schm_workspace.mdpg_boletin_a
	WHERE protesto_boletin > 2;


	CREATE TABLE schm_workspace.mdpg_sinacofib AS
	SELECT * FROM schm_workspace.mdpg_consolidado_b
	WHERE mora_consolidada > 10000
		UNION
	SELECT *  FROM schm_workspace.mdpg_boletin_b
	WHERE protesto_boletin > 2;


	DELETE FROM schm_data_analytics.mdpg_mora_sinacofi;


	INSERT INTO schm_data_analytics.mdpg_mora_sinacofi
	SELECT 
		*
		, schm_artifacts.f_period(getdate()::date) AS fec_ex
	FROM schm_workspace.mdpg_sinacofib;
	
	
	DROP TABLE IF EXISTS schm_workspace.mdpg_mora_car;
	DROP TABLE IF EXISTS schm_workspace.mdpg_consulta_fec;
	DROP TABLE IF EXISTS schm_workspace.mdpg_consolidado_a;
	DROP TABLE IF EXISTS schm_workspace.mdpg_boletin_a;
	DROP TABLE IF EXISTS schm_workspace.mdpg_consolidado_b;
	DROP TABLE IF EXISTS schm_workspace.mdpg_boletin_b;
	DROP TABLE IF EXISTS schm_workspace.mdpg_sinacofi;
	DROP TABLE IF EXISTS schm_workspace.mdpg_sinacofib;
	
	
END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_movimientos_debito(periodo_paso int4, ano int4)
	LANGUAGE plpgsql
AS $$
	

BEGIN

    DROP TABLE IF EXISTS schm_workspace.incoming;
    DROP TABLE IF EXISTS schm_workspace.rsat_mpdt004;
    DROP TABLE IF EXISTS schm_workspace.rsat_mpdt004_unico;
    DROP TABLE IF EXISTS schm_workspace.trx_mpdt666;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos2;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos3;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos3_paso;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos4;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos5;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos6;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos7;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos8;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos9;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos2;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos3;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos3_paso;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos4;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos5;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos6;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos7;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos8;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos9;
    DROP TABLE IF EXISTS schm_workspace.movimientos_debito;
    DROP TABLE IF EXISTS schm_workspace.movimientos_debito2;
    DROP TABLE IF EXISTS schm_workspace.movimientos_debito3;
    DROP TABLE IF EXISTS schm_workspace.movimientos_debito4;


    CREATE TABLE schm_workspace.incoming AS
    SELECT 
        distinct fecha
        ,end_point
        ,de42_card_acceptor_id_code
        ,de38_codigo_de_aprobacion
        ,de12_fecha_hora_transaccion
        ,de2_numero_de_tarjeta
        ,de63_transaction_life_cycle_id
        ,de63_2_trace_id
        ,de31_2_acquirer_s_bin
        ,de3_1_tipo_de_transaccion
        ,de43_1_nombre
        ,de26_codigo_categoria_de_comercio_mcc
        ,de4_monto_de_transaccion
    FROM
    br_dm_prod_bigdata_segcom_db.ipm_data
    WHERE floor(de12_1_fecha/100)=(floor(periodo_paso/100)-2000)*100+(periodo_paso-floor(periodo_paso/100)*100);


    CREATE TABLE schm_workspace.mov_cc_spos  as
    SELECT
        ROW_NUMBER() OVER(
        ) AS indice,
        *,
        CASE
            WHEN tmo_tipotra='C' THEN
            CASE
                WHEN descripcion IN ('VALOR EFECTIVO','EN EFECTIVO') AND GLS_TRANSAC ='DEPOSITO' AND  SI_ABR<>1  THEN 'Depósitos en Efectivo'
                WHEN descripcion IN ('CON DOCUMENTOS') AND GLS_TRANSAC ='DEPOSITO' AND SI_ABR<>1 THEN 'Depósitos con Documento'
                WHEN descripcion IN ('TRANSFERENCIA DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas'
                WHEN descripcion IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas'
                WHEN descripcion IN ('DESDE OTROS BANCOS') AND  SI_ABR=1 THEN 'Abono de Remuneraciones'
                WHEN descripcion IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 AND DESC_NEGOCIO LIKE '%Proveedores%' THEN 'TEF Recibidas'
                WHEN descripcion IN ('POR REGULARIZACION') AND  SI_ABR<>1 THEN 'Otros (pago proveedores)'
                WHEN descripcion IN ('DESDE LINEA DE CREDITO') AND GLS_TRANSAC ='TRASPASO DE FONDOS' AND  SI_ABR<>1 THEN 'Traspaso desde LCA'
                WHEN descripcion IN ('AVANCE DESDE TARJETA DE CREDITO BANCO RIPLEY') AND  SI_ABR<>1 THEN 'Avance desde Tarjeta Ripley'
                WHEN descripcion IN ('DEVOLUCION COMISION') AND  SI_ABR<>1 THEN 'DEVOLUCION COMISION'
                WHEN descripcion IN ('TRANSFERENCIA DESDE CREDITO') AND  SI_ABR<>1 THEN 'Traspaso desde LCA'
                ELSE 'OTROS ABONOS'
            END ELSE ''
        END AS descripcion_abono,
        CASE
            WHEN tmo_tipotra='D' THEN
            CASE
                WHEN descripcion IN ('COMPRA NACIONAL CTA CTE') THEN 'Compras Redcompra'
                WHEN descripcion IN ('COMPRA INTERNACIONAL CTA CTE') THEN 'Compras Internacionales'
                WHEN descripcion IN ('CARGO POR PEC') THEN 'PEC'
                WHEN descripcion IN ('GIRO ATM INTERNACIONAL CTA CTE') THEN 'Giros internacional CTA CTE'
                WHEN descripcion IN ('GIRO ATM NACIONAL CTA CTE') THEN 'Giros ATM CTA CTE'
                WHEN descripcion IN ('GIRO POR CAJA') THEN 'Giros Caja'
                WHEN descripcion IN ('TRANSFERENCIA A OTROS BANCOS') THEN 'TEF emitidas Otros Bancos'
                WHEN descripcion IN ('PAGO TARJETA DE CREDITO') THEN 'Pago de Tarjeta'
                WHEN descripcion IN ('A CUENTA BANCO RIPLEY','POR TRASPASO A CUENTA')  THEN 'Pago LCA'
                WHEN descripcion IN ('COSTO DE MANTENCION MENSUAL CTA CTE') THEN 'Comision planes'
                WHEN descripcion IN ('IVA COSTO DE MANTENCION MENSUAL CTA CTE') THEN 'IVA Com cta cte'
                ELSE 'OTROS CARGOS'
            END ELSE ''
        END AS descripcion_cargo
    FROM
    (
        SELECT
            c2.cli_identifica rut
            ,CAST(TO_CHAR(c1.tmo_fech,'YYYYMM') AS INT) AS periodo
            ,CAST(TO_CHAR(c1.tmo_fech,'YYYYMMDD') AS INT) AS codfecha
            ,c1.tmo_numcue AS cuenta
            ,c1.tmo_fechcon AS fechacon
            ,c1.tmo_fech AS fecha
            ,c1.rub_desc AS descripcion
            ,c1.tmo_val AS monto
            ,c1.con_libre AS desc_negocio
            ,c1.tmo_codmod
            ,c1.tmo_tipotra
            ,c1.tmo_rubro
            ,c1.tmo_numtra
            ,c1.tmo_numcue
            ,c1.tmo_codusr
            ,c1.tmo_sec
            ,c1.tmo_codtra
            ,(
            SELECT
                	cod_destra
                FROM br_dm_prod_bigdata_fisa_db.tgen_codtrans
                WHERE cod_tra = tmo_codtra 
                    AND cod_mod = tmo_codmod
            ) AS gls_transac
            ,CASE
                WHEN c1.tmo_tipotra='D' THEN 'CARGO'
                WHEN c1.tmo_tipotra='C' THEN 'ABONO'
            END AS Tipo_Movimiento
            ,CASE
                WHEN c1.tmo_tipotra='C'
                    AND c1.rub_desc='DESDE OTROS BANCOS'
                    AND (
                        c1.con_libre LIKE '%Remuneraciones%' OR
                        c1.con_libre LIKE '%Anticipos%' OR
                        c1.con_libre LIKE '%Sueldos%'
                        )
                    THEN 1
                ELSE 0
            END AS SI_ABR
            ,CASE
                WHEN  c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS'
                    AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre LIKE '%Sueldos%')
                    AND c1.con_libre LIKE '%BANCO RIPLEY%' THEN 'BANCO RIPLEY'
                WHEN c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS'
                    AND (c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre LIKE '%Sueldos%')
                    AND c1.con_libre LIKE '%CAR S.A.%' THEN 'CAR'
                WHEN c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS'
                    AND (c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre LIKE '%Sueldos%')
                    AND c1.con_libre LIKE '%RIPLEY STORE%' THEN 'RIPLEY STORE'
                WHEN c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS'
                    AND (c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre LIKE '%Sueldos%')
                    AND (
                        c1.con_libre NOT LIKE ('%RIPLEY STORE%') or
                        c1.con_libre NOT LIKE ('%CAR S.A.%') or
                        c1.con_libre NOT LIKE ('%BANCO RIPLEY%')
                        )
                    THEN 'OTROS BANCOS' ELSE ''
                END AS Descripcion_ABR
            ,CASE
                WHEN c1.tmo_tipotra='D'
                    AND (c1.con_libre LIKE '%Ripley%' OR c1.con_libre LIKE '%RIPLEY%')
                    AND  c1.con_libre NOT LIKE '%PAGO%'
                THEN 'COMPRA_RIPLEY' 
                ELSE ''
            END AS COMPRA_RIPLEY
            ,c1.tmo_terminal
        FROM
            (SELECT * FROM br_dm_prod_bigdata_fisa_db.tcap_tramon /*base de movimientos*/
                ,br_dm_prod_bigdata_fisa_db.TGEN_TRANRUBRO /*base descriptiva (para complementar movimientos)*/
                ,br_dm_prod_bigdata_fisa_db.tcap_concepto /*base descriptiva (para complementar movimientos)*/
            WHERE rub_mod    = tmo_codmod /*unificacion de base de movs con rubro*/
                AND rub_tra      = tmo_codtra /*unificacion de base de movs con rubro*/
                AND rub_rubro    = tmo_rubro /*unificacion de base de movs con rubro*/
                AND con_modulo(+)  = tmo_codmod /*unificacion de base de movs con con_*/
                AND con_rubro(+)   = tmo_rubro /*unificacion de base de movs con con_*/
                AND con_numtran(+) = tmo_numtra /*unificacion de base de movs con con_*/
                AND con_cuenta (+) = tmo_numcue /*unificacion de base de movs con con_*/
                AND con_codusr(+)  = tmo_codusr /*unificacion de base de movs con con_*/
                AND con_sec(+)     = tmo_sec /*unificacion de base de movs con con_*/
                AND con_transa(+)  = tmo_codtra /*unificacion de base de movs con con_*/
                /*FILTROS DE MOVIMIENTOS*/
                AND tmo_tipotra in ('D','C') /*D=Cargo, C=Abono*/
                AND tmo_codmod = 4
                AND tmo_codpro = 1
                AND tmo_codtip = 1
                AND tmo_modo = 'N'
                AND tmo_val >= 1 /*solo montos mayores a 1 peso (mov de prueba)*/
                AND date_part(year,tmo_fech)*100+date_part(month,tmo_fech)=periodo_paso
            /*FINAL: QUERY DESDE OPERACIONES*/
            ) C1
        LEFT JOIN (
            SELECT 
                distinct cli_identifica
                ,vis_numcue
            FROM br_dm_prod_bigdata_fisa_db.tcli_persona /*MAESTRA DE CLIENTES BANCO*/
                ,br_dm_prod_bigdata_fisa_db.tcap_vista /*SALDOS CUENTAS VISTAS */
            where cli_codigo=vis_codcli
            AND vis_mod = 4/*cuenta vista, CUENTA */
            AND (VIS_PRO= 1/*CC*/  )
            AND vis_tip = 1  /*persona no juridica*/
            )  C2
            on (c1.tmo_numcue=c2.vis_numcue)
            WHERE c1.rub_desc IN ('COMPRA NACIONAL CTA CTE', 'COMPRA INTERNACIONAL CTA CTE')
    );

    CREATE TABLE schm_workspace.mov_cc_spos2 AS
        SELECT DISTINCT
            a.*,
            b.end_point,
            b.de42_card_acceptor_id_code,
            b.de38_codigo_de_aprobacion ,
            ((20*100+ano)*10000+(floor(b.de12_fecha_hora_transaccion/1000000)-ano*10000)) AS de12_fecha_hora_transaccion,
            b.de2_numero_de_tarjeta,
            b.de63_transaction_life_cycle_id,
            b.de63_2_trace_id,
            b.de31_2_acquirer_s_bin,
            b.de3_1_tipo_de_transaccion,
            b.de43_1_nombre,
            b.de26_codigo_categoria_de_comercio_mcc
        FROM schm_workspace.mov_cc_spos AS a
            LEFT JOIN schm_workspace.incoming AS b
            ON(a.tmo_terminal=b.de63_2_trace_id) 
                AND b.de3_1_tipo_de_transaccion<>20
    ;


    CREATE TABLE schm_workspace.mov_cc_spos3 AS
        SELECT
        a.*,
        b.cant AS duplicados
    FROM  schm_workspace.mov_cc_spos2 AS a
        LEFT JOIN
            (SELECT indice,count(indice) AS cant,
                sum(monto) AS monto
            FROM schm_workspace.mov_cc_spos2 GROUP BY indice)   AS b
        ON(a.indice=b.indice)
    ;


    CREATE TABLE schm_workspace.mov_cc_spos3_paso AS
        SELECT
            indice	,
            rut	,
            periodo	,
            codfecha,
            cuenta	,
            fechacon,
            fecha	,
            descripcion,
            monto	,
            desc_negocio,
            tmo_codmod	,
            tmo_tipotra	,
            tmo_rubro	,
            tmo_numtra,
            tmo_numcue	,
            tmo_codusr,
            tmo_sec,
            tmo_codtra,
            gls_transac	,
            tipo_movimiento,
            si_abr	,
            descripcion_abr	,
            compra_ripley	,
            tmo_terminal,
            descripcion_abono,
            descripcion_cargo	,
            end_point	,
            de42_card_acceptor_id_code,
            de38_codigo_de_aprobacion,
            de12_fecha_hora_transaccion,
            de2_numero_de_tarjeta,
            de63_transaction_life_cycle_id,
            de63_2_trace_id	,
            de31_2_acquirer_s_bin	,
            de3_1_tipo_de_transaccion	,
            de43_1_nombre	,
            de26_codigo_categoria_de_comercio_mcc
        FROM schm_workspace.mov_cc_spos3
        WHERE duplicados=1
        UNION ALL
        SELECT 
            a.indice,
            rut	,
            periodo	,
            codfecha,
            cuenta	,
            fechacon,
            fecha	,
            descripcion,
            monto	,
            desc_negocio,
            tmo_codmod	,
            tmo_tipotra	,
            tmo_rubro	,
            tmo_numtra,
            tmo_numcue	,
            tmo_codusr,
            tmo_sec,
            tmo_codtra,
            gls_transac	,
            tipo_movimiento,
            si_abr	,
            descripcion_abr	,
            compra_ripley	,
            tmo_terminal,
            descripcion_abono,
            descripcion_cargo	,
            '' AS end_point	,
            '' AS de42_card_acceptor_id_code,
            '' AS de38_codigo_de_aprobacion,
            0  AS de12_fecha_hora_transaccion,
            '' AS de2_numero_de_tarjeta,
            '' AS de63_transaction_life_cycle_id,
            '' AS de63_2_trace_id	,
            0  AS de31_2_acquirer_s_bin	,
            0  AS de3_1_tipo_de_transaccion	,
            '' AS de43_1_nombre	,
            0  AS de26_codigo_categoria_de_comercio_mcc
        FROM schm_workspace.mov_cc_spos AS a
            INNER JOIN 
                (SELECT 
                    DISTINCT indice 
                    FROM schm_workspace.mov_cc_spos3 
                    WHERE duplicados>1
                ) AS b
            ON(a.indice=b.indice)
    ;


    CREATE TABLE schm_workspace.rsat_mpdt004 AS
        SELECT DISTINCT
            a2.pemid_gls_nro_dct_ide_k AS rut_rsat,
            b.siaidcd,
            b.codent,
            b.centalta, a1.producto,
            b.cuenta AS cuenta_rsat,
            b.codpais,
            b.localidad,
            b.fectrn,
            b.hortrn,
            b.codact,
            b.codcom,
            b.codcom  codigo_comercio_ant,
            b.nomcom,
            b.imptrn  venta_tarjeta,
            b.tipfran,
            b.totcuotas,
            b.porint,
            b.pan,
            SUBSTRING(b.pan,13,4) pan2,
            b.tipofac,
            b.impcca,
            b.clamoncca,
            b.impdiv,
            b.modentdat,
            b.sesionori,
            b.sesionsia,
            b.codred,
            b.indnorcor,
            SUBSTRING(b.modentdat,1,2)  ind_online,
            b.numaut,
            b.codrespu
        FROM  br_dm_prod_bigdata_reporitf_db.mpdt004 AS b
            INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 a1 /*contrato*/
                ON (b.codent=a1.codent) AND (b.centalta=a1.centalta) AND (b.cuenta=a1.cuenta)
            INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide a2 
                ON CAST(A1.identcli AS int)=a2.pemid_nro_inn_ide
        WHERE b.YEAR*100+b.MONTH=periodo_paso AND SUBSTRING(b.pan,1,6)='525384'
    ;


    CREATE TABLE schm_workspace.rsat_mpdt004_unico AS
        SELECT
            a.*
        FROM  schm_workspace.rsat_mpdt004 AS a
            LEFT JOIN (
            SELECT
                rut_rsat,
                siaidcd,
                cuenta_rsat,
                fectrn ,
                hortrn,
                venta_tarjeta,
                codrespu,
                fectrn + hortrn AS fecha_hora
            FROM  schm_workspace.rsat_mpdt004
                WHERE codrespu='000') AS b
                    on(a.siaidcd=b.siaidcd)
                INNER JOIN (
                    SELECT
                        rut_rsat,
                        cuenta_rsat,
                        fectrn ,
                        venta_tarjeta,
                        MAX(fectrn + hortrn) AS fecha_hora
                    FROM  schm_workspace.rsat_mpdt004
                        WHERE codrespu='000'
                    GROUP BY 
                        rut_rsat,
                        cuenta_rsat,
                        fectrn ,
                        venta_tarjeta) AS c
                    ON b.rut_rsat=c.rut_rsat 
                        AND b.cuenta_rsat=c.cuenta_rsat 
                        AND b.fectrn =c.fectrn 
                        AND b.venta_tarjeta =c.venta_tarjeta 
                        AND b.fecha_hora=c.fecha_hora
    ;


    CREATE TABLE schm_workspace.mov_cc_spos4 AS
        SELECT DISTINCT
            a.*,
            B.*,
            CASE 
                WHEN b.nomcom=SUBSTRING(a.de43_1_nombre,1,15) 
                    THEN 1 
                ELSE 0 
            END AS limpio
        FROM schm_workspace.mov_cc_spos3_paso AS a
            LEFT JOIN schm_workspace.rsat_mpdt004_unico AS b
                ON(b.numaut=a.de38_codigo_de_aprobacion) 
                    AND (ltrim(de2_numero_de_tarjeta, '*')=SUBSTRING(b.pan,7,10))
                    AND (((20*100+ano)*10000+(floor(a.de12_fecha_hora_transaccion/1000000)-ano*10000))=date_part(YEAR,b.fectrn)*10000+date_part(month,b.fectrn)*100+date_part(day,b.fectrn)
                    OR a.codfecha=date_part(YEAR,b.fectrn)*10000+date_part(month,b.fectrn)*100+date_part(day,b.fectrn))
    ;


    CREATE TABLE schm_workspace.mov_cc_spos5 AS
        SELECT
            a.*,
            b.cant AS duplicados
        FROM schm_workspace.mov_cc_spos4 AS a
            LEFT JOIN
                (
                SELECT indice,COUNT(indice) AS cant,
                    SUM(monto) AS monto
                FROM schm_workspace.mov_cc_spos4 GROUP BY indice) AS b
                    ON(a.indice=b.indice)
    ;


    CREATE TABLE schm_workspace.mov_cc_spos6 AS
        SELECT
            *
        FROM schm_workspace.mov_cc_spos5
            WHERE duplicados=1
        UNION
        SELECT DISTINCT
            *
        FROM schm_workspace.mov_cc_spos5
            WHERE duplicados>1 
                AND limpio=1
    ;


    CREATE TABLE schm_workspace.mov_cv_spos  as
        SELECT ROW_NUMBER() OVER(
            ) AS indice,
            *,
            CASE
                WHEN tmo_tipotra='D' THEN
                CASE
                    WHEN descripcion IN ('COMPRA NACIONAL') THEN 'Compras Redcompra'
                    WHEN descripcion IN ('COMPRA NACIONAL MCD') THEN 'Compras Redcompra MCD'
                    WHEN descripcion IN ('COMPRA INTERNACIONAL') THEN 'Compras Internacionales'
                    WHEN descripcion IN ('COMPRA INTERNACIONAL MCD') THEN 'Compras Internacionales MCD'
                    WHEN descripcion IN ('CARGO POR PEC') THEN 'PEC'
                    WHEN descripcion IN ('GIRO CAJERO AUTOMATICO') THEN 'Giros ATM'
                    WHEN descripcion IN ('GIRO POR CAJA') THEN 'Giros Caja'
                    WHEN descripcion IN ('GIRO INTERNACIONAL') THEN 'Giro Internacional'
                    WHEN descripcion IN ('TRANSFERENCIA A OTROS BANCOS') THEN 'TEF emitidas Otros Bancos'
                    WHEN descripcion IN ('PAGO TARJETA DE CREDITO') THEN 'Pago de Tarjeta'
                    WHEN descripcion IN ('A CUENTA BANCO RIPLEY','POR TRASPASO A CUENTA')  THEN 'Pago LCA'
                    WHEN descripcion IN ('COSTO DE MANTENCION MENSUAL CUENTA VISTA') THEN 'Comision planes'
                    ELSE 'OTROS CARGOS'
                END
                ELSE ''
            END AS descripcion_cargo
                FROM
                    (SELECT
                        c2.cli_identifica AS rut,
                        c1.tmo_numcue AS cuenta,
                        c1.tmo_fechcon AS fechacon,
                        c1.tmo_fech AS fecha,
                        c1.rub_desc AS descripcion,
                        c1.tmo_val AS monto,
                        c1.con_libre AS desc_negocio,
                        c1.tmo_codmod,
                        c1.tmo_tipotra,
                        c1.tmo_rubro,
                        c1.tmo_numtra,
                        c1.tmo_numcue,
                        c1.tmo_codusr,
                        c1.tmo_sec,
                        c1.tmo_codtra,
                        (
                        SELECT cod_destra
                            FROM  br_dm_prod_bigdata_fisa_db.tgen_codtrans
                                WHERE cod_tra = tmo_codtra AND cod_mod = tmo_codmod
                        ) AS gls_transac,
                        CASE
                            WHEN c1.tmo_tipotra='C'
                                AND c1.rub_desc='DESDE OTROS BANCOS'
                                AND (
                                    c1.con_libre LIKE '%Remuneraciones%' OR
                                    c1.con_libre LIKE '%Anticipos%' OR
                                    c1.con_libre LIKE '%Sueldos%'
                                    )  
                            THEN 1
                            ELSE 0
                        END AS SI_ABR,
                            CASE
                                WHEN c1.tmo_tipotra='D'
                                    AND (c1.con_libre LIKE '%Ripley%' OR c1.con_libre LIKE '%RIPLEY%')
                                    AND  c1.con_libre NOT LIKE '%PAGO%'
                                    THEN 'COMPRA_RIPLEY'
                                ELSE ''
                            END AS compra_ripley,
                            c1.tmo_terminal
                    FROM 
                        (
                        SELECT * 
                        FROM br_dm_prod_bigdata_fisa_db.tcap_tramon /*base de movimientos*/
                            , br_dm_prod_bigdata_fisa_db.tgen_tranrubro /*base descriptiva (para complementar movimientos)*/
                            , br_dm_prod_bigdata_fisa_db.tcap_concepto /*base descriptiva (para complementar movimientos)*/
                        WHERE rub_mod    = tmo_codmod /*unificacion de base de movs con rubro*/
                            AND rub_tra      = tmo_codtra /*unificacion de base de movs con rubro*/
                            AND rub_rubro    = tmo_rubro /*unificacion de base de movs con rubro*/
                            AND con_modulo(+)  = tmo_codmod /*unificacion de base de movs con con_*/
                            AND con_rubro(+)   = tmo_rubro /*unificacion de base de movs con con_*/
                            AND con_numtran(+) = tmo_numtra /*unificacion de base de movs con con_*/
                            AND con_cuenta (+) = tmo_numcue /*unificacion de base de movs con con_*/
                            AND con_codusr(+)  = tmo_codusr /*unificacion de base de movs con con_*/
                            AND con_sec(+)     = tmo_sec /*unificacion de base de movs con con_*/
                            AND con_transa(+)  = tmo_codtra /*unificacion de base de movs con con_*/
                            /*FILTROS DE MOVIMIENTOS*/
                            AND tmo_tipotra in ('D','C') /*D=Cargo, C=Abono*/
                            AND tmo_codpro = 4
                            AND tmo_codtip = 1
                            AND tmo_modo = 'N'
                            AND tmo_val > 1 /*solo montos mayores a 1 peso (mov de prueba)*/
                            AND date_part(year,tmo_fech)*100+date_part(month,tmo_fech)=periodo_paso
                            /*FINAL: QUERY DESDE OPERACIONES*/
                        ) c1
                    LEFT JOIN (
                        SELECT distinct cli_identifica ,vis_numcue
                        FROM br_dm_prod_bigdata_fisa_db.tcli_persona /*MAESTRA DE CLIENTES BANCO*/
                            ,br_dm_prod_bigdata_fisa_db.tcap_vista /*SALDOS CUENTAS VISTAS */
                        WHERE cli_codigo=vis_codcli
                            AND vis_mod=4/*cuenta vista*/
                            AND (VIS_PRO=4/*CV*/ )
                            AND vis_tip=1  /*persona no juridica*/
                        ) c2
                    ON (c1.tmo_numcue=c2.vis_numcue)
                        WHERE c1.rub_desc IN ('COMPRA NACIONAL','COMPRA NACIONAL MCD','COMPRA INTERNACIONAL','COMPRA INTERNACIONAL MCD')
                    );



    CREATE TABLE schm_workspace.mov_cv_spos2 AS
        SELECT DISTINCT
        a.*,
        b.end_point,
        b.de42_card_acceptor_id_code,
        b.de38_codigo_de_aprobacion ,
        ((20*100+ano)*10000+(floor(b.de12_fecha_hora_transaccion/1000000)-ano*10000)) AS de12_fecha_hora_transaccion,
        b.de2_numero_de_tarjeta,
        b.de63_transaction_life_cycle_id,
        b.de63_2_trace_id,
        b.de31_2_acquirer_s_bin,
        b.de3_1_tipo_de_transaccion,
        b.de43_1_nombre,
        b.de26_codigo_categoria_de_comercio_mcc
    FROM schm_workspace.mov_cv_spos AS a
    LEFT JOIN schm_workspace.incoming AS b
    on(a.tmo_terminal=b.de63_2_trace_id) AND b.de3_1_tipo_de_transaccion<>20
    ;


    CREATE TABLE schm_workspace.mov_cv_spos3 AS
        SELECT
        a.*,
        b.cant AS duplicados
    FROM  schm_workspace.mov_cv_spos2 AS a
    LEFT JOIN
        (SELECT indice,count(indice) AS cant,
        sum(monto) AS monto
        FROM schm_workspace.mov_cv_spos2 GROUP BY indice)   AS b
        on(a.indice=b.indice)
    ;


    CREATE TABLE schm_workspace.mov_cv_spos3_paso AS
        SELECT
            indice	,
            rut	,
            cuenta	,
            fechacon,
            fecha,
            descripcion,
            monto	,
            desc_negocio,
            tmo_codmod	,
            tmo_tipotra	,
            tmo_rubro	,
            tmo_numtra,
            tmo_numcue	,
            tmo_codusr,
            tmo_sec,
            tmo_codtra,
            gls_transac	,
            si_abr,
            compra_ripley	,
            tmo_terminal,
            descripcion_cargo,
            end_point,
            de42_card_acceptor_id_code,
            de38_codigo_de_aprobacion	,
            de12_fecha_hora_transaccion,
            de2_numero_de_tarjeta	,
            de63_transaction_life_cycle_id,
            de63_2_trace_id	,
            de31_2_acquirer_s_bin,
            de3_1_tipo_de_transaccion	,
            de43_1_nombre	,
            de26_codigo_categoria_de_comercio_mcc
        FROM schm_workspace.mov_cv_spos3
            WHERE duplicados=1
        UNION ALL
        SELECT 
            a.indice	,
            rut	,
            cuenta	,
            fechacon,
            fecha,
            descripcion,
            monto	,
            desc_negocio,
            tmo_codmod	,
            tmo_tipotra	,
            tmo_rubro	,
            tmo_numtra,
            tmo_numcue	,
            tmo_codusr,
            tmo_sec,
            tmo_codtra,
            gls_transac	,
            si_abr,
            compra_ripley	,
            tmo_terminal,
            descripcion_cargo,
            ''  AS end_point	,
            '' AS de42_card_acceptor_id_code,
            '' AS de38_codigo_de_aprobacion,
            0 AS de12_fecha_hora_transaccion,
            '' AS de2_numero_de_tarjeta,
            '' AS de63_transaction_life_cycle_id,
            '' AS de63_2_trace_id	,
            0 AS de31_2_acquirer_s_bin	,
            0 AS de3_1_tipo_de_transaccion	,
            '' AS de43_1_nombre	,
            0 AS de26_codigo_categoria_de_comercio_mcc
        FROM schm_workspace.mov_cv_spos AS a
        INNER JOIN (SELECT DISTINCT indice FROM schm_workspace.mov_cv_spos3 WHERE duplicados>1) AS b
            ON(a.indice=b.indice);


    CREATE TABLE schm_workspace.mov_cv_spos4 AS
        SELECT DISTINCT
            a.*,
            B.*,
            CASE 
                WHEN b.nomcom=SUBSTRING(a.de43_1_nombre,1,15) THEN 1 
                ELSE 0 
            END AS limpio
        FROM schm_workspace.mov_cv_spos3_paso AS a
        LEFT JOIN schm_workspace.rsat_mpdt004 AS b
            ON(
                (b.numaut=a.de38_codigo_de_aprobacion) AND (ltrim(de2_numero_de_tarjeta, '*')=SUBSTRING(b.pan,7,10))
            )
            AND (
                    (
                        (20*100+ano)*10000+(floor(a.de12_fecha_hora_transaccion/1000000)-ano*10000)
                    )=date_part(YEAR,b.fectrn)*10000+date_part(month,b.fectrn)*100+date_part(day,b.fectrn)
                    OR cast(TO_CHAR( a.fecha,'YYYYMMDD') AS INT)=date_part(YEAR,b.fectrn)*10000+date_part(month,b.fectrn)*100+date_part(day,b.fectrn)
                )
    ;


    CREATE TABLE schm_workspace.mov_cv_spos5 AS
        SELECT
            a.*,
            b.cant AS duplicados
        FROM  schm_workspace.mov_cv_spos4 AS a
        LEFT JOIN
            (SELECT indice,COUNT(indice) AS cant,
            SUM(monto) AS monto
            FROM schm_workspace.mov_cv_spos4 GROUP BY indice
            ) AS b
        ON(a.indice=b.indice)
    ;


    CREATE TABLE schm_workspace.mov_cv_spos6 AS
        SELECT
            *
        FROM schm_workspace.mov_cv_spos5
            WHERE duplicados=1
        UNION
        SELECT DISTINCT
            *
        FROM schm_workspace.mov_cv_spos5
            WHERE duplicados>1 AND limpio=1
    ;


    CREATE TABLE schm_workspace.trx_mpdt666 AS
        SELECT
            codent1,
            centalta1,
            cuenta1,
            codent2,
            centalta2,
            CASE 
                WHEN codent2='0001' THEN cast(cuenta2 AS bigint) 
                ELSE 0 
            END AS cuenta2
        FROM br_dm_prod_bigdata_segcom2_db.segcom_mpdt666
    ;


    CREATE TABLE schm_workspace.mov_cv_spos7 AS
        SELECT
            a.*,
            b.codent1,
            b.centalta1,
            b.cuenta1
        FROM schm_workspace.mov_cv_spos6 AS a
        LEFT JOIN schm_workspace.trx_mpdt666 AS b
            ON(a.cuenta=b.cuenta2);


    CREATE TABLE schm_workspace.mov_cc_spos7 AS
        SELECT
            a.*,
            b.codent1,
            b.centalta1,
            b.cuenta1
        FROM schm_workspace.mov_cc_spos6 AS a
        LEFT JOIN schm_workspace.trx_mpdt666 AS b
            ON(a.cuenta=b.cuenta2)
    ;


    CREATE TABLE schm_workspace.mov_cv_spos8 AS
        SELECT
            a.*
            ,CASE 
                WHEN a.pan IS NULL AND b.cuenta_rsat IS NOT NULL THEN 1 
                ELSE 0 
            END  AS cruce
            ,b.rut_rsat	as	rut_rsat_V2
            ,b.siaidcd	as	siaidcd_V2
            ,b.codent	as	codent_V2
            ,b.centalta	as	centalta_V2
            ,b.producto	as	producto_V2
            ,b.cuenta_rsat	as	cuenta_rsat_V2
            ,b.codpais	as	codpais_V2
            ,b.localidad	as	localidad_V2
            ,b.fectrn	as	fectrn_V2
            ,b.hortrn	as	hortrn_V2
            ,b.codact	as	codact_V2
            ,b.codcom	as	codcom_V2
            ,b.codigo_comercio_ant	as	codigo_comercio_ant_V2
            ,b.nomcom	as	nomcom_V2
            ,b.venta_tarjeta	as	venta_tarjeta_V2
            ,b.tipfran	as	tipfran_V2
            ,b.totcuotas	as	totcuotas_V2
            ,b.porint	as	porint_V2
            ,b.pan	as	pan_V2
            ,b.pan2	as	pan2_V2
            ,b.tipofac	as	tipofac_V2
            ,b.impcca	as	impcca_V2
            ,b.clamoncca	as	clamoncca_V2
            ,b.impdiv	as	impdiv_V2
            ,b.modentdat	as	modentdat_V2
            ,b.sesionori	as	sesionori_V2
            ,b.sesionsia	as	sesionsia_V2
            ,b.codred	as	codred_V2
            ,b.indnorcor	as	indnorcor_V2
            ,b.ind_online	as	ind_online_V2
            ,b.numaut	as	numaut_V2
            ,b.codrespu	as	codrespu_V2
        FROM schm_workspace.mov_cv_spos7 AS a
        LEFT JOIN schm_workspace.rsat_mpdt004_unico AS b
            ON(a.cuenta1=b.cuenta_rsat) 
                AND cast(TO_CHAR( a.fecha,'YYYYMMDD') AS INT)=date_part(YEAR,b.fectrn)*10000+date_part(month,b.fectrn)*100+date_part(day,b.fectrn)
                AND a.monto=b.venta_tarjeta
                AND SUBSTRING(UPPER(desc_negocio),1,15)=UPPER(b.nomcom)
    ;


    CREATE TABLE schm_workspace.mov_cc_spos8 AS
        SELECT
            a.*
            ,CASE 
                WHEN a.pan IS NULL AND b.cuenta_rsat IS NOT NULL THEN 1 
                ELSE 0 
            END  AS cruce
            ,b.rut_rsat	as	rut_rsat_V2
            ,b.siaidcd	as	siaidcd_V2
            ,b.codent	as	codent_V2
            ,b.centalta	as	centalta_V2
            ,b.producto	as	producto_V2
            ,b.cuenta_rsat	as	cuenta_rsat_V2
            ,b.codpais	as	codpais_V2
            ,b.localidad	as	localidad_V2
            ,b.fectrn	as	fectrn_V2
            ,b.hortrn	as	hortrn_V2
            ,b.codact	as	codact_V2
            ,b.codcom	as	codcom_V2
            ,b.codigo_comercio_ant	as	codigo_comercio_ant_V2
            ,b.nomcom	as	nomcom_V2
            ,b.venta_tarjeta	as	venta_tarjeta_V2
            ,b.tipfran	as	tipfran_V2
            ,b.totcuotas	as	totcuotas_V2
            ,b.porint	as	porint_V2
            ,b.pan	as	pan_V2
            ,b.pan2	as	pan2_V2
            ,b.tipofac	as	tipofac_V2
            ,b.impcca	as	impcca_V2
            ,b.clamoncca	as	clamoncca_V2
            ,b.impdiv	as	impdiv_V2
            ,b.modentdat	as	modentdat_V2
            ,b.sesionori	as	sesionori_V2
            ,b.sesionsia	as	sesionsia_V2
            ,b.codred	as	codred_V2
            ,b.indnorcor	as	indnorcor_V2
            ,b.ind_online	as	ind_online_V2
            ,b.numaut	as	numaut_V2
            ,b.codrespu	as	codrespu_V2
        FROM schm_workspace.mov_cc_spos7 AS a
        LEFT JOIN schm_workspace.rsat_mpdt004_unico AS b
            ON(a.cuenta1=b.cuenta_rsat) 
                AND cast(TO_CHAR( a.fecha,'YYYYMMDD') AS INT)=date_part(YEAR,b.fectrn)*10000+date_part(month,b.fectrn)*100+date_part(day,b.fectrn)
                AND a.monto=b.venta_tarjeta
                AND SUBSTRING(UPPER(desc_negocio),1,15)=UPPER(b.nomcom)
    ;

    --GENERAR TABLON UNICO
    CREATE TABLE schm_workspace.mov_cc_spos9 AS
        SELECT
            indice
            ,rut
            ,cuenta	 AS cuenta_fisa
            ,fechacon
            ,fecha
            ,descripcion AS descripcion_fisa
            ,monto AS venta_tarjeta
            ,desc_negocio AS nombre_comercio_fisa
            ,tmo_codmod
            ,tmo_tipotra
            ,tmo_rubro
            ,tmo_numtra
            ,tmo_codusr
            ,tmo_sec
            ,tmo_codtra
            ,gls_transac
            ,CASE 
                WHEN compra_ripley='COMPRA_RIPLEY' THEN 'TNDA' 
                ELSE 'SPOS' 
            END AS tipo_compra
            ,tmo_terminal
            ,descripcion_cargo AS descripcion_cargo_fisa
            ,COALESCE(coalesce(de42_card_acceptor_id_code,codcom),codcom_v2) AS codigo_comercio
            ,COALESCE(pan,pan_v2) AS PAN
            ,COALESCE(coalesce(Codent1,codent),codent_v2) AS codent
            ,COALESCE(coalesce(centalta1,centalta),centalta_v2) AS centalta
            ,COALESCE(coalesce(cuenta1,cuenta_rsat),cuenta_rsat_v2) AS cuenta
            ,COALESCE(producto,producto_v2) AS producto
            ,COALESCE(nomcom,nomcom_v2) AS Nombre_Comercio
            ,COALESCE(codact,codact_v2) AS codact
            ,COALESCE(codpais,codpais_v2) AS codpais
            ,COALESCE(tipfran,tipfran_v2) AS tipfran
            ,COALESCE(tipofac,tipofac_v2) AS tipofac
            ,COALESCE(ind_online,ind_online_v2) AS ind_online
            ,COALESCE(modentdat,modentdat_v2	) AS modentdat
            ,COALESCE(numaut,numaut_v2	) AS numaut
            ,COALESCE(codrespu,codrespu_v2	) AS codrespu
            ,COALESCE(siaidcd,siaidcd_v2	) AS siaidcd
            ,de43_1_nombre AS nombre_incoming
            ,de26_codigo_categoria_de_comercio_mcc AS codact_incoming
        FROM schm_workspace.mov_cc_spos8
    ;


    CREATE TABLE schm_workspace.mov_cv_spos9 AS
        SELECT
            indice
            ,rut
            ,cuenta	 AS cuenta_fisa
            ,fechacon
            ,fecha
            ,descripcion AS descripcion_fisa
            ,monto AS venta_tarjeta
            ,desc_negocio AS nombre_comercio_fisa
            ,tmo_codmod
            ,tmo_tipotra
            ,tmo_rubro
            ,tmo_numtra
            ,tmo_codusr
            ,tmo_sec
            ,tmo_codtra
            ,gls_transac
            ,CASE WHEN compra_ripley='COMPRA_RIPLEY' THEN 'TNDA' ELSE 'SPOS' END AS tipo_compra
            ,tmo_terminal
            ,descripcion_cargo AS descripcion_cargo_fisa
            ,COALESCE(coalesce(de42_card_acceptor_id_code,codcom),codcom_v2) AS codigo_comercio
            ,COALESCE(pan,pan_v2) AS PAN
            ,COALESCE(coalesce(Codent1,codent),codent_v2) AS codent
            ,COALESCE(coalesce(centalta1,centalta),centalta_v2) AS centalta
            ,COALESCE(coalesce(cuenta1,cuenta_rsat),cuenta_rsat_v2) AS cuenta
            ,COALESCE(producto,producto_v2) AS producto
            ,COALESCE(nomcom,nomcom_v2) AS Nombre_Comercio
            ,COALESCE(codact,codact_v2) AS codact
            ,COALESCE(codpais,codpais_v2) AS codpais
            ,COALESCE(tipfran,tipfran_v2) AS tipfran
            ,COALESCE(tipofac,tipofac_v2) AS tipofac
            ,COALESCE(ind_online,ind_online_v2) AS ind_online
            ,COALESCE(modentdat,modentdat_v2	) AS modentdat
            ,COALESCE(numaut,numaut_v2	) AS numaut
            ,COALESCE(codrespu,codrespu_v2	) AS codrespu
            ,COALESCE(siaidcd,siaidcd_v2	) AS siaidcd
            ,de43_1_nombre AS nombre_incoming
            ,de26_codigo_categoria_de_comercio_mcc AS codact_incoming
    FROM schm_workspace.mov_cv_spos8
    ;


    CREATE TABLE schm_workspace.movimientos_debito AS
        SELECT
            periodo_paso AS periodo,
            'CTA CTE' AS tipo,
            *
        FROM schm_workspace.mov_cc_spos9
        UNION ALL
        SELECT
            periodo_paso AS periodo,
            'CTA VISTA' AS tipo,
            *
        FROM schm_workspace.mov_cv_spos9;

        CREATE TABLE schm_workspace.movimientos_debito2 AS
            SELECT
            a.*,
            CASE WHEN a.ind_online in ('81','10') THEN 1
            ELSE 0 END  AS si_digital
            ,b.desact AS  actividad_comercio
        FROM schm_workspace.movimientos_debito AS a
        LEFT JOIN  br_dm_prod_bigdata_reporitf_db.mpdt039 AS b
            ON(a.codact = b.codact)
    ;

    CREATE TABLE schm_workspace.movimientos_debito3 AS
        SELECT
            periodo,
            tipo,
            indice,
            rut	,
            cuenta_fisa	,
            fechacon,
            fecha	,
            descripcion_fisa,
            venta_tarjeta,
            nombre_comercio_fisa,
            tmo_codmod	,
            tmo_tipotra	,
            tmo_rubro	,
            tmo_numtra,
            tmo_codusr,
            tmo_sec	,
            tmo_codtra	,
            gls_transac	,
            tipo_compra	,
            tmo_terminal,
            descripcion_cargo_fisa,
            codigo_comercio AS codigo_comercio_texto,
            CASE
                WHEN len(TRIM(codigo_comercio))>0 AND len(TRIM(codigo_comercio))>len(regexp_replace(TRIM(codigo_comercio),'([^0-9.])','')) 
                    THEN -1
                WHEN len(TRIM(codigo_comercio))>0 AND len(TRIM(codigo_comercio))=len(regexp_replace(TRIM(codigo_comercio),'([^0-9.])','')) 
                    THEN CAST(codigo_comercio AS BIGINT)
                ELSE -1
            END AS codigo_comercio,
            pan	,
            codent,
            centalta	,
            cuenta	,
            producto,
            nombre_comercio,
            codact,
            codpais,
            tipfran	,
            tipofac,
            ind_online,
            modentdat	,
            numaut	,
            codrespu	,
            siaidcd	,
            nombre_incoming	,
            codact_incoming	,
            si_digital	,
            actividad_comercio,
            ROW_NUMBER() OVER(PARTITION BY  indice,periodo,tipo)  AS unicidad
        FROM schm_workspace.movimientos_debito2
    ;



    CREATE TABLE schm_workspace.movimientos_debito4 AS
        SELECT
            periodo,
            tipo,
            indice,
            rut	,
            cuenta_fisa	,
            fechacon,
            fecha	,
            descripcion_fisa,
            venta_tarjeta,
            nombre_comercio_fisa,
            tmo_codmod	,
            tmo_tipotra	,
            tmo_rubro	,
            tmo_numtra,
            tmo_codusr,
            tmo_sec	,
            tmo_codtra	,
            gls_transac	,
            tipo_compra	,
            tmo_terminal,
            descripcion_cargo_fisa,
            codigo_comercio_texto,
            codigo_comercio,
            pan	,
            codent,
            centalta	,
            cuenta	,
            producto,
            nombre_comercio,
            codact,
            codpais,
            tipfran	,
            tipofac,
            ind_online,
            modentdat	,
            numaut	,
            codrespu	,
            siaidcd	,
            nombre_incoming	,
            codact_incoming	,
            si_digital	,
            actividad_comercio
        FROM schm_workspace.movimientos_debito3
            WHERE unicidad=1
    ;


    DELETE
        FROM schm_data_analytics.mpdg_movimientos_debito
    WHERE periodo=periodo_paso;


    INSERT INTO  schm_data_analytics.mpdg_movimientos_debito
        SELECT
            *
        FROM schm_workspace.movimientos_debito4
    ;


    DROP TABLE IF EXISTS schm_workspace.incoming;
    DROP TABLE IF EXISTS schm_workspace.rsat_mpdt004;
    DROP TABLE IF EXISTS schm_workspace.rsat_mpdt004_unico;
    DROP TABLE IF EXISTS schm_workspace.trx_mpdt666;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos2;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos3;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos3_paso;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos4;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos5;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos6;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos7;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos8;
    DROP TABLE IF EXISTS schm_workspace.mov_cc_spos9;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos2;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos3;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos3_paso;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos4;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos5;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos6;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos7;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos8;
    DROP TABLE IF EXISTS schm_workspace.mov_cv_spos9;
    DROP TABLE IF EXISTS schm_workspace.movimientos_debito;
    DROP TABLE IF EXISTS schm_workspace.movimientos_debito2;
    DROP TABLE IF EXISTS schm_workspace.movimientos_debito3;
    DROP TABLE IF EXISTS schm_workspace.movimientos_debito4;

   /*   ===========================================================================================================
    === Control de versiones visual ===
    2023-09-28  -- v03  --  David Vásquez   --  Orden del código
    2023-09-28  -- v02  --  Pedro y David   --  Ajustes 02
    2023-09-28  -- v02  --  Pedro y David   --  Ajustes 01
    2023-09-28  -- v01  --  Pedro Muñoz --  Versión original.

    === Información adicional:
    Actividad de los clientes
    ===========================================================================================================
*/
	END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_pagos_digitales(periodo_paso int4)
	LANGUAGE plpgsql
AS $$
	
	

DECLARE 

	time1 datetime; 

begin

time1 = getdate();

DROP TABLE IF EXISTS schm_workspace.pagos_digitales;
DROP TABLE IF EXISTS schm_workspace.pagos_digitales_v2;

create table schm_workspace.pagos_digitales as
select fecfac
	,impfac as monto
	,CODCOM
	,NOMCOMRED
	,DESTIPFAC
	,null as espago
	,sucursal
	,a.CODENT
	,CENTALTA
	,CUENTA
	,a.TIPOFAC 
	,upper(tgmsu_nom_suc) as descripcion_sucu
	,CASE 
		WHEN cast(codcom as int) IN (9774, 12229, 13139) THEN 'ChileExpress' 
        WHEN cast(codcom as int) in (7453,9715,9726) AND trim(replace(left(a.sucursal,4),0,'')) <> '39' and a.sucursal not in ('00510936','00120012') then 'Servipag'
		when cast(codcom as int) in (7453,9715,9726) and a.sucursal in ('00510936','00120012') then 'Servipag_internet'
		when cast(codcom as int) in (7453,9715,9726) and trim(replace(left(a.sucursal,4),0,'')) = '39' then 'HB/APP Servipag'
		when cast(codcom as int) in (9775, 13138) then 'Sencillito'
        WHEN cast(codcom as int) = 9727 THEN 'Santander' 
        WHEN cast(codcom as int) <> 1 and (CASE WHEN cast(codcom as int) in (9774, 12229, 13139, 7453, 9715, 9726, 9775, 13138, 9727, 9818, 9819, 9820) THEN 1 ELSE 0 END) = 0 THEN 'HB/APP CV'
        WHEN cast(codcom as int) = 1 AND upper(DESTIPFAC) = 'PAGO EMPRESA EXTERNA' THEN 'Cobranzas' 
        WHEN cast(codcom as int) = 1 AND upper(DESTIPFAC) = ('PAGO POR TERMINAL FINANCIERO') THEN 'AboTerminal'
        WHEN cast(codcom as int) = 1 AND upper(DESTIPFAC) = ('PAGO OPX') THEN 'AboOPX' 
        WHEN cast(codcom as int) = 1 AND upper(DESTIPFAC) = ('PAGO ON-LINE O EXTERNO') THEN 'AboONLINE' 
        WHEN cast(codcom as int) = 1 AND upper(DESTIPFAC) IN ('ABONO PREPAGO', 'PRONTO PAGO ON LINE', 'PRONTO PAGO PARCIAL', 'PRONTO PAGO TOTAL') THEN 'PPago' 
        WHEN upper(tgmsu_nom_suc)  in ('CHILE-EXPRESS') THEN 'ChileExpress'
        WHEN upper(tgmsu_nom_suc)  in ('SENCILLITO') THEN 'Sencillito' 
        WHEN cast(codcom as int) IN (9819) THEN 'CAJA VECINA'
        WHEN cast(codcom as int) IN (9820) and left(a.sucursal,4)='0452' THEN 'UNIRED'
        WHEN cast(codcom as int) IN (9820) and left(a.sucursal,4)='0454' THEN 'UNIRED WEB' 
        WHEN cast(codcom as int) IN (9818) THEN 'HB/APP KHIPU'
        ELSE 'AbonoNormal' END AS Canal
    ,case 
	 	when lower(canal) in ('abononormal', 'aboonline', 'aboterminal', 'ppago') and upper(tgmsu_nom_suc) <> 'RECAUDACION BANCO RIPLEY' THEN 'Tienda' 
		when lower(canal) in ('abononormal', 'aboonline', 'aboterminal', 'ppago') and upper(tgmsu_nom_suc) = 'RECAUDACION BANCO RIPLEY' THEN 'TR Banco Ripley' 
		when lower(canal) in ('hb/app cv', 'santander', 'hb/app servipag', 'hb/app khipu') THEN 'Internet' 
		when lower(canal) in ('chileexpress','caja vecina','sencillito', 'unired', 'unired web') THEN 'Batch' 
		ELSE 'Servipag' end as canal_general,
		date_part(YEAR,fecfac)*100+date_part(month,fecfac) AS periodo
FROM br_dm_prod_bigdata_reporitf_db.MPDT012 a 
left join br_dm_prod_bigdata_reporitf_db.mpdt044 m 
	on a.tipofac = m.tipofac
	and a.codent = m.codent
	and a.indnorcor  = m.indnorcor 
left join schm_planificacion_comercial.test_sucursales bms 
	on left(sucursal,4)::int = bms.tgmsu_cod_suc_k 
WHERE fecfac BETWEEN to_date(periodo_paso,'YYYYMMDD') AND last_day(to_date(periodo_paso,'YYYYMMDD'))
and a.TIPOFAC in (1,41,42,43,52,53,54,67,62,55,68,91,97,99,208,209,407,411,415,1495,4000) 
AND upper(a.ORIGENOPE) <> 'MIGR'
AND a.LINEA <>'0000' 
AND a.INDMOVANU =0 
AND a.TIPOFAC <> 66 
and a.SUCURSAL not in ('09O010200','00390008C','00390008I','09990200 82');


update schm_workspace.pagos_digitales
set descripcion_sucu='Servipag'
where descripcion_sucu is null 
and lower(nomcomred)='servipag';

update schm_workspace.pagos_digitales
set descripcion_sucu='SIN SUCU'
where descripcion_sucu is null ;

update schm_workspace.pagos_digitales
set espago=1
WHERE upper(DESCRIPCION_SUCU) not in('CONDONAC.INT.EMP.COBRANZAS','REV. INT. MOR.','OPERACIONES CENTRAL','SERVICIOS CENTRALES','REVERSA INT.','CARGO MANT')
and upper(destipfac) not in ('OPCION DE PAGO','ABONO CASTIGO','PAGO CASTIGO')
and espago is null;

UPDATE schm_workspace.pagos_digitales
SET espago=1
WHERE upper(DESCRIPCION_SUCU)='OPERACIONES CENTRAL' 
and CODCOM='000000000007453';

UPDATE schm_workspace.pagos_digitales
SET espago=1
WHERE upper(DESCRIPCION_SUCU)='OPERACIONES CENTRAL' 
and CODCOM='000000000009753';

UPDATE schm_workspace.pagos_digitales
SET espago=0
WHERE lower(DESCRIPCION_SUCU)='REV.GASTO MORA' ;

UPDATE schm_workspace.pagos_digitales
SET espago=0
WHERE lower(DESCRIPCION_SUCU)='servicios call center' ;

UPDATE schm_workspace.pagos_digitales
SET espago=0
WHERE espago is null;

UPDATE schm_workspace.pagos_digitales
SET espago=0
WHERE upper(DESTIPFAC)='DESCTO PREPAGO';

CREATE TABLE schm_workspace.pagos_digitales_v2 AS 
select t1.*,
CAST(t3.pemid_gls_nro_dct_ide_k AS INTEGER) AS rut
,t3.pemid_dvr_nro_dct_ide AS dv
from schm_workspace.pagos_digitales t1 
left JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 t2
ON (t1.codent = t2.codent)
AND (t1.centalta = t2.centalta)
AND (t1.cuenta = t2.cuenta)
INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide t3
ON (t2.identcli::integer = t3.pemid_nro_inn_ide::integer)
	        ;

delete schm_data_analytics.mdpg_pagos_digitales
where periodo=periodo_paso;

insert into schm_data_analytics.mdpg_pagos_digitales
select *
from schm_workspace.pagos_digitales_v2;

update schm_planificacion_comercial.cargas_tablas 
set uso = uso +1, usado = getdate(), duracion = dateadd(sec,datediff(sec, time1, getdate()), time'00:00:00')
    where lower(sp) = 'sp_pagos';

   DROP TABLE IF EXISTS schm_workspace.pagos_digitales;
DROP TABLE IF EXISTS schm_workspace.pagos_digitales_v2;

	/*	===========================================================================================================
		=== Control de versiones visual ===
		2023-11-21 -- v02 -- Pedro Muñoz	--	Se actualiza delete e insert apuntando a nueva tabla en schm_data_analytics
		2023-11-15 -- v01 -- Pedro Muñoz	--	Actualización
		2023-00-00 -- v00 -- Neoris		--	Versión original.

		=== Información adicional:
		Proceso que extrae los pagos realizados de la TC
		===========================================================================================================
	*/

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_seguimiento_pec(indice int4)
	LANGUAGE plpgsql
AS $$
	 

BEGIN 

    DROP TABLE IF EXISTS schm_workspace.iplaza_pec_tc;
    DROP TABLE IF EXISTS schm_workspace.iplaza_periodos;
    DROP TABLE IF EXISTS schm_workspace.tmp_tnda_iplaza_date;
    DROP TABLE IF EXISTS schm_workspace.Mov_Cuenta_Corriente;
    DROP TABLE IF EXISTS schm_workspace.Mov_Cuenta_vista;
    DROP TABLE IF EXISTS schm_workspace.seg_pec_cc;
    DROP TABLE IF EXISTS schm_workspace.seg_pec_td;
    DROP TABLE IF EXISTS schm_workspace.seg_pec_td_ccte;
    DROP TABLE IF EXISTS schm_workspace.agrupado_td_ccte2;


    CREATE TABLE schm_workspace.tmp_tnda_iplaza_date(
    nombre VARCHAR(64), value date )
    ;

    INSERT INTO schm_workspace.tmp_tnda_iplaza_date (
    		 nombre
    		,value)
    VALUES('INI_num',TO_DATE(DATE_TRUNC('month', cast(dateadd(MONTH,-indice, CURRENT_DATE) as date)), 'YYYY/MM/DD')),
    	  ('FIN_num',TO_DATE(last_day(dateadd(MONTH,-indice, CURRENT_DATE)), 'YYYY/MM/DD'))
    ;

    CREATE TABLE schm_workspace.iplaza_periodos(
    nombre VARCHAR(64), value INT )
    ;

    INSERT INTO schm_workspace.iplaza_periodos (nombre,value)
    VALUES('PERIODO',DATE_PART(YEAR,dateadd(MONTH,-indice, CURRENT_DATE))*100+DATE_PART(MONTH,DATEADD(MONTH,-indice, current_date)))
    ;

    --##############################################################################################################################
    -- TRANSACCIONES TC
    --##############################################################################################################################

    CREATE TABLE schm_workspace.iplaza_pec_tc AS
    SELECT
    	PERIODO 
    	,rut 
    	,fecha
    	,nombre_comercio
    	,(COUNT(RUT)) AS TRX  
    	,(SUM(VENTA_TARJETA)) AS MONTO 
    	,Tipo_Tarjeta
    FROM schm_data_analytics.spos_aut
    WHERE codigo_comercio=9817 AND nombre_comercio='Servipag' 
    AND periodo=(SELECT value FROM schm_workspace.iplaza_periodos WHERE nombre='PERIODO')
    GROUP BY
    	PERIODO 
    	,rut
    	,fecha
    	,nombre_comercio
    	,Tipo_Tarjeta
    ;

    --##############################################################################################################################
    -- TRANSACCIONES CCTE
    --##############################################################################################################################

    -- MOVIMIENTOS DE CUENTA CORRIENTE
    CREATE TABLE schm_workspace.Mov_Cuenta_Corriente AS
    SELECT 
        *
        ,CASE 
            WHEN tmo_tipotra='C' THEN 
            CASE 
                WHEN DESCRIPCION IN ('VALOR EFECTIVO','EN EFECTIVO') AND GLS_TRANSAC ='DEPOSITO' AND  SI_ABR<>1  THEN 'Depósitos en Efectivo' 
                WHEN DESCRIPCION IN ('CON DOCUMENTOS') AND GLS_TRANSAC ='DEPOSITO' AND SI_ABR<>1 THEN 'Depósitos con Documento' 
                WHEN DESCRIPCION IN ('TRANSFERENCIA DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas' 
                WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas' 
                WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR=1 THEN 'Abono de Remuneraciones' 
                WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 and DESC_NEGOCIO LIKE '%Proveedores%' THEN 'TEF Recibidas' 
                WHEN DESCRIPCION IN ('POR REGULARIZACION') AND  SI_ABR<>1 THEN 'Otros (pago proveedores)' 
                WHEN DESCRIPCION IN ('DESDE LINEA DE CREDITO') AND GLS_TRANSAC ='TRASPASO DE FONDOS' AND  SI_ABR<>1 THEN 'Traspaso desde LCA'
                WHEN DESCRIPCION IN ('AVANCE DESDE TARJETA DE CREDITO BANCO RIPLEY') AND  SI_ABR<>1 THEN 'Avance desde Tarjeta Ripley' 
                WHEN DESCRIPCION IN ('DEVOLUCION COMISION') AND  SI_ABR<>1 THEN 'DEVOLUCION COMISION' 
                WHEN DESCRIPCION IN ('TRANSFERENCIA DESDE CREDITO') AND  SI_ABR<>1 THEN 'Traspaso desde LCA' 
                ELSE 'OTROS ABONOS' 
            END ELSE ''
        END AS Descripcion_Abono
        
        ,CASE 
            WHEN tmo_tipotra='D' THEN 
            CASE
                WHEN DESCRIPCION IN ('COMPRA NACIONAL CTA CTE') THEN 'Compras Redcompra' 
                WHEN DESCRIPCION IN ('COMPRA INTERNACIONAL CTA CTE') THEN 'Compras Internacionales' 
                WHEN DESCRIPCION IN ('CARGO POR PEC') THEN 'PEC' 
                when DESCRIPCION IN ('GIRO ATM INTERNACIONAL CTA CTE') then 'Giros internacional CTA CTE'
                when DESCRIPCION IN ('GIRO ATM NACIONAL CTA CTE') then 'Giros ATM CTA CTE'
                WHEN DESCRIPCION IN ('GIRO POR CAJA') THEN 'Giros Caja'
                WHEN DESCRIPCION IN ('TRANSFERENCIA A OTROS BANCOS') THEN 'TEF emitidas Otros Bancos'
                WHEN DESCRIPCION IN ('PAGO TARJETA DE CREDITO') THEN 'Pago de Tarjeta' 
                WHEN DESCRIPCION IN ('A CUENTA BANCO RIPLEY','POR TRASPASO A CUENTA')  THEN 'Pago LCA'
                WHEN  DESCRIPCION IN ('COSTO DE MANTENCION MENSUAL CTA CTE') then 'Comision planes'
                WHEN DESCRIPCION IN ('IVA COSTO DE MANTENCION MENSUAL CTA CTE') then 'IVA Com cta cte'
                ELSE 'OTROS CARGOS' 
            END ELSE ''
        END AS Descripcion_Cargo 

    FROM ( 
        SELECT 
            c2.cli_identifica AS rut
            ,c2.cli_identifica_dv AS dv
            ,cast(schm_artifacts.f_period(DATEADD(month, 0, c1.tmo_fechcon)::DATE) as integer) as Periodo_Cont
            ,cast(schm_artifacts.f_period(DATEADD(month, 0, c1.tmo_fech)::DATE) as integer) as Periodo_trx
            ,c1.tmo_numcue AS CUENTA
            ,c1.tmo_fechcon AS FECHACON
            ,c1.tmo_fech AS FECHA
            ,c1.rub_desc AS DESCRIPCION
            ,c1.tmo_val AS MONTO
            ,c1.con_libre AS Desc_negocio
            ,c1.tmo_codmod
            ,c1.tmo_tipotra
            ,c1.tmo_rubro
            ,c1.tmo_numtra
            ,c1.tmo_numcue
            ,c1.tmo_codusr
            ,c1.tmo_sec
            ,c1.tmo_codtra
            ,(  SELECT 
                    cod_destra 
                FROM br_dm_prod_bigdata_fisa_db.tgen_codtrans 
                WHERE 
                    cod_tra = tmo_codtra 
                    AND cod_mod = tmo_codmod 
            ) AS gls_transac
            
            ,CASE 
                WHEN c1.tmo_tipotra='D' THEN 'CARGO' 
                WHEN c1.tmo_tipotra='C' THEN 'ABONO' 
            END AS Tipo_Movimiento
            
            ,CASE 
                WHEN c1.tmo_tipotra='C' 
                AND c1.rub_desc='DESDE OTROS BANCOS' 
                AND (   c1.con_libre LIKE '%Remuneraciones%' OR 
                        c1.con_libre LIKE '%Anticipos%' OR 
                        c1.con_libre LIKE '%Sueldos%'
                    )  THEN 1 
                ELSE 0 
            END AS SI_ABR 
            
            ,CASE 
                WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS' 
                    AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre LIKE '%Sueldos%')
                    AND c1.con_libre LIKE '%BANCO RIPLEY%' THEN 'BANCO RIPLEY' 
                WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS' 
                    AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre LIKE '%Sueldos%')
                    AND c1.con_libre LIKE '%CAR S.A.%' THEN 'CAR' 
                WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS' 
                    AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre LIKE '%Sueldos%')
                    AND c1.con_libre LIKE '%RIPLEY STORE%' THEN 'RIPLEY STORE' 
                WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS' 
                    and ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre LIKE '%Sueldos%')
                    AND (   c1.con_libre NOT LIKE ('%RIPLEY STORE%') OR 
                            c1.con_libre NOT LIKE ('%CAR S.A.%') OR 
                            c1.con_libre NOT LIKE ('%BANCO RIPLEY%') 
                        ) THEN 'OTROS BANCOS' 
                ELSE ''
            END AS Descripcion_ABR
            
            ,CASE 
                WHEN c1.tmo_tipotra='D' 
                    AND (c1.con_libre LIKE '%Ripley%' OR c1.con_libre LIKE '%RIPLEY%') 
                    AND  c1.con_libre NOT LIKE '%PAGO%' 
                THEN 'COMPRA_RIPLEY' 
                ELSE ''
            END AS COMPRA_RIPLEY


        FROM (  SELECT
                    * 
                FROM  br_dm_prod_bigdata_fisa_db.tcap_tramon /*base de movimientos*/ 
                    , br_dm_prod_bigdata_fisa_db.TGEN_TRANRUBRO /*base descriptiva (para complementar movimientos)*/ 
                    , br_dm_prod_bigdata_fisa_db.tcap_concepto /*base descriptiva (para complementar movimientos)*/ 
        
                WHERE rub_mod    = tmo_codmod /*unificacion de base de movs con rubro*/ 
                    AND rub_tra      = tmo_codtra /*unificacion de base de movs con rubro*/ 
                    AND rub_rubro    = tmo_rubro /*unificacion de base de movs con rubro*/ 
                
                    AND con_modulo(+)  = tmo_codmod /*unificacion de base de movs con con_*/ 
                    AND con_rubro(+)   = tmo_rubro /*unificacion de base de movs con con_*/ 
                    AND con_numtran(+) = tmo_numtra /*unificacion de base de movs con con_*/ 
                    AND con_cuenta (+) = tmo_numcue /*unificacion de base de movs con con_*/ 
                    AND con_codusr(+)  = tmo_codusr /*unificacion de base de movs con con_*/ 
                    AND con_sec(+)     = tmo_sec /*unificacion de base de movs con con_*/ 
                    AND con_transa(+)  = tmo_codtra /*unificacion de base de movs con con_*/ 
                    /*FILTROS DE MOVIMIENTOS*/ 
                    AND tmo_tipotra IN ('D','C') /*D=Cargo, C=Abono*/ 
                    AND tmo_codmod=4
                    AND tmo_codpro = 1 
                    AND tmo_codtip = 1 
                    AND tmo_modo = 'N' 
                    AND tmo_val >= 1 /*solo montos mayores a 1 peso (mov de prueba)*/ 
                
                    AND  tmo_fech>= (SELECT value FROM schm_workspace.tmp_tnda_iplaza_date WHERE nombre='INI_num')
                    AND  tmo_fech<= (SELECT value FROM schm_workspace.tmp_tnda_iplaza_date WHERE nombre='FIN_num')
                /*FINAL: QUERY DESDE OPERACIONES*/ 
                )  C1  
        LEFT JOIN ( SELECT DISTINCT 
                        cli_identifica 
                        ,cli_identifica_dv
                        ,vis_numcue  
                    FROM br_dm_prod_bigdata_fisa_db.tcli_persona /*MAESTRA DE CLIENTES BANCO*/ 
                        ,br_dm_prod_bigdata_fisa_db.tcap_vista /*SALDOS CUENTAS VISTAS */ 
                    WHERE cli_codigo=vis_codcli 
                        AND vis_mod=4/*cuenta vista, CUENTA */ 
                        AND (VIS_PRO=1/*CC*/  ) 
                        AND vis_tip=1  /*persona no juridica*/ 
                        
                )  C2 
            ON (c1.tmo_numcue=c2.vis_numcue) 
    )
    ;

    --##############################################################################################################################
    -- TRANSACCIONES TD
    --##############################################################################################################################

    -- MOVIMIENTOS DE CUENTA VISTA
    CREATE TABLE schm_workspace.Mov_Cuenta_vista AS
    SELECT 
        *
        ,CASE 
            WHEN tmo_tipotra='C' THEN 
            CASE 
                WHEN DESCRIPCION IN ('VALOR EFECTIVO','EN EFECTIVO') AND GLS_TRANSAC ='DEPOSITO' AND  SI_ABR<>1  THEN 'Depósitos en Efectivo' 
                WHEN DESCRIPCION IN ('CON DOCUMENTOS') AND GLS_TRANSAC ='DEPOSITO' AND SI_ABR<>1 THEN 'Depósitos con Documento' 
                WHEN DESCRIPCION IN ('TRANSFERENCIA DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas' 
                WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas' 
                WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR=1 THEN 'Abono de Remuneraciones' 
                WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 and DESC_NEGOCIO LIKE '%Proveedores%' THEN 'TEF Recibidas' 
                WHEN DESCRIPCION IN ('POR REGULARIZACION') AND  SI_ABR<>1 THEN 'Otros (pago proveedores)' 
                WHEN DESCRIPCION IN ('DESDE LINEA DE CREDITO') AND GLS_TRANSAC ='TRASPASO DE FONDOS' AND  SI_ABR<>1 THEN 'Traspaso desde LCA'
                WHEN DESCRIPCION IN ('AVANCE DESDE TARJETA DE CREDITO BANCO RIPLEY') AND  SI_ABR<>1 THEN 'Avance desde Tarjeta Ripley' 
                WHEN DESCRIPCION IN ('DEVOLUCION COMISION') AND  SI_ABR<>1 THEN 'DEVOLUCION COMISION' 
                WHEN DESCRIPCION IN ('TRANSFERENCIA DESDE CREDITO') AND  SI_ABR<>1 THEN 'Traspaso desde LCA' 
                ELSE 'OTROS ABONOS' 
            END ELSE ''
        END AS Descripcion_Abono
        
        ,CASE 
            WHEN tmo_tipotra='D' THEN 
            CASE
                WHEN DESCRIPCION IN ('COMPRA NACIONAL CTA CTE') THEN 'Compras Redcompra' 
                WHEN DESCRIPCION IN ('COMPRA INTERNACIONAL CTA CTE') THEN 'Compras Internacionales' 
                WHEN DESCRIPCION IN ('CARGO POR PEC') THEN 'PEC' 
                when DESCRIPCION IN ('GIRO ATM INTERNACIONAL CTA CTE') then 'Giros internacional CTA CTE'
                when DESCRIPCION IN ('GIRO ATM NACIONAL CTA CTE') then 'Giros ATM CTA CTE'
                WHEN DESCRIPCION IN ('GIRO POR CAJA') THEN 'Giros Caja'
                WHEN DESCRIPCION IN ('TRANSFERENCIA A OTROS BANCOS') THEN 'TEF emitidas Otros Bancos'
                WHEN DESCRIPCION IN ('PAGO TARJETA DE CREDITO') THEN 'Pago de Tarjeta' 
                WHEN DESCRIPCION IN ('A CUENTA BANCO RIPLEY','POR TRASPASO A CUENTA')  THEN 'Pago LCA'
                WHEN  DESCRIPCION IN ('COSTO DE MANTENCION MENSUAL CTA CTE') then 'Comision planes'
                WHEN DESCRIPCION IN ('IVA COSTO DE MANTENCION MENSUAL CTA CTE') then 'IVA Com cta cte'
                ELSE 'OTROS CARGOS' 
            END ELSE ''
        END AS Descripcion_Cargo 

    FROM ( 
        SELECT 
            c2.cli_identifica AS rut
            ,c2.cli_identifica_dv AS dv
            ,cast(schm_artifacts.f_period(DATEADD(month, 0, c1.tmo_fechcon)::DATE) as integer) as Periodo_Cont
            ,cast(schm_artifacts.f_period(DATEADD(month, 0, c1.tmo_fech)::DATE) as integer) as Periodo_trx
            ,c1.tmo_numcue AS CUENTA
            ,c1.tmo_fechcon AS FECHACON
            ,c1.tmo_fech AS FECHA
            ,c1.rub_desc AS DESCRIPCION
            ,c1.tmo_val AS MONTO
            ,c1.con_libre AS Desc_negocio
            ,c1.tmo_codmod
            ,c1.tmo_tipotra
            ,c1.tmo_rubro
            ,c1.tmo_numtra
            ,c1.tmo_numcue
            ,c1.tmo_codusr
            ,c1.tmo_sec
            ,c1.tmo_codtra
            ,(  SELECT 
                    cod_destra 
                FROM br_dm_prod_bigdata_fisa_db.tgen_codtrans 
                WHERE 
                    cod_tra = tmo_codtra 
                    AND cod_mod = tmo_codmod 
            ) AS gls_transac
            
            ,CASE 
                WHEN c1.tmo_tipotra='D' THEN 'CARGO' 
                WHEN c1.tmo_tipotra='C' THEN 'ABONO' 
            END AS Tipo_Movimiento
            
            ,CASE 
                WHEN c1.tmo_tipotra='C' 
                AND c1.rub_desc='DESDE OTROS BANCOS' 
                AND (   c1.con_libre LIKE '%Remuneraciones%' OR 
                        c1.con_libre LIKE '%Anticipos%' OR 
                        c1.con_libre LIKE '%Sueldos%'
                    )  THEN 1 
                ELSE 0 
            END AS SI_ABR 
            
            ,CASE 
                WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS' 
                    AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre LIKE '%Sueldos%')
                    AND c1.con_libre LIKE '%BANCO RIPLEY%' THEN 'BANCO RIPLEY' 
                WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS' 
                    AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre LIKE '%Sueldos%')
                    AND c1.con_libre LIKE '%CAR S.A.%' THEN 'CAR' 
                WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS' 
                    AND ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre LIKE '%Sueldos%')
                    AND c1.con_libre LIKE '%RIPLEY STORE%' THEN 'RIPLEY STORE' 
                WHEN  c1.tmo_tipotra='C' and c1.rub_desc='DESDE OTROS BANCOS' 
                    and ( c1.con_libre LIKE '%Remuneraciones%' OR c1.con_libre LIKE '%Anticipos%' OR c1.con_libre LIKE '%Sueldos%')
                    AND (   c1.con_libre NOT LIKE ('%RIPLEY STORE%') OR 
                            c1.con_libre NOT LIKE ('%CAR S.A.%') OR 
                            c1.con_libre NOT LIKE ('%BANCO RIPLEY%') 
                        ) THEN 'OTROS BANCOS' 
                ELSE ''
            END AS Descripcion_ABR
            
            ,CASE 
                WHEN c1.tmo_tipotra='D' 
                    AND (c1.con_libre LIKE '%Ripley%' OR c1.con_libre LIKE '%RIPLEY%') 
                    AND  c1.con_libre NOT LIKE '%PAGO%' 
                THEN 'COMPRA_RIPLEY' 
                ELSE ''
            END AS COMPRA_RIPLEY


        FROM (  SELECT
                    * 
                FROM  br_dm_prod_bigdata_fisa_db.tcap_tramon /*base de movimientos*/ 
                    , br_dm_prod_bigdata_fisa_db.TGEN_TRANRUBRO /*base descriptiva (para complementar movimientos)*/ 
                    , br_dm_prod_bigdata_fisa_db.tcap_concepto /*base descriptiva (para complementar movimientos)*/ 
        
                WHERE rub_mod    = tmo_codmod /*unificacion de base de movs con rubro*/ 
                    AND rub_tra      = tmo_codtra /*unificacion de base de movs con rubro*/ 
                    AND rub_rubro    = tmo_rubro /*unificacion de base de movs con rubro*/ 
                
                    AND con_modulo(+)  = tmo_codmod /*unificacion de base de movs con con_*/ 
                    AND con_rubro(+)   = tmo_rubro /*unificacion de base de movs con con_*/ 
                    AND con_numtran(+) = tmo_numtra /*unificacion de base de movs con con_*/ 
                    AND con_cuenta (+) = tmo_numcue /*unificacion de base de movs con con_*/ 
                    AND con_codusr(+)  = tmo_codusr /*unificacion de base de movs con con_*/ 
                    AND con_sec(+)     = tmo_sec /*unificacion de base de movs con con_*/ 
                    AND con_transa(+)  = tmo_codtra /*unificacion de base de movs con con_*/ 
                    /*FILTROS DE MOVIMIENTOS*/ 
                    AND tmo_tipotra IN ('D','C') /*D=Cargo, C=Abono*/ 
                    AND tmo_codpro = 4 
                    AND tmo_codtip = 1 
                    AND tmo_modo = 'N' 
                    AND tmo_val > 1 /*solo montos mayores a 1 peso (mov de prueba)*/ 
                
                    AND  tmo_fech>= (SELECT value FROM schm_workspace.tmp_tnda_iplaza_date WHERE nombre='INI_num')
                    AND  tmo_fech<= (SELECT value FROM schm_workspace.tmp_tnda_iplaza_date WHERE nombre='FIN_num')
                /*FINAL: QUERY DESDE OPERACIONES*/ 
                )  C1  
        LEFT JOIN ( SELECT DISTINCT 
                        cli_identifica 
                        ,cli_identifica_dv
                        ,vis_numcue  
                    FROM br_dm_prod_bigdata_fisa_db.tcli_persona /*MAESTRA DE CLIENTES BANCO*/ 
                        ,br_dm_prod_bigdata_fisa_db.tcap_vista /*SALDOS CUENTAS VISTAS */ 
                    WHERE cli_codigo=vis_codcli 
                        AND vis_mod=4/*cuenta vista, CUENTA */ 
                        AND (VIS_PRO=4/*CV*/  ) 
                        AND vis_tip=1  /*persona no juridica*/ 
              AND (vis_status='2' or vis_status='9') /*solo aquellas con estado vigente o cerrado*/           
                )  C2 
            ON (c1.tmo_numcue=c2.vis_numcue) 
    )
    ;

    --##############################################################################################################################
    -- AGRUPADO FINAL
    --##############################################################################################################################

    CREATE TABLE schm_workspace.seg_pec_cc AS
    SELECT 
    	FECHA AS DIA
    	,substring(DESC_NEGOCIO,16, LENGTH(DESC_NEGOCIO)-15) AS NEGOCIO
    	,*
    FROM schm_workspace.Mov_Cuenta_Corriente
    WHERE Tipo_Movimiento='CARGO' AND Descripcion_Cargo='PEC'
    ;

    CREATE TABLE schm_workspace.seg_pec_td AS
    SELECT 
    	FECHA AS DIA
    	,substring(DESC_NEGOCIO,16, LENGTH(DESC_NEGOCIO)-15) AS NEGOCIO
    	,*
    FROM schm_workspace.Mov_Cuenta_vista
    WHERE Tipo_Movimiento='CARGO' AND Descripcion_Cargo='PEC'
    ;

    CREATE TABLE schm_workspace.seg_pec_td_ccte AS 
    SELECT 
    	*
    	,'CC' AS MDP
    FROM schm_workspace.seg_pec_cc
    UNION ALL

    SELECT 
    	*
    	,'TD' AS MDP
    FROM schm_workspace.seg_pec_td
    ;

    CREATE TABLE schm_workspace.agrupado_td_ccte2 AS 
    SELECT 
    	   DIA, 
           (SELECT value FROM schm_workspace.iplaza_periodos WHERE nombre='PERIODO') AS PERIODO, 
           NEGOCIO, 
           (COUNT(DISTINCT(RUT))) AS CLIENTES, 
           (COUNT(RUT)) AS TRX, 
           (SUM(MONTO)) AS MONTO, 
           MDP 
    FROM schm_workspace.seg_pec_td_ccte 
    GROUP BY DIA,
             PERIODO,
             NEGOCIO,
             MDP
    UNION ALL 

    SELECT 
    	fecha AS DIA
    	,periodo
    	,nombre_comercio AS NEGOCIO
    	,(COUNT(DISTINCT(RUT))) AS CLIENTES
    	,(COUNT(RUT)) AS TRX
    	,(SUM(MONTO)) AS MONTO
    	,tipo_tarjeta AS MDP
    FROM schm_workspace.iplaza_pec_tc
    GROUP BY DIA,
             PERIODO,
             NEGOCIO,
             MDP
    ;

    DELETE  
    FROM schm_data_analytics.mdpg_seguimiento_pec
    WHERE periodo=(SELECT value FROM schm_workspace.iplaza_periodos WHERE nombre='PERIODO')
    ;

    INSERT INTO schm_data_analytics.mdpg_seguimiento_pec
    SELECT *
    FROM schm_workspace.agrupado_td_ccte2
    ;

         /*  ===========================================================================================================
         === Control de versiones visual ===
         2024-01-12 -- v00 -- Ignacio Plaza         -- Versión original refactorizada.

         === Información adicional:
         Proceso que..
         ===========================================================================================================
     */

END; 

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_tableau_epu(v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
	
	
	
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.mdpg_sb_contratoepu;
    DROP TABLE IF EXISTS schm_workspace.mdpg_resumen;

    /*CREATE TABLE schm_workspace.mdpg_sb_contratoepu AS
    SELECT
        a.*
        , CASE
            WHEN b.segmento = 'R_GOLD' THEN '01.GOLD'
            WHEN b.segmento = 'R_SILVER' THEN '02.SILVER'
            WHEN b.segmento = 'RIPLEY_ALTA' THEN '03.BRONCE'
            WHEN b.segmento = 'RIPLEY_BAJA' THEN '04.BAJA'
            ELSE '05.SIN SEGMENTO'
        END segmento_gestion
    FROM (
        SELECT *
        FROM br_dm_prod_bigdata_sasdata_db.sas_mdpg_contrato_epu
        WHERE periodo = v_periodo
    ) a
    LEFT JOIN (
        SELECT DISTINCT
            s.rut
            , first_value(s.segmento_final) over (partition by s.rut order by s.fecha_ejecucion desc rows between unbounded preceding and unbounded following) segmento
        FROM br_dm_prod_analytics_ripley_puntos_db.segmento_comercial_diario s
            WHERE
        s.fecha_ejecucion = (v_day)
    ) b
        ON a.rut = b.rut; 
        */
   
   
    CREATE TABLE schm_workspace.mdpg_resumen AS
    select
    	v_periodo AS periodo,
	    TO_DATE(SUBSTRING(v_periodo, 1, 4) || '-' || SUBSTRING(v_periodo, 5, 2) || '-01', 'YYYY-MM-DD') AS periodo_tableau,
	    CASE
	        WHEN LENGTH(DATE_PART('day', facturacion)) = 1 THEN '0' || DATE_PART('day', facturacion)::TEXT
	        ELSE DATE_PART('day', facturacion)::TEXT
	    END AS ff
        , tipo_producto
        , si_epu_mail
        , si_epu_fisico
        , si_mantencion_epu
        , coalesce(glosa, 'Sin cobro') as glosa2
        , CASE
            WHEN saldo < 1000 THEN '01.Saldo menor a $1.000'
            ELSE '02.Saldo>$1.000'
        END saldo2,
        '' as segmento_gestion
        , sum(mto_mantencion) mto_mantencion
        , sum(saldo) mto_saldo
        , count(contrato) clientes
    FROM  schm_data_analytics.mdpg_contrato_epu where periodo = v_periodo
    GROUP BY ff, tipo_producto, si_epu_mail, si_epu_fisico, si_mantencion_epu , glosa2, saldo2, segmento_gestion;
	
   
    DELETE FROM schm_data_analytics.mdpg_seguimiento_ff_epu
    WHERE periodo = v_periodo
        AND glosa != 'PRESUPUESTO';

    INSERT INTO schm_data_analytics.mdpg_seguimiento_ff_epu
    SELECT * FROM schm_workspace.mdpg_resumen;

    DROP TABLE schm_workspace.mdpg_resumen;

    DELETE FROM schm_data_analytics.mdpg_mes_ff_epu
    WHERE periodo = v_periodo;

    INSERT INTO schm_data_analytics.mdpg_mes_ff_epu
    SELECT
        v_periodo periodo
        , corte ff
        , CASE
            WHEN producto in ('10', '05', '06', '07') THEN 'TAM'
            ELSE 'TR'
        END tipo_tarjeta
        , sum(monto) mto_mantencion
        , count(DISTINCT cuenta) clientes
        , sum(trx) trx
        , sum(monto_actual) mto_mantencion_act
        , count(DISTINCT CASE WHEN trx_actual > 0 THEN cuenta END) clientes_act
        , sum(trx_actual) trx_act
        , sum(monto_des) mto_mantencion_sig
        , count(DISTINCT CASE WHEN trx_des > 0 THEN cuenta END) clientes_sig
        , sum(trx_des) trx_sig
    FROM schm_data_analytics.mdpg_epu_mes_actual m
    WHERE periodo = v_periodo
    GROUP BY ff, tipo_tarjeta;

    DELETE FROM schm_data_analytics.mdpg_dia_ff_epu
    WHERE periodo = v_periodo;

    INSERT INTO schm_data_analytics.mdpg_dia_ff_epu
    SELECT
        v_periodo AS periodo
        , 'ACUMULADO' tipologia
        , '05' fecha
        , CASE
            WHEN producto in ('10','05','06','07') THEN 'TAM'
            ELSE 'TR'
        END tipo_tarjeta
        , sum(monto) monto
        , sum(trx) trx
        , sum(monto_actual) monto_actual
        , sum(trx_actual) trx_actual
        , sum(monto_des) monto_des
        , sum(trx_des) trx_des
        , count(distinct cuenta) clientes
    FROM schm_data_analytics.mdpg_epu_mes_actual
    WHERE periodo = v_periodo
        AND date_part(day, fecfac) <= 5
    GROUP BY 1, 2, 3, 4
    UNION ALL
    SELECT
        v_periodo periodo
        , 'ACUMULADO' tipologia
        , '10' fecha
        , CASE
            WHEN producto in ('10','05','06','07') THEN 'TAM'
            ELSE 'TR'
        END tipo_tarjeta
        , sum(monto) monto
        , sum(trx) trx
        , sum(monto_actual) monto_actual
        , sum(trx_actual) trx_actual
        , sum(monto_des) monto_des
        , sum(trx_des) trx_des
        , count(distinct cuenta) clientes
    FROM schm_data_analytics.mdpg_epu_mes_actual
    WHERE periodo = v_periodo
        AND date_part(day, fecfac) <= 10
    GROUP BY 1, 2, 3, 4
    UNION ALL
    SELECT
        v_periodo periodo
        , 'ACUMULADO' tipologia
        , '15' fecha
        , CASE
            WHEN producto in ('10','05','06','07') THEN 'TAM'
            ELSE 'TR'
        END tipo_tarjeta
        , sum(monto) monto
        , sum(trx) trx
        , sum(monto_actual) monto_actual
        , sum(trx_actual) trx_actual
        , sum(monto_des) monto_des
        , sum(trx_des) trx_des
        , count(distinct cuenta) clientes
    FROM schm_data_analytics.mdpg_epu_mes_actual
    WHERE periodo = v_periodo
        AND date_part(day, fecfac) <= 15
    GROUP BY 1, 2, 3, 4
    UNION ALL
    SELECT
        v_periodo periodo
        , 'ACUMULADO' tipologia
        , '18' fecha
        , CASE
            WHEN producto in ('10','05','06','07') THEN 'TAM'
            ELSE 'TR'
        END tipo_tarjeta
        , sum(monto) monto
        , sum(trx) trx
        , sum(monto_actual) monto_actual
        , sum(trx_actual) trx_actual
        , sum(monto_des) monto_des
        , sum(trx_des) trx_des
        , count(distinct cuenta) clientes
    FROM schm_data_analytics.mdpg_epu_mes_actual
    WHERE periodo = v_periodo
        AND date_part(day, fecfac) <= 18
    GROUP BY 1, 2, 3, 4
    UNION ALL
    SELECT
        v_periodo periodo
        , 'ACUMULADO' tipologia
        , '20' fecha
        , CASE
            WHEN producto in ('10','05','06','07') THEN 'TAM'
            ELSE 'TR'
        END tipo_tarjeta
        , sum(monto) monto
        , sum(trx) trx
        , sum(monto_actual) monto_actual
        , sum(trx_actual) trx_actual
        , sum(monto_des) monto_des
        , sum(trx_des) trx_des
        , count(distinct cuenta) clientes
    FROM schm_data_analytics.mdpg_epu_mes_actual
    WHERE periodo = v_periodo
        AND date_part(day, fecfac) <= 20
    GROUP BY 1, 2, 3, 4
    UNION ALL
    SELECT
        v_periodo periodo
        , 'ACUMULADO' tipologia
        , '25' fecha
        , CASE
            WHEN producto in ('10','05','06','07') THEN 'TAM'
            ELSE 'TR'
        END tipo_tarjeta
        , sum(monto) monto
        , sum(trx) trx
        , sum(monto_actual) monto_actual
        , sum(trx_actual) trx_actual
        , sum(monto_des) monto_des
        , sum(trx_des) trx_des
        , count(distinct cuenta) clientes
    FROM schm_data_analytics.mdpg_epu_mes_actual
    WHERE periodo = v_periodo
        AND date_part(day, fecfac) <= 25
    GROUP BY 1, 2, 3, 4
    UNION ALL
    SELECT
        v_periodo periodo
        , 'ACUMULADO' tipologia
        , '30' fecha
        , CASE
            WHEN producto in ('10','05','06','07') THEN 'TAM'
            ELSE 'TR'
        END tipo_tarjeta
        , sum(monto) monto
        , sum(trx) trx
        , sum(monto_actual) monto_actual
        , sum(trx_actual) trx_actual
        , sum(monto_des) monto_des
        , sum(trx_des) trx_des
        , count(distinct cuenta) clientes
    FROM schm_data_analytics.mdpg_epu_mes_actual
    WHERE periodo = v_periodo
        AND date_part(day, fecfac) <= 30
    GROUP BY 1, 2, 3, 4
    UNION ALL
    SELECT
        v_periodo periodo
        , 'ACUMULADO' tipologia
        , 'TOTAL' fecha
        , CASE
            WHEN producto in ('10','05','06','07') THEN 'TAM'
            ELSE 'TR'
        END tipo_tarjeta
        , sum(monto) monto
        , sum(trx) trx
        , sum(monto_actual) monto_actual
        , sum(trx_actual) trx_actual
        , sum(monto_des) monto_des
        , sum(trx_des) trx_des
        , count(distinct cuenta) clientes
    FROM schm_data_analytics.mdpg_epu_mes_actual
    WHERE periodo = v_periodo
    GROUP BY 1, 2, 3, 4
    UNION ALL
    SELECT
        v_periodo periodo
        , 'DIARIO' tipologia
        , cast(date_part(day, fecfac) as varchar(10)) fecha
        , CASE
            WHEN producto in ('10','05','06','07') THEN 'TAM'
            ELSE 'TR'
        END tipo_tarjeta
        , sum(monto) monto
        , sum(trx) trx
        , sum(monto_actual) monto_actual
        , sum(trx_actual) trx_actual
        , sum(monto_des) monto_des
        , sum(trx_des) trx_des
        , count(distinct cuenta) clientes
    FROM schm_data_analytics.mdpg_epu_mes_actual
    WHERE periodo = v_periodo
    GROUP BY 1, 2, 3, 4;

END;





$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_tablon_productos(periodo_paso int4)
	LANGUAGE plpgsql
AS $$
	
	

   
BEGIN

	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_contratos;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_MPDT043;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_MPDT499;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_contratos2;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_contratos3;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_contratos4;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_contratos5;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_contratos_fin;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tp_tc;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tp_tc2;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tp_tc3;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_base_adicionales;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos1;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Stock_Cuenta_Vista;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Stock_Cuenta_Vista2;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_panes;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_panes2;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_TD;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Movs_TD;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_movs;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_TD2;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_SALDO_TD_1;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Saldo_TD;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_Saldo;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_TD3;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos2;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_DAP;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos3;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Stock_Cuenta_corriente	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Stock_Cuenta_corriente2	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_MOV_CUENTA_corriente	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_movs_CC	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_extraer_consumo1;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_extraer_consumo2;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CC	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CC2	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Saldos_CC	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Saldo_CC2	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_Saldo_CC	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CC3	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_Saldo_CC3	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos4	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos5;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_AV	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_SAV	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_PPFF	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos6	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos7	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos8	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_vista	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_vista2	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_vista3	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_seguros	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_seguros2	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos9	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos10	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Saldo_RP	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Canjes_RP	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Acumulacion_RP	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_RPtos	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_trx_consumo	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos11	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos12	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos13	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CONS0	;	
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CONS	;	
    DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_PAT;
    DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos14	;
  	DROP TABLE IF EXISTS schm_workspace.pmunoz_Stock_Cuenta_Vista3;
 	DROP TABLE IF EXISTS schm_workspace.pmunoz_bank_accounts	;
 	DROP TABLE IF EXISTS schm_workspace.pmunoz_bank_accounts2	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CHEK	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CHEK2;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CHEK3;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CHEK4;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos15	;


	--========================================================================================;
	--[01] Informacion de Producto: Tarjeta de Credito;
	--========================================================================================;
	CREATE TABLE schm_workspace.pmunoz_rutero_contratos  as  
	SELECT 
		CAST(pemid_gls_nro_dct_ide_k AS INT)  RUT
		,a.cuenta
		,a.fecalta
		,a.fecbaja
		,a.producto
		,DATE_PART(YEAR,a.fecbaja)*10000+DATE_PART(month,a.fecbaja)*100+DATE_PART(day,a.fecbaja) as baja_num
	FROM br_dm_prod_bigdata_reporitf_db.MPDT007 a
	INNER JOIN br_dm_prod_bigdata_reporitf_db.BOPERS_MAE_IDE B 
	ON (CAST(a.identcli AS INT)=b.pemid_nro_inn_ide)
	WHERE a.producto NOT IN ('08','12','13')
	AND a.year*100+a.month<=periodo_paso
	;


	CREATE TABLE schm_workspace.pmunoz_rutero_contratos2  as  
	SELECT *
	FROM schm_workspace.pmunoz_rutero_contratos
	WHERE  DATE_PART(YEAR,fecbaja)*100+DATE_PART(month,fecbaja)>=periodo_paso
	or CAST(fecbaja AS varchar(10)) = '0001-12-30'
	;


	CREATE TABLE schm_workspace.pmunoz_MPDT043  as 
	SELECT * 
	FROM br_dm_prod_bigdata_reporitf_db.MPDT043;


	CREATE TABLE schm_workspace.pmunoz_MPDT499  as 
	SELECT  
		CUENTA,
		min(PRODORIG) as PRODORIG
	FROM br_dm_prod_bigdata_reporitf_db.MPDT499
	WHERE 
	DATE_PART(YEAR,FECALTA)*100+DATE_PART(month,FECALTA)>periodo_paso
	GROUP BY cuenta;


	CREATE TABLE schm_workspace.pmunoz_rutero_contratos3 as
	SELECT 
		a.RUT,
		a.cuenta,
		a.FECALTA,
		a.FECBAJA,
		COALESCE(PRODORIG,a.producto) as producto
	FROM schm_workspace.pmunoz_rutero_contratos2 as a 
	LEFT JOIN schm_workspace.pmunoz_MPDT499 as b
	on(a.cuenta=b.cuenta)
	;


	CREATE TABLE schm_workspace.pmunoz_rutero_contratos4 as 
	SELECT 
	a.*,
	CASE WHEN b.rut is not null then a.producto end as maximo
	FROM schm_workspace.pmunoz_rutero_contratos3 as a 
	LEFT JOIN (
	SELECT rut,max(FECALTA) as FECALTA FROM schm_workspace.pmunoz_rutero_contratos3 
	GROUP BY rut) as b
	on(a.rut=b.rut)  AND  (a.FECALTA=b.FECALTA)
	;


	CREATE TABLE schm_workspace.pmunoz_rutero_contratos5 as
	SELECT 
	rut,
	max(maximo) as producto,
	count(rut) as cantidad_contratos,
	count(CASE WHEN DATE_PART(YEAR,fecbaja)*10000+DATE_PART(month,fecbaja)*100+DATE_PART(day,fecbaja)=-8770 or 
	DATE_PART(YEAR,fecbaja)*100+DATE_PART(month,fecbaja) >periodo_paso
	then rut end) as vigente,
	count(CASE WHEN DATE_PART(YEAR,fecbaja)*100+DATE_PART(month,fecbaja) =periodo_paso then rut end) as cerrado
	FROM schm_workspace.pmunoz_rutero_contratos4
	GROUP BY rut
	;


	CREATE TABLE schm_workspace.pmunoz_rutero_contratos_fin as 
	SELECT 
	a.rut,
	DESPROD as producto,
	a.cantidad_contratos,
	a.vigente,
	a.cerrado
	FROM schm_workspace.pmunoz_rutero_contratos5 as a 
	LEFT JOIN schm_workspace.pmunoz_mpdt043 as b
	on(a.producto=b.producto)
	;


	-------------------------------------------------------------------------------------------;
	--[01.2] TC: Tenencia, Fecha de Apertura y Saldo;
	-------------------------------------------------------------------------------------------;
	CREATE TABLE schm_workspace.pmunoz_tp_tc as 
	SELECT 
		a.RUT,
		a.producto as TC_PROD_RSAT,
		a.cantidad_contratos as TC_NRO_CTTO,
		a.vigente as TC_NRO_CTTO_VIGENTE,
		a.cerrado as TC_NRO_CTTO_CERRADO,
		CASE 
			WHEN b.rut is not null THEN 1 ELSE 0 
			end as TC_act_tr,
		CASE 
			WHEN b.VU_RIESGO=1 then 'VU' ELSE b.MARCA_RIESGO END as TC_VU,
		CASE WHEN b.periodo<=202006 AND b.vu_riesgo=1 THEN 'VU'
		WHEN b.periodo<=202006 AND b.vu_riesgo<>1 THEN b.MARCA_RIESGO 
		ELSE b.VU_C_PRIMA END as TC_VU_Prima,
		CASE 
		WHEN b.P_APROBACION is not null THEN b.P_APROBACION 
		ELSE b.P_ACTIVACION 
		END 
		as TC_FecApertura,
		CASE 
		WHEN b.rut is not null AND b.MARCA_BASE in ('CREDITO_2000','ITF')  then 'TR' 
		 WHEN b.rut is not null AND b.MARCA_BASE  not in ('CREDITO_2000','ITF')  then 'TAM' 
		 WHEN b.rut is null AND a.producto in ('PREFERENTE','CUOTAS','CUOTAS SIR') then 'TR'
		 WHEN b.rut is null AND a.producto not in ('PREFERENTE','CUOTAS','CUOTAS SIR') then 'TAM'
		end 
		as TC_Tipo,  
		COALESCE(b.SALDO_CONTABLE,0) as TC_Saldo,
		b.observacion as tc_observacion 
	FROM schm_workspace.pmunoz_rutero_contratos_fin as a 
	LEFT JOIN br_dm_prod_bigdata_sasdata_db.sas_bitr_act_tr as b
	on(a.rut=b.rut) AND b.periodo =periodo_paso
	;


	-------------------------------------------------------------------------------------------;
	--[01.3] TC: Cupo y Disponible de la Tarjeta;
	-------------------------------------------------------------------------------------------;
	CREATE TABLE schm_workspace.pmunoz_tp_tc2 as 
			SELECT 
				a.*, 
			CASE 
				WHEN b.RUT IS NOT NULL THEN b.CUPO 
				ELSE 0  
			END 
		as TC_Cupo,
			CASE 
				WHEN b.RUT IS NOT NULL THEN b.DISPONIBLE 
				ELSE 0  
			END 
		as TC_Disponible   
			FROM schm_workspace.pmunoz_tp_tc as a 
				LEFT JOIN (
					SELECT 
						rut,
						max(LCA_50) as CUPO,
						max(DISP_50) as DISPONIBLE 
					FROM schm_data_analytics.ppff_disponibles_tr
					WHERE periodo = periodo_paso /*Tabla de Cupo y Disponible*/
						GROUP BY 
							rut 
							) AS B
							on (a.rut=b.rut);
						

	-------------------------------------------------------------------------------------------;
	--[01.4] TC: TRANSACCIONES TOTALES (TDA,SPOS,AV,SAV y SEG);
	-------------------------------------------------------------------------------------------;
	CREATE TABLE  schm_workspace.pmunoz_tp_tc3 as 
	SELECT 
		a.*, 
		COALESCE(nro_trxs_spos,0)+COALESCE(c.nro_trxs_tda,0)+
		COALESCE(d.nro_trxs_av,0)+COALESCE(e.nro_trxs_seg,0) 
		+COALESCE(f.nro_trxs_sav,0)AS tc_nro_trxs,
		COALESCE(nro_trxs_spos,0) AS tc_nro_trxs_spos,
		COALESCE(c.nro_trxs_tda,0) AS tc_nro_trxs_tda,
		COALESCE(c.nro_trxs_tdap,0) AS tc_nro_trxs_tdap,
		COALESCE(c.nro_trxs_tdao,0) AS tc_nro_trxs_tdao,
		COALESCE(d.nro_trxs_av,0) AS tc_nro_trxs_av,
		COALESCE(f.nro_trxs_sav,0) AS tc_nro_trxs_sav,
		COALESCE(e.nro_trxs_seg,0) AS tc_nro_trxs_seg,
		COALESCE(mto_trxs_spos,0)+COALESCE(c.mto_trxs_tda,0)+COALESCE(d.mto_trxs_av,0)
		+COALESCE(e.mto_trxs_seg,0)+COALESCE(f.mto_trxs_sav,0)
		AS tc_mto_trxs,
		COALESCE(mto_trxs_spos,0) AS tc_mto_trxs_spos,
		COALESCE(c.mto_trxs_tda_pie,0) AS tc_mto_trxs_tda_pie,
		COALESCE(c.mto_trxs_tda,0) AS tc_mto_trxs_tda,
		COALESCE(c.mto_trxs_tdap,0) AS tc_mto_trxs_tdap,
		COALESCE(c.mto_trxs_tdao,0) AS tc_mto_trxs_tdao,
		COALESCE(d.mto_trxs_av,0) AS tc_mto_trxs_av ,
		COALESCE(f.mto_trxs_sav,0) AS tc_mto_trxs_sav,
		COALESCE(e.mto_trxs_seg,0) AS tc_mto_trxs_seg
	FROM  schm_workspace.pmunoz_tp_tc2 AS a 
	LEFT JOIN (
	SELECT 
		RUT,
		COUNT(CASE WHEN venta_tarjeta>0 then rut end) - COUNT(CASE WHEN venta_tarjeta<0 then rut end) AS nro_trxs_spos, 
		SUM(venta_tarjeta)  AS mto_trxs_spos 
	FROM schm_data_analytics.spos_aut /*Tabla de TRXs SPOS*/
	WHERE periodo =periodo_paso
	GROUP BY 
	RUT
	) AS B
	on (a.rut=b.rut) 
	LEFT JOIN (
	SELECT 
		RUT,
		COUNT(CASE WHEN capital>0 then rut end)- COUNT(CASE WHEN capital<0 then rut end) as nro_trxs_tda,
		SUM(CASE WHEN sucursal<>39 AND capital>0 THEN 1 else 0 END)-
		SUM(CASE WHEN sucursal<>39 AND capital<0 THEN 1 else 0 END) as nro_trxs_tdap,
		SUM(CASE WHEN sucursal=39 AND capital>0 THEN 1 else 0 END)-
		SUM(CASE WHEN sucursal=39 AND capital<0 THEN 1 else 0 END) as nro_trxs_tdao,
		SUM(pie) as Mto_TRXs_TDA_pie,
		SUM(CAPITAL) as Mto_TRXs_TDA,
		SUM(CASE WHEN sucursal<>39 THEN CAPITAL else 0 END) as mto_trxs_tdap,
		SUM(CASE WHEN sucursal=39 THEN CAPITAL else 0 END) as mto_trxs_tdao 
	FROM schm_data_analytics.tnda_tda_itf /*Tabla de TRXs en Tienda*/
	WHERE periodo = periodo_paso
	GROUP BY 
	RUT
	) AS c
	ON (a.rut=c.rut) 
	LEFT JOIN (
	SELECT 
		RUT,
		COUNT(CASE WHEN capital>0 THEN rut END)-COUNT(CASE WHEN capital<0 THEN rut END) AS nro_trxs_av, 
		SUM(capital)  AS mto_trxs_av  
	FROM br_dm_prod_bigdata_sasdata_db.sas_ppff_trx_av /*Tabla de TRXs AV*/
	WHERE periodo = periodo_paso
	GROUP BY 
	RUT
	) AS d
	ON (a.rut=d.rut) 
	LEFT JOIN 
		(SELECT 
		rut,
		count(rut) as nro_trxs_seg,
		sum(monto_recaudado) as mto_trxs_seg
	FROM schm_data_analytics.spos_trx_seguros
	WHERE codconrec not in ('S201','S083','S170')
	and tipo_seguro<>'SEGUROS TARJETA'
	and ( monto_recaudado<>476454338)
	and periodo = periodo_paso
	GROUP BY rut 
	) as e 
	ON(a.rut=e.rut)

	LEFT JOIN (
	SELECT 
		RUT,
		COUNT(CASE WHEN capital>0 THEN rut END)-COUNT(CASE WHEN capital<0 THEN rut END) AS nro_trxs_sav, 
		SUM(CAPITAL)  AS mto_trxs_sav  
	FROM schm_data_analytics.ppff_trx_Sav /*Tabla de TRXs AV*/
	WHERE periodo = periodo_paso
	GROUP BY 
	RUT
	) AS f
	ON (a.rut=f.rut) 
	;


	-------------------------------------------------------------------------------------------;
	--[01.5] TC: Numero de Adicionales Vigentes Asociados y TRXs asociadas;
	-------------------------------------------------------------------------------------------;
	--solicitar esta data


	-------------------------------------------------------------------------------------------;
	--[01.6] TC: Acoplar tabla a Tablon de Productos final;
	-------------------------------------------------------------------------------------------;
	CREATE TABLE schm_workspace.pmunoz_tablon_productos1 as 
	SELECT 
		rut,
		CASE WHEN tc_nro_ctto_vigente>0 THEN 1 ELSE 0 END AS tc_tenencia, 
		tc_prod_rsat,
		tc_nro_ctto, 
		tc_nro_ctto_vigente, 
		tc_nro_ctto_cerrado, 
		tc_act_tr, 
		tc_vu, 
		tc_vu_prima, 
		tc_fecapertura, 
		tc_tipo, 
		tc_saldo, 
		tc_observacion, 
		tc_cupo, 
		tc_disponible, 
		tc_nro_trxs, 
		tc_nro_trxs_spos, 
		tc_nro_trxs_tda, 
		tc_nro_trxs_tdap, 
		tc_nro_trxs_tdao, 
		tc_nro_trxs_av, 
		tc_nro_trxs_seg, 
		tc_mto_trxs, 
		tc_mto_trxs_spos, 
		tc_mto_trxs_tda_pie, 
		tc_mto_trxs_tda, 
		tc_mto_trxs_tdap, 
		tc_mto_trxs_tdao, 
		tc_mto_trxs_av, 
		tc_mto_trxs_seg, 
		tc_nro_trxs_sav, 
		tc_mto_trxs_sav, 
		0 AS tc_nro_adicionales, 
		0 AS tc_mto_trxs_tda_adi, 
		0 AS tc_mto_trxs_spos_adi 
	FROM schm_workspace.pmunoz_tp_tc3
	;


	--===========================================================================================;
	--[02] Informacion de Producto: CUENTA VISTA;
	--===========================================================================================;
	CREATE TABLE schm_workspace.pmunoz_Stock_Cuenta_Vista  as
	SELECT 
		a.cli_identifica as  rut,
		a.cli_identifica_dv dv,
		vis_numcue  cuenta, 
		cast(TO_CHAR( vis_fechape,'YYYYMMDD') as INT) as fecha_apertura,
		cast(TO_CHAR( vis_fechcierr,'YYYYMMDD') as INT) as fecha_cierre,
		CASE 
			WHEN vis_pro=4 THEN 'CUENTA_VISTA'
			WHEN vis_pro=40 THEN 'LCA' 
		END descrip_producto,
		CASE 
			WHEN vis_status ='9' THEN 'cerrado' 
			WHEN vis_status ='2' THEN 'vigente' 
		END as estado_cuenta,
		vis_suc as sucursal_apertura,
		c.des_codigo cod_cierre_contrato,
		c.des_descripcion desc_cierre_contrato 
	FROM  br_dm_prod_bigdata_fisa_db.tcap_vista  b 
	INNER JOIN  br_dm_prod_bigdata_fisa_db.tcli_persona   a
	ON(a.cli_codigo=vis_codcli) 
	LEFT JOIN br_dm_prod_bigdata_fisa_db.tgen_desctabla  c
	ON(vis_codtab=c.des_codtab) AND (vis_caucierr=c.des_codigo)
	WHERE 
		vis_mod=4
		AND (VIS_PRO=4 /*or VIS_PRO=40*/)
		AND vis_tip=1  
		AND b.YEAR*100+ b.month<=periodo_paso
	 ;


	CREATE TABLE schm_workspace.pmunoz_stock_cuenta_vista2   as 
	SELECT * 
	FROM schm_workspace.pmunoz_stock_cuenta_vista 
	WHERE 
	fecha_cierre is null or floor(fecha_cierre/100)>=periodo_paso
	;


	CREATE TABLE schm_workspace.pmunoz_Panes as 
	SELECT 
		cast(PEMID_GLS_NRO_DCT_IDE_K as INT)  RUT,
		A.CODENT,
		A.CENTALTA,
		A.CUENTA,
		G.NUMPLASTICO,
		G.FECALTA  FECALTA_TR,
		G.FECBAJA  FECBAJA_TR,
		J.DESTIPT  TIPO_TARJETA_RSAT
	FROM br_dm_prod_bigdata_reporitf_db.MPDT013 A /*CONTRATO de Tarjeta*/
	INNER JOIN br_dm_prod_bigdata_reporitf_db.MPDT007 C /*CONTRATO*/
	ON (A.CODENT=C.CODENT) AND (A.CENTALTA=C.CENTALTA) AND (A.CUENTA=C.CUENTA) 
	INNER JOIN br_dm_prod_bigdata_reporitf_db.BOPERS_MAE_IDE B ON 
	cast(A.IDENTCLI as int)=PEMID_NRO_INN_IDE
	INNER JOIN br_dm_prod_bigdata_reporitf_db.MPDT009 G /*Tarjeta*/ 
	ON (A.CODENT=G.CODENT) AND (A.CENTALTA=G.CENTALTA) AND (A.CUENTA=G.CUENTA) AND (A.NUMBENCTA=G.NUMBENCTA)
	INNER JOIN br_dm_prod_bigdata_reporitf_db.MPDT063 H 
	ON (G.CODENT=H.CODENT) AND (G.INDSITTAR=H.INDSITTAR)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.MPDT060 I 
	ON (G.CODBLQ=I.CODBLQ)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.MPDT026 J
	on(j.CODMAR=G.codmar) AND (J.INDTIPT=G.INDTIPT)
	WHERE c.producto ='08'
	;


	CREATE TABLE schm_workspace.pmunoz_Panes2 as 
	SELECT 
	a.*
	FROM schm_workspace.pmunoz_Panes  as a 
	INNER JOIN (SELECT 
	cuenta,max(NUMPLASTICO) as NUMPLASTICO
	FROM schm_workspace.pmunoz_Panes  
	WHERE DATE_PART(YEAR,FECALTA_TR)*100+DATE_PART(month,FECALTA_TR) <=periodo_paso
	GROUP BY cuenta
	) as b
	on(a.cuenta=b.cuenta) AND (a.NUMPLASTICO=b.NUMPLASTICO)
	;


	CREATE TABLE schm_workspace.pmunoz_Stock_Cuenta_Vista3 as 
	SELECT distinct 
	a.*,
	max(CASE WHEN b.TIPO_TARJETA_RSAT='MASTERCARD DEBIT' then 1 else 0 end) as MCD,
	max(CASE WHEN b.TIPO_TARJETA_RSAT<>'MASTERCARD DEBIT' then 1 else 0 end) as maestro,
	max(CASE WHEN b1.TIPO_TARJETA_RSAT='MASTERCARD DEBIT' then 1 else 0 end) as MCD2,
	max(CASE WHEN b1.TIPO_TARJETA_RSAT<>'MASTERCARD DEBIT' then 1 else 0 end) as maestro2
	FROM schm_workspace.pmunoz_Stock_Cuenta_Vista2 as a 
	LEFT JOIN (SELECT * FROM br_dm_prod_bigdata_segcom2_db.segcom_mpdt666 ) as a1
	on(a.cuenta=a1.cuenta2 )
	LEFT JOIN schm_workspace.pmunoz_Panes2 as b
	on(a1.CUENTA1=b.cuenta)
	LEFT JOIN schm_workspace.pmunoz_Panes2 as b1
	on(a.rut=b1.rut)
	GROUP BY a.rut,
	a.dv	,
	a.cuenta	,
	a.fecha_apertura	,
	a.fecha_cierre	,
	a.descrip_producto,
	a.estado_cuenta	,
	a.sucursal_apertura,
	a.cod_cierre_contrato	,
	a.desc_cierre_contrato
	;


	CREATE TABLE schm_workspace.pmunoz_TP_TD as 
	SELECT 
		rut,
		COUNT(cuenta) AS TD_Nro_cuenta,
		COUNT(CASE 
				WHEN floor(fecha_apertura/100)<=periodo_paso AND 
					(fecha_cierre is null or floor(fecha_cierre/100)>periodo_paso) 
					THEN cuenta 
			END) AS TD_CUENTA_VIGENTE,
		COUNT(CASE 
				WHEN floor(fecha_apertura/100)<=periodo_paso AND 
					(floor(fecha_cierre/100)=periodo_paso) 
					THEN cuenta 
				END) AS td_cuenta_cerrada,
		MIN(Fecha_Apertura) AS td_fecapertura, 
		CASE WHEN MAX(mcd)=1 OR MAX(mcd2)=1 then 'MCD' ELSE 'Maestro' END AS td_tipo  
	FROM schm_workspace.pmunoz_stock_cuenta_vista3
	GROUP BY rut
	;


	-------------------------------------------------------------------------------------------;
	--[02.3] TD: Movimientos de Cuenta Vista (Cargos y Abonos TOTALES);
	-------------------------------------------------------------------------------------------;
	CREATE TABLE schm_workspace.pmunoz_Movs_TD  as
			SELECT 
				*,
		CASE
			when tmo_tipotra='D' then 
			CASE
				WHEN DESCRIPCION IN ('COMPRA NACIONAL') THEN 'Compras Redcompra' 
				WHEN DESCRIPCION IN ('COMPRA NACIONAL MCD') THEN 'Compras Redcompra MCD' 
				WHEN DESCRIPCION IN ('COMPRA INTERNACIONAL') THEN 'Compras Internacionales' 
				WHEN DESCRIPCION IN ('COMPRA INTERNACIONAL MCD') THEN 'Compras Internacionales MCD' 
				WHEN DESCRIPCION IN ('CARGO POR PEC') THEN 'PEC' 
				WHEN DESCRIPCION IN ('GIRO CAJERO AUTOMATICO') THEN 'Giros ATM' 
				WHEN DESCRIPCION IN ('GIRO POR CAJA') THEN 'Giros Caja' 
				WHEN DESCRIPCION IN ('GIRO INTERNACIONAL') THEN 'Giro Internacional' 
				WHEN DESCRIPCION IN ('TRANSFERENCIA A OTROS BANCOS') THEN 'TEF emitidas Otros Bancos'
				WHEN DESCRIPCION IN ('PAGO TARJETA DE CREDITO') THEN 'Pago de Tarjeta' 
				WHEN DESCRIPCION IN ('A CUENTA BANCO RIPLEY','POR TRASPASO A CUENTA')  THEN 'Pago LCA' 
				WHEN DESCRIPCION IN ('COSTO DE MANTENCION MENSUAL CUENTA VISTA') then 'Comision planes' 
				else 'OTROS CARGOS' 
			end
		else ''
	END 
	AS Descripcion_Cargo 
			FROM 
				( SELECT 
					c2.cli_identifica  rut,
					c1.tmo_numcue as CUENTA, 
					c1.tmo_fechcon as FECHACON, 
					c1.tmo_fech as FECHA, 
					c1.rub_desc as DESCRIPCION, 
					c1.tmo_val as MONTO, 
					c1.con_libre as Desc_negocio, 
					c1.tmo_codmod, 
					c1.tmo_tipotra, 
		
					(
				SELECT cod_destra 
					FROM  br_dm_prod_bigdata_fisa_db.tgen_codtrans 
						WHERE cod_tra = tmo_codtra AND cod_mod = tmo_codmod 
				) as gls_transac, 

			case 
	when c1.tmo_tipotra='C' 
				and c1.rub_desc='DESDE OTROS BANCOS' 
				and ( 
				c1.con_libre like '%Remuneraciones%' OR 
				c1.con_libre like '%Anticipos%' OR 
				c1.con_libre like '%Sueldos%')  then 1 
	ELSE 0 
	END 
	as SI_ABR ,
	CASE 
	WHEN c1.tmo_tipotra='D' 
		and (c1.con_libre like '%Ripley%' OR c1.con_libre like '%RIPLEY%') 
		AND  c1.con_libre NOT like '%PAGO%' 
		THEN 'COMPRA_RIPLEY' 
	else ''
	END 
	AS COMPRA_RIPLEY
	from(SELECT * FROM  br_dm_prod_bigdata_fisa_db.tcap_tramon tmo /*base de movimientos*/
		, br_dm_prod_bigdata_fisa_db.TGEN_TRANRUBRO /*base descriptiva (para complementar movimientos)*/
		, br_dm_prod_bigdata_fisa_db.tcap_concepto /*base descriptiva (para complementar movimientos)*/
	WHERE rub_mod    = tmo_codmod /*unificacion de base de movs con rubro*/
		and rub_tra      = tmo_codtra /*unificacion de base de movs con rubro*/
		and rub_rubro    = tmo_rubro /*unificacion de base de movs con rubro*/
		and con_modulo(+)  = tmo_codmod /*unificacion de base de movs con con_*/
		and con_rubro(+)   = tmo_rubro /*unificacion de base de movs con con_*/
		and con_numtran(+) = tmo_numtra /*unificacion de base de movs con con_*/
		and con_cuenta (+) = tmo_numcue /*unificacion de base de movs con con_*/
		and con_codusr(+)  = tmo_codusr /*unificacion de base de movs con con_*/
		and con_sec(+)     = tmo_sec /*unificacion de base de movs con con_*/
		and con_transa(+)  = tmo_codtra /*unificacion de base de movs con con_*/
		/*FILTROS DE MOVIMIENTOS*/
		and tmo_tipotra in ('D','C') /*D=Cargo, C=Abono*/
		and tmo_codpro = 4 
		and tmo_codtip = 1 
		and tmo_modo = 'N' 
		and tmo_val > 1 /*solo montos mayores a 1 peso (mov de prueba)*/
		and tmo.YEAR*100+ tmo.month=periodo_paso
		/*FINAL: QUERY DESDE OPERACIONES*/
		)  C1
	LEFT JOIN ( 
	SELECT 
		distinct cli_identifica 
		,vis_numcue  
	FROM br_dm_prod_bigdata_fisa_db.tcli_persona /*MAESTRA DE CLIENTES BANCO*/ 
	,br_dm_prod_bigdata_fisa_db.tcap_vista /*SALDOS CUENTAS VISTAS */ 
	WHERE cli_codigo=vis_codcli 
	and vis_mod=4/*cuenta vista*/ 
	and (VIS_PRO=4/*CV*/ ) 
	and vis_tip=1  /*persona no juridica*/ 
	)  C2 
	on (c1.tmo_numcue=c2.vis_numcue) 
	);


	CREATE TABLE schm_workspace.pmunoz_rutero_movs as 
		SELECT 
			RUT, 
			sum(case 
				when tmo_tipotra='D' then 1 
				else 0 
			end) as Nro_Cargos,
			sum(case 
				when tmo_tipotra='D' then MONTO 
				else 0 
			end) as Mto_Cargos,
			sum(case 
				when tmo_tipotra='C' then 1 
				else 0 
			end) as Nro_Abonos,
			sum(case 
				when tmo_tipotra='C' then MONTO 
				else 0 
			end) as Mto_Abonos,
			max(case 
				when SI_ABR=1 then 1 
				else 0 
			end) as Tenencia_ABR,  
			sum(case 
				when SI_ABR=1 then MONTO 
				else 0 
			end) as Mto_ABR,
			/*Movimientos de TDA y SPOS que antes se sacaban desde DEM+SPOS_MCD+TDA_MCD*/
			sum
			(case 
				when tmo_tipotra='D' 
				and  DESCRIPCION IN ('COMPRA NACIONAL','COMPRA NACIONAL MCD','COMPRA INTERNACIONAL','COMPRA INTERNACIONAL MCD')
				and  COMPRA_RIPLEY<>'COMPRA_RIPLEY' then 1 
				else 0 
			end) as Nro_TRXs_SPOS,
			sum(case 
				when tmo_tipotra='D' 
				and  DESCRIPCION IN ('COMPRA NACIONAL','COMPRA NACIONAL MCD','COMPRA INTERNACIONAL','COMPRA INTERNACIONAL MCD')
				and  COMPRA_RIPLEY<>'COMPRA_RIPLEY' then MONTO 
				else 0 
			end) as Mto_TRXs_SPOS,
			sum(case 
				when tmo_tipotra='D' 
				and  DESCRIPCION IN ('COMPRA NACIONAL','COMPRA NACIONAL MCD','COMPRA INTERNACIONAL','COMPRA INTERNACIONAL MCD')
				and  COMPRA_RIPLEY='COMPRA_RIPLEY' then 1 
				else 0 
			end) as Nro_TRXs_TDA,
			sum(case 
				when tmo_tipotra='D' 
				and  DESCRIPCION IN ('COMPRA NACIONAL','COMPRA NACIONAL MCD','COMPRA INTERNACIONAL','COMPRA INTERNACIONAL MCD')
				and  COMPRA_RIPLEY='COMPRA_RIPLEY' then MONTO 
				else 0 
			end) as Mto_TRXs_TDA  
		FROM schm_workspace.pmunoz_Movs_TD 
		GROUP BY RUT 
		;


		CREATE TABLE schm_workspace.pmunoz_TP_TD2  as
			SELECT 
				a.*,
				b.Nro_Cargos as TD_Nro_Cargos,
				b.Mto_Cargos as TD_Mto_Cargos,
				b.Nro_Abonos as TD_Nro_Abonos,
				b.Mto_Abonos as TD_Mto_Abonos,
				b.Tenencia_ABR as TD_Tenencia_ABR,  
				b.Mto_ABR as TD_Mto_ABR,
				/*Movimientos de TDA y SPOS que antes se sacaban desde DEM+SPOS_MCD+TDA_MCD*/
		b.Nro_TRXs_SPOS as TD_Nro_TRXs_SPOS,
		b.Mto_TRXs_SPOS as TD_Mto_TRXs_SPOS,
		b.Nro_TRXs_TDA as TD_Nro_TRXs_TDA,
		b.Mto_TRXs_TDA as TD_Mto_TRXs_TDA  
		FROM schm_workspace.pmunoz_TP_TD  as a 
			LEFT JOIN schm_workspace.pmunoz_rutero_movs as b 
				on (a.rut=b.rut) ;


	-------------------------------------------------------------------------------------------;
	--[02.5] TD: Saldo de Cuenta Vista (Al final del periodo y maximo en el mes);
	-------------------------------------------------------------------------------------------;
	CREATE TABLE schm_workspace.pmunoz_SALDO_TD_1  as
	 SELECT 
		b.cli_identifica rut,
		cast(substring(a.acp_fecha,1,4) as int)*10000+cast(substring(a.acp_fecha,6,2) as int)*100+ cast(substring(a.acp_fecha,9,2) as int)as CodFecha,
		to_date(a.ACP_FECHA,'yyyy-mm-dd'), 
		a.ACP_NUMCUE, 
		sum(a.acp_salefe + a.acp_sal12h + a.acp_sal24h + a.acp_sal48h) as Saldo 
	FROM br_dm_prod_bigdata_fisa_db.tcap_acrpas  a
	LEFT JOIN (SELECT 
					distinct cli_identifica 
					,vis_numcue
				FROM br_dm_prod_bigdata_fisa_db.tcli_persona, br_dm_prod_bigdata_fisa_db.tcap_vista 
				WHERE cli_codigo=vis_codcli 
					and vis_mod=4
					and (VIS_PRO=4) 
					and vis_tip=1 
				) b
	on(a.ACP_NUMCUE=b.vis_numcue)
	WHERE a.acp_pro = 4 AND a.acp_tip = 1 
		and a.YEAR*100+a.month =periodo_paso
	GROUP BY 
		a.ACP_FECHA, 
		a.ACP_NUMCUE,
		b.cli_identifica ;


	CREATE TABLE schm_workspace.pmunoz_Saldo_TD as 
		SELECT 
		Cuenta,
		rut,
		Saldo_EOP,
		Saldo_MAX,
		Saldo_TOTAL,
		Dias_Saldo_Mayor_a_1,
		case 
		when Dias_Saldo_Mayor_a_1=0 then 0 
		else Saldo_TOTAL/Dias_Saldo_Mayor_a_1 
		end as Saldo_Prom 
		FROM (
	SELECT 
	ACP_NUMCUE as Cuenta, 
		rut,
		sum(CASE WHEN CodFecha=
		date_part(year,last_day(to_char(to_date(periodo_paso,'YYYYMM'), 'YYYY-MM-DD')::date))*10000+
		date_part(month,last_day(to_char(to_date(periodo_paso,'YYYYMM'), 'YYYY-MM-DD')::date))*100+
		date_part(day,last_day(to_char(to_date(periodo_paso,'YYYYMM'), 'YYYY-MM-DD')::date)) then Saldo else 0 end)  as Saldo_EOP, 
		max(Saldo) as Saldo_MAX, 
		sum(Saldo) as Saldo_TOTAL,
		count(CASE WHEN Saldo>1 then ACP_NUMCUE end) as Dias_Saldo_Mayor_a_1  
		FROM schm_workspace.pmunoz_SALDO_TD_1 
		GROUP BY 
	ACP_NUMCUE, 
		rut)
	;


		CREATE TABLE schm_workspace.pmunoz_rutero_Saldo as 
			SELECT 
				RUT, 
				max(Dias_Saldo_Mayor_a_1) as Dias_Saldo_Mayor_a_1,
				sum(Saldo_EOP) as Saldo_EOP,
				max(Saldo_Max) as Saldo_MAX,
				max(Saldo_PROM) as Saldo_PROM,
	sum(Saldo_TOTAL ) as Saldo_TOTAL 
				FROM schm_workspace.pmunoz_Saldo_TD  
					GROUP BY 
						RUT;
					

	CREATE TABLE schm_workspace.pmunoz_TP_TD3 as
		SELECT 
			a.*,
			b.Dias_Saldo_Mayor_a_1 as TD_Dias_Saldo_Mayor_a_1,
			b.Saldo_EOP as TD_Saldo_EOP,
			b.Saldo_MAX as TD_Saldo_MAX, 
			b.Saldo_PROM as TD_Saldo_PROM ,
			b.Saldo_TOTAL as TD_Saldo_TOTAL
		FROM schm_workspace.pmunoz_TP_TD2 as a 
			LEFT JOIN schm_workspace.pmunoz_rutero_Saldo as b 
				on (a.rut=b.rut) 
	;


	-------------------------------------------------------------------------------------------;
	--[02.6] TD: Acoplar tabla a Tablon de Productos final;
	-------------------------------------------------------------------------------------------;
		CREATE TABLE schm_workspace.pmunoz_tablon_productos2 as 
			SELECT 
		a.rut,
		COALESCE(b.TC_Tenencia,0) as  TC_Tenencia,
		b.TC_PROD_RSAT,
		COALESCE(b.TC_NRO_CTTO, 0) as  TC_NRO_CTTO,
		COALESCE(b.TC_NRO_CTTO_VIGENTE, 0) as  TC_NRO_CTTO_VIGENTE,
		COALESCE(b.TC_NRO_CTTO_CERRADO, 0) as  TC_NRO_CTTO_CERRADO,
		b.TC_act_tr, 
		b.TC_VU, 
		b.TC_VU_Prima, 
		COALESCE(b.TC_FecApertura, 0) as  TC_FecApertura,
		b.TC_Tipo, 
		COALESCE(b.TC_Saldo, 0) as  TC_Saldo,
		b.tc_observacion, 
		COALESCE(b.TC_Cupo, 0) as  TC_Cupo,
		COALESCE(b.TC_Disponible, 0) as TC_Disponible ,
		COALESCE(b.TC_Nro_TRXs, 0) as TC_Nro_TRXs ,
		COALESCE(b.TC_Nro_TRXs_SPOS,0) as   TC_Nro_TRXs_SPOS,
		COALESCE(b.TC_Nro_TRXs_TDA, 0) as  TC_Nro_TRXs_TDA,
		COALESCE(b.TC_Nro_TRXs_TDAp, 0) as TC_Nro_TRXs_TDAp ,
		COALESCE(b.TC_Nro_TRXs_TDAo, 0) as  TC_Nro_TRXs_TDAo,
		COALESCE(b.TC_Nro_TRXs_AV, 0) as  TC_Nro_TRXs_AV,
		COALESCE(b.TC_Nro_TRXs_SEG, 0) as  TC_Nro_TRXs_SEG,
		COALESCE(b.TC_Mto_TRXs, 0) as  TC_Mto_TRXs,
		COALESCE(b.TC_Mto_TRXs_SPOS, 0) as  TC_Mto_TRXs_SPOS,
		COALESCE(b.TC_Mto_TRXs_TDA_pie, 0) as  TC_Mto_TRXs_TDA_pie,
		COALESCE(b.TC_Mto_TRXs_TDA, 0) as  TC_Mto_TRXs_TDA,
		COALESCE(b.TC_Mto_TRXs_TDAp, 0) as  TC_Mto_TRXs_TDAp,
		COALESCE(b.TC_Mto_TRXs_TDAo, 0) as  TC_Mto_TRXs_TDAo,
		COALESCE(b.TC_Mto_TRXs_AV, 0) as  TC_Mto_TRXs_AV,
		COALESCE(b.TC_Mto_TRXs_SEG, 0) as  TC_Mto_TRXs_SEG,
		COALESCE(b.TC_Nro_TRXs_SAV, 0) as  TC_Nro_TRXs_SAV,
		COALESCE(b.TC_Mto_TRXs_SAV, 0) as  TC_Mto_TRXs_SAV,
		COALESCE(b.TC_Nro_Adicionales,0) as   TC_Nro_Adicionales,
		COALESCE(b.TC_Mto_TRXs_TDA_Adi,0) as   TC_Mto_TRXs_TDA_Adi,
		COALESCE(b.TC_Mto_TRXs_SPOS_Adi, 0) as  TC_Mto_TRXs_SPOS_Adi,
		CASE WHEN c.rut is not null AND c.TD_CUENTA_VIGENTE>0 then 1 else 0 end as TD_Tenencia,
			COALESCE(c.TD_Nro_cuenta , 0) as TD_Nro_cuenta,
	          COALESCE(c.TD_CUENTA_VIGENTE , 0) as TD_CUENTA_VIGENTE,
	          COALESCE(c.TD_CUENTA_CERRADA , 0) as TD_CUENTA_CERRADA,
	          COALESCE(c.TD_FecApertura , 0) as TD_FecApertura,
	          c.TD_Tipo, 
	          COALESCE(c.TD_Nro_Cargos , 0) as TD_Nro_Cargos,
	          COALESCE(c.TD_Mto_Cargos , 0) as TD_Mto_Cargos,
	          COALESCE(c.TD_Nro_Abonos , 0) as TD_Nro_Abonos,
	          COALESCE(c.TD_Mto_Abonos , 0) as TD_Mto_Abonos,
	          COALESCE(c.TD_Tenencia_ABR , 0) as TD_Tenencia_ABR,
	          COALESCE(c.TD_Mto_ABR , 0) as TD_Mto_ABR,
	          COALESCE(c.TD_Nro_TRXs_SPOS , 0) as TD_Nro_TRXs_SPOS,
	          COALESCE(c.TD_Mto_TRXs_SPOS , 0) as TD_Mto_TRXs_SPOS,
	          COALESCE(c.TD_Nro_TRXs_TDA , 0) as TD_Nro_TRXs_TDA,
	          COALESCE(c.TD_Mto_TRXs_TDA , 0) as TD_Mto_TRXs_TDA,
	          COALESCE(c.TD_Dias_Saldo_Mayor_a_1 , 0) as TD_Dias_Saldo_Mayor_a_1,
	          COALESCE(c.TD_Saldo_EOP , 0) as TD_Saldo_EOP,
	          COALESCE(c.TD_Saldo_MAX , 0) as TD_Saldo_MAX,
	          COALESCE(c.TD_Saldo_PROM , 0) as TD_Saldo_PROM,
	          COALESCE(c.TD_Saldo_TOTAL ,0) as TD_Saldo_TOTAL
		FROM (SELECT rut FROM schm_workspace.pmunoz_tablon_productos1 
		union SELECT rut FROM schm_workspace.pmunoz_TP_TD3) as a 
		LEFT JOIN schm_workspace.pmunoz_tablon_productos1  as b 
		on(a.rut=b.rut)
			LEFT JOIN schm_workspace.pmunoz_TP_TD3 as c
				on (a.rut=c.rut)
		;

	--===========================================================================================;
	--[03] Informacion de Producto: DAP;
	--===========================================================================================;
	CREATE TABLE schm_workspace.pmunoz_TP_DAP as 
	SELECT 
		rut,
		min(CASE 
			WHEN Composicion_Institucional='PERSONAS NATURALES' 
			then  DATE_PART(YEAR,Fecha_Apertura)*10000+DATE_PART(month,Fecha_Apertura)*100+DATE_PART(day,Fecha_Apertura) 
		end) as DAP_FecApertura_PN, 
		sum(CASE 
			WHEN Composicion_Institucional='PERSONAS NATURALES' 
			then Capital_Vigente 
		end) as DAP_monto_PN,
		count(CASE 
			WHEN Composicion_Institucional='PERSONAS NATURALES'  
			then rut 
		end) as DAP_Nro_PN,
		min(CASE 
			WHEN Composicion_Institucional='PERSONAS JURIDICAS' 
			then DATE_PART(YEAR,Fecha_Apertura)*10000+DATE_PART(month,Fecha_Apertura)*100+DATE_PART(day,Fecha_Apertura) 
		end) as DAP_FecApertura_PJ, 
		sum(CASE 
			WHEN Composicion_Institucional='PERSONAS JURIDICAS' 
			then Capital_Vigente 
		end) as DAP_monto_PJ,
		count(CASE 
			WHEN Composicion_Institucional='PERSONAS JURIDICAS'  
			then rut 
		end) as DAP_Nro_PJ
	FROM br_dm_prod_bigdata_sasdata_db.sas_ppff_stock_dap /*Tablon de DAP de Karina*/
		WHERE periodo = periodo_paso
	GROUP BY rut
	;


	-------------------------------------------------------------------------------------------;
	--[03.1] DAP: Acoplar tabla a Tablon de Productos final;
	-------------------------------------------------------------------------------------------;
		CREATE TABLE schm_workspace.pmunoz_tablon_productos3 as 
			SELECT 
				a.rut,
				COALESCE(b.tc_tenencia,0) as  tc_tenencia,
				b.tc_prod_rsat,
				COALESCE(b.tc_nro_ctto, 0) as  tc_nro_ctto,
				COALESCE(b.tc_nro_ctto_vigente, 0) as  tc_nro_ctto_vigente,
				COALESCE(b.tc_nro_ctto_cerrado, 0) as  tc_nro_ctto_cerrado,
				b.tc_act_tr, 
				b.tc_vu, 
				b.tc_vu_prima, 
				COALESCE(b.tc_fecapertura, 0) as  tc_fecapertura,
				b.tc_tipo, 
				COALESCE(b.tc_saldo, 0) as  tc_saldo,
				b.tc_observacion, 
				COALESCE(b.tc_cupo, 0) as  tc_cupo,
				COALESCE(b.tc_disponible, 0) as tc_disponible ,
				COALESCE(b.tc_nro_trxs, 0) as tc_nro_trxs ,
				COALESCE(b.tc_nro_trxs_spos,0) as   tc_nro_trxs_spos,
				COALESCE(b.tc_nro_trxs_tda, 0) as  tc_nro_trxs_tda,
				COALESCE(b.tc_nro_trxs_tdap, 0) as tc_nro_trxs_tdap ,
				COALESCE(b.tc_nro_trxs_tdao, 0) as  tc_nro_trxs_tdao,
				COALESCE(b.tc_nro_trxs_av, 0) as  tc_nro_trxs_av,
				COALESCE(b.tc_nro_trxs_seg, 0) as  tc_nro_trxs_seg,
				COALESCE(b.tc_mto_trxs, 0) as  tc_mto_trxs,
				COALESCE(b.tc_mto_trxs_spos, 0) as  tc_mto_trxs_spos,
				COALESCE(b.tc_mto_trxs_tda_pie, 0) as  tc_mto_trxs_tda_pie,
				COALESCE(b.tc_mto_trxs_tda, 0) as  tc_mto_trxs_tda,
				COALESCE(b.tc_mto_trxs_tdap, 0) as  tc_mto_trxs_tdap,
				COALESCE(b.tc_mto_trxs_tdao, 0) as  tc_mto_trxs_tdao,
				COALESCE(b.tc_mto_trxs_av, 0) as  tc_mto_trxs_av,
				COALESCE(b.tc_mto_trxs_seg, 0) as  tc_mto_trxs_seg,
				COALESCE(b.tc_nro_trxs_sav, 0) as  tc_nro_trxs_sav,
				COALESCE(b.tc_mto_trxs_sav, 0) as  tc_mto_trxs_sav,
				COALESCE(b.tc_nro_adicionales,0) as   tc_nro_adicionales,
				COALESCE(b.tc_mto_trxs_tda_adi,0) as   tc_mto_trxs_tda_adi,
				COALESCE(b.tc_mto_trxs_spos_adi, 0) as  tc_mto_trxs_spos_adi,
				COALESCE(b.td_tenencia,0) as td_tenencia,
				COALESCE(b.td_nro_cuenta , 0) as td_nro_cuenta,
				COALESCE(b.td_cuenta_vigente , 0) as td_cuenta_vigente,
				COALESCE(b.td_cuenta_cerrada , 0) as td_cuenta_cerrada,
				COALESCE(b.td_fecapertura , 0) as td_fecapertura,
				b.td_tipo, 
				COALESCE(b.td_nro_cargos , 0) as td_nro_cargos,
				COALESCE(b.td_mto_cargos , 0) as td_mto_cargos,
				COALESCE(b.td_nro_abonos , 0) as td_nro_abonos,
				COALESCE(b.td_mto_abonos , 0) as td_mto_abonos,
				COALESCE(b.td_tenencia_abr , 0) as td_tenencia_abr,
				COALESCE(b.td_mto_abr , 0) as td_mto_abr,
				COALESCE(b.td_nro_trxs_spos , 0) as td_nro_trxs_spos,
				COALESCE(b.td_mto_trxs_spos , 0) as td_mto_trxs_spos,
				COALESCE(b.td_nro_trxs_tda , 0) as td_nro_trxs_tda,
				COALESCE(b.td_mto_trxs_tda , 0) as td_mto_trxs_tda,
				COALESCE(b.td_dias_saldo_mayor_a_1 , 0) as td_dias_saldo_mayor_a_1,
				COALESCE(b.td_saldo_eop , 0) as td_saldo_eop,
				COALESCE(b.td_saldo_max , 0) as td_saldo_max,
				COALESCE(b.td_saldo_prom , 0) as td_saldo_prom,
				COALESCE(b.td_saldo_total ,0) as td_saldo_total,
				CASE 
					WHEN c.rut IS NOT NULL AND c.dap_nro_pn>0 THEN 1 
					else 0 
				end	as dap_tenencia_pn, 
				case 
					WHEN c.rut IS NOT NULL AND c.dap_nro_pj>0 THEN 1 
					ELSE 0 
				END AS dap_tenencia_pj, 
				COALESCE(c.dap_fecapertura_pn, 0) as dap_fecapertura_pn,
				COALESCE(c.dap_monto_pn,0) as dap_monto_pn,
				COALESCE(c.dap_nro_pn,0) as dap_nro_pn,
				COALESCE(c.dap_fecapertura_pj, 0) as dap_fecapertura_pj,
				COALESCE(c.dap_monto_pj,0) as dap_monto_pj,
				COALESCE(c.dap_nro_pj,0) as dap_nro_pj
	  	FROM (SELECT rut FROM schm_workspace.pmunoz_tablon_productos2 
		union SELECT rut FROM schm_workspace.pmunoz_tp_dap) as a 
		LEFT JOIN schm_workspace.pmunoz_tablon_productos2  as b 
		on(a.rut=b.rut)
			LEFT JOIN schm_workspace.pmunoz_tp_dap as c
				on (a.rut=c.rut)
		;


	--===========================================================================================;
	--[04] Informacion de Producto: CTACTE;
	--===========================================================================================;
	CREATE TABLE schm_workspace.pmunoz_Stock_Cuenta_corriente  as
	SELECT 
		a.cli_identifica rut,
		a.cli_identifica_dv  dv,
		vis_numcue  cuenta, 
		cast(TO_CHAR( vis_fechape,'YYYYMMDD') as INT) as FECHA_APERTURA,
		cast(TO_CHAR( VIS_FECHCIERR,'YYYYMMDD') as INT) as FECHA_CIERRE,
		CASE WHEN VIS_PRO=4 THEN 'CUENTA_VISTA'
		     WHEN VIS_PRO=1 THEN 'CUENTA_CORRIENTE'
		WHEN VIS_PRO=40 THEN 'LCA' END  DESCRIP_PRODUCTO,
		CASE WHEN vis_status ='9' THEN 'cerrado' 
		when vis_status ='2' then 'vigente' end as estado_cuenta,
		/*c.DES_CODTAB,*/
		VIS_SUC as SUCURSAL_APERTURA,
		e.SUC_NOMBRE nombre_sucursal,
		c.DES_CODIGO COD_CIERRE_CONTRATO,
		c.DES_DESCRIPCION DESC_CIERRE_CONTRATO
	FROM  br_dm_prod_bigdata_fisa_db.tcap_vista  b 
	INNER JOIN   br_dm_prod_bigdata_fisa_db.tcli_persona   a
	on(a.cli_codigo=vis_codcli) 
	LEFT JOIN  br_dm_prod_bigdata_fisa_db.tgen_desctabla  c
	on(VIS_CODTAB=c.DES_CODTAB) AND     (VIS_CAUCIERR=c.DES_CODIGO)
	LEFT JOIN  br_dm_prod_bigdata_fisa_db.TGEN_SUCURSAL e 
	on(VIS_SUC=e.SUC_CODIGO)
	WHERE 
	vis_mod=4
	and (VIS_PRO=1)
	and vis_tip=1   
	and cast(TO_CHAR( vis_fechape,'YYYYMMDD') as INT)>=20210923 /*20220302*/
	and  b.YEAR*100+b.month<=periodo_paso ;


	CREATE TABLE schm_workspace.pmunoz_Stock_Cuenta_corriente2 as 
	SELECT * 
	FROM schm_workspace.pmunoz_Stock_Cuenta_corriente
	WHERE 
	FECHA_CIERRE is null or floor(FECHA_CIERRE/100)>=periodo_paso 
	;


	CREATE TABLE schm_workspace.pmunoz_MOV_CUENTA_corriente  as
	SELECT 
		*,
		CASE 
		when tmo_tipotra='C' then 
		case 
		WHEN DESCRIPCION IN ('VALOR EFECTIVO','EN EFECTIVO') AND GLS_TRANSAC ='DEPOSITO' AND  SI_ABR<>1  THEN 'Depósitos en Efectivo' 
		WHEN DESCRIPCION IN ('CON DOCUMENTOS') AND GLS_TRANSAC ='DEPOSITO' AND SI_ABR<>1 THEN 'Depósitos con Documento' 
		WHEN DESCRIPCION IN ('TRANSFERENCIA DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas' 
		WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 THEN 'TEF Recibidas' 
		WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR=1 THEN 'Abono de Remuneraciones' 
		WHEN DESCRIPCION IN ('DESDE OTROS BANCOS') AND  SI_ABR<>1 AND DESC_NEGOCIO like '%Proveedores%' THEN 'TEF Recibidas' 
		WHEN DESCRIPCION IN ('POR REGULARIZACION') AND  SI_ABR<>1 THEN 'Otros (pago proveedores)' 
		WHEN DESCRIPCION IN ('DESDE LINEA DE CREDITO') AND GLS_TRANSAC ='TRASPASO DE FONDOS' AND  SI_ABR<>1 THEN 'Traspaso desde LCA'
		WHEN DESCRIPCION IN ('AVANCE DESDE TARJETA DE CREDITO BANCO RIPLEY') AND  SI_ABR<>1 THEN 'Avance desde Tarjeta Ripley' 
		WHEN DESCRIPCION IN ('DEVOLUCION COMISION') AND  SI_ABR<>1 THEN 'DEVOLUCION COMISION'  
		WHEN DESCRIPCION IN ('TRANSFERENCIA DESDE CREDITO') AND  SI_ABR<>1 THEN 'Traspaso desde LCA' 
		else 'OTROS ABONOS' 
		end else ''
		END AS Descripcion_Abono,
		CASE 
		when tmo_tipotra='D' then 
		CASE
		WHEN DESCRIPCION IN ('COMPRA NACIONAL CTA CTE') THEN 'Compras Redcompra' 
		WHEN DESCRIPCION IN ('COMPRA INTERNACIONAL CTA CTE') THEN 'Compras Internacionales' 
		WHEN DESCRIPCION IN ('CARGO POR PEC') THEN 'PEC' 
		when DESCRIPCION IN ('GIRO ATM INTERNACIONAL CTA CTE') then 'Giros internacional CTA CTE'
		when DESCRIPCION IN ('GIRO ATM NACIONAL CTA CTE') then 'Giros ATM CTA CTE'
		WHEN DESCRIPCION IN ('GIRO POR CAJA') THEN 'Giros Caja'
		WHEN DESCRIPCION IN ('TRANSFERENCIA A OTROS BANCOS') THEN 'TEF emitidas Otros Bancos'
		WHEN DESCRIPCION IN ('PAGO TARJETA DE CREDITO') THEN 'Pago de Tarjeta' 
		WHEN DESCRIPCION IN ('A CUENTA BANCO RIPLEY','POR TRASPASO A CUENTA')  THEN 'Pago LCA'
		WHEN  DESCRIPCION IN ('COSTO DE MANTENCION MENSUAL CTA CTE') then 'Comision planes'
		WHEN DESCRIPCION IN ('IVA COSTO DE MANTENCION MENSUAL CTA CTE') then 'IVA Com cta cte'
		else 'OTROS CARGOS' 
		end else ''
		END AS Descripcion_Cargo 
	FROM 
		(SELECT 
			c2.cli_identifica rut,
			cast(TO_CHAR( c1.tmo_fech,'YYYYMM') as INT) as PERIODO,
			cast(TO_CHAR( c1.tmo_fech,'YYYYMMDD') as INT) as CodFecha,
			c1.tmo_numcue as CUENTA, 
			c1.tmo_fechcon as FECHACON, 
			c1.tmo_fech as FECHA, 
			c1.rub_desc as DESCRIPCION, 
			c1.tmo_val as MONTO, 
			c1.con_libre as Desc_negocio, 
			c1.tmo_codmod, 
			c1.tmo_tipotra, 
			c1.tmo_rubro, 
			c1.tmo_numtra, 
			c1.tmo_numcue, 
			c1.tmo_codusr,  
			c1.tmo_sec, 
			c1.tmo_codtra, 
			(
			SELECT cod_destra 
			FROM br_dm_prod_bigdata_fisa_db.tgen_codtrans 
			WHERE cod_tra = tmo_codtra AND cod_mod = tmo_codmod 
			) as gls_transac,
			case 
			when c1.tmo_tipotra='D' then 'CARGO' 
			when c1.tmo_tipotra='C' then 'ABONO' 
			end as Tipo_Movimiento,
			case 
			when c1.tmo_tipotra='C' 
			and c1.rub_desc='DESDE OTROS BANCOS' 
				and ( 
				c1.con_libre like '%Remuneraciones%' OR 
				c1.con_libre like '%Anticipos%' OR 
				c1.con_libre like '%Sueldos%'
				)  then 1 
				ELSE 0 
			END as SI_ABR ,
			CASE 
			WHEN  c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS' 
			and ( c1.con_libre like '%Remuneraciones%' OR c1.con_libre like '%Anticipos%' OR c1.con_libre like '%Sueldos%')
			AND c1.con_libre like '%BANCO RIPLEY%' THEN 'BANCO RIPLEY' 
			WHEN  c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS' 
			and ( c1.con_libre like '%Remuneraciones%' OR c1.con_libre like '%Anticipos%' OR c1.con_libre like '%Sueldos%')
			 AND c1.con_libre like '%CAR S.A.%' THEN 'CAR' 
			WHEN  c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS' 
			and ( c1.con_libre like '%Remuneraciones%' OR c1.con_libre like '%Anticipos%' OR c1.con_libre like '%Sueldos%')
			 AND c1.con_libre like '%RIPLEY STORE%' THEN 'RIPLEY STORE' 
			WHEN  c1.tmo_tipotra='C' AND c1.rub_desc='DESDE OTROS BANCOS' 
			and ( c1.con_libre like '%Remuneraciones%' OR c1.con_libre like '%Anticipos%' OR c1.con_libre like '%Sueldos%')
			AND ( 
				c1.con_libre NOT like ('%RIPLEY STORE%') or 
				c1.con_libre NOT like ('%CAR S.A.%') or 
				c1.con_libre NOT like ('%BANCO RIPLEY%') 
				) THEN 'OTROS BANCOS' else ''
			END AS Descripcion_ABR,
			CASE 
			WHEN c1.tmo_tipotra='D' 
			and (c1.con_libre like '%Ripley%' OR c1.con_libre like '%RIPLEY%') 
			AND  c1.con_libre NOT like '%PAGO%' 
			THEN 'COMPRA_RIPLEY' else ''
			END AS COMPRA_RIPLEY
		FROM
			(SELECT * FROM  br_dm_prod_bigdata_fisa_db.tcap_tramon tmo /*base de movimientos*/ 
			   , br_dm_prod_bigdata_fisa_db.TGEN_TRANRUBRO /*base descriptiva (para complementar movimientos)*/ 
			   , br_dm_prod_bigdata_fisa_db.tcap_concepto /*base descriptiva (para complementar movimientos)*/ 
			WHERE rub_mod    = tmo_codmod /*unificacion de base de movs con rubro*/ 
				and rub_tra      = tmo_codtra /*unificacion de base de movs con rubro*/ 
				and rub_rubro    = tmo_rubro /*unificacion de base de movs con rubro*/ 
				and con_modulo(+)  = tmo_codmod /*unificacion de base de movs con con_*/ 
				and con_rubro(+)   = tmo_rubro /*unificacion de base de movs con con_*/ 
				and con_numtran(+) = tmo_numtra /*unificacion de base de movs con con_*/ 
				and con_cuenta (+) = tmo_numcue /*unificacion de base de movs con con_*/ 
				and con_codusr(+)  = tmo_codusr /*unificacion de base de movs con con_*/ 
				and con_sec(+)     = tmo_sec /*unificacion de base de movs con con_*/ 
				and con_transa(+)  = tmo_codtra /*unificacion de base de movs con con_*/ 
				/*FILTROS DE MOVIMIENTOS*/ 
				and tmo_tipotra in ('D','C') /*D=Cargo, C=Abono*/ 
				and tmo_codmod=4
				and tmo_codpro = 1 
				and tmo_codtip = 1 
				and tmo_modo = 'N' 
				and tmo_val >= 1 /*solo montos mayores a 1 peso (mov de prueba)*/ 
				and tmo.YEAR*100+tmo.month=periodo_paso
				/*FINAL: QUERY DESDE OPERACIONES*/ 
		)  C1  
		LEFT JOIN ( 
			SELECT 
				distinct cli_identifica 
				,vis_numcue  
			FROM br_dm_prod_bigdata_fisa_db.tcli_persona /*MAESTRA DE CLIENTES BANCO*/ 
			,br_dm_prod_bigdata_fisa_db.tcap_vista /*SALDOS CUENTAS VISTAS */ 
			WHERE cli_codigo=vis_codcli 
			and vis_mod=4/*cuenta vista, CUENTA */ 
			and (VIS_PRO=1/*CC*/  ) 
			and vis_tip=1  /*persona no juridica*/ 
		)  C2 
		ON (c1.tmo_numcue=c2.vis_numcue) 
	) ;


	CREATE TABLE schm_workspace.pmunoz_rutero_movs_CC as 
		SELECT 
			RUT, 
			sum
			(case 
				when tmo_tipotra='D' then 1 
				else 0 
			end)
			as Nro_Cargos,
				sum
			(case 
				when tmo_tipotra='D' then MONTO 
				else 0 
			end)
			as Mto_Cargos,
			sum(case 
			when tmo_tipotra='C' then 1 
			else 0 
			end) as Nro_Abonos,
			sum
			(case 
			when tmo_tipotra='C' then MONTO 
			else 0 
			end)
			as Mto_Abonos,
			max
			(case 
			when SI_ABR=1 then 1 
			else 0 
			end)
			as Tenencia_ABR,  
			sum
			(case 
			when SI_ABR=1 then MONTO 
			else 0 
			end) as Mto_ABR,
			/*Movimientos de TDA y SPOS que antes se sacaban desde DEM+SPOS_MCD+TDA_MCD*/
			sum
			(case 
				when tmo_tipotra='D' 
				and  Descripcion_Cargo IN ('Compras Redcompra','Compras Internacionales')
				and  COMPRA_RIPLEY<>'COMPRA_RIPLEY' 
					then 1 
				else 0 
			end)
			as Nro_TRXs_SPOS,
				sum
				(case 
					when tmo_tipotra='D' 
					and  Descripcion_Cargo IN ('Compras Redcompra','Compras Internacionales')
					and  COMPRA_RIPLEY<>'COMPRA_RIPLEY' 
						then MONTO 
					else 0 
				end)
				as Mto_TRXs_SPOS,
					sum
					(case 
						when tmo_tipotra='D' 
						and  Descripcion_Cargo IN ('Compras Redcompra','Compras Internacionales')
						and  COMPRA_RIPLEY='COMPRA_RIPLEY' 
							then 1 
						else 0 
					end)
					as Nro_TRXs_TDA,
						sum
						(case 
							when tmo_tipotra='D' 
							and  Descripcion_Cargo IN ('Compras Redcompra','Compras Internacionales')
							and  COMPRA_RIPLEY='COMPRA_RIPLEY' 
								then MONTO 
							else 0 
						end)
					as Mto_TRXs_TDA  
		FROM schm_workspace.pmunoz_MOV_CUENTA_corriente 
		GROUP BY RUT 
		;


	CREATE TABLE schm_workspace.pmunoz_TP_CC as 
	SELECT 
	rut,
	count(cuenta) as CC_Nro_cuenta,
	count(CASE WHEN floor(FECHA_APERTURA/100)<=periodo_paso
	 AND (FECHA_CIERRE is null or floor(FECHA_CIERRE/100)>periodo_paso
	) then cuenta end) as CC_CUENTA_VIGENTE,
	count(CASE WHEN floor(FECHA_APERTURA/100)<=periodo_paso
	 AND (floor(FECHA_CIERRE/100)=periodo_paso
	) then cuenta end) as CC_CUENTA_CERRADA,
	min(Fecha_Apertura) as CC_FecApertura
	FROM schm_workspace.pmunoz_Stock_Cuenta_corriente2
	GROUP BY rut
	;


	CREATE TABLE schm_workspace.pmunoz_TP_CC2 as
		SELECT 
			a.*,
			b.Nro_Cargos as CC_Nro_Cargos,
			b.Mto_Cargos as CC_Mto_Cargos,
			b.Nro_Abonos as CC_Nro_Abonos,
			b.Mto_Abonos as CC_Mto_Abonos,
			b.Tenencia_ABR as CC_Tenencia_ABR,  
			b.Mto_ABR as CC_Mto_ABR,
			/*Movimientos de TDA y SPOS que antes se sacaban desde DEM+SPOS_MCD+TDA_MCD*/
	b.Nro_TRXs_SPOS as CC_Nro_TRXs_SPOS,
	b.Mto_TRXs_SPOS as CC_Mto_TRXs_SPOS,
	b.Nro_TRXs_TDA as CC_Nro_TRXs_TDA,
	b.Mto_TRXs_TDA as CC_Mto_TRXs_TDA  
	FROM schm_workspace.pmunoz_TP_CC as a 
		LEFT JOIN schm_workspace.pmunoz_rutero_movs_CC as b 
			on (a.rut=b.rut) ;


	CREATE TABLE schm_workspace.pmunoz_Saldos_CC  as
	 SELECT 
		b.cli_identifica  rut,
		cast(substring(a.acp_fecha,1,4) as int)*10000+cast(substring(a.acp_fecha,6,2) as int)*100+ cast(substring(a.acp_fecha,9,2) as int)as CodFecha,
		a.ACP_FECHA, 
		a.ACP_NUMCUE, 
		sum(a.acp_salefe + a.acp_sal12h + a.acp_sal24h + a.acp_sal48h) as Saldo 
	FROM br_dm_prod_bigdata_fisa_db.tcap_acrpas  a
	LEFT JOIN ( SELECT 
					distinct cli_identifica 
					,vis_numcue
				FROM br_dm_prod_bigdata_fisa_db.tcli_persona 
				,br_dm_prod_bigdata_fisa_db.tcap_vista 
				WHERE cli_codigo=vis_codcli 
				and vis_mod=4
				and (VIS_PRO=1) 
				and vis_tip=1  
	) b
	on(a.ACP_NUMCUE=b.vis_numcue)
	WHERE a.acp_pro = 1 AND a.acp_tip = 1 
	and a.YEAR*100+a.month =periodo_paso
	GROUP BY 
		a.ACP_FECHA, 
		a.ACP_NUMCUE,
		b.cli_identifica;


	CREATE TABLE schm_workspace.pmunoz_Saldo_CC2 as 
	SELECT 
		Cuenta,
		rut,
		Saldo_EOP,
		Saldo_MAX,
		Saldo_TOTAL,
		Dias_Saldo_Mayor_a_1,
		case 
		when Dias_Saldo_Mayor_a_1=0 then 0 
		else Saldo_TOTAL/Dias_Saldo_Mayor_a_1 
		end as Saldo_Prom 
	FROM (
		SELECT 
			ACP_NUMCUE as Cuenta, 
			rut,
			sum(CASE 
				WHEN CodFecha=date_part(year,last_day(to_char(to_date(periodo_paso,'YYYYMM'), 'YYYY-MM-DD')::date))*10000+
				date_part(month,last_day(to_char(to_date(periodo_paso,'YYYYMM'), 'YYYY-MM-DD')::date))*100+
				date_part(day,last_day(to_char(to_date(periodo_paso,'YYYYMM'), 'YYYY-MM-DD')::date))
				then Saldo else 0 
			end) as Saldo_EOP, 
			max(Saldo) as Saldo_MAX, 
			sum(Saldo) as Saldo_TOTAL,
			count(CASE WHEN Saldo>1 then ACP_NUMCUE end) as Dias_Saldo_Mayor_a_1  
		FROM schm_workspace.pmunoz_Saldos_CC 
		GROUP BY 
			ACP_NUMCUE, 
			rut)
	;



	CREATE TABLE schm_workspace.pmunoz_rutero_Saldo_CC3 as 
		SELECT 
			RUT, 
			max(Dias_Saldo_Mayor_a_1) as Dias_Saldo_Mayor_a_1,
			sum(Saldo_EOP) as Saldo_EOP,
			max(Saldo_Max) as Saldo_MAX,
			max(Saldo_PROM) as Saldo_PROM,
			sum(Saldo_TOTAL ) as Saldo_TOTAL 
		FROM schm_workspace.pmunoz_Saldo_CC2  
		GROUP BY RUT;


	/*Pegar en Tabla*/
	CREATE TABLE schm_workspace.pmunoz_TP_CC3 as
		SELECT 
			a.*,
			b.Dias_Saldo_Mayor_a_1 as CC_Dias_Saldo_Mayor_a_1,
			b.Saldo_EOP as CC_Saldo_EOP,
			b.Saldo_MAX as CC_Saldo_MAX, 
			b.Saldo_PROM as CC_Saldo_PROM ,
			b.Saldo_TOTAL as CC_Saldo_TOTAL
		FROM schm_workspace.pmunoz_TP_CC2 as a 
			LEFT JOIN schm_workspace.pmunoz_rutero_Saldo_CC3 as b 
				on (a.rut=b.rut) 	;


	CREATE TABLE schm_workspace.pmunoz_tablon_productos4 as 
		SELECT 
			a.rut,
			COALESCE(b.TC_Tenencia,0) as  TC_Tenencia,
			b.TC_PROD_RSAT,
			COALESCE(b.TC_NRO_CTTO, 0) as  TC_NRO_CTTO,
			COALESCE(b.TC_NRO_CTTO_VIGENTE, 0) as  TC_NRO_CTTO_VIGENTE,
			COALESCE(b.TC_NRO_CTTO_CERRADO, 0) as  TC_NRO_CTTO_CERRADO,
			b.TC_act_tr, 
			b.TC_VU, 
			b.TC_VU_Prima, 
			COALESCE(b.TC_FecApertura, 0) as  TC_FecApertura,
			b.TC_Tipo, 
			COALESCE(b.TC_Saldo, 0) as  TC_Saldo,
			b.tc_observacion, 
			COALESCE(b.TC_Cupo, 0) as  TC_Cupo,
			COALESCE(b.TC_Disponible, 0) as TC_Disponible ,
			COALESCE(b.TC_Nro_TRXs, 0) as TC_Nro_TRXs ,
			COALESCE(b.TC_Nro_TRXs_SPOS,0) as   TC_Nro_TRXs_SPOS,
			COALESCE(b.TC_Nro_TRXs_TDA, 0) as  TC_Nro_TRXs_TDA,
			COALESCE(b.TC_Nro_TRXs_TDAp, 0) as TC_Nro_TRXs_TDAp ,
			COALESCE(b.TC_Nro_TRXs_TDAo, 0) as  TC_Nro_TRXs_TDAo,
			COALESCE(b.TC_Nro_TRXs_AV, 0) as  TC_Nro_TRXs_AV,
			COALESCE(b.TC_Nro_TRXs_SEG, 0) as  TC_Nro_TRXs_SEG,
			COALESCE(b.TC_Mto_TRXs, 0) as  TC_Mto_TRXs,
			COALESCE(b.TC_Mto_TRXs_SPOS, 0) as  TC_Mto_TRXs_SPOS,
			COALESCE(b.TC_Mto_TRXs_TDA_pie, 0) as  TC_Mto_TRXs_TDA_pie,
			COALESCE(b.TC_Mto_TRXs_TDA, 0) as  TC_Mto_TRXs_TDA,
			COALESCE(b.TC_Mto_TRXs_TDAp, 0) as  TC_Mto_TRXs_TDAp,
			COALESCE(b.TC_Mto_TRXs_TDAo, 0) as  TC_Mto_TRXs_TDAo,
			COALESCE(b.TC_Mto_TRXs_AV, 0) as  TC_Mto_TRXs_AV,
			COALESCE(b.TC_Mto_TRXs_SEG, 0) as  TC_Mto_TRXs_SEG,
			COALESCE(b.TC_Nro_TRXs_SAV, 0) as  TC_Nro_TRXs_SAV,
			COALESCE(b.TC_Mto_TRXs_SAV, 0) as  TC_Mto_TRXs_SAV,
			COALESCE(b.TC_Nro_Adicionales,0) as   TC_Nro_Adicionales,
			COALESCE(b.TC_Mto_TRXs_TDA_Adi,0) as   TC_Mto_TRXs_TDA_Adi,
			COALESCE(b.TC_Mto_TRXs_SPOS_Adi, 0) as  TC_Mto_TRXs_SPOS_Adi,
			COALESCE(b.TD_Tenencia,0) as TD_Tenencia,
			COALESCE(b.TD_Nro_cuenta , 0) as TD_Nro_cuenta,
			COALESCE(b.TD_CUENTA_VIGENTE , 0) as TD_CUENTA_VIGENTE,
			COALESCE(b.TD_CUENTA_CERRADA , 0) as TD_CUENTA_CERRADA,
			COALESCE(b.TD_FecApertura , 0) as TD_FecApertura,
			b.TD_Tipo, 
			COALESCE(b.TD_Nro_Cargos , 0) as TD_Nro_Cargos,
			COALESCE(b.TD_Mto_Cargos , 0) as TD_Mto_Cargos,
			COALESCE(b.TD_Nro_Abonos , 0) as TD_Nro_Abonos,
			COALESCE(b.TD_Mto_Abonos , 0) as TD_Mto_Abonos,
			COALESCE(b.TD_Tenencia_ABR , 0) as TD_Tenencia_ABR,
			COALESCE(b.TD_Mto_ABR , 0) as TD_Mto_ABR,
			COALESCE(b.TD_Nro_TRXs_SPOS , 0) as TD_Nro_TRXs_SPOS,
			COALESCE(b.TD_Mto_TRXs_SPOS , 0) as TD_Mto_TRXs_SPOS,
			COALESCE(b.TD_Nro_TRXs_TDA , 0) as TD_Nro_TRXs_TDA,
			COALESCE(b.TD_Mto_TRXs_TDA , 0) as TD_Mto_TRXs_TDA,
			COALESCE(b.TD_Dias_Saldo_Mayor_a_1 , 0) as TD_Dias_Saldo_Mayor_a_1,
			COALESCE(b.TD_Saldo_EOP , 0) as TD_Saldo_EOP,
			COALESCE(b.TD_Saldo_MAX , 0) as TD_Saldo_MAX,
			COALESCE(b.TD_Saldo_PROM , 0) as TD_Saldo_PROM,
			COALESCE(b.TD_Saldo_TOTAL ,0) as TD_Saldo_TOTAL,
			COALESCE(b.DAP_Tenencia_PN,0) as  DAP_Tenencia_PN,
			COALESCE(b.DAP_Tenencia_PJ, 0) as DAP_Tenencia_PJ,
			COALESCE(b.DAP_FecApertura_PN, 0) as DAP_FecApertura_PN,
			COALESCE(b.DAP_monto_PN,0) as DAP_monto_PN,
			COALESCE(b.DAP_Nro_PN,0) as DAP_Nro_PN,
			COALESCE(b.DAP_FecApertura_PJ, 0) as DAP_FecApertura_PJ,
			COALESCE(b.DAP_monto_PJ,0) as DAP_monto_PJ,
			COALESCE(b.DAP_Nro_PJ,0) as DAP_Nro_PJ,
			CASE WHEN c.rut is not null AND c.CC_CUENTA_VIGENTE>0 then 1 else 0 end as CC_Tenencia,
			COALESCE(c.CC_Nro_cuenta,	0) as 	CC_Nro_cuenta,
			COALESCE(c.CC_CUENTA_VIGENTE,	0) as 	CC_CUENTA_VIGENTE,
			COALESCE(c.CC_CUENTA_CERRADA,	0) as 	CC_CUENTA_CERRADA,
			COALESCE(c.CC_FecApertura,	0) as 	CC_FecApertura,
			COALESCE(c.CC_Nro_Cargos,	0) as 	CC_Nro_Cargos,
			COALESCE(c.CC_Mto_Cargos,	0) as 	CC_Mto_Cargos,
			COALESCE(c.CC_Nro_Abonos,	0) as 	CC_Nro_Abonos,
			COALESCE(c.CC_Mto_Abonos,	0) as 	CC_Mto_Abonos,
			COALESCE(c.CC_Tenencia_ABR,	0) as 	CC_Tenencia_ABR,
			COALESCE(c.CC_Mto_ABR,	0) as 	CC_Mto_ABR,
			COALESCE(c.CC_Nro_TRXs_SPOS,	0) as 	CC_Nro_TRXs_SPOS,
			COALESCE(c.CC_Mto_TRXs_SPOS,	0) as 	CC_Mto_TRXs_SPOS,
			COALESCE(c.CC_Nro_TRXs_TDA,	0) as 	CC_Nro_TRXs_TDA,
			COALESCE(c.CC_Mto_TRXs_TDA,	0) as 	CC_Mto_TRXs_TDA,
			COALESCE(c.CC_Dias_Saldo_Mayor_a_1,	0) as 	CC_Dias_Saldo_Mayor_a_1,
			COALESCE(c.CC_Saldo_EOP,	0) as 	CC_Saldo_EOP,
			COALESCE(c.CC_Saldo_MAX,	0) as 	CC_Saldo_MAX,
			COALESCE(c.CC_Saldo_PROM,	0) as 	CC_Saldo_PROM,
			COALESCE(c.CC_Saldo_TOTAL	,0) as 	CC_Saldo_TOTAL
		FROM (SELECT rut FROM schm_workspace.pmunoz_tablon_productos3
		union SELECT rut FROM schm_workspace.pmunoz_TP_CC3) as a 
				LEFT JOIN schm_workspace.pmunoz_tablon_productos3 as b
				on (a.rut=b.rut)
			LEFT JOIN schm_workspace.pmunoz_TP_CC3 as c 
				on (a.rut=c.rut)
		;


	--===========================================================================================;
	--[05] Informacion de Producto: Consumo;
	--===========================================================================================;
	CREATE TABLE schm_workspace.pmunoz_extraer_consumo1 AS 
	SELECT 
	A.CAD_FECHA, 
	A.CAD_CUENTA, 
	A.FECHA_EMISION, 
	A.CAD_DIASMORA, 
	A.CAD_CUOTASPAG as CUOTAS_PAGADAS, 
	A.RUTCD as RUT2, 
	pre_numper as CUOTAS_CREDITO,  
	pre_diasfijo as DIAS_PAGO, 
	pre_tasapac/12 as TASA_MENSUAL, 
	pre_tasapac as TASA_ANUAL, 
	PRE_VALORCUOTA as CUOTA, 
	PRE_MONTO as VALOR_LIQUIDO ,
	CAD_CAPDIRECTOMN,
	CASE WHEN ((cad_mod = 6 AND cad_prod = 3)  or
	(cad_mod = 6 AND cad_prod = 40) or 
	(cad_mod =6 AND cad_prod =41)) then 1 else 0 end as otros_consumos
	FROM br_dm_prod_bigdata_fisa_db.brcf_calificadet A, 
	br_dm_prod_bigdata_fisa_db.tpre_prestamos B 
	WHERE a.cad_cuenta = b.pre_credito 
	--and cad_fecha = last_day(to_char(to_date(periodo_paso, 'YYYYMM'), 'YYYY-MM-DD')::date)
	AND a.YEAR*100+a.MONTH=periodo_paso
	and cad_status in ('V','E') ;

	CREATE TABLE schm_workspace.pmunoz_extraer_consumo2 AS 
	SELECT 
	A.CAD_FECHA, 
	A.CAD_CUENTA, 
	A.FECHA_EMISION, 
	A.CAD_DIASMORA, 
	A.CAD_CUOTASPAG as CUOTAS_PAGADAS, 
	CAST(A.RUTCD AS int) as RUT2, 
	pre_numper as CUOTAS_CREDITO,  
	pre_diasfijo as DIAS_PAGO, 
	pre_tasapac/12 as TASA_MENSUAL, 
	pre_tasapac as TASA_ANUAL, 
	PRE_VALORCUOTA as CUOTA, 
	PRE_MONTO as VALOR_LIQUIDO ,
	CAD_CAPDIRECTOMN,
	CASE WHEN ((cad_mod = 6 AND cad_prod = 3)  or
	(cad_mod = 6 AND cad_prod = 40) or 
	(cad_mod =6 AND cad_prod =41)) then 1 else 0 end as otros_consumos
	FROM br_dm_prod_bigdata_fisa_db.brcf_calificadet_borrar A, 
	br_dm_prod_bigdata_fisa_db.tpre_prestamos B 
	WHERE a.cad_cuenta = b.pre_credito 
	and cad_fecha = last_day(to_char(to_date(periodo_paso, 'YYYYMM'), 'YYYY-MM-DD')::date)
	and cad_status in ('V','E') ;



	CREATE TABLE schm_workspace.pmunoz_TP_CONS0 as  
	SELECT  
	rut2  as rut, 
	date_part(year,FECHA_EMISION)*10000+date_part(month,FECHA_EMISION)*100+date_part(day,FECHA_EMISION) as CONS_FecApertura, 
	CUOTAS_CREDITO-CUOTAS_PAGADAS as CONS_Cuotas_x_Pagar,
	CUOTA*(CUOTAS_CREDITO-CUOTAS_PAGADAS) as CONS_Monto_x_Pagar,
	VALOR_LIQUIDO as CONS_Monto_Total,
	CUOTAS_CREDITO as CONS_Cuotas_Total,
	CAD_CAPDIRECTOMN as DEUDA_SOW,
	otros_consumos
	FROM  (  
	SELECT * FROM schm_workspace.pmunoz_extraer_consumo1
	WHERE cad_fecha = last_day(to_char(to_date(periodo_paso, 'YYYYMM'), 'YYYY-MM-DD')::date)
	UNION ALL 
	SELECT * FROM schm_workspace.pmunoz_extraer_consumo2
	)
	WHERE rut2 IS NOT null;


	CREATE TABLE schm_workspace.pmunoz_TP_CONS as 
	SELECT 
	rut,
	min(CASE WHEN  otros_consumos=1 then CONS_FecApertura end) as CONS_OT_FecApertura,
	count(distinct CASE WHEN otros_consumos=1 then CONS_FecApertura end) as CONS_OT_Nro_vigente,
	sum( CASE WHEN otros_consumos=1 then CONS_Monto_Total end) as CONS_OT_Monto_Total,
	max( CASE WHEN otros_consumos=1 then CONS_Cuotas_Total end) as CONS_OT_Cuotas_Total,
	sum( CASE WHEN otros_consumos=1 then CONS_Monto_x_Pagar end) as CONS_OT_Monto_x_Pagar,
	max( CASE WHEN otros_consumos=1 then CONS_Cuotas_x_Pagar end) as CONS_OT_Cuotas_x_Pagar,
	sum(CASE WHEN otros_consumos=1 then DEUDA_SOW end) as cons_OT_DEUDA_SOW,
	min(CASE WHEN  otros_consumos=0 then CONS_FecApertura end) as CONS_FecApertura,
	count( distinct CASE WHEN otros_consumos=0 then CONS_FecApertura end) as CONS_Nro_vigente,
	sum( CASE WHEN otros_consumos=0 then CONS_Monto_Total end) as CONS_Monto_Total,
	max( CASE WHEN otros_consumos=0 then CONS_Cuotas_Total end) as CONS_Cuotas_Total,
	sum( CASE WHEN otros_consumos=0 then CONS_Monto_x_Pagar end) as CONS_Monto_x_Pagar,
	max( CASE WHEN otros_consumos=0 then CONS_Cuotas_x_Pagar end) as CONS_Cuotas_x_Pagar,
	sum(CASE WHEN otros_consumos=0 then DEUDA_SOW end) as cons_DEUDA_SOW

	FROM schm_workspace.pmunoz_TP_CONS0
	WHERE CONS_Monto_x_Pagar>0 or DEUDA_SOW>0
	GROUP BY rut
	;


		CREATE TABLE schm_workspace.pmunoz_tablon_productos5 as 
			SELECT 
		a.rut,
		COALESCE(b.TC_Tenencia,0) as  TC_Tenencia,
		b.TC_PROD_RSAT,
		COALESCE(b.TC_NRO_CTTO, 0) as  TC_NRO_CTTO,
		COALESCE(b.TC_NRO_CTTO_VIGENTE, 0) as  TC_NRO_CTTO_VIGENTE,
		COALESCE(b.TC_NRO_CTTO_CERRADO, 0) as  TC_NRO_CTTO_CERRADO,
		b.TC_act_tr, 
		b.TC_VU, 
		b.TC_VU_Prima, 
		COALESCE(b.TC_FecApertura, 0) as  TC_FecApertura,
		b.TC_Tipo, 
		COALESCE(b.TC_Saldo, 0) as  TC_Saldo,
		b.tc_observacion, 
		COALESCE(b.TC_Cupo, 0) as  TC_Cupo,
		COALESCE(b.TC_Disponible, 0) as TC_Disponible ,
		COALESCE(b.TC_Nro_TRXs, 0) as TC_Nro_TRXs ,
		COALESCE(b.TC_Nro_TRXs_SPOS,0) as   TC_Nro_TRXs_SPOS,
		COALESCE(b.TC_Nro_TRXs_TDA, 0) as  TC_Nro_TRXs_TDA,
		COALESCE(b.TC_Nro_TRXs_TDAp, 0) as TC_Nro_TRXs_TDAp ,
		COALESCE(b.TC_Nro_TRXs_TDAo, 0) as  TC_Nro_TRXs_TDAo,
		COALESCE(b.TC_Nro_TRXs_AV, 0) as  TC_Nro_TRXs_AV,
		COALESCE(b.TC_Nro_TRXs_SEG, 0) as  TC_Nro_TRXs_SEG,
		COALESCE(b.TC_Mto_TRXs, 0) as  TC_Mto_TRXs,
		COALESCE(b.TC_Mto_TRXs_SPOS, 0) as  TC_Mto_TRXs_SPOS,
		COALESCE(b.TC_Mto_TRXs_TDA_pie, 0) as  TC_Mto_TRXs_TDA_pie,
		COALESCE(b.TC_Mto_TRXs_TDA, 0) as  TC_Mto_TRXs_TDA,
		COALESCE(b.TC_Mto_TRXs_TDAp, 0) as  TC_Mto_TRXs_TDAp,
		COALESCE(b.TC_Mto_TRXs_TDAo, 0) as  TC_Mto_TRXs_TDAo,
		COALESCE(b.TC_Mto_TRXs_AV, 0) as  TC_Mto_TRXs_AV,
		COALESCE(b.TC_Mto_TRXs_SEG, 0) as  TC_Mto_TRXs_SEG,
		COALESCE(b.TC_Nro_TRXs_SAV, 0) as  TC_Nro_TRXs_SAV,
		COALESCE(b.TC_Mto_TRXs_SAV, 0) as  TC_Mto_TRXs_SAV,
		COALESCE(b.TC_Nro_Adicionales,0) as   TC_Nro_Adicionales,
		COALESCE(b.TC_Mto_TRXs_TDA_Adi,0) as   TC_Mto_TRXs_TDA_Adi,
		COALESCE(b.TC_Mto_TRXs_SPOS_Adi, 0) as  TC_Mto_TRXs_SPOS_Adi,
		COALESCE(b.TD_Tenencia,0) as TD_Tenencia,
			COALESCE(b.TD_Nro_cuenta , 0) as TD_Nro_cuenta,
	          COALESCE(b.TD_CUENTA_VIGENTE , 0) as TD_CUENTA_VIGENTE,
	          COALESCE(b.TD_CUENTA_CERRADA , 0) as TD_CUENTA_CERRADA,
	          COALESCE(b.TD_FecApertura , 0) as TD_FecApertura,
	          b.TD_Tipo, 
	          COALESCE(b.TD_Nro_Cargos , 0) as TD_Nro_Cargos,
	          COALESCE(b.TD_Mto_Cargos , 0) as TD_Mto_Cargos,
	          COALESCE(b.TD_Nro_Abonos , 0) as TD_Nro_Abonos,
	          COALESCE(b.TD_Mto_Abonos , 0) as TD_Mto_Abonos,
	          COALESCE(b.TD_Tenencia_ABR , 0) as TD_Tenencia_ABR,
	          COALESCE(b.TD_Mto_ABR , 0) as TD_Mto_ABR,
	          COALESCE(b.TD_Nro_TRXs_SPOS , 0) as TD_Nro_TRXs_SPOS,
	          COALESCE(b.TD_Mto_TRXs_SPOS , 0) as TD_Mto_TRXs_SPOS,
	          COALESCE(b.TD_Nro_TRXs_TDA , 0) as TD_Nro_TRXs_TDA,
	          COALESCE(b.TD_Mto_TRXs_TDA , 0) as TD_Mto_TRXs_TDA,
	          COALESCE(b.TD_Dias_Saldo_Mayor_a_1 , 0) as TD_Dias_Saldo_Mayor_a_1,
	          COALESCE(b.TD_Saldo_EOP , 0) as TD_Saldo_EOP,
	          COALESCE(b.TD_Saldo_MAX , 0) as TD_Saldo_MAX,
	          COALESCE(b.TD_Saldo_PROM , 0) as TD_Saldo_PROM,
	          COALESCE(b.TD_Saldo_TOTAL ,0) as TD_Saldo_TOTAL,
	COALESCE(b.DAP_Tenencia_PN,0) as  DAP_Tenencia_PN,
	COALESCE(b.DAP_Tenencia_PJ, 0) as DAP_Tenencia_PJ,
	COALESCE(b.DAP_FecApertura_PN, 0) as DAP_FecApertura_PN,
	 COALESCE(b.DAP_monto_PN,0) as DAP_monto_PN,
	 COALESCE(b.DAP_Nro_PN,0) as DAP_Nro_PN,
	 COALESCE(b.DAP_FecApertura_PJ, 0) as DAP_FecApertura_PJ,
	 COALESCE(b.DAP_monto_PJ,0) as DAP_monto_PJ,
	 COALESCE(b.DAP_Nro_PJ,0) as DAP_Nro_PJ,
	 COALESCE(b.CC_Tenencia,0) as CC_Tenencia,

	COALESCE(b.CC_Nro_cuenta,	0) as 	CC_Nro_cuenta,
	COALESCE(b.CC_CUENTA_VIGENTE,	0) as 	CC_CUENTA_VIGENTE,
	COALESCE(b.CC_CUENTA_CERRADA,	0) as 	CC_CUENTA_CERRADA,
	COALESCE(b.CC_FecApertura,	0) as 	CC_FecApertura,
	COALESCE(b.CC_Nro_Cargos,	0) as 	CC_Nro_Cargos,
	COALESCE(b.CC_Mto_Cargos,	0) as 	CC_Mto_Cargos,
	COALESCE(b.CC_Nro_Abonos,	0) as 	CC_Nro_Abonos,
	COALESCE(b.CC_Mto_Abonos,	0) as 	CC_Mto_Abonos,
	COALESCE(b.CC_Tenencia_ABR,	0) as 	CC_Tenencia_ABR,
	COALESCE(b.CC_Mto_ABR,	0) as 	CC_Mto_ABR,
	COALESCE(b.CC_Nro_TRXs_SPOS,	0) as 	CC_Nro_TRXs_SPOS,
	COALESCE(b.CC_Mto_TRXs_SPOS,	0) as 	CC_Mto_TRXs_SPOS,
	COALESCE(b.CC_Nro_TRXs_TDA,	0) as 	CC_Nro_TRXs_TDA,
	COALESCE(b.CC_Mto_TRXs_TDA,	0) as 	CC_Mto_TRXs_TDA,
	COALESCE(b.CC_Dias_Saldo_Mayor_a_1,	0) as 	CC_Dias_Saldo_Mayor_a_1,
	COALESCE(b.CC_Saldo_EOP,	0) as 	CC_Saldo_EOP,
	COALESCE(b.CC_Saldo_MAX,	0) as 	CC_Saldo_MAX,
	COALESCE(b.CC_Saldo_PROM,	0) as 	CC_Saldo_PROM,
	COALESCE(b.CC_Saldo_TOTAL	,0) as 	CC_Saldo_TOTAL,



	CASE WHEN c.rut is not null AND c.CONS_OT_FecApertura>0 then 1 else 0 end as CONS_OT_Tenencia,
	CASE WHEN c.rut is not null AND c.CONS_FecApertura>0 then 1 else 0 end as CONS_Tenencia,

	COALESCE(	c.CONS_OT_FecApertura,	0) as 	CONS_OT_FecApertura,
	COALESCE(	c.CONS_OT_Nro_vigente,	0) as 	CONS_OT_Nro_vigente,
	COALESCE(	c.CONS_OT_Monto_Total,	0) as 	CONS_OT_Monto_Total,
	COALESCE(	c.CONS_OT_Cuotas_Total,	0) as 	CONS_OT_Cuotas_Total,
	COALESCE(	c.CONS_OT_Monto_x_Pagar,	0) as 	CONS_OT_Monto_x_Pagar,
	COALESCE(	c.CONS_OT_Cuotas_x_Pagar,	0) as 	CONS_OT_Cuotas_x_Pagar,
	COALESCE(	c.cons_OT_DEUDA_SOW,	0) as 	cons_OT_DEUDA_SOW,
	COALESCE(	c.CONS_FecApertura,	0) as 	CONS_FecApertura,
	COALESCE(	c.CONS_Nro_vigente,	0) as 	CONS_Nro_vigente,
	COALESCE(	c.CONS_Monto_Total,	0) as 	CONS_Monto_Total,
	COALESCE(	c.CONS_Cuotas_Total,	0) as 	CONS_Cuotas_Total,
	COALESCE(	c.CONS_Monto_x_Pagar,	0) as 	CONS_Monto_x_Pagar,
	COALESCE(	c.CONS_Cuotas_x_Pagar,	0) as 	CONS_Cuotas_x_Pagar,
	COALESCE(	c.cons_DEUDA_SOW	,0) as 	cons_DEUDA_SOW

	  
	FROM (SELECT rut FROM schm_workspace.pmunoz_tablon_productos4 union 
	SELECT rut FROM schm_workspace.pmunoz_TP_CONS) as a 
	LEFT JOIN schm_workspace.pmunoz_tablon_productos4 as b
	on(a.rut=b.rut)
	LEFT JOIN schm_workspace.pmunoz_TP_CONS as c
	on (a.rut=c.rut)
	;

	--------------------------------------------
	--- saldos ppff
	----------------------------------------------

	CREATE TABLE schm_workspace.pmunoz_TP_AV as 
	SELECT 
	rut,
	sum(SALDO_51) as AV_MONTO_x_Pagar 
	FROM schm_data_analytics.ppff_dispo_avance 
	WHERE COALESCE(SALDO_51,0)>1000 
	and periodo=periodo_paso
	GROUP BY 
	rut ;


	CREATE TABLE schm_workspace.pmunoz_TP_SAV as 
	SELECT 
	rut,
	sum(SALDO_TOTAL) as SAV_MONTO_x_Pagar
	FROM schm_data_analytics.ppff_saldo_sav
	WHERE SALDO_TOTAL>0 
	and periodo=periodo_paso
	GROUP BY 
	rut 
	;


	CREATE TABLE schm_workspace.pmunoz_TP_PPFF as 
	SELECT 
	a.rut,
	b.AV_MONTO_x_Pagar,
	c.SAV_MONTO_x_Pagar
	FROM (SELECT rut FROM schm_workspace.pmunoz_tp_av 
	union SELECT rut FROM schm_workspace.pmunoz_tp_sav) as a 
	LEFT JOIN schm_workspace.pmunoz_tp_av as b
	on(a.rut=b.rut)
	LEFT JOIN schm_workspace.pmunoz_tp_sav as c
	on(a.rut=c.rut)
	;


	CREATE TABLE schm_workspace.pmunoz_tablon_productos7 as 
	SELECT 
	 	a.rut,
		COALESCE(b.TC_Tenencia,0) as  TC_Tenencia,
		b.TC_PROD_RSAT,
		COALESCE(b.TC_NRO_CTTO, 0) as  TC_NRO_CTTO,
		COALESCE(b.TC_NRO_CTTO_VIGENTE, 0) as  TC_NRO_CTTO_VIGENTE,
		COALESCE(b.TC_NRO_CTTO_CERRADO, 0) as  TC_NRO_CTTO_CERRADO,
		b.TC_act_tr, 
		b.TC_VU, 
		b.TC_VU_Prima, 
		COALESCE(b.TC_FecApertura, 0) as  TC_FecApertura,
		b.TC_Tipo, 
		COALESCE(b.TC_Saldo, 0) as  TC_Saldo,
		b.tc_observacion, 
		COALESCE(b.TC_Cupo, 0) as  TC_Cupo,
		COALESCE(b.TC_Disponible, 0) as TC_Disponible ,
		COALESCE(b.TC_Nro_TRXs, 0) as TC_Nro_TRXs ,
		COALESCE(b.TC_Nro_TRXs_SPOS,0) as   TC_Nro_TRXs_SPOS,
		COALESCE(b.TC_Nro_TRXs_TDA, 0) as  TC_Nro_TRXs_TDA,
		COALESCE(b.TC_Nro_TRXs_TDAp, 0) as TC_Nro_TRXs_TDAp ,
		COALESCE(b.TC_Nro_TRXs_TDAo, 0) as  TC_Nro_TRXs_TDAo,
		COALESCE(b.TC_Nro_TRXs_AV, 0) as  TC_Nro_TRXs_AV,
		COALESCE(b.TC_Nro_TRXs_SEG, 0) as  TC_Nro_TRXs_SEG,
		COALESCE(b.TC_Mto_TRXs, 0) as  TC_Mto_TRXs,
		COALESCE(b.TC_Mto_TRXs_SPOS, 0) as  TC_Mto_TRXs_SPOS,
		COALESCE(b.TC_Mto_TRXs_TDA_pie, 0) as  TC_Mto_TRXs_TDA_pie,
		COALESCE(b.TC_Mto_TRXs_TDA, 0) as  TC_Mto_TRXs_TDA,
		COALESCE(b.TC_Mto_TRXs_TDAp, 0) as  TC_Mto_TRXs_TDAp,
		COALESCE(b.TC_Mto_TRXs_TDAo, 0) as  TC_Mto_TRXs_TDAo,
		COALESCE(b.TC_Mto_TRXs_AV, 0) as  TC_Mto_TRXs_AV,
		COALESCE(b.TC_Mto_TRXs_SEG, 0) as  TC_Mto_TRXs_SEG,
		COALESCE(b.TC_Nro_TRXs_SAV, 0) as  TC_Nro_TRXs_SAV,
		COALESCE(b.TC_Mto_TRXs_SAV, 0) as  TC_Mto_TRXs_SAV,
		COALESCE(b.TC_Nro_Adicionales,0) as   TC_Nro_Adicionales,
		COALESCE(b.TC_Mto_TRXs_TDA_Adi,0) as   TC_Mto_TRXs_TDA_Adi,
		COALESCE(b.TC_Mto_TRXs_SPOS_Adi, 0) as  TC_Mto_TRXs_SPOS_Adi,
		COALESCE(b.TD_Tenencia,0) as TD_Tenencia,
			COALESCE(b.TD_Nro_cuenta , 0) as TD_Nro_cuenta,
	          COALESCE(b.TD_CUENTA_VIGENTE , 0) as TD_CUENTA_VIGENTE,
	          COALESCE(b.TD_CUENTA_CERRADA , 0) as TD_CUENTA_CERRADA,
	          COALESCE(b.TD_FecApertura , 0) as TD_FecApertura,
	          b.TD_Tipo, 
	          COALESCE(b.TD_Nro_Cargos , 0) as TD_Nro_Cargos,
	          COALESCE(b.TD_Mto_Cargos , 0) as TD_Mto_Cargos,
	          COALESCE(b.TD_Nro_Abonos , 0) as TD_Nro_Abonos,
	          COALESCE(b.TD_Mto_Abonos , 0) as TD_Mto_Abonos,
	          COALESCE(b.TD_Tenencia_ABR , 0) as TD_Tenencia_ABR,
	          COALESCE(b.TD_Mto_ABR , 0) as TD_Mto_ABR,
	          COALESCE(b.TD_Nro_TRXs_SPOS , 0) as TD_Nro_TRXs_SPOS,
	          COALESCE(b.TD_Mto_TRXs_SPOS , 0) as TD_Mto_TRXs_SPOS,
	          COALESCE(b.TD_Nro_TRXs_TDA , 0) as TD_Nro_TRXs_TDA,
	          COALESCE(b.TD_Mto_TRXs_TDA , 0) as TD_Mto_TRXs_TDA,
	          COALESCE(b.TD_Dias_Saldo_Mayor_a_1 , 0) as TD_Dias_Saldo_Mayor_a_1,
	          COALESCE(b.TD_Saldo_EOP , 0) as TD_Saldo_EOP,
	          COALESCE(b.TD_Saldo_MAX , 0) as TD_Saldo_MAX,
	          COALESCE(b.TD_Saldo_PROM , 0) as TD_Saldo_PROM,
	          COALESCE(b.TD_Saldo_TOTAL ,0) as TD_Saldo_TOTAL,
	COALESCE(b.DAP_Tenencia_PN,0) as  DAP_Tenencia_PN,
	COALESCE(b.DAP_Tenencia_PJ, 0) as DAP_Tenencia_PJ,
	COALESCE(b.DAP_FecApertura_PN, 0) as DAP_FecApertura_PN,
	 COALESCE(b.DAP_monto_PN,0) as DAP_monto_PN,
	 COALESCE(b.DAP_Nro_PN,0) as DAP_Nro_PN,
	 COALESCE(b.DAP_FecApertura_PJ, 0) as DAP_FecApertura_PJ,
	 COALESCE(b.DAP_monto_PJ,0) as DAP_monto_PJ,
	 COALESCE(b.DAP_Nro_PJ,0) as DAP_Nro_PJ,
	 COALESCE(b.CC_Tenencia,0) as CC_Tenencia,

	COALESCE(b.CC_Nro_cuenta,	0) as 	CC_Nro_cuenta,
	COALESCE(b.CC_CUENTA_VIGENTE,	0) as 	CC_CUENTA_VIGENTE,
	COALESCE(b.CC_CUENTA_CERRADA,	0) as 	CC_CUENTA_CERRADA,
	COALESCE(b.CC_FecApertura,	0) as 	CC_FecApertura,
	COALESCE(b.CC_Nro_Cargos,	0) as 	CC_Nro_Cargos,
	COALESCE(b.CC_Mto_Cargos,	0) as 	CC_Mto_Cargos,
	COALESCE(b.CC_Nro_Abonos,	0) as 	CC_Nro_Abonos,
	COALESCE(b.CC_Mto_Abonos,	0) as 	CC_Mto_Abonos,
	COALESCE(b.CC_Tenencia_ABR,	0) as 	CC_Tenencia_ABR,
	COALESCE(b.CC_Mto_ABR,	0) as 	CC_Mto_ABR,
	COALESCE(b.CC_Nro_TRXs_SPOS,	0) as 	CC_Nro_TRXs_SPOS,
	COALESCE(b.CC_Mto_TRXs_SPOS,	0) as 	CC_Mto_TRXs_SPOS,
	COALESCE(b.CC_Nro_TRXs_TDA,	0) as 	CC_Nro_TRXs_TDA,
	COALESCE(b.CC_Mto_TRXs_TDA,	0) as 	CC_Mto_TRXs_TDA,
	COALESCE(b.CC_Dias_Saldo_Mayor_a_1,	0) as 	CC_Dias_Saldo_Mayor_a_1,
	COALESCE(b.CC_Saldo_EOP,	0) as 	CC_Saldo_EOP,
	COALESCE(b.CC_Saldo_MAX,	0) as 	CC_Saldo_MAX,
	COALESCE(b.CC_Saldo_PROM,	0) as 	CC_Saldo_PROM,
	COALESCE(b.CC_Saldo_TOTAL	,0) as 	CC_Saldo_TOTAL,



	COALESCE(b.CONS_OT_Tenencia,0) as CONS_OT_Tenencia,
	COALESCE(b.CONS_Tenencia,0) as CONS_Tenencia,

	COALESCE(	b.CONS_OT_FecApertura,	0) as 	CONS_OT_FecApertura,
	COALESCE(	b.CONS_OT_Nro_vigente,	0) as 	CONS_OT_Nro_vigente,
	COALESCE(	b.CONS_OT_Monto_Total,	0) as 	CONS_OT_Monto_Total,
	COALESCE(	b.CONS_OT_Cuotas_Total,	0) as 	CONS_OT_Cuotas_Total,
	COALESCE(	b.CONS_OT_Monto_x_Pagar,	0) as 	CONS_OT_Monto_x_Pagar,
	COALESCE(	b.CONS_OT_Cuotas_x_Pagar,	0) as 	CONS_OT_Cuotas_x_Pagar,
	COALESCE(	b.cons_OT_DEUDA_SOW,	0) as 	cons_OT_DEUDA_SOW,
	COALESCE(	b.CONS_FecApertura,	0) as 	CONS_FecApertura,
	COALESCE(	b.CONS_Nro_vigente,	0) as 	CONS_Nro_vigente,
	COALESCE(	b.CONS_Monto_Total,	0) as 	CONS_Monto_Total,
	COALESCE(	b.CONS_Cuotas_Total,	0) as 	CONS_Cuotas_Total,
	COALESCE(	b.CONS_Monto_x_Pagar,	0) as 	CONS_Monto_x_Pagar,
	COALESCE(	b.CONS_Cuotas_x_Pagar,	0) as 	CONS_Cuotas_x_Pagar,
	COALESCE(	b.cons_DEUDA_SOW	,0) as 	cons_DEUDA_SOW,


	CASE WHEN c.rut is not null AND c.AV_MONTO_x_Pagar>0 AND COALESCE(b.TC_Saldo, 0)>0 then 1 else 0 end as AV_TENENCIA,
	CASE WHEN c.rut is not null AND c.SAV_MONTO_x_Pagar>0 AND COALESCE(b.TC_Saldo, 0)>0 then 1 else 0 end as SAV_TENENCIA,
	CASE WHEN COALESCE(b.TC_Saldo, 0)>0 then c.AV_MONTO_x_Pagar else 0 end as AV_MONTO_x_Pagar,
	CASE WHEN COALESCE(b.TC_Saldo, 0)>0 then c.SAV_MONTO_x_Pagar else 0 end as SAV_MONTO_x_Pagar

		FROM (SELECT rut FROM schm_workspace.pmunoz_tablon_productos5
		union SELECT rut FROM schm_workspace.pmunoz_TP_PPFF )as a
		LEFT JOIN schm_workspace.pmunoz_tablon_productos5 as b on(a.rut=b.rut)
			LEFT JOIN  schm_workspace.pmunoz_TP_PPFF as c 
				on (a.rut=c.rut)
	;





	--===========================================================================================;
	--[08] Informacion de Producto: PAT;
	--===========================================================================================;


		CREATE TABLE schm_workspace.pmunoz_TP_PAT as 

					SELECT 
						rut,
						count(*) as PAT_Nro_Cargos,
						sum(VENTA_TARJETA) as PAT_Mto_Cargos  
					FROM schm_data_analytics.spos_aut
					WHERE presencial='PAT' AND periodo=periodo_paso
						GROUP BY 
							rut 
	;




		CREATE TABLE schm_workspace.pmunoz_tablon_productos9 as 
			SELECT  	a.rut,
		COALESCE(b.TC_Tenencia,0) as  TC_Tenencia,
		b.TC_PROD_RSAT,
		COALESCE(b.TC_NRO_CTTO, 0) as  TC_NRO_CTTO,
		COALESCE(b.TC_NRO_CTTO_VIGENTE, 0) as  TC_NRO_CTTO_VIGENTE,
		COALESCE(b.TC_NRO_CTTO_CERRADO, 0) as  TC_NRO_CTTO_CERRADO,
		b.TC_act_tr, 
		b.TC_VU, 
		b.TC_VU_Prima, 
		COALESCE(b.TC_FecApertura, 0) as  TC_FecApertura,
		b.TC_Tipo, 
		COALESCE(b.TC_Saldo, 0) as  TC_Saldo,
		b.tc_observacion, 
		COALESCE(b.TC_Cupo, 0) as  TC_Cupo,
		COALESCE(b.TC_Disponible, 0) as TC_Disponible ,
		COALESCE(b.TC_Nro_TRXs, 0) as TC_Nro_TRXs ,
		COALESCE(b.TC_Nro_TRXs_SPOS,0) as   TC_Nro_TRXs_SPOS,
		COALESCE(b.TC_Nro_TRXs_TDA, 0) as  TC_Nro_TRXs_TDA,
		COALESCE(b.TC_Nro_TRXs_TDAp, 0) as TC_Nro_TRXs_TDAp ,
		COALESCE(b.TC_Nro_TRXs_TDAo, 0) as  TC_Nro_TRXs_TDAo,
		COALESCE(b.TC_Nro_TRXs_AV, 0) as  TC_Nro_TRXs_AV,
		COALESCE(b.TC_Nro_TRXs_SEG, 0) as  TC_Nro_TRXs_SEG,
		COALESCE(b.TC_Mto_TRXs, 0) as  TC_Mto_TRXs,
		COALESCE(b.TC_Mto_TRXs_SPOS, 0) as  TC_Mto_TRXs_SPOS,
		COALESCE(b.TC_Mto_TRXs_TDA_pie, 0) as  TC_Mto_TRXs_TDA_pie,
		COALESCE(b.TC_Mto_TRXs_TDA, 0) as  TC_Mto_TRXs_TDA,
		COALESCE(b.TC_Mto_TRXs_TDAp, 0) as  TC_Mto_TRXs_TDAp,
		COALESCE(b.TC_Mto_TRXs_TDAo, 0) as  TC_Mto_TRXs_TDAo,
		COALESCE(b.TC_Mto_TRXs_AV, 0) as  TC_Mto_TRXs_AV,
		COALESCE(b.TC_Mto_TRXs_SEG, 0) as  TC_Mto_TRXs_SEG,
		COALESCE(b.TC_Nro_TRXs_SAV, 0) as  TC_Nro_TRXs_SAV,
		COALESCE(b.TC_Mto_TRXs_SAV, 0) as  TC_Mto_TRXs_SAV,
		COALESCE(b.TC_Nro_Adicionales,0) as   TC_Nro_Adicionales,
		COALESCE(b.TC_Mto_TRXs_TDA_Adi,0) as   TC_Mto_TRXs_TDA_Adi,
		COALESCE(b.TC_Mto_TRXs_SPOS_Adi, 0) as  TC_Mto_TRXs_SPOS_Adi,
		COALESCE(b.TD_Tenencia,0) as TD_Tenencia,
			COALESCE(b.TD_Nro_cuenta , 0) as TD_Nro_cuenta,
	          COALESCE(b.TD_CUENTA_VIGENTE , 0) as TD_CUENTA_VIGENTE,
	          COALESCE(b.TD_CUENTA_CERRADA , 0) as TD_CUENTA_CERRADA,
	          COALESCE(b.TD_FecApertura , 0) as TD_FecApertura,
	          b.TD_Tipo, 
	          COALESCE(b.TD_Nro_Cargos , 0) as TD_Nro_Cargos,
	          COALESCE(b.TD_Mto_Cargos , 0) as TD_Mto_Cargos,
	          COALESCE(b.TD_Nro_Abonos , 0) as TD_Nro_Abonos,
	          COALESCE(b.TD_Mto_Abonos , 0) as TD_Mto_Abonos,
	          COALESCE(b.TD_Tenencia_ABR , 0) as TD_Tenencia_ABR,
	          COALESCE(b.TD_Mto_ABR , 0) as TD_Mto_ABR,
	          COALESCE(b.TD_Nro_TRXs_SPOS , 0) as TD_Nro_TRXs_SPOS,
	          COALESCE(b.TD_Mto_TRXs_SPOS , 0) as TD_Mto_TRXs_SPOS,
	          COALESCE(b.TD_Nro_TRXs_TDA , 0) as TD_Nro_TRXs_TDA,
	          COALESCE(b.TD_Mto_TRXs_TDA , 0) as TD_Mto_TRXs_TDA,
	          COALESCE(b.TD_Dias_Saldo_Mayor_a_1 , 0) as TD_Dias_Saldo_Mayor_a_1,
	          COALESCE(b.TD_Saldo_EOP , 0) as TD_Saldo_EOP,
	          COALESCE(b.TD_Saldo_MAX , 0) as TD_Saldo_MAX,
	          COALESCE(b.TD_Saldo_PROM , 0) as TD_Saldo_PROM,
	          COALESCE(b.TD_Saldo_TOTAL ,0) as TD_Saldo_TOTAL,
	COALESCE(b.DAP_Tenencia_PN,0) as  DAP_Tenencia_PN,
	COALESCE(b.DAP_Tenencia_PJ, 0) as DAP_Tenencia_PJ,
	COALESCE(b.DAP_FecApertura_PN, 0) as DAP_FecApertura_PN,
	 COALESCE(b.DAP_monto_PN,0) as DAP_monto_PN,
	 COALESCE(b.DAP_Nro_PN,0) as DAP_Nro_PN,
	 COALESCE(b.DAP_FecApertura_PJ, 0) as DAP_FecApertura_PJ,
	 COALESCE(b.DAP_monto_PJ,0) as DAP_monto_PJ,
	 COALESCE(b.DAP_Nro_PJ,0) as DAP_Nro_PJ,
	 COALESCE(b.CC_Tenencia,0) as CC_Tenencia,

	COALESCE(b.CC_Nro_cuenta,	0) as 	CC_Nro_cuenta,
	COALESCE(b.CC_CUENTA_VIGENTE,	0) as 	CC_CUENTA_VIGENTE,
	COALESCE(b.CC_CUENTA_CERRADA,	0) as 	CC_CUENTA_CERRADA,
	COALESCE(b.CC_FecApertura,	0) as 	CC_FecApertura,
	COALESCE(b.CC_Nro_Cargos,	0) as 	CC_Nro_Cargos,
	COALESCE(b.CC_Mto_Cargos,	0) as 	CC_Mto_Cargos,
	COALESCE(b.CC_Nro_Abonos,	0) as 	CC_Nro_Abonos,
	COALESCE(b.CC_Mto_Abonos,	0) as 	CC_Mto_Abonos,
	COALESCE(b.CC_Tenencia_ABR,	0) as 	CC_Tenencia_ABR,
	COALESCE(b.CC_Mto_ABR,	0) as 	CC_Mto_ABR,
	COALESCE(b.CC_Nro_TRXs_SPOS,	0) as 	CC_Nro_TRXs_SPOS,
	COALESCE(b.CC_Mto_TRXs_SPOS,	0) as 	CC_Mto_TRXs_SPOS,
	COALESCE(b.CC_Nro_TRXs_TDA,	0) as 	CC_Nro_TRXs_TDA,
	COALESCE(b.CC_Mto_TRXs_TDA,	0) as 	CC_Mto_TRXs_TDA,
	COALESCE(b.CC_Dias_Saldo_Mayor_a_1,	0) as 	CC_Dias_Saldo_Mayor_a_1,
	COALESCE(b.CC_Saldo_EOP,	0) as 	CC_Saldo_EOP,
	COALESCE(b.CC_Saldo_MAX,	0) as 	CC_Saldo_MAX,
	COALESCE(b.CC_Saldo_PROM,	0) as 	CC_Saldo_PROM,
	COALESCE(b.CC_Saldo_TOTAL	,0) as 	CC_Saldo_TOTAL,



	COALESCE(b.CONS_OT_Tenencia,0) as CONS_OT_Tenencia,
	COALESCE(b.CONS_Tenencia,0) as CONS_Tenencia,

	COALESCE(	b.CONS_OT_FecApertura,	0) as 	CONS_OT_FecApertura,
	COALESCE(	b.CONS_OT_Nro_vigente,	0) as 	CONS_OT_Nro_vigente,
	COALESCE(	b.CONS_OT_Monto_Total,	0) as 	CONS_OT_Monto_Total,
	COALESCE(	b.CONS_OT_Cuotas_Total,	0) as 	CONS_OT_Cuotas_Total,
	COALESCE(	b.CONS_OT_Monto_x_Pagar,	0) as 	CONS_OT_Monto_x_Pagar,
	COALESCE(	b.CONS_OT_Cuotas_x_Pagar,	0) as 	CONS_OT_Cuotas_x_Pagar,
	COALESCE(	b.cons_OT_DEUDA_SOW,	0) as 	cons_OT_DEUDA_SOW,
	COALESCE(	b.CONS_FecApertura,	0) as 	CONS_FecApertura,
	COALESCE(	b.CONS_Nro_vigente,	0) as 	CONS_Nro_vigente,
	COALESCE(	b.CONS_Monto_Total,	0) as 	CONS_Monto_Total,
	COALESCE(	b.CONS_Cuotas_Total,	0) as 	CONS_Cuotas_Total,
	COALESCE(	b.CONS_Monto_x_Pagar,	0) as 	CONS_Monto_x_Pagar,
	COALESCE(	b.CONS_Cuotas_x_Pagar,	0) as 	CONS_Cuotas_x_Pagar,
	COALESCE(	b.cons_DEUDA_SOW	,0) as 	cons_DEUDA_SOW,

	COALESCE(b.AV_TENENCIA,0) as AV_TENENCIA,
	COALESCE(b.SAV_TENENCIA,0) as SAV_TENENCIA,
	COALESCE(b.AV_MONTO_x_Pagar,0) as AV_MONTO_x_Pagar,
	COALESCE(b.SAV_MONTO_x_Pagar,0) as SAV_MONTO_x_Pagar,

	CASE WHEN c.rut is not null then 1 else 0 end as   PAT_Tenencia, 

	COALESCE(c.PAT_Nro_Cargos,	0) as PAT_Nro_Cargos_TAM,
	COALESCE(c.PAT_Mto_Cargos ,	0) as PAT_Mto_Cargos_TAM
		FROM (SELECT rut FROM schm_workspace.pmunoz_tablon_productos7  
		union SELECT rut FROM schm_workspace.pmunoz_TP_PAT) as a 
		LEFT JOIN schm_workspace.pmunoz_tablon_productos7  as b on(a.rut=b.rut)
		LEFT JOIN schm_workspace.pmunoz_TP_PAT as c on(a.rut=c.rut) 

	;



	--===========================================================================================;
	--[09] Informacion de Producto: SEG (Seguros);
	--===========================================================================================;


	CREATE TABLE schm_workspace.pmunoz_vista as 
	SELECT a.tra_valor,
	b.prod_codigo, 
	c.prod_nombre, 
	d.cate_nombre
	FROM br_dm_prod_bigdata_fidens_db.int_traductor_valor a
	LEFT JOIN br_dm_prod_bigdata_fidens_db.pto_prodcategoria b 
	on cast(a.con_valor as int) = b.prod_codigo
	LEFT JOIN br_dm_prod_bigdata_fidens_db.pto_producto c 
	on b.prod_codigo = c.prod_codigo
	LEFT JOIN br_dm_prod_bigdata_fidens_db.adm_categoria d 
	on b.cate_codigo = d.cate_codigo
	WHERE a.tra_codigo = 2010
	;


	CREATE TABLE schm_workspace.pmunoz_vista2 as 
	SELECT 
	TRA_VALOR,
	count(distinct CATE_NOMBRE) as cant
	FROM schm_workspace.pmunoz_vista
	WHERE prod_codigo is not null
	GROUP BY TRA_VALOR
	;


	CREATE TABLE schm_workspace.pmunoz_vista3 as 
	SELECT distinct 
	a.TRA_VALOR,
	CASE WHEN a.cant>1 then 'MIXTO' else b.CATE_NOMBRE    end as nombre
	FROM schm_workspace.pmunoz_vista2 as a 
	LEFT JOIN (SELECT a.* FROM  schm_workspace.pmunoz_vista  as a
	LEFT JOIN schm_workspace.pmunoz_vista2 as b
	on a.tra_valor=b.tra_valor
	WHERE b.cant=1) as b
	on(a.tra_valor=b.tra_valor)
	;


	CREATE TABLE schm_workspace.pmunoz_TP_seguros as 
	SELECT 
	a.*,
	COALESCE(b.nombre,'OTROS')  as nombre
	FROM schm_data_analytics.spos_trx_seguros as a 
	LEFT JOIN schm_workspace.pmunoz_vista3 as b
	on(b.TRA_VALOR=a.CODCONREC)
	WHERE CODCONREC not in ('S201','S083','S170')
	and TIPO_SEGURO<>'SEGUROS TARJETA'
	and ( monto_recaudado<>476454338)
	and periodo=periodo_paso

	;


	CREATE TABLE schm_workspace.pmunoz_TP_SEGUROS2 as 
	SELECT 
	rut,
	count(CASE WHEN nombre='AUTO' then rut end) as SEG_AUTO_TRX,
	sum(CASE WHEN nombre='AUTO' then MONTO_RECAUDADO end) as SEG_AUTO_MTO,

	count(CASE WHEN nombre='FRAUDE' then rut end) as SEG_FRAUDE_TRX,
	sum(CASE WHEN nombre='FRAUDE' then MONTO_RECAUDADO end) as SEG_FRAUDE_MTO,

	count(CASE WHEN nombre='HOGAR' then rut end) as SEG_HOGAR_TRX,
	sum(CASE WHEN nombre='HOGAR' then MONTO_RECAUDADO end) as SEG_HOGAR_MTO,

	count(CASE WHEN nombre in ('MIXTO','OTROS','SIN CATEGORIA') then rut end) as SEG_OTROS_TRX,
	sum(CASE WHEN nombre in ('MIXTO','OTROS','SIN CATEGORIA') then MONTO_RECAUDADO end) as SEG_OTROS_MTO,

	count(CASE WHEN nombre='SALUD' then rut end) as SEG_SALUD_TRX,
	sum(CASE WHEN nombre='SALUD' then MONTO_RECAUDADO end) as SEG_SALUD_MTO,

	count(CASE WHEN nombre='VIDA' then rut end) as SEG_VIDA_TRX,
	sum(CASE WHEN nombre='VIDA' then MONTO_RECAUDADO end) as SEG_VIDA_MTO

	FROM schm_workspace.pmunoz_TP_SEGUROS
	GROUP BY rut
	;



		CREATE TABLE schm_workspace.pmunoz_tablon_productos10
	 as 
				SELECT  	a.rut,
		COALESCE(b.TC_Tenencia,0) as  TC_Tenencia,
		b.TC_PROD_RSAT,
		COALESCE(b.TC_NRO_CTTO, 0) as  TC_NRO_CTTO,
		COALESCE(b.TC_NRO_CTTO_VIGENTE, 0) as  TC_NRO_CTTO_VIGENTE,
		COALESCE(b.TC_NRO_CTTO_CERRADO, 0) as  TC_NRO_CTTO_CERRADO,
		b.TC_act_tr, 
		b.TC_VU, 
		b.TC_VU_Prima, 
		COALESCE(b.TC_FecApertura, 0) as  TC_FecApertura,
		b.TC_Tipo, 
		COALESCE(b.TC_Saldo, 0) as  TC_Saldo,
		b.tc_observacion, 
		COALESCE(b.TC_Cupo, 0) as  TC_Cupo,
		COALESCE(b.TC_Disponible, 0) as TC_Disponible ,
		COALESCE(b.TC_Nro_TRXs, 0) as TC_Nro_TRXs ,
		COALESCE(b.TC_Nro_TRXs_SPOS,0) as   TC_Nro_TRXs_SPOS,
		COALESCE(b.TC_Nro_TRXs_TDA, 0) as  TC_Nro_TRXs_TDA,
		COALESCE(b.TC_Nro_TRXs_TDAp, 0) as TC_Nro_TRXs_TDAp ,
		COALESCE(b.TC_Nro_TRXs_TDAo, 0) as  TC_Nro_TRXs_TDAo,
		COALESCE(b.TC_Nro_TRXs_AV, 0) as  TC_Nro_TRXs_AV,
		COALESCE(b.TC_Nro_TRXs_SEG, 0) as  TC_Nro_TRXs_SEG,
		COALESCE(b.TC_Mto_TRXs, 0) as  TC_Mto_TRXs,
		COALESCE(b.TC_Mto_TRXs_SPOS, 0) as  TC_Mto_TRXs_SPOS,
		COALESCE(b.TC_Mto_TRXs_TDA_pie, 0) as  TC_Mto_TRXs_TDA_pie,
		COALESCE(b.TC_Mto_TRXs_TDA, 0) as  TC_Mto_TRXs_TDA,
		COALESCE(b.TC_Mto_TRXs_TDAp, 0) as  TC_Mto_TRXs_TDAp,
		COALESCE(b.TC_Mto_TRXs_TDAo, 0) as  TC_Mto_TRXs_TDAo,
		COALESCE(b.TC_Mto_TRXs_AV, 0) as  TC_Mto_TRXs_AV,
		COALESCE(b.TC_Mto_TRXs_SEG, 0) as  TC_Mto_TRXs_SEG,
		COALESCE(b.TC_Nro_TRXs_SAV, 0) as  TC_Nro_TRXs_SAV,
		COALESCE(b.TC_Mto_TRXs_SAV, 0) as  TC_Mto_TRXs_SAV,
		COALESCE(b.TC_Nro_Adicionales,0) as   TC_Nro_Adicionales,
		COALESCE(b.TC_Mto_TRXs_TDA_Adi,0) as   TC_Mto_TRXs_TDA_Adi,
		COALESCE(b.TC_Mto_TRXs_SPOS_Adi, 0) as  TC_Mto_TRXs_SPOS_Adi,
		COALESCE(b.TD_Tenencia,0) as TD_Tenencia,
			COALESCE(b.TD_Nro_cuenta , 0) as TD_Nro_cuenta,
	          COALESCE(b.TD_CUENTA_VIGENTE , 0) as TD_CUENTA_VIGENTE,
	          COALESCE(b.TD_CUENTA_CERRADA , 0) as TD_CUENTA_CERRADA,
	          COALESCE(b.TD_FecApertura , 0) as TD_FecApertura,
	          b.TD_Tipo, 
	          COALESCE(b.TD_Nro_Cargos , 0) as TD_Nro_Cargos,
	          COALESCE(b.TD_Mto_Cargos , 0) as TD_Mto_Cargos,
	          COALESCE(b.TD_Nro_Abonos , 0) as TD_Nro_Abonos,
	          COALESCE(b.TD_Mto_Abonos , 0) as TD_Mto_Abonos,
	          COALESCE(b.TD_Tenencia_ABR , 0) as TD_Tenencia_ABR,
	          COALESCE(b.TD_Mto_ABR , 0) as TD_Mto_ABR,
	          COALESCE(b.TD_Nro_TRXs_SPOS , 0) as TD_Nro_TRXs_SPOS,
	          COALESCE(b.TD_Mto_TRXs_SPOS , 0) as TD_Mto_TRXs_SPOS,
	          COALESCE(b.TD_Nro_TRXs_TDA , 0) as TD_Nro_TRXs_TDA,
	          COALESCE(b.TD_Mto_TRXs_TDA , 0) as TD_Mto_TRXs_TDA,
	          COALESCE(b.TD_Dias_Saldo_Mayor_a_1 , 0) as TD_Dias_Saldo_Mayor_a_1,
	          COALESCE(b.TD_Saldo_EOP , 0) as TD_Saldo_EOP,
	          COALESCE(b.TD_Saldo_MAX , 0) as TD_Saldo_MAX,
	          COALESCE(b.TD_Saldo_PROM , 0) as TD_Saldo_PROM,
	          COALESCE(b.TD_Saldo_TOTAL ,0) as TD_Saldo_TOTAL,
	COALESCE(b.DAP_Tenencia_PN,0) as  DAP_Tenencia_PN,
	COALESCE(b.DAP_Tenencia_PJ, 0) as DAP_Tenencia_PJ,
	COALESCE(b.DAP_FecApertura_PN, 0) as DAP_FecApertura_PN,
	 COALESCE(b.DAP_monto_PN,0) as DAP_monto_PN,
	 COALESCE(b.DAP_Nro_PN,0) as DAP_Nro_PN,
	 COALESCE(b.DAP_FecApertura_PJ, 0) as DAP_FecApertura_PJ,
	 COALESCE(b.DAP_monto_PJ,0) as DAP_monto_PJ,
	 COALESCE(b.DAP_Nro_PJ,0) as DAP_Nro_PJ,
	 COALESCE(b.CC_Tenencia,0) as CC_Tenencia,

	COALESCE(b.CC_Nro_cuenta,	0) as 	CC_Nro_cuenta,
	COALESCE(b.CC_CUENTA_VIGENTE,	0) as 	CC_CUENTA_VIGENTE,
	COALESCE(b.CC_CUENTA_CERRADA,	0) as 	CC_CUENTA_CERRADA,
	COALESCE(b.CC_FecApertura,	0) as 	CC_FecApertura,
	COALESCE(b.CC_Nro_Cargos,	0) as 	CC_Nro_Cargos,
	COALESCE(b.CC_Mto_Cargos,	0) as 	CC_Mto_Cargos,
	COALESCE(b.CC_Nro_Abonos,	0) as 	CC_Nro_Abonos,
	COALESCE(b.CC_Mto_Abonos,	0) as 	CC_Mto_Abonos,
	COALESCE(b.CC_Tenencia_ABR,	0) as 	CC_Tenencia_ABR,
	COALESCE(b.CC_Mto_ABR,	0) as 	CC_Mto_ABR,
	COALESCE(b.CC_Nro_TRXs_SPOS,	0) as 	CC_Nro_TRXs_SPOS,
	COALESCE(b.CC_Mto_TRXs_SPOS,	0) as 	CC_Mto_TRXs_SPOS,
	COALESCE(b.CC_Nro_TRXs_TDA,	0) as 	CC_Nro_TRXs_TDA,
	COALESCE(b.CC_Mto_TRXs_TDA,	0) as 	CC_Mto_TRXs_TDA,
	COALESCE(b.CC_Dias_Saldo_Mayor_a_1,	0) as 	CC_Dias_Saldo_Mayor_a_1,
	COALESCE(b.CC_Saldo_EOP,	0) as 	CC_Saldo_EOP,
	COALESCE(b.CC_Saldo_MAX,	0) as 	CC_Saldo_MAX,
	COALESCE(b.CC_Saldo_PROM,	0) as 	CC_Saldo_PROM,
	COALESCE(b.CC_Saldo_TOTAL	,0) as 	CC_Saldo_TOTAL,



	COALESCE(b.CONS_OT_Tenencia,0) as CONS_OT_Tenencia,
	COALESCE(b.CONS_Tenencia,0) as CONS_Tenencia,

	COALESCE(	b.CONS_OT_FecApertura,	0) as 	CONS_OT_FecApertura,
	COALESCE(	b.CONS_OT_Nro_vigente,	0) as 	CONS_OT_Nro_vigente,
	COALESCE(	b.CONS_OT_Monto_Total,	0) as 	CONS_OT_Monto_Total,
	COALESCE(	b.CONS_OT_Cuotas_Total,	0) as 	CONS_OT_Cuotas_Total,
	COALESCE(	b.CONS_OT_Monto_x_Pagar,	0) as 	CONS_OT_Monto_x_Pagar,
	COALESCE(	b.CONS_OT_Cuotas_x_Pagar,	0) as 	CONS_OT_Cuotas_x_Pagar,
	COALESCE(	b.cons_OT_DEUDA_SOW,	0) as 	cons_OT_DEUDA_SOW,
	COALESCE(	b.CONS_FecApertura,	0) as 	CONS_FecApertura,
	COALESCE(	b.CONS_Nro_vigente,	0) as 	CONS_Nro_vigente,
	COALESCE(	b.CONS_Monto_Total,	0) as 	CONS_Monto_Total,
	COALESCE(	b.CONS_Cuotas_Total,	0) as 	CONS_Cuotas_Total,
	COALESCE(	b.CONS_Monto_x_Pagar,	0) as 	CONS_Monto_x_Pagar,
	COALESCE(	b.CONS_Cuotas_x_Pagar,	0) as 	CONS_Cuotas_x_Pagar,
	COALESCE(	b.cons_DEUDA_SOW	,0) as 	cons_DEUDA_SOW,
	COALESCE(b.AV_TENENCIA,0) as AV_TENENCIA,
	COALESCE(b.SAV_TENENCIA,0) as SAV_TENENCIA,
	COALESCE(b.AV_MONTO_x_Pagar,0) as AV_MONTO_x_Pagar,
	COALESCE(b.SAV_MONTO_x_Pagar,0) as SAV_MONTO_x_Pagar,
	COALESCE(b.PAT_Tenencia,	0) as 	 PAT_Tenencia,
	COALESCE(b.PAT_Nro_Cargos_TAM,	0) as PAT_Nro_Cargos_TAM,
	COALESCE(b.PAT_Mto_Cargos_TAM ,	0) as PAT_Mto_Cargos_TAM,
	CASE WHEN c.rut is not null then 1 else 0 end as SEG_Tenencia, 
	COALESCE(c.	SEG_AUTO_TRX,		0) as 	SEG_AUTO_TRX,
	COALESCE(c.	SEG_AUTO_MTO,		0) as 	SEG_AUTO_MTO,
	COALESCE(c.	SEG_FRAUDE_TRX,		0) as 	SEG_FRAUDE_TRX,
	COALESCE(c.	SEG_FRAUDE_MTO,		0) as 	SEG_FRAUDE_MTO,
	COALESCE(c.	SEG_HOGAR_TRX,		0) as 	SEG_HOGAR_TRX,
	COALESCE(c.	SEG_HOGAR_MTO,		0) as 	SEG_HOGAR_MTO,
	COALESCE(c.	SEG_OTROS_TRX,		0) as 	SEG_OTROS_TRX,
	COALESCE(c.	SEG_OTROS_MTO,		0) as 	SEG_OTROS_MTO,
	COALESCE(c.	SEG_SALUD_TRX,		0) as 	SEG_SALUD_TRX,
	COALESCE(c.	SEG_SALUD_MTO,		0) as 	SEG_SALUD_MTO,
	COALESCE(c.	SEG_VIDA_TRX,		0) as 	SEG_VIDA_TRX,
	COALESCE(c.	SEG_VIDA_MTO,		0) as 	SEG_VIDA_MTO
		FROM (SELECT rut FROM  schm_workspace.pmunoz_tablon_productos9 
		union SELECT rut FROM schm_workspace.pmunoz_TP_SEGUROS2 ) as a 
				LEFT JOIN  schm_workspace.pmunoz_tablon_productos9 as b 
				on (a.rut=b.rut)
			LEFT JOIN  schm_workspace.pmunoz_TP_SEGUROS2 as c 
				on (a.rut=c.rut)
		;




	--===========================================================================================;
	--[10] Informacion de Producto: Tarjeta Adicional;
	--===========================================================================================;





		CREATE TABLE schm_workspace.pmunoz_tablon_productos11 as 
			SELECT 
	rut,
	TC_Tenencia  ,
	TC_PROD_RSAT,
	TC_NRO_CTTO, 
	TC_NRO_CTTO_VIGENTE, 
	TC_NRO_CTTO_CERRADO, 
	TC_act_tr, 
	TC_VU, 
	TC_VU_Prima, 
	TC_FecApertura, 
	TC_Tipo, 
	TC_Saldo, 
	tc_observacion, 
	TC_Cupo, 
	TC_Disponible, 
	TC_Nro_TRXs, 
	TC_Nro_TRXs_SPOS, 
	TC_Nro_TRXs_TDA, 
	TC_Nro_TRXs_TDAp, 
	TC_Nro_TRXs_TDAo, 
	TC_Nro_TRXs_AV, 
	TC_Nro_TRXs_SEG, 
	TC_Mto_TRXs, 
	TC_Mto_TRXs_SPOS, 
	TC_Mto_TRXs_TDA_pie, 
	TC_Mto_TRXs_TDA, 
	TC_Mto_TRXs_TDAp, 
	TC_Mto_TRXs_TDAo, 
	TC_Mto_TRXs_AV, 
	TC_Mto_TRXs_SEG, 
	TC_Nro_TRXs_SAV, 
	TC_Mto_TRXs_SAV, 
	TC_Nro_Adicionales, 
	TC_Mto_TRXs_TDA_Adi, 
	TC_Mto_TRXs_SPOS_Adi, 
	TD_Tenencia,
	TD_Nro_cuenta, 
	TD_CUENTA_VIGENTE, 
	TD_CUENTA_CERRADA, 
	TD_FecApertura, 
	TD_Tipo, 
	TD_Nro_Cargos, 
	TD_Mto_Cargos, 
	TD_Nro_Abonos, 
	TD_Mto_Abonos, 
	TD_Tenencia_ABR, 
	TD_Mto_ABR, 
	TD_Nro_TRXs_SPOS, 
	TD_Mto_TRXs_SPOS, 
	TD_Nro_TRXs_TDA, 
	TD_Mto_TRXs_TDA, 
	TD_Dias_Saldo_Mayor_a_1, 
	TD_Saldo_EOP, 
	TD_Saldo_MAX, 
	TD_Saldo_PROM, 
	TD_Saldo_TOTAL,
	 DAP_Tenencia_PN, 
	 DAP_Tenencia_PJ, 
	DAP_FecApertura_PN, 
	 DAP_monto_PN,
	 DAP_Nro_PN,
	 DAP_FecApertura_PJ, 
	 DAP_monto_PJ,
	 DAP_Nro_PJ,
	CC_Tenencia,
	CC_Nro_cuenta, 
	CC_CUENTA_VIGENTE, 
	CC_CUENTA_CERRADA, 
	CC_FecApertura, 
	CC_Nro_Cargos, 
	CC_Mto_Cargos, 
	CC_Nro_Abonos, 
	CC_Mto_Abonos, 
	CC_Tenencia_ABR, 
	CC_Mto_ABR, 
	CC_Nro_TRXs_SPOS, 
	CC_Mto_TRXs_SPOS, 
	CC_Nro_TRXs_TDA, 
	CC_Mto_TRXs_TDA, 
	CC_Dias_Saldo_Mayor_a_1, 
	CC_Saldo_EOP, 
	CC_Saldo_MAX, 
	CC_Saldo_PROM, 
	CC_Saldo_TOTAL,

	CONS_OT_Tenencia,
	CONS_Tenencia,

	CONS_OT_FecApertura,
	CONS_OT_Nro_vigente,
	CONS_OT_Monto_Total,
	CONS_OT_Cuotas_Total,
	CONS_OT_Monto_x_Pagar,
	CONS_OT_Cuotas_x_Pagar,
	cons_OT_DEUDA_SOW,

	CONS_FecApertura,
	CONS_Nro_vigente,
	CONS_Monto_Total,
	CONS_Cuotas_Total,
	CONS_Monto_x_Pagar,
	CONS_Cuotas_x_Pagar,
	cons_DEUDA_SOW,

	AV_TENENCIA,
	SAV_TENENCIA,
	AV_MONTO_x_Pagar,
	SAV_MONTO_x_Pagar,


	PAT_Tenencia, 
			PAT_Nro_Cargos_TAM,
			PAT_Mto_Cargos_TAM,  
	 SEG_Tenencia, 
	SEG_AUTO_TRX,
	SEG_AUTO_MTO,

	 SEG_FRAUDE_TRX,
	 SEG_FRAUDE_MTO,

	SEG_HOGAR_TRX,
	 SEG_HOGAR_MTO,

	 SEG_OTROS_TRX,
	 SEG_OTROS_MTO,

	 SEG_SALUD_TRX,
	 SEG_SALUD_MTO,

	 SEG_VIDA_TRX,
	 SEG_VIDA_MTO,
	0 as TA_Tenencia, 
			0 as TA_FecApertura,
			0 as TA_Nro_Titulares,
			0 as TA_Nro_Titulares_VU,
			0 as TA_Cupo_Titulares,
			0 as TA_Tipo_Tarjeta,
			0 as TA_Nro_TRXs_Total,
			0 as TA_Mto_TRXs_Total,
			0 as TA_Nro_TRXs_TDA,
			0 as TA_Mto_TRXs_TDA,
			0 as TA_Nro_TRXs_SPOS,
			0 as TA_Mto_TRXs_SPOS  
		FROM schm_workspace.pmunoz_tablon_productos10 as a 

		;




	--===========================================================================================;
	--[11] Informacion de Producto: Ripley Puntos;
	--===========================================================================================;

	CREATE TABLE schm_workspace.pmunoz_Saldo_RP as
			SELECT 
				a.document_number as rut, 
				max(a.POINTS_BALANCE) as Saldo 
			FROM br_dm_prod_bigdata_sqldwarehouse_db.LOYALTY_NOVEDADES as a
				INNER JOIN (
					SELECT document_number, max(CREATION_DATE) as ULT_FPROC 
						FROM br_dm_prod_bigdata_sqldwarehouse_db.LOYALTY_NOVEDADES
							WHERE 100*date_part(year,CREATION_DATE)+date_part(month,CREATION_DATE)<=periodo_paso
								and document_number>=1000000 AND document_number<=55000000 
							GROUP BY document_number
								) as b
								on (a.document_number=b.document_number AND  a.CREATION_DATE=b.ULT_FPROC)
							GROUP BY 
								a.document_number 
							having 
								max(a.POINTS_BALANCE)>0;




	CREATE TABLE  schm_workspace.pmunoz_Canjes_RP as
	Select
		DOCUMENT_NUMBER as rut,

		count(distinct transaction_date) as RPtos_Nro_Canjes, 
		Sum(SaldoCanjes) As RPtos_Ptos_Canjeados
	FROM (
		SELECT 
			transaction_date,
			Branch_Code, /*BranchCode=39 --> Canje en APP*/
		Physical_Terminal_Code, /*PhysicalTerminalCode=777 --> Canje en APP*/
		Ticket_Number,
		Document_number,
	Case
		When Transaction_type = 'Canje' AND Status = '1' Then 'Canje'
		End 
	As TipoTransacción,        
		Case
			When Transaction_type = 'Canje' AND Status = '1' Then Number_points 
		End 
	As SaldoCanjes
		FROM br_dm_prod_bigdata_sqldwarehouse_db.Loyalty_Novedades
			) As CalculoCanjes 
		WHERE TipoTransacción = 'Canje'
		and 100*date_part(year,transaction_date)+date_part(month,transaction_date)=periodo_paso
		and PHYSICAL_TERMINAL_CODE<>'Cod01'
	Group by
		DOCUMENT_NUMBER ; 

						



	CREATE TABLE schm_workspace.pmunoz_Acumulacion_RP as

			SELECT 
				Document_number as rut,
				sum(quantity) as RPtos_Ptos_Acumulados

	FROM br_dm_prod_bigdata_sqldwarehouse_db.LOYALTY_NOVEDADES
		WHERE TRANSACTION_TYPE='Bonifica' /*Solo registros asociados a la bonifiacion*/
	and PRODUCT_NAME<>'Migracion' /*Quitar valores de migracion asociados a periodos pasados*/
	and 100*date_part(year,transaction_date)+date_part(month,transaction_date)=periodo_paso
	GROUP BY 
		Document_number ;



		CREATE TABLE schm_workspace.pmunoz_TP_RPtos as 
			SELECT 
				a.*,
				COALESCE(b.RPTOS_Ptos_Acumulados,0) as RPtos_Ptos_Acumulados 
			FROM (
				SELECT 
					COALESCE(x.rut,z.rut) as rut,
					COALESCE(x.Saldo,0) as RPtos_Saldo,
					COALESCE(z.RPtos_Nro_Canjes,0) as RPtos_Nro_Canjes,
					COALESCE(z.RPtos_Ptos_Canjeados,0) as RPtos_Ptos_Canjeados 
				FROM schm_workspace.pmunoz_Saldo_RP as x 
					full outer join schm_workspace.pmunoz_Canjes_RP as z 
						on (x.rut=z.rut) 
						) as a /*Base Madre que se construye desde clientes que terminaron con SAldo>0 o tuvieron canjes en el mes*/
		LEFT JOIN schm_workspace.pmunoz_Acumulacion_RP as b 
			on (a.rut=b.rut)	;





		CREATE TABLE schm_workspace.pmunoz_tablon_productos12 as 
		
				SELECT  	a.rut,
		COALESCE(b.TC_Tenencia,0) as  TC_Tenencia,
		b.TC_PROD_RSAT,
		COALESCE(b.TC_NRO_CTTO, 0) as  TC_NRO_CTTO,
		COALESCE(b.TC_NRO_CTTO_VIGENTE, 0) as  TC_NRO_CTTO_VIGENTE,
		COALESCE(b.TC_NRO_CTTO_CERRADO, 0) as  TC_NRO_CTTO_CERRADO,
		b.TC_act_tr, 
		b.TC_VU, 
		b.TC_VU_Prima, 
		COALESCE(b.TC_FecApertura, 0) as  TC_FecApertura,
		b.TC_Tipo, 
		COALESCE(b.TC_Saldo, 0) as  TC_Saldo,
		b.tc_observacion, 
		COALESCE(b.TC_Cupo, 0) as  TC_Cupo,
		COALESCE(b.TC_Disponible, 0) as TC_Disponible ,
		COALESCE(b.TC_Nro_TRXs, 0) as TC_Nro_TRXs ,
		COALESCE(b.TC_Nro_TRXs_SPOS,0) as   TC_Nro_TRXs_SPOS,
		COALESCE(b.TC_Nro_TRXs_TDA, 0) as  TC_Nro_TRXs_TDA,
		COALESCE(b.TC_Nro_TRXs_TDAp, 0) as TC_Nro_TRXs_TDAp ,
		COALESCE(b.TC_Nro_TRXs_TDAo, 0) as  TC_Nro_TRXs_TDAo,
		COALESCE(b.TC_Nro_TRXs_AV, 0) as  TC_Nro_TRXs_AV,
		COALESCE(b.TC_Nro_TRXs_SEG, 0) as  TC_Nro_TRXs_SEG,
		COALESCE(b.TC_Mto_TRXs, 0) as  TC_Mto_TRXs,
		COALESCE(b.TC_Mto_TRXs_SPOS, 0) as  TC_Mto_TRXs_SPOS,
		COALESCE(b.TC_Mto_TRXs_TDA_pie, 0) as  TC_Mto_TRXs_TDA_pie,
		COALESCE(b.TC_Mto_TRXs_TDA, 0) as  TC_Mto_TRXs_TDA,
		COALESCE(b.TC_Mto_TRXs_TDAp, 0) as  TC_Mto_TRXs_TDAp,
		COALESCE(b.TC_Mto_TRXs_TDAo, 0) as  TC_Mto_TRXs_TDAo,
		COALESCE(b.TC_Mto_TRXs_AV, 0) as  TC_Mto_TRXs_AV,
		COALESCE(b.TC_Mto_TRXs_SEG, 0) as  TC_Mto_TRXs_SEG,
		COALESCE(b.TC_Nro_TRXs_SAV, 0) as  TC_Nro_TRXs_SAV,
		COALESCE(b.TC_Mto_TRXs_SAV, 0) as  TC_Mto_TRXs_SAV,
		COALESCE(b.TC_Nro_Adicionales,0) as   TC_Nro_Adicionales,
		COALESCE(b.TC_Mto_TRXs_TDA_Adi,0) as   TC_Mto_TRXs_TDA_Adi,
		COALESCE(b.TC_Mto_TRXs_SPOS_Adi, 0) as  TC_Mto_TRXs_SPOS_Adi,
		COALESCE(b.TD_Tenencia,0) as TD_Tenencia,
			COALESCE(b.TD_Nro_cuenta , 0) as TD_Nro_cuenta,
	          COALESCE(b.TD_CUENTA_VIGENTE , 0) as TD_CUENTA_VIGENTE,
	          COALESCE(b.TD_CUENTA_CERRADA , 0) as TD_CUENTA_CERRADA,
	          COALESCE(b.TD_FecApertura , 0) as TD_FecApertura,
	          b.TD_Tipo, 
	          COALESCE(b.TD_Nro_Cargos , 0) as TD_Nro_Cargos,
	          COALESCE(b.TD_Mto_Cargos , 0) as TD_Mto_Cargos,
	          COALESCE(b.TD_Nro_Abonos , 0) as TD_Nro_Abonos,
	          COALESCE(b.TD_Mto_Abonos , 0) as TD_Mto_Abonos,
	          COALESCE(b.TD_Tenencia_ABR , 0) as TD_Tenencia_ABR,
	          COALESCE(b.TD_Mto_ABR , 0) as TD_Mto_ABR,
	          COALESCE(b.TD_Nro_TRXs_SPOS , 0) as TD_Nro_TRXs_SPOS,
	          COALESCE(b.TD_Mto_TRXs_SPOS , 0) as TD_Mto_TRXs_SPOS,
	          COALESCE(b.TD_Nro_TRXs_TDA , 0) as TD_Nro_TRXs_TDA,
	          COALESCE(b.TD_Mto_TRXs_TDA , 0) as TD_Mto_TRXs_TDA,
	          COALESCE(b.TD_Dias_Saldo_Mayor_a_1 , 0) as TD_Dias_Saldo_Mayor_a_1,
	          COALESCE(b.TD_Saldo_EOP , 0) as TD_Saldo_EOP,
	          COALESCE(b.TD_Saldo_MAX , 0) as TD_Saldo_MAX,
	          COALESCE(b.TD_Saldo_PROM , 0) as TD_Saldo_PROM,
	          COALESCE(b.TD_Saldo_TOTAL ,0) as TD_Saldo_TOTAL,
	COALESCE(b.DAP_Tenencia_PN,0) as  DAP_Tenencia_PN,
	COALESCE(b.DAP_Tenencia_PJ, 0) as DAP_Tenencia_PJ,
	COALESCE(b.DAP_FecApertura_PN, 0) as DAP_FecApertura_PN,
	 COALESCE(b.DAP_monto_PN,0) as DAP_monto_PN,
	 COALESCE(b.DAP_Nro_PN,0) as DAP_Nro_PN,
	 COALESCE(b.DAP_FecApertura_PJ, 0) as DAP_FecApertura_PJ,
	 COALESCE(b.DAP_monto_PJ,0) as DAP_monto_PJ,
	 COALESCE(b.DAP_Nro_PJ,0) as DAP_Nro_PJ,
	 COALESCE(b.CC_Tenencia,0) as CC_Tenencia,

	COALESCE(b.CC_Nro_cuenta,	0) as 	CC_Nro_cuenta,
	COALESCE(b.CC_CUENTA_VIGENTE,	0) as 	CC_CUENTA_VIGENTE,
	COALESCE(b.CC_CUENTA_CERRADA,	0) as 	CC_CUENTA_CERRADA,
	COALESCE(b.CC_FecApertura,	0) as 	CC_FecApertura,
	COALESCE(b.CC_Nro_Cargos,	0) as 	CC_Nro_Cargos,
	COALESCE(b.CC_Mto_Cargos,	0) as 	CC_Mto_Cargos,
	COALESCE(b.CC_Nro_Abonos,	0) as 	CC_Nro_Abonos,
	COALESCE(b.CC_Mto_Abonos,	0) as 	CC_Mto_Abonos,
	COALESCE(b.CC_Tenencia_ABR,	0) as 	CC_Tenencia_ABR,
	COALESCE(b.CC_Mto_ABR,	0) as 	CC_Mto_ABR,
	COALESCE(b.CC_Nro_TRXs_SPOS,	0) as 	CC_Nro_TRXs_SPOS,
	COALESCE(b.CC_Mto_TRXs_SPOS,	0) as 	CC_Mto_TRXs_SPOS,
	COALESCE(b.CC_Nro_TRXs_TDA,	0) as 	CC_Nro_TRXs_TDA,
	COALESCE(b.CC_Mto_TRXs_TDA,	0) as 	CC_Mto_TRXs_TDA,
	COALESCE(b.CC_Dias_Saldo_Mayor_a_1,	0) as 	CC_Dias_Saldo_Mayor_a_1,
	COALESCE(b.CC_Saldo_EOP,	0) as 	CC_Saldo_EOP,
	COALESCE(b.CC_Saldo_MAX,	0) as 	CC_Saldo_MAX,
	COALESCE(b.CC_Saldo_PROM,	0) as 	CC_Saldo_PROM,
	COALESCE(b.CC_Saldo_TOTAL	,0) as 	CC_Saldo_TOTAL,



	COALESCE(b.CONS_OT_Tenencia,0) as CONS_OT_Tenencia,
	COALESCE(b.CONS_Tenencia,0) as CONS_Tenencia,

	COALESCE(	b.CONS_OT_FecApertura,	0) as 	CONS_OT_FecApertura,
	COALESCE(	b.CONS_OT_Nro_vigente,	0) as 	CONS_OT_Nro_vigente,
	COALESCE(	b.CONS_OT_Monto_Total,	0) as 	CONS_OT_Monto_Total,
	COALESCE(	b.CONS_OT_Cuotas_Total,	0) as 	CONS_OT_Cuotas_Total,
	COALESCE(	b.CONS_OT_Monto_x_Pagar,	0) as 	CONS_OT_Monto_x_Pagar,
	COALESCE(	b.CONS_OT_Cuotas_x_Pagar,	0) as 	CONS_OT_Cuotas_x_Pagar,
	COALESCE(	b.cons_OT_DEUDA_SOW,	0) as 	cons_OT_DEUDA_SOW,
	COALESCE(	b.CONS_FecApertura,	0) as 	CONS_FecApertura,
	COALESCE(	b.CONS_Nro_vigente,	0) as 	CONS_Nro_vigente,
	COALESCE(	b.CONS_Monto_Total,	0) as 	CONS_Monto_Total,
	COALESCE(	b.CONS_Cuotas_Total,	0) as 	CONS_Cuotas_Total,
	COALESCE(	b.CONS_Monto_x_Pagar,	0) as 	CONS_Monto_x_Pagar,
	COALESCE(	b.CONS_Cuotas_x_Pagar,	0) as 	CONS_Cuotas_x_Pagar,
	COALESCE(	b.cons_DEUDA_SOW	,0) as 	cons_DEUDA_SOW,

	COALESCE(b.AV_TENENCIA,0) as AV_TENENCIA,
	COALESCE(b.SAV_TENENCIA,0) as SAV_TENENCIA,
	COALESCE(b.AV_MONTO_x_Pagar,0) as AV_MONTO_x_Pagar,
	COALESCE(b.SAV_MONTO_x_Pagar,0) as SAV_MONTO_x_Pagar,
	COALESCE(b.PAT_Tenencia,	0) as 	 PAT_Tenencia,

	COALESCE(b.PAT_Nro_Cargos_TAM,	0) as PAT_Nro_Cargos_TAM,
	COALESCE(b.PAT_Mto_Cargos_TAM ,	0) as PAT_Mto_Cargos_TAM,
	COALESCE(b.SEG_Tenencia, 0) as SEG_Tenencia,
	COALESCE(b.	SEG_AUTO_TRX,		0) as 	SEG_AUTO_TRX,
	COALESCE(b.	SEG_AUTO_MTO,		0) as 	SEG_AUTO_MTO,

	COALESCE(b.	SEG_FRAUDE_TRX,		0) as 	SEG_FRAUDE_TRX,
	COALESCE(b.	SEG_FRAUDE_MTO,		0) as 	SEG_FRAUDE_MTO,
	COALESCE(b.	SEG_HOGAR_TRX,		0) as 	SEG_HOGAR_TRX,
	COALESCE(b.	SEG_HOGAR_MTO,		0) as 	SEG_HOGAR_MTO,
	COALESCE(b.	SEG_OTROS_TRX,		0) as 	SEG_OTROS_TRX,
	COALESCE(b.	SEG_OTROS_MTO,		0) as 	SEG_OTROS_MTO,
	COALESCE(b.	SEG_SALUD_TRX,		0) as 	SEG_SALUD_TRX,
	COALESCE(b.	SEG_SALUD_MTO,		0) as 	SEG_SALUD_MTO,
	COALESCE(b.	SEG_VIDA_TRX,		0) as 	SEG_VIDA_TRX,
	COALESCE(b.	SEG_VIDA_MTO,		0) as 	SEG_VIDA_MTO,
	COALESCE(b.	TA_Tenencia, 0) as TA_Tenencia,
			COALESCE(b.	TA_FecApertura,0) as TA_FecApertura,
			COALESCE(b.	TA_Nro_Titulares,0) as TA_Nro_Titulares,
			COALESCE(b.	TA_Nro_Titulares_VU,0) as TA_Nro_Titulares_VU,
			COALESCE(b.	TA_Cupo_Titulares,0) as TA_Cupo_Titulares,
			COALESCE(b.	TA_Tipo_Tarjeta,0) as TA_Tipo_Tarjeta,
			COALESCE(b.	TA_Nro_TRXs_Total,0) as TA_Nro_TRXs_Total,
			COALESCE(b.	TA_Mto_TRXs_Total,0) as TA_Mto_TRXs_Total,
			COALESCE(b.	TA_Nro_TRXs_TDA,0) as TA_Nro_TRXs_TDA,
			COALESCE(b.	TA_Mto_TRXs_TDA,0) as TA_Mto_TRXs_TDA,
			COALESCE(b.	TA_Nro_TRXs_SPOS,0) as TA_Nro_TRXs_SPOS,
			COALESCE(b.	TA_Mto_TRXs_SPOS,  0) as TA_Mto_TRXs_SPOS,
			case 
				when c.rut is not null then 1 
				else 0 
			end 
		as RPtos_Tenencia, 
			COALESCE(c.RPtos_Saldo,  0) as RPtos_Saldo,
			COALESCE(c.RPtos_Nro_Canjes,  0) as RPtos_Nro_Canjes,
				COALESCE(c.RPtos_Ptos_Canjeados,  0) as RPtos_Ptos_Canjeados,
			COALESCE(c.RPtos_Ptos_Acumulados  ,  0) as RPtos_Ptos_Acumulados
		FROM (SELECT rut FROM  schm_workspace.pmunoz_tablon_productos11
		union SELECT rut FROM schm_workspace.pmunoz_TP_RPtos) as a 
				LEFT JOIN  schm_workspace.pmunoz_tablon_productos11 as b 
				on (a.rut=b.rut)
			LEFT JOIN  schm_workspace.pmunoz_TP_RPtos as c 
				on (a.rut=c.rut)
		;


	--informacion transaccional de consumo
	CREATE TABLE schm_workspace.pmunoz_trx_consumo as 
	SELECT 
		rut,
		sum(VENTA_LIQUIDA) as CONS_MES_MTO,
		count(rut) as CONS_MES_TRX
	FROM schm_data_analytics.ppff_trx_consumo
	WHERE periodo=periodo_paso
	GROUP BY rut
	;


	CREATE TABLE schm_workspace.pmunoz_tablon_productos13 as 
		SELECT  	
			a.rut,
			COALESCE(b.TC_Tenencia,0) as  TC_Tenencia,
			b.TC_PROD_RSAT,
			COALESCE(b.TC_NRO_CTTO, 0) as  TC_NRO_CTTO,
			COALESCE(b.TC_NRO_CTTO_VIGENTE, 0) as  TC_NRO_CTTO_VIGENTE,
			COALESCE(b.TC_NRO_CTTO_CERRADO, 0) as  TC_NRO_CTTO_CERRADO,
			b.TC_act_tr, 
			b.TC_VU, 
			b.TC_VU_Prima, 
			COALESCE(b.TC_FecApertura, 0) as  TC_FecApertura,
			b.TC_Tipo, 
			COALESCE(b.TC_Saldo, 0) as  TC_Saldo,
			b.tc_observacion, 
			COALESCE(b.TC_Cupo, 0) as  TC_Cupo,
			COALESCE(b.TC_Disponible, 0) as TC_Disponible ,
			COALESCE(b.TC_Nro_TRXs, 0) as TC_Nro_TRXs ,
			COALESCE(b.TC_Nro_TRXs_SPOS,0) as   TC_Nro_TRXs_SPOS,
			COALESCE(b.TC_Nro_TRXs_TDA, 0) as  TC_Nro_TRXs_TDA,
			COALESCE(b.TC_Nro_TRXs_TDAp, 0) as TC_Nro_TRXs_TDAp ,
			COALESCE(b.TC_Nro_TRXs_TDAo, 0) as  TC_Nro_TRXs_TDAo,
			COALESCE(b.TC_Nro_TRXs_AV, 0) as  TC_Nro_TRXs_AV,
			COALESCE(b.TC_Nro_TRXs_SEG, 0) as  TC_Nro_TRXs_SEG,
			COALESCE(b.TC_Mto_TRXs, 0) as  TC_Mto_TRXs,
			COALESCE(b.TC_Mto_TRXs_SPOS, 0) as  TC_Mto_TRXs_SPOS,
			COALESCE(b.TC_Mto_TRXs_TDA_pie, 0) as  TC_Mto_TRXs_TDA_pie,
			COALESCE(b.TC_Mto_TRXs_TDA, 0) as  TC_Mto_TRXs_TDA,
			COALESCE(b.TC_Mto_TRXs_TDAp, 0) as  TC_Mto_TRXs_TDAp,
			COALESCE(b.TC_Mto_TRXs_TDAo, 0) as  TC_Mto_TRXs_TDAo,
			COALESCE(b.TC_Mto_TRXs_AV, 0) as  TC_Mto_TRXs_AV,
			COALESCE(b.TC_Mto_TRXs_SEG, 0) as  TC_Mto_TRXs_SEG,
			COALESCE(b.TC_Nro_TRXs_SAV, 0) as  TC_Nro_TRXs_SAV,
			COALESCE(b.TC_Mto_TRXs_SAV, 0) as  TC_Mto_TRXs_SAV,
			COALESCE(b.TC_Nro_Adicionales,0) as   TC_Nro_Adicionales,
			COALESCE(b.TC_Mto_TRXs_TDA_Adi,0) as   TC_Mto_TRXs_TDA_Adi,
			COALESCE(b.TC_Mto_TRXs_SPOS_Adi, 0) as  TC_Mto_TRXs_SPOS_Adi,
			COALESCE(b.TD_Tenencia,0) as TD_Tenencia,
			COALESCE(b.TD_Nro_cuenta , 0) as TD_Nro_cuenta,
			COALESCE(b.TD_CUENTA_VIGENTE , 0) as TD_CUENTA_VIGENTE,
			COALESCE(b.TD_CUENTA_CERRADA , 0) as TD_CUENTA_CERRADA,
			COALESCE(b.TD_FecApertura , 0) as TD_FecApertura,
			b.TD_Tipo, 
			COALESCE(b.TD_Nro_Cargos , 0) as TD_Nro_Cargos,
			COALESCE(b.TD_Mto_Cargos , 0) as TD_Mto_Cargos,
			COALESCE(b.TD_Nro_Abonos , 0) as TD_Nro_Abonos,
			COALESCE(b.TD_Mto_Abonos , 0) as TD_Mto_Abonos,
			COALESCE(b.TD_Tenencia_ABR , 0) as TD_Tenencia_ABR,
			COALESCE(b.TD_Mto_ABR , 0) as TD_Mto_ABR,
			COALESCE(b.TD_Nro_TRXs_SPOS , 0) as TD_Nro_TRXs_SPOS,
			COALESCE(b.TD_Mto_TRXs_SPOS , 0) as TD_Mto_TRXs_SPOS,
			COALESCE(b.TD_Nro_TRXs_TDA , 0) as TD_Nro_TRXs_TDA,
			COALESCE(b.TD_Mto_TRXs_TDA , 0) as TD_Mto_TRXs_TDA,
			COALESCE(b.TD_Dias_Saldo_Mayor_a_1 , 0) as TD_Dias_Saldo_Mayor_a_1,
			COALESCE(b.TD_Saldo_EOP , 0) as TD_Saldo_EOP,
			COALESCE(b.TD_Saldo_MAX , 0) as TD_Saldo_MAX,
			COALESCE(b.TD_Saldo_PROM , 0) as TD_Saldo_PROM,
			COALESCE(b.TD_Saldo_TOTAL ,0) as TD_Saldo_TOTAL,
			COALESCE(b.DAP_Tenencia_PN,0) as  DAP_Tenencia_PN,
			COALESCE(b.DAP_Tenencia_PJ, 0) as DAP_Tenencia_PJ,
			COALESCE(b.DAP_FecApertura_PN, 0) as DAP_FecApertura_PN,
			COALESCE(b.DAP_monto_PN,0) as DAP_monto_PN,
			COALESCE(b.DAP_Nro_PN,0) as DAP_Nro_PN,
			COALESCE(b.DAP_FecApertura_PJ, 0) as DAP_FecApertura_PJ,
			COALESCE(b.DAP_monto_PJ,0) as DAP_monto_PJ,
			COALESCE(b.DAP_Nro_PJ,0) as DAP_Nro_PJ,
			COALESCE(b.CC_Tenencia,0) as CC_Tenencia,
			COALESCE(b.CC_Nro_cuenta,	0) as 	CC_Nro_cuenta,
			COALESCE(b.CC_CUENTA_VIGENTE,	0) as 	CC_CUENTA_VIGENTE,
			COALESCE(b.CC_CUENTA_CERRADA,	0) as 	CC_CUENTA_CERRADA,
			COALESCE(b.CC_FecApertura,	0) as 	CC_FecApertura,
			COALESCE(b.CC_Nro_Cargos,	0) as 	CC_Nro_Cargos,
			COALESCE(b.CC_Mto_Cargos,	0) as 	CC_Mto_Cargos,
			COALESCE(b.CC_Nro_Abonos,	0) as 	CC_Nro_Abonos,
			COALESCE(b.CC_Mto_Abonos,	0) as 	CC_Mto_Abonos,
			COALESCE(b.CC_Tenencia_ABR,	0) as 	CC_Tenencia_ABR,
			COALESCE(b.CC_Mto_ABR,	0) as 	CC_Mto_ABR,
			COALESCE(b.CC_Nro_TRXs_SPOS,	0) as 	CC_Nro_TRXs_SPOS,
			COALESCE(b.CC_Mto_TRXs_SPOS,	0) as 	CC_Mto_TRXs_SPOS,
			COALESCE(b.CC_Nro_TRXs_TDA,	0) as 	CC_Nro_TRXs_TDA,
			COALESCE(b.CC_Mto_TRXs_TDA,	0) as 	CC_Mto_TRXs_TDA,
			COALESCE(b.CC_Dias_Saldo_Mayor_a_1,	0) as 	CC_Dias_Saldo_Mayor_a_1,
			COALESCE(b.CC_Saldo_EOP,	0) as 	CC_Saldo_EOP,
			COALESCE(b.CC_Saldo_MAX,	0) as 	CC_Saldo_MAX,
			COALESCE(b.CC_Saldo_PROM,	0) as 	CC_Saldo_PROM,
			COALESCE(b.CC_Saldo_TOTAL	,0) as 	CC_Saldo_TOTAL,
			COALESCE(b.CONS_OT_Tenencia,0) as CONS_OT_Tenencia,
			COALESCE(b.CONS_Tenencia,0) as CONS_Tenencia,
			COALESCE(b.CONS_OT_FecApertura,	0) as 	CONS_OT_FecApertura,
			COALESCE(b.CONS_OT_Nro_vigente,	0) as 	CONS_OT_Nro_vigente,
			COALESCE(b.CONS_OT_Monto_Total,	0) as 	CONS_OT_Monto_Total,
			COALESCE(b.CONS_OT_Cuotas_Total,	0) as 	CONS_OT_Cuotas_Total,
			COALESCE(b.CONS_OT_Monto_x_Pagar,	0) as 	CONS_OT_Monto_x_Pagar,
			COALESCE(b.CONS_OT_Cuotas_x_Pagar,	0) as 	CONS_OT_Cuotas_x_Pagar,
			COALESCE(b.cons_OT_DEUDA_SOW,	0) as 	cons_OT_DEUDA_SOW,
			COALESCE(b.CONS_FecApertura,	0) as 	CONS_FecApertura,
			COALESCE(b.CONS_Nro_vigente,	0) as 	CONS_Nro_vigente,
			COALESCE(b.CONS_Monto_Total,	0) as 	CONS_Monto_Total,
			COALESCE(b.CONS_Cuotas_Total,	0) as 	CONS_Cuotas_Total,
			COALESCE(b.CONS_Monto_x_Pagar,	0) as 	CONS_Monto_x_Pagar,
			COALESCE(b.CONS_Cuotas_x_Pagar,	0) as 	CONS_Cuotas_x_Pagar,
			COALESCE(b.cons_DEUDA_SOW	,0) as 	cons_DEUDA_SOW,
			COALESCE(b.AV_TENENCIA,0) as AV_TENENCIA,
			COALESCE(b.SAV_TENENCIA,0) as SAV_TENENCIA,
			COALESCE(b.AV_MONTO_x_Pagar,0) as AV_MONTO_x_Pagar,
			COALESCE(b.SAV_MONTO_x_Pagar,0) as SAV_MONTO_x_Pagar,
			COALESCE(b.PAT_Tenencia,	0) as 	 PAT_Tenencia,
			COALESCE(b.PAT_Nro_Cargos_TAM,	0) as PAT_Nro_Cargos_TAM,
			COALESCE(b.PAT_Mto_Cargos_TAM ,	0) as PAT_Mto_Cargos_TAM,
			COALESCE(b.SEG_Tenencia, 0) as SEG_Tenencia,
			COALESCE(b.SEG_AUTO_TRX,0) as 	SEG_AUTO_TRX,
			COALESCE(b.SEG_AUTO_MTO,0) as 	SEG_AUTO_MTO,
			COALESCE(b.SEG_FRAUDE_TRX,0) as 	SEG_FRAUDE_TRX,
			COALESCE(b.SEG_FRAUDE_MTO,0) as 	SEG_FRAUDE_MTO,
			COALESCE(b.SEG_HOGAR_TRX,0) as 	SEG_HOGAR_TRX,
			COALESCE(b.SEG_HOGAR_MTO,0) as 	SEG_HOGAR_MTO,
			COALESCE(b.SEG_OTROS_TRX,0) as 	SEG_OTROS_TRX,
			COALESCE(b.SEG_OTROS_MTO,0) as 	SEG_OTROS_MTO,
			COALESCE(b.SEG_SALUD_TRX,0) as 	SEG_SALUD_TRX,
			COALESCE(b.SEG_SALUD_MTO,0) as 	SEG_SALUD_MTO,
			COALESCE(b.SEG_VIDA_TRX,0) as 	SEG_VIDA_TRX,
			COALESCE(b.SEG_VIDA_MTO,0) as 	SEG_VIDA_MTO,
			COALESCE(b.TA_Tenencia, 0) as TA_Tenencia,
			COALESCE(b.TA_FecApertura,0) as TA_FecApertura,
			COALESCE(b.TA_Nro_Titulares,0) as TA_Nro_Titulares,
			COALESCE(b.TA_Nro_Titulares_VU,0) as TA_Nro_Titulares_VU,
			COALESCE(b.TA_Cupo_Titulares,0) as TA_Cupo_Titulares,
			COALESCE(b.TA_Tipo_Tarjeta,0) as TA_Tipo_Tarjeta,
			COALESCE(b.TA_Nro_TRXs_Total,0) as TA_Nro_TRXs_Total,
			COALESCE(b.TA_Mto_TRXs_Total,0) as TA_Mto_TRXs_Total,
			COALESCE(b.TA_Nro_TRXs_TDA,0) as TA_Nro_TRXs_TDA,
			COALESCE(b.TA_Mto_TRXs_TDA,0) as TA_Mto_TRXs_TDA,
			COALESCE(b.TA_Nro_TRXs_SPOS,0) as TA_Nro_TRXs_SPOS,
			COALESCE(b.TA_Mto_TRXs_SPOS,  0) as TA_Mto_TRXs_SPOS,
			COALESCE(b.RPtos_Tenencia,   0) as RPtos_Tenencia,
			COALESCE(b.RPtos_Saldo,  0) as RPtos_Saldo,
			COALESCE(b.RPtos_Nro_Canjes,  0) as RPtos_Nro_Canjes,
			COALESCE(b.RPtos_Ptos_Canjeados,  0) as RPtos_Ptos_Canjeados,
			COALESCE(b.RPtos_Ptos_Acumulados  ,  0) as RPtos_Ptos_Acumulados,
			COALESCE(c.CONS_MES_MTO ,  0) as CONS_MES_MTO,
			COALESCE(c.CONS_MES_TRX ,  0) as CONS_MES_TRX
		FROM (SELECT rut FROM schm_workspace.pmunoz_tablon_productos12 
		union SELECT rut FROM schm_workspace.pmunoz_trx_consumo )as a 
		LEFT JOIN  schm_workspace.pmunoz_tablon_productos12 as b 
			on (a.rut=b.rut)
		LEFT JOIN  schm_workspace.pmunoz_trx_consumo as c 
			on (a.rut=c.rut)
	;


	--desde aqui se ingresa chek
	CREATE TABLE schm_workspace.pmunoz_bank_accounts as 
	SELECT 
		ID,
		user_id,
		nationalid AS rut,
		tier,
		saldo,
		n_trx_r_com,
		monto_r_com,
		n_trx_r_tienda,
		monto_r_tienda,
		n_trx_spos,
		monto_spos,
		n_trx_mc_chek,
		monto_mc_chek,
		n_trx_cashin,
		monto_cashin,
		n_trx_p2p,
		monto_p2p,
		n_trx_cashout,
		monto_cashout
	FROM schm_digital.LSMC_INFO_RESUMEN_CHECK_MENSUAL
	WHERE periodo=periodo_paso
	AND nationalid IS NOT NULL
	AND tipo_usuario='Usuario Persona'
	;
	 

	CREATE TABLE schm_workspace.pmunoz_bank_accounts2 as 
	SELECT 
	a.*,
	b.createdat
	FROM schm_workspace.pmunoz_bank_accounts AS a 
	LEFT JOIN br_dm_prod_bigdata_chekapp_db.accounts AS B 
	ON A.ID = B.ID
	;


	CREATE TABLE schm_workspace.pmunoz_TP_CHEK as 
		SELECT 
			substring(rut,1,length(rut)-1) AS rut,
			max(10000*date_part(year,CREATEDAT)+100*date_part(month,CREATEDAT)+date_part(day,CREATEDAT)) AS fecha,
			max(CASE WHEN tier='t1' THEN 1 ELSE 0 END ) AS t1,
			max(CASE WHEN tier='t2' THEN 1 ELSE 0 END ) AS t2,
			max(CASE WHEN tier='t3' THEN 1 ELSE 0 END ) AS t3,
			sum(saldo) AS CHEK_SALDO,
			sum(n_trx_r_com) AS CHEK_trxs_RCOM,
			sum(monto_r_com) AS CHEK_mTO_RCOM,
			sum(n_trx_r_tienda) AS CHEK_trxs_Rtda,
			sum(monto_r_tienda) AS CHEK_MTO_rtda,
			sum(n_trx_spos) AS CHEK_trxs_SPOS,
			sum(monto_spos) AS CHEK_MTO_spos,
			sum(n_trx_mc_chek) AS CHEK_trxs_MC_CHEK,
			sum(monto_mc_chek) AS CHEK_MTO_MC_CHEK,
			sum(n_trx_cashin) AS CHEK_trxs_CASHIN,
			sum(monto_cashin) AS CHEK_MTO_CASHIN,
			sum(n_trx_p2p) AS CHEK_trxs_P2P,
			sum(monto_p2p) AS CHEK_MTO_P2P,
			sum(n_trx_cashout) AS CHEK_trxs_CASHOUT,
			sum(monto_cashout) AS CHEK_MTO_CASHOUT
		FROM schm_workspace.pmunoz_bank_accounts2
		WHERE length(rut)>1
		GROUP BY 1
	;


	CREATE TABLE schm_workspace.pmunoz_TP_CHEK2 AS 
	SELECT *
	FROM schm_workspace.pmunoz_TP_CHEK  
	WHERE 
		(upper(rut) NOT LIKE '%K%' AND 
		upper(rut) NOT LIKE '%.%' and
		upper(rut) NOT LIKE '%-%' and
		rut NOT LIKE '%k%')
	;


	CREATE TABLE schm_workspace.pmunoz_TP_CHEK3 AS 
	SELECT *,
		rut::bigint AS rut_fin
	FROM schm_workspace.pmunoz_TP_CHEK2  
	WHERE len(rut)<=12
	;


	CREATE TABLE schm_workspace.pmunoz_TP_CHEK4 AS
		SELECT 
			rut_fin AS rut,
			max(fecha) AS fecha,
			max(CASE WHEN t1=1 THEN 1 ELSE 0 END ) AS t1,
			max(CASE WHEN t2=2 THEN 1 ELSE 0 END ) AS t2,
			max(CASE WHEN t3=3 THEN 1 ELSE 0 END ) AS t3,
			sum(CHEK_SALDO) AS CHEK_SALDO,
			sum(c.chek_trxs_rcom)	 AS 	chek_trxs_rcom,
			sum(c.chek_mto_rcom)	 AS 	chek_mto_rcom,
			sum(c.chek_trxs_rtda)	 AS 	chek_trxs_rtda,
			sum(c.chek_mto_rtda)	 AS 	chek_mto_rtda,
			sum(c.chek_trxs_spos)	 AS 	chek_trxs_spos,
			sum(c.chek_mto_spos)	 AS 	chek_mto_spos,
			sum(c.chek_trxs_mc_chek) AS 	chek_trxs_mc_chek,
			sum(c.chek_mto_mc_chek)	 AS 	chek_mto_mc_chek,
			sum(c.chek_trxs_cashin)	 AS 	chek_trxs_cashin,
			sum(c.chek_mto_cashin)	 AS 	chek_mto_cashin,
			sum(c.chek_trxs_p2p)	 AS 	chek_trxs_p2p,
			sum(c.chek_mto_p2p)	 	 AS 	chek_mto_p2p,
			sum(c.chek_trxs_cashout) AS 	chek_trxs_cashout,
			sum(c.chek_mto_cashout)	 AS 	chek_mto_cashout
		FROM  schm_workspace.pmunoz_tp_chek3  AS c
		GROUP BY 1
		;


	CREATE TABLE schm_workspace.pmunoz_tablon_productos14 as 
		SELECT  	
			a.rut,
			COALESCE(b.tc_tenencia,0) as  tc_tenencia,
			b.tc_prod_rsat,
			COALESCE(b.tc_nro_ctto, 0) as  tc_nro_ctto,
			COALESCE(b.tc_nro_ctto_vigente, 0) as  tc_nro_ctto_vigente,
			COALESCE(b.tc_nro_ctto_cerrado, 0) as  tc_nro_ctto_cerrado,
			b.tc_act_tr, 
			b.tc_vu, 
			b.tc_vu_prima, 
			COALESCE(b.tc_fecapertura, 0) as  tc_fecapertura,
			b.tc_tipo, 
			COALESCE(b.tc_saldo, 0) as  tc_saldo,
			b.tc_observacion, 
			COALESCE(b.tc_cupo, 0) as  tc_cupo,
			COALESCE(b.tc_disponible, 0) as tc_disponible ,
			COALESCE(b.tc_nro_trxs, 0) as tc_nro_trxs ,
			COALESCE(b.tc_nro_trxs_spos,0) as   tc_nro_trxs_spos,
			COALESCE(b.tc_nro_trxs_tda, 0) as  tc_nro_trxs_tda,
			COALESCE(b.tc_nro_trxs_tdap, 0) as tc_nro_trxs_tdap ,
			COALESCE(b.tc_nro_trxs_tdao, 0) as  tc_nro_trxs_tdao,
			COALESCE(b.tc_nro_trxs_av, 0) as  tc_nro_trxs_av,
			COALESCE(b.tc_nro_trxs_seg, 0) as  tc_nro_trxs_seg,
			COALESCE(b.tc_mto_trxs, 0) as  tc_mto_trxs,
			COALESCE(b.tc_mto_trxs_spos, 0) as  tc_mto_trxs_spos,
			COALESCE(b.tc_mto_trxs_tda_pie, 0) as  tc_mto_trxs_tda_pie,
			COALESCE(b.tc_mto_trxs_tda, 0) as  tc_mto_trxs_tda,
			COALESCE(b.tc_mto_trxs_tdap, 0) as  tc_mto_trxs_tdap,
			COALESCE(b.tc_mto_trxs_tdao, 0) as  tc_mto_trxs_tdao,
			COALESCE(b.tc_mto_trxs_av, 0) as  tc_mto_trxs_av,
			COALESCE(b.tc_mto_trxs_seg, 0) as  tc_mto_trxs_seg,
			COALESCE(b.tc_nro_trxs_sav, 0) as  tc_nro_trxs_sav,
			COALESCE(b.tc_mto_trxs_sav, 0) as  tc_mto_trxs_sav,
			COALESCE(b.tc_nro_adicionales,0) as   tc_nro_adicionales,
			COALESCE(b.tc_mto_trxs_tda_adi,0) as   tc_mto_trxs_tda_adi,
			COALESCE(b.tc_mto_trxs_spos_adi, 0) as  tc_mto_trxs_spos_adi,
			COALESCE(b.td_tenencia,0) as td_tenencia,
			COALESCE(b.td_nro_cuenta , 0) as td_nro_cuenta,
			COALESCE(b.td_cuenta_vigente , 0) as td_cuenta_vigente,
			COALESCE(b.td_cuenta_cerrada , 0) as td_cuenta_cerrada,
			COALESCE(b.td_fecapertura , 0) as td_fecapertura,
			b.td_tipo, 
			COALESCE(b.td_nro_cargos , 0) as td_nro_cargos,
			COALESCE(b.td_mto_cargos , 0) as td_mto_cargos,
			COALESCE(b.td_nro_abonos , 0) as td_nro_abonos,
			COALESCE(b.td_mto_abonos , 0) as td_mto_abonos,
			COALESCE(b.td_tenencia_abr , 0) as td_tenencia_abr,
			COALESCE(b.td_mto_abr , 0) as td_mto_abr,
			COALESCE(b.td_nro_trxs_spos , 0) as td_nro_trxs_spos,
			COALESCE(b.td_mto_trxs_spos , 0) as td_mto_trxs_spos,
			COALESCE(b.td_nro_trxs_tda , 0) as td_nro_trxs_tda,
			COALESCE(b.td_mto_trxs_tda , 0) as td_mto_trxs_tda,
			COALESCE(b.td_dias_saldo_mayor_a_1 , 0) as td_dias_saldo_mayor_a_1,
			COALESCE(b.td_saldo_eop , 0) as td_saldo_eop,
			COALESCE(b.td_saldo_max , 0) as td_saldo_max,
			COALESCE(b.td_saldo_prom , 0) as td_saldo_prom,
			COALESCE(b.td_saldo_total ,0) as td_saldo_total,
			COALESCE(b.dap_tenencia_pn,0) as  dap_tenencia_pn,
			COALESCE(b.dap_tenencia_pj, 0) as dap_tenencia_pj,
			COALESCE(b.dap_fecapertura_pn, 0) as dap_fecapertura_pn,
			COALESCE(b.dap_monto_pn,0) as dap_monto_pn,
			COALESCE(b.dap_nro_pn,0) as dap_nro_pn,
			COALESCE(b.dap_fecapertura_pj, 0) as dap_fecapertura_pj,
			COALESCE(b.dap_monto_pj,0) as dap_monto_pj,
			COALESCE(b.dap_nro_pj,0) as dap_nro_pj,
			COALESCE(b.cc_tenencia,0) as cc_tenencia,
			COALESCE(b.cc_nro_cuenta,	0) as 	cc_nro_cuenta,
			COALESCE(b.cc_cuenta_vigente,	0) as 	cc_cuenta_vigente,
			COALESCE(b.cc_cuenta_cerrada,	0) as 	cc_cuenta_cerrada,
			COALESCE(b.cc_fecapertura,	0) as 	cc_fecapertura,
			COALESCE(b.cc_nro_cargos,	0) as 	cc_nro_cargos,
			COALESCE(b.cc_mto_cargos,	0) as 	cc_mto_cargos,
			COALESCE(b.cc_nro_abonos,	0) as 	cc_nro_abonos,
			COALESCE(b.cc_mto_abonos,	0) as 	cc_mto_abonos,
			COALESCE(b.cc_tenencia_abr,	0) as 	cc_tenencia_abr,
			COALESCE(b.cc_mto_abr,	0) as 	cc_mto_abr,
			COALESCE(b.cc_nro_trxs_spos,	0) as 	cc_nro_trxs_spos,
			COALESCE(b.cc_mto_trxs_spos,	0) as 	cc_mto_trxs_spos,
			COALESCE(b.cc_nro_trxs_tda,	0) as 	cc_nro_trxs_tda,
			COALESCE(b.cc_mto_trxs_tda,	0) as 	cc_mto_trxs_tda,
			COALESCE(b.cc_dias_saldo_mayor_a_1,	0) as 	cc_dias_saldo_mayor_a_1,
			COALESCE(b.cc_saldo_eop,	0) as 	cc_saldo_eop,
			COALESCE(b.cc_saldo_max,	0) as 	cc_saldo_max,
			COALESCE(b.cc_saldo_prom,	0) as 	cc_saldo_prom,
			COALESCE(b.cc_saldo_total	,0) as 	cc_saldo_total,
			COALESCE(b.cons_ot_tenencia,0) as cons_ot_tenencia,
			COALESCE(b.cons_tenencia,0) as cons_tenencia,
			COALESCE(b.cons_ot_fecapertura,	0) as 	cons_ot_fecapertura,
			COALESCE(b.cons_ot_nro_vigente,	0) as 	cons_ot_nro_vigente,
			COALESCE(b.cons_ot_monto_total,	0) as 	cons_ot_monto_total,
			COALESCE(b.cons_ot_cuotas_total,	0) as 	cons_ot_cuotas_total,
			COALESCE(b.cons_ot_monto_x_pagar,	0) as 	cons_ot_monto_x_pagar,
			COALESCE(b.cons_ot_cuotas_x_pagar,	0) as 	cons_ot_cuotas_x_pagar,
			COALESCE(b.cons_ot_deuda_sow,	0) as 	cons_ot_deuda_sow,
			COALESCE(b.cons_fecapertura,	0) as 	cons_fecapertura,
			COALESCE(b.cons_nro_vigente,	0) as 	cons_nro_vigente,
			COALESCE(b.cons_monto_total,	0) as 	cons_monto_total,
			COALESCE(b.cons_cuotas_total,	0) as 	cons_cuotas_total,
			COALESCE(b.cons_monto_x_pagar,	0) as 	cons_monto_x_pagar,
			COALESCE(b.cons_cuotas_x_pagar,	0) as 	cons_cuotas_x_pagar,
			COALESCE(b.cons_deuda_sow	,0) as 	cons_deuda_sow,
			COALESCE(b.av_tenencia,0) as av_tenencia,
			COALESCE(b.sav_tenencia,0) as sav_tenencia,
			COALESCE(b.av_monto_x_pagar,0) as av_monto_x_pagar,
			COALESCE(b.sav_monto_x_pagar,0) as sav_monto_x_pagar,
			COALESCE(b.pat_tenencia,	0) as 	 pat_tenencia,
			COALESCE(b.pat_nro_cargos_tam,	0) as pat_nro_cargos_tam,
			COALESCE(b.pat_mto_cargos_tam ,	0) as pat_mto_cargos_tam,
			COALESCE(b.seg_tenencia, 0) as seg_tenencia,
			COALESCE(b.seg_auto_trx,		0) as 	seg_auto_trx,
			COALESCE(b.seg_auto_mto,		0) as 	seg_auto_mto,
			COALESCE(b.seg_fraude_trx,		0) as 	seg_fraude_trx,
			COALESCE(b.seg_fraude_mto,		0) as 	seg_fraude_mto,
			COALESCE(b.seg_hogar_trx,		0) as 	seg_hogar_trx,
			COALESCE(b.seg_hogar_mto,		0) as 	seg_hogar_mto,
			COALESCE(b.seg_otros_trx,		0) as 	seg_otros_trx,
			COALESCE(b.seg_otros_mto,		0) as 	seg_otros_mto,
			COALESCE(b.seg_salud_trx,		0) as 	seg_salud_trx,
			COALESCE(b.seg_salud_mto,		0) as 	seg_salud_mto,
			COALESCE(b.seg_vida_trx,		0) as 	seg_vida_trx,
			COALESCE(b.seg_vida_mto,		0) as 	seg_vida_mto,
			COALESCE(b.ta_tenencia, 0) as ta_tenencia,
			COALESCE(b.ta_fecapertura,0) as ta_fecapertura,
			COALESCE(b.ta_nro_titulares,0) as ta_nro_titulares,
			COALESCE(b.ta_nro_titulares_vu,0) as ta_nro_titulares_vu,
			COALESCE(b.ta_cupo_titulares,0) as ta_cupo_titulares,
			COALESCE(b.ta_tipo_tarjeta,0) as ta_tipo_tarjeta,
			COALESCE(b.ta_nro_trxs_total,0) as ta_nro_trxs_total,
			COALESCE(b.ta_mto_trxs_total,0) as ta_mto_trxs_total,
			COALESCE(b.ta_nro_trxs_tda,0) as ta_nro_trxs_tda,
			COALESCE(b.ta_mto_trxs_tda,0) as ta_mto_trxs_tda,
			COALESCE(b.ta_nro_trxs_spos,0) as ta_nro_trxs_spos,
			COALESCE(b.ta_mto_trxs_spos,  0) as ta_mto_trxs_spos,
			COALESCE(b.rptos_tenencia,   0) as rptos_tenencia,
			COALESCE(b.rptos_saldo,  0) as rptos_saldo,
			COALESCE(b.rptos_nro_canjes,  0) as rptos_nro_canjes,
			COALESCE(b.rptos_ptos_canjeados,  0) as rptos_ptos_canjeados,
			COALESCE(b.rptos_ptos_acumulados  ,  0) as rptos_ptos_acumulados,
			COALESCE(b.cons_mes_mto ,  0) as cons_mes_mto,
			COALESCE(b.cons_mes_trx ,  0) as cons_mes_trx,
			case
				when c.rut is not null then 1 		
				else 0 		
			end as chek_tenencia, 			
			COALESCE(c.fecha	,0) as 	chek_fecapertura	,
			case 
				when c.t3=1 then 't3' 
				when c.t2=1 then 't2' 
				when c.t1=t1 then 't1' 
			end as chek_tier	,
			COALESCE(c.chek_saldo	,0) as 	chek_saldo	,
			COALESCE(c.chek_trxs_rcom,0)	 as 	chek_trxs_rcom,
			COALESCE(c.chek_mto_rcom,0)	 as 	chek_mto_rcom,
			COALESCE(c.chek_trxs_rtda,0)	 as 	chek_trxs_rtda,
			COALESCE(c.chek_mto_rtda,0)	 as 	chek_mto_rtda,
			COALESCE(c.chek_trxs_spos,0)	 as 	chek_trxs_spos,
			COALESCE(c.chek_mto_spos,0)	 as 	chek_mto_spos,
			COALESCE(c.chek_trxs_mc_chek,0)	 as 	chek_trxs_mc_chek,
			COALESCE(c.chek_mto_mc_chek,0)	 as 	chek_mto_mc_chek,
			COALESCE(c.chek_trxs_cashin,0)	 as 	chek_trxs_cashin,
			COALESCE(c.chek_mto_cashin,0)	 as 	chek_mto_cashin,
			COALESCE(c.chek_trxs_p2p,0)	 as 	chek_trxs_p2p,
			COALESCE(c.chek_mto_p2p,0)	 as 	chek_mto_p2p,
			COALESCE(c.chek_trxs_cashout,0)	 as 	chek_trxs_cashout,
			COALESCE(c.chek_mto_cashout,0)	 as 	chek_mto_cashout
	FROM (SELECT rut FROM schm_workspace.pmunoz_tablon_productos13 
	UNION SELECT rut FROM schm_workspace.pmunoz_tp_chek4 )AS a 
	LEFT JOIN  schm_workspace.pmunoz_tablon_productos13 AS b 
				on (a.rut=b.rut)
			LEFT JOIN  schm_workspace.pmunoz_tp_chek4 AS c 
				on (a.rut=c.rut)
	;


	--crear tabla vacia para llenar con informacion
	DELETE 
	FROM schm_data_analytics.mdpg_tablon_productos
	WHERE periodo=periodo_paso;


	INSERT INTO schm_data_analytics.mdpg_tablon_productos
	SELECT 
	periodo_paso as periodo,
	*
	FROM schm_workspace.pmunoz_tablon_productos14;


	/*DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_contratos;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_MPDT043;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_MPDT499;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_contratos2;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_contratos3;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_contratos4;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_contratos5;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_contratos_fin;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tp_tc;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tp_tc2;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tp_tc3;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_base_adicionales;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos1;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Stock_Cuenta_Vista;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Stock_Cuenta_Vista2;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_panes;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_panes2;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_TD;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Movs_TD;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_movs;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_TD2;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_SALDO_TD_1;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Saldo_TD;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_Saldo;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_TD3;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos2;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_DAP;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos3;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Stock_Cuenta_corriente	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Stock_Cuenta_corriente2	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_MOV_CUENTA_corriente	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_movs_CC	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_extraer_consumo1;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_extraer_consumo2;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CC	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CC2	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Saldos_CC	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Saldo_CC2	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_Saldo_CC	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CC3	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_rutero_Saldo_CC3	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos4	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos5;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_AV	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_SAV	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_PPFF	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos6	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos7	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos8	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_vista	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_vista2	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_vista3	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_seguros	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_seguros2	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos9	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos10	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Saldo_RP	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Canjes_RP	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_Acumulacion_RP	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_RPtos	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_trx_consumo	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos11	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos12	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos13	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CONS0	;	
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CONS	;	
    DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_PAT;
    DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos14	;
  	DROP TABLE IF EXISTS schm_workspace.pmunoz_Stock_Cuenta_Vista3;
 	DROP TABLE IF EXISTS schm_workspace.pmunoz_bank_accounts	;
 	DROP TABLE IF EXISTS schm_workspace.pmunoz_bank_accounts2	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CHEK	;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CHEK2;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CHEK3;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_TP_CHEK4;
	DROP TABLE IF EXISTS schm_workspace.pmunoz_tablon_productos15	;*/

	/*  ===========================================================================================================
	    === Control de versiones visual ===
	    2024-01-29 -- v02 -- Ale Marinao      	-- Se cambia a origen ppff_disponibles_tr en analytics y campo Mto_TRXs_TDA_pie
	    2024-01-09 -- v01 -- David Vásquez      -- Ajustes mínimos, nombre sp, normalización, etc.
	    2023-12-04 -- v00 -- Pedro Muñoz      	-- Versión original refactorizada.

	    === Información adicional:
	    Proceso que..
	    ===========================================================================================================
	*/

END; 



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_trx_mcchek(periodo_paso int4)
	LANGUAGE plpgsql
AS $$
	
	
	BEGIN
			
		DROP TABLE IF EXISTS schm_workspace.movimientos_mcchek_debito;
		DROP TABLE IF EXISTS schm_workspace.incoming;
		DROP TABLE IF EXISTS schm_workspace.incoming2;
		DROP TABLE IF EXISTS schm_workspace.movimientos_mcchek_debito3;
		DROP TABLE IF EXISTS schm_workspace.movimientos_mcchek_debito4;
		DROP TABLE IF EXISTS schm_workspace.movimientos_mcchek_debito5;
		DROP TABLE IF EXISTS schm_workspace.movimientos_mcchek_debito6;
		DROP TABLE IF EXISTS schm_workspace.movimientos_mcchek_debito7;


		CREATE TABLE schm_workspace.movimientos_mcchek_debito AS
		SELECT
			ROW_NUMBER() OVER(PARTITION BY date_part(YEAR, a.fectrn)* 100 + date_part(MONTH, a.fectrn)) AS ind,
			date_part(YEAR, a.fectrn)* 100 + date_part(MONTH, a.fectrn) AS periodo,
			CAST(a2.PEMID_GLS_NRO_DCT_IDE_K AS INT) RUT,
			a.CODENT,
			a.CENTALTA,
			a.CUENTA,
			a1.producto,
			a.codpais,
			a.localidad,
			a.fectrn AS fecha,
			a.hortrn,
			date_part(YEAR, a.fectrn)* 10000 + date_part(MONTH, a.fectrn)* 100 + date_part(DAY, a.fectrn) cod_fecha,
			a.CODACT,
			a.CODCOM,
			a.CODCOM Codigo_Comercio_ant,
			a.NOMCOM,
			a.imptrn VENTA_TARJETA,
			a.Tipfran,
			a.totcuotas,
			a.porint,
			a.tipofac,
			a.IMPCCA,
			a.CLAMONCCA,
			a.IMPDIV,
			a.INDCRUCE,
			substring(a.MODENTDAT, 1, 2) Ind_Online,
			a.NUMAUT,
			a3.DESACT RUBRO,
			a.codrespu,
			a.pan,
			a.indnorcor,
			a.siaidcd
		FROM
			br_dm_prod_bigdata_reporitf_db.mpdt004 a
		INNER JOIN br_dm_prod_bigdata_reporitf_db.MPDT007 a1
			--CONTRATO
		ON
			(A.CODENT = a1.CODENT)
			AND (A.CENTALTA = a1.CENTALTA)
			AND (A.CUENTA = a1.CUENTA)
		INNER JOIN br_dm_prod_bigdata_reporitf_db.BOPERS_MAE_IDE a2 
		ON
			CAST(A1.IDENTCLI AS int)= a2.PEMID_NRO_INN_IDE
		INNER JOIN br_dm_prod_bigdata_reporitf_db.MPDT039 a3
		ON
			(a.CODACT = a3.CODACT)
		WHERE
			a1.producto = '12'
			AND a.tipfran <> 1004
			AND a.periodo = periodo_paso
		;


		CREATE TABLE schm_workspace.incoming AS
		SELECT 
		distinct fecha
		        ,end_point
		        ,de42_card_acceptor_id_code
		        ,de38_codigo_de_aprobacion
		        ,de12_fecha_hora_transaccion
		        ,de2_numero_de_tarjeta
		        ,de63_transaction_life_cycle_id
		        ,de63_2_trace_id
		        ,de31_2_acquirer_s_bin
		        ,de3_1_tipo_de_transaccion
		        ,de43_1_nombre
		        ,de26_codigo_categoria_de_comercio_mcc
		        ,de4_monto_de_transaccion
		FROM br_dm_prod_bigdata_segcom_db.ipm_data
		WHERE 
			floor(de12_1_fecha/100)>=(floor(periodo_paso/100)-2000)*100+(periodo_paso-floor(periodo_paso/100)*100)
		;

		CREATE TABLE schm_workspace.incoming2 AS
		SELECT
			*
		FROM
			schm_workspace.incoming
		WHERE
			substring(de2_numero_de_tarjeta, 1, 6)= '525384'
		;

		CREATE TABLE schm_workspace.movimientos_mcchek_debito3 AS 
		SELECT
			b.*,
			a.de42_card_acceptor_id_code
		FROM
			schm_workspace.movimientos_mcchek_debito
		 AS b
		LEFT JOIN schm_workspace.incoming2 AS a
		ON
			(
		(b.numaut = a.de38_codigo_de_aprobacion)
				AND (a.de2_numero_de_tarjeta = b.pan)
		            )
			AND 

		(2000 + floor(a.de12_fecha_hora_transaccion / 10000000000))* 10000 +
		floor(a.de12_fecha_hora_transaccion / 1000000)-floor(a.de12_fecha_hora_transaccion / 10000000000)* 10000
		= b.cod_fecha
			AND a.de3_1_tipo_de_transaccion <> 20
		                ;
		               
		     CREATE TABLE schm_workspace.movimientos_mcchek_debito4 AS 
		SELECT
			a.*,
			b.cant
		FROM
			schm_workspace.movimientos_mcchek_debito3 AS a
		LEFT JOIN (
			SELECT
				periodo,
				ind,
				count(ind) AS cant
			FROM
				schm_workspace.movimientos_mcchek_debito3
			GROUP BY
				periodo,
				ind
		) AS b
		ON
			(a.periodo = b.periodo)
			AND a.ind = b.ind
		;
		            
		 
		CREATE TABLE schm_workspace.movimientos_mcchek_debito5 AS 
		SELECT
			*,
			1 AS repeticion
		FROM
			schm_workspace.movimientos_mcchek_debito4
		WHERE
			cant = 1
		UNION ALL 
		SELECT
			*
		FROM
			(
			SELECT
				*,
				ROW_NUMBER() OVER(PARTITION BY periodo,
				ind ) AS repeticion
			FROM
				schm_workspace.movimientos_mcchek_debito4
			WHERE
				cant>1
		)
			WHERE repeticion = 1
		;
		   
		  CREATE TABLE schm_workspace.movimientos_mcchek_debito6 AS 
		SELECT
			ind ,
			periodo,
			rut,
			codent,
			centalta,
			cuenta,
			producto,
			codpais,
			localidad,
			fecha ,
			hortrn,
			cod_fecha,
			codact ,
			COALESCE(de42_card_acceptor_id_code, codcom) AS codigo_comercio,
			codigo_comercio_ant,
			nomcom AS nombre_comercio,
			venta_tarjeta,
			tipfran,
			totcuotas,
			porint,
			tipofac ,
			impcca ,
			clamoncca,
			impdiv ,
			indcruce,
			ind_online,
			CASE
				WHEN ind_online IN ('81', '10') THEN 1
				ELSE 0
			END AS si_digital,
			numaut ,
			rubro AS actividad_comercio ,
			codrespu,
			pan,
			indnorcor,
			siaidcd
		FROM
			schm_workspace.movimientos_mcchek_debito5
		;
		   

		CREATE TABLE schm_workspace.movimientos_mcchek_debito7 AS 
		SELECT
			ind ,
			periodo,
			rut,
			codent,
			centalta,
			cuenta,
			producto,
			codpais,
			localidad,
			fecha ,
			hortrn,
			cod_fecha,
			codact,
			CASE
				WHEN len(TRIM(codigo_comercio))>0
				AND len(TRIM(codigo_comercio))>len(regexp_replace(TRIM(codigo_comercio), '([^0-9.])', '')) 
		THEN -1
				WHEN len(TRIM(codigo_comercio))>0
				AND len(TRIM(codigo_comercio))= len(regexp_replace(TRIM(codigo_comercio), '([^0-9.])', '')) 
		THEN CAST(codigo_comercio AS BIGINT)
				ELSE -1
			END AS codigo_comercio,
			codigo_comercio_ant,
			nombre_comercio,
			venta_tarjeta,
			tipfran,
			totcuotas,
			porint,
			tipofac ,
			impcca ,
			clamoncca,
			impdiv ,
			indcruce,
			ind_online,
			si_digital,
			numaut ,
			actividad_comercio ,
			codrespu,
			pan,
			indnorcor,
			siaidcd,
			CASE
				WHEN nombre_comercio LIKE '%RIPLEY%' THEN 'TNDA'
				ELSE 'SPOS'
			END AS tipo_movimiento,
			fecha AS fectrn,
			nombre_comercio AS NOMCOM
		FROM
			schm_workspace.movimientos_mcchek_debito6
		WHERE
			codrespu = '000'
		;


		DELETE
		FROM
			schm_data_analytics.mdpg_TRX_mcchek
		WHERE
			periodo = periodo_paso
		;
		 

		INSERT
			INTO
			schm_data_analytics.mdpg_TRX_mcchek   
		SELECT
			*
		FROM
			schm_workspace.movimientos_mcchek_debito7
		 ;

		DROP TABLE IF EXISTS schm_workspace.movimientos_mcchek_debito;
		DROP TABLE IF EXISTS schm_workspace.incoming;
		DROP TABLE IF EXISTS schm_workspace.incoming2;
		DROP TABLE IF EXISTS schm_workspace.movimientos_mcchek_debito3;
		DROP TABLE IF EXISTS schm_workspace.movimientos_mcchek_debito4;
		DROP TABLE IF EXISTS schm_workspace.movimientos_mcchek_debito5;
		DROP TABLE IF EXISTS schm_workspace.movimientos_mcchek_debito6;
		DROP TABLE IF EXISTS schm_workspace.movimientos_mcchek_debito7;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-10-10	-- v01	--	Pedro Muñoz	--	Versión original - Se refactoriza proceso en redshift para generar historia.

	=== Información adicional:
	Proceso que busca transacciones de débito con mastercard chek, en tienda y spos.
	===========================================================================================================
*/

	END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_mdpg_uso_tr_marca(indice int4)
	LANGUAGE plpgsql
AS $$
	
	


BEGIN

	DROP TABLE IF EXISTS  schm_workspace.iplaza_periodos_tr_marca_tr_marca;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_fecha;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_fecha_date;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_detalle_vtas_tda;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_sucursal;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_sku;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_detalle_articulo;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_detalle_articulo_3;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_boleta;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_data_loyalty_2;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_sb_mov_cuenta_vista2;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_mov_cuenta_vista_tda;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_mov_cuenta_corriente2;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_ccte_filtrada;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_marca_tipo_tr;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_canjes_opex_online;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_canjes_opex_tda;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_uso_tr_marca_first;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_uso_tr_marca_second;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_cascada_debito;


	--####################################################################################################
	--PARAMETROS
	--####################################################################################################
	create table schm_workspace.iplaza_periodos_tr_marca(
	nombre VARCHAR(64), value INT );

	INSERT INTO schm_workspace.iplaza_periodos_tr_marca (nombre,value)
	VALUES('PERIODO',DATE_PART(YEAR,dateadd(MONTH,-indice, CURRENT_DATE))*100+DATE_PART(MONTH,DATEADD(MONTH,-indice, current_date))),
		  ('PERIODO_ANT',DATE_PART(YEAR,dateadd(MONTH,-indice-1, CURRENT_DATE))*100+DATE_PART(MONTH,DATEADD(MONTH,-indice-1, current_date)))
	;


	create table schm_workspace.iplaza_fecha_date(
	nombre VARCHAR(64), value INTEGER );

	INSERT INTO schm_workspace.iplaza_fecha_date (nombre,value)
	VALUES('FECHA_INI_MES',REPLACE(TO_DATE(DATE_TRUNC('month', cast(dateadd(MONTH,-indice, CURRENT_DATE) as date)), 'YYYY/MM/DD'), '-', '')::INTEGER),
		 ('FECHA_FIN_MES',REPLACE(TO_DATE(last_day(dateadd(MONTH,-indice, CURRENT_DATE)), 'YYYY/MM/DD'), '-', '')::INTEGER)
	;


	--####################################################################################################
	--Extraer Base de ventas Tienda en &Periodo. con Variables Relevantes | SUCURSALES
	--####################################################################################################
	CREATE TABLE schm_workspace.iplaza_detalle_vtas_tda AS 
	SELECT
		schm_artifacts.f_period(trunc(DATEADD(MM,-indice,current_date))) AS periodo
		,ddmtd_fch_dia AS fecha
		,ddmtd_fch_dia
		,substring(ddmtd_fch_dia,7,2) AS dia_nro
		,(ddmsu_cod_suc-10000) AS sucursal
		,ddmar_cod_sku_art AS sku
		,ddmdt_rut_cli AS rut
		,dcmdt_rut_cpd AS rut_cpd
		,dcmdt_nro_uni AS nro_uni
		,CASE 
			WHEN dcmdt_cod_tip_trn=1 THEN 'COMPRA' 
			ELSE 'NOTA CREDITO' 
		END AS tipo_compra
		,ddmfp_cod_for_pag
		,CASE WHEN ddmfp_cod_for_pag=3 THEN 'TAR' ELSE 'OMP' END AS medio_pago
		,CASE WHEN ddmfp_cod_for_pag=3 THEN 'TR' 
			  WHEN ddmfp_cod_for_pag = 1 THEN 'EFECTIVO'
			  WHEN ddmfp_cod_for_pag = 2 THEN 'CHEQUES'
			  WHEN ddmfp_cod_for_pag IN (4, 15) THEN 'T_CREDITO'
			  WHEN ddmfp_cod_for_pag = 16 THEN 'DEBITO'
			  ELSE 'OTRA' 
		END AS forma_pago
		,dcmdt_cod_tip_trn AS tipo_trx
		,CASE WHEN (ddmsu_cod_suc-10000) = 39 THEN '.COM' 
			  ELSE 'TDA' END AS LUGAR
		,ddmsu_cod_suc||' '||ddmtd_fch_dia||' '||dcmdt_nro_tml||' '||dcmdt_nro_dct  AS boleta
		,CASE WHEN dcmdt_cod_tip_trn = 1 THEN 1
			  ELSE -1 END AS aux_tipo_trx
		,CASE WHEN dcmdt_cod_tip_trn=1 THEN ddmsu_cod_suc||'-'||ddmtd_fch_dia||'-'||dcmdt_nro_tml||'-'||dcmdt_nro_dct 
			          END AS bol_vta
		,CASE WHEN dcmdt_cod_tip_trn=3 THEN ddmsu_cod_suc||'-'||ddmtd_fch_dia||'-'||dcmdt_nro_tml||'-'||dcmdt_nro_dct
					  END AS bol_nc
		,dcmdt_nro_itm AS nro_item
		,dcmdt_mnt_pco_art-dcmdt_mnt_dst_bol-dcmdt_mnt_dst_art-dcmdt_klm_lan AS mto
		,dcmdt_mnt_cap AS capital
		,dcmdt_mag_fnr AS mag_fn
		,dcmdt_mag_cmc AS mag_cmc 
		FROM br_dm_prod_analytics_sybase_db.dcrm_cos_mov_trn_det_vta_art
		WHERE --concat("YEAR","MONTH"):: integer =(SELECT value FROM schm_workspace.iplaza_periodos_tr_marca WHERE nombre='PERIODO') AND
		dcmdt_cod_trn NOT IN (39,401,402,89,90,93)
		AND ddmsu_cod_suc NOT IN (10993,10990) 
		AND ddmsu_cod_neg=1
		AND dcmdt_cod_cmr_aso=1 
		AND dcmdt_cod_tip_trn IN (1,3)
		AND ddmtd_fch_dia>=(SELECT value FROM schm_workspace.iplaza_fecha_date WHERE nombre='FECHA_INI_MES')
		AND DDMTD_FCH_DIA<=(SELECT value FROM schm_workspace.iplaza_fecha_date WHERE nombre='FECHA_FIN_MES')
	;


	CREATE TABLE schm_workspace.iplaza_sucursal AS 
		SELECT 
			DISTINCT
			t3.camp_dat_valor1 AS codigo
			,t3.camp_dat_texto1 AS sucursal
		FROM br_dm_prod_bigdata_camreport_db.cbcamp_par_tablas t1
			INNER JOIN br_dm_prod_bigdata_camreport_db.cbcamp_par_columnas t2 
				ON (t1.camp_cod_tabla = t2.camp_cod_tabla_k)
			INNER JOIN br_dm_prod_bigdata_camreport_db.cbcamp_par_datos t3 
				ON (t1.camp_cod_tabla = t3.camp_cod_tabla_k)
		WHERE t1.camp_cod_tabla = 2
		ORDER BY t3.camp_dat_valor1
	;
	--QA -- SELECT * FROM schm_workspace.iplaza_sucursal LIMIT 10


	CREATE TABLE schm_workspace.iplaza_sku AS
	SELECT 
		t1.prv_productovta 
		,t1.sku
		,coalesce(t2.division,'SIN INF') AS division
		,t1.prd_depto
		,t1.dep_descripcion 
		,t1.prd_linea
		,t1.lin_descripcion
		,t1.mod_descripcion
		,t1.mar_descripcion
		,t1.prd_codestacion
	FROM schm_data_analytics.tnda_sku t1  /* SE DEBE ESPERAR CREAR LA TABLA PARA MODIFICAR */
	LEFT JOIN schm_facturacion.depto_div_retail t2 ON (t1.prd_depto=t2.cod_depto) /* esta igual debe ser cargada */
	WHERE t2.division NOT IN ('HOME IMPROVEMENT')
	;
	--QA -- SELECT * FROM schm_workspace.iplaza_sku LIMIT 10


	CREATE TABLE schm_workspace.iplaza_detalle_articulo AS 
	SELECT 
		t1.*
		,t2.prd_linea AS cod_linea
		,t2.lin_descripcion
		,t2.prd_codestacion
		,t2.mar_descripcion
		,t2.division AS nombre_division
		,t2.prd_depto AS cod_depto
		,(t2.prd_depto || '.-' || t2.dep_descripcion) AS departamento_fin
		,(t1.sucursal || '.-' || t3.sucursal) AS nombre_sucursal
	FROM schm_workspace.iplaza_detalle_vtas_tda  t1
	LEFT JOIN schm_workspace.iplaza_sku t2 
		ON (t1.sku=t2.sku) AND t2.prd_depto IS NOT NULL
	LEFT JOIN schm_workspace.iplaza_sucursal t3 
		ON (t1.sucursal=t3.codigo)
	;
	--QA -- SELECT * FROM schm_workspace.iplaza_detalle_articulo LIMIT 10  -- si hay datos


	CREATE TABLE schm_workspace.iplaza_detalle_articulo_3 AS 
	SELECT
		* 
		,CASE 
			WHEN nombre_division IN ('ELECTRONICA','TECNOLOGIA','DECOHOGAR') THEN 'DURO' 
			ELSE 'BLANDO' 
		END AS blando_duro 
	FROM schm_workspace.iplaza_detalle_articulo 
	;
	--QA -- SELECT * FROM schm_workspace.iplaza_detalle_articulo_3 LIMIT 10


	--####################################################################################################
	--COMO EN PRODUCTO=16 CAE TODO DEBITO SE CRUZA CON CHEK Y DEBITO PARA TENER UN PROXI DE LA VENTA
	--####################################################################################################
	CREATE TABLE schm_workspace.iplaza_boleta AS 
	SELECT 
		periodo
		,fecha
		,rut_cpd 
		,boleta 
		,lugar 
		,ddmfp_cod_for_pag 
		,sum(mto) AS mto
	FROM schm_workspace.iplaza_detalle_articulo_3 
	GROUP BY  
		periodo
		,fecha
		,rut_cpd
		,boleta
		,lugar
		,ddmfp_cod_for_pag
	ORDER BY 
		ddmfp_cod_for_pag
		,fecha ASC 
		,rut_cpd
		,mto ASC
	;
	--QA -- SELECT * FROM schm_workspace.iplaza_boleta LIMIT 10  -- si hay datos


	--####################################################################################################
	--Ver TRX de Check &Periodo.
	--####################################################################################################
	CREATE TABLE schm_workspace.iplaza_data_loyalty_2 AS
	SELECT 
		* 
		,(sucursal+10000 || ' ' || (REPLACE(TO_DATE(fecha, 'YYYY/MM/DD'), '-', '')::INTEGER) || ' ' || nro_caja::INTEGER || ' ' || nro_docto) AS boleta
		,CASE 
			WHEN  sucursal=39 THEN '.COM' 
			ELSE 'TDA' 
		END AS tda_online
		,codigo_unico AS id
	FROM br_dm_prod_bigdata_sqldwarehouse_db.trx_tarjetas_transbank
		WHERE DATE_PART(YEAR,dateadd(MONTH,-0, fecha))*100+DATE_PART(MONTH,DATEADD(MONTH,-0, fecha))=(SELECT value FROM schm_workspace.iplaza_periodos_tr_marca WHERE nombre='PERIODO')
			AND tipo_tar= 'D'
			AND marca_tar = 'RP'
	;


	--####################################################################################################
	--[05.2] Ver TRX de CV &Periodo.
	--####################################################################################################
	CREATE TABLE schm_workspace.iplaza_sb_mov_cuenta_vista2 AS
	SELECT 
		rut
		,fecha
		,compra_ripley
		,CASE 
			WHEN tmo_tipotra='D' THEN 
				CASE 
					WHEN descripcion IN ('COMPRA NACIONAL') THEN 'Compras Redcompra' 
					WHEN descripcion IN ('COMPRA NACIONAL MCD') THEN 'Compras Redcompra MCD' 
				     WHEN descripcion IN ('COMPRA INTERNACIONAL') THEN 'Compras Internacionales' 
					WHEN descripcion IN ('COMPRA INTERNACIONAL MCD') THEN 'Compras Internacionales MCD' 
					WHEN descripcion IN ('CARGO POR PEC') THEN 'PEC' 
					WHEN descripcion IN ('GIRO CAJERO AUTOMATICO') THEN 'Giros ATM' 
					WHEN descripcion IN ('GIRO POR CAJA') THEN 'Giros Caja' 
					WHEN descripcion IN ('GIRO INTERNACIONAL') THEN 'Giro Internacional' 
					WHEN descripcion IN ('TRANSFERENCIA A OTROS BANCOS') THEN 'TEF emitidas Otros Bancos'
					WHEN descripcion IN ('PAGO TARJETA DE CREDITO') THEN 'Pago de Tarjeta' 
					WHEN descripcion IN ('A CUENTA BANCO RIPLEY','POR TRASPASO A CUENTA')  THEN 'Pago LCA' 
					WHEN descripcion IN ('COSTO DE MANTENCION MENSUAL CUENTA VISTA') THEN 'Comision planes' 
			 		ELSE 'OTROS CARGOS' 
			 	END ELSE ''
			END AS descripcion_cargo 
	FROM 
	( 
	SELECT 
		cli_identifica AS rut
		,c1.tmo_fech AS fecha 
		,c1.rub_desc AS descripcion 
		,c1.tmo_tipotra 
		,(
			SELECT 
				cod_destra 
				FROM br_dm_prod_bigdata_fisa_db.tgen_codtrans 
				WHERE cod_tra = tmo_codtra AND cod_mod = tmo_codmod 
		)AS gls_transac
		,CASE 
			WHEN c1.tmo_tipotra='D' 
				AND (c1.con_libre LIKE '%Ripley%' OR c1.con_libre LIKE '%RIPLEY%') 
				AND  c1.con_libre NOT LIKE '%PAGO%' THEN 'COMPRA_RIPLEY' 
				ELSE ''
			END AS COMPRA_RIPLEY
	FROM (
		SELECT
			*
		FROM  br_dm_prod_bigdata_fisa_db.tcap_tramon /*base de movimientos*/ 
		   	 ,br_dm_prod_bigdata_fisa_db.tgen_tranrubro /*base descriptiva (para complementar movimientos)*/ 
		   	 ,br_dm_prod_bigdata_fisa_db.tcap_concepto /*base descriptiva (para complementar movimientos)*/ 
		WHERE rub_mod    = tmo_codmod /*unificacion de base de movs con rubro*/ 
		AND rub_tra      = tmo_codtra /*unificacion de base de movs con rubro*/ 
		AND rub_rubro    = tmo_rubro /*unificacion de base de movs con rubro*/ 
		AND con_modulo(+)  = tmo_codmod /*unificacion de base de movs con con_*/ 
		AND con_rubro(+)   = tmo_rubro /*unificacion de base de movs con con_*/ 
		AND con_numtran(+) = tmo_numtra /*unificacion de base de movs con con_*/ 
		AND con_cuenta (+) = tmo_numcue /*unificacion de base de movs con con_*/ 
		AND con_codusr(+)  = tmo_codusr /*unificacion de base de movs con con_*/ 
		AND con_sec(+)     = tmo_sec /*unificacion de base de movs con con_*/ 
		AND con_transa(+)  = tmo_codtra /*unificacion de base de movs con con_*/ 
		/*FILTROS DE MOVIMIENTOS*/ 
		AND tmo_tipotra in ('D','C') /*D=Cargo, C=Abono*/ 
		AND tmo_codpro = 4 
		AND tmo_codtip = 1 
		AND tmo_modo = 'N' 
		AND tmo_val > 1 /*solo montos mayores a 1 peso (mov de prueba)*/ 
		AND REPLACE(TO_DATE(tmo_fech, 'YYYY/MM/DD'), '-', '')::INTEGER >= (SELECT value FROM schm_workspace.iplaza_fecha_date WHERE nombre='FECHA_INI_MES')
		AND REPLACE(TO_DATE(tmo_fech, 'YYYY/MM/DD'), '-', '')::INTEGER <= (SELECT value FROM schm_workspace.iplaza_fecha_date WHERE nombre='FECHA_FIN_MES')
		/*FINAL: QUERY DESDE OPERACIONES*/ 
		)  C1  
		LEFT JOIN ( 
		SELECT 
			DISTINCT 
			cli_identifica 
			,vis_numcue  
		FROM br_dm_prod_bigdata_fisa_db.tcli_persona /*MAESTRA DE CLIENTES BANCO*/ 
			,br_dm_prod_bigdata_fisa_db.tcap_vista /*SALDOS CUENTAS VISTAS */ 
		WHERE cli_codigo=vis_codcli 
		  AND vis_mod=4/*cuenta vista*/ 
		  AND (VIS_PRO=4/*CV*/ or VIS_PRO=40/*LCA*/) 
		  AND vis_tip=1  /*persona no juridica*/ 
		  AND (vis_status='2' or vis_status='9') /*solo aquellas con estado vigente o cerrado*/ 
		)  C2 
		ON (c1.tmo_numcue=c2.vis_numcue) 
		WHERE c1.tmo_tipotra='D'
	)
	;
	--QA -- SELECT * FROM schm_workspace.iplaza_sb_mov_cuenta_vista2 LIMIT 10 


	CREATE TABLE schm_workspace.iplaza_mov_cuenta_vista_tda  AS
	SELECT 
		rut
		,compra_ripley
		,descripcion_cargo
		,REPLACE(fecha::TEXT, '-', '')::INTEGER AS fec_num
	FROM schm_workspace.iplaza_sb_mov_cuenta_vista2
	WHERE compra_ripley='COMPRA_RIPLEY' AND descripcion_cargo NOT IN ('Pago LCA')
	;
	--QA -- SELECT * FROM schm_workspace.iplaza_mov_cuenta_vista_tda LIMIT 10


	CREATE TABLE schm_workspace.iplaza_mov_cuenta_corriente2  AS
		SELECT 
			rut
			,fecha
			,codfecha
			,compra_ripley
			,CASE WHEN tmo_tipotra='D' THEN 
			CASE WHEN descripcion IN ('COMPRA NACIONAL CTA CTE') THEN 'Compras Redcompra' 
				 WHEN descripcion IN ('COMPRA INTERNACIONAL CTA CTE') THEN 'Compras Internacionales' 
				 WHEN descripcion IN ('CARGO POR PEC') THEN 'PEC' 
				 WHEN descripcion IN ('GIRO ATM INTERNACIONAL CTA CTE') THEN 'Giros internacional CTA CTE'
				 WHEN descripcion IN ('GIRO ATM NACIONAL CTA CTE') THEN 'Giros ATM CTA CTE'
				 WHEN descripcion IN ('GIRO POR CAJA') THEN 'Giros Caja'
			  	 WHEN descripcion IN ('TRANSFERENCIA A OTROS BANCOS') THEN 'TEF emitidas Otros Bancos'
				 WHEN descripcion IN ('PAGO TARJETA DE CREDITO') THEN 'Pago de Tarjeta' 
				 WHEN descripcion IN ('A CUENTA BANCO RIPLEY','POR TRASPASO A CUENTA')  THEN 'Pago LCA'
				 WHEN  descripcion IN ('COSTO DE MANTENCION MENSUAL CTA CTE') THEN 'Comision planes'
			 	 WHEN descripcion IN ('IVA COSTO DE MANTENCION MENSUAL CTA CTE') THEN 'IVA Com cta cte'	
			ELSE 'OTROS CARGOS' 
			END ELSE ''
			END AS descripcion_cargo 
		FROM
		( 
			SELECT 
				cli_identifica AS rut
				,CAST(TO_CHAR( c1.tmo_fech,'YYYYMMDD') AS INT) AS codfecha
				,c1.tmo_fech AS fecha 
				,c1.rub_desc AS descripcion 
				,c1.tmo_tipotra, 
			(
				SELECT
					cod_destra 
				FROM br_dm_prod_bigdata_fisa_db.tgen_codtrans  
				WHERE cod_tra = tmo_codtra 
					AND cod_mod = tmo_codmod 
			) AS gls_transac,
			CASE 
				WHEN c1.tmo_tipotra='D' 
					AND (c1.con_libre LIKE '%Ripley%' OR c1.con_libre LIKE '%RIPLEY%') 
					AND  c1.con_libre NOT LIKE '%PAGO%' 
				THEN 'COMPRA_RIPLEY' ELSE ''
			END AS COMPRA_RIPLEY
			FROM(
				SELECT
					* 
				FROM  br_dm_prod_bigdata_fisa_db.tcap_tramon /*base de movimientos*/ 
				   	 ,br_dm_prod_bigdata_fisa_db.tgen_tranrubro /*base descriptiva (para complementar movimientos)*/ 
				   	 ,br_dm_prod_bigdata_fisa_db.tcap_concepto /*base descriptiva (para complementar movimientos)*/   
				WHERE rub_mod    = tmo_codmod /*unificacion de base de movs con rubro*/ 
					AND rub_tra      = tmo_codtra /*unificacion de base de movs con rubro*/ 
					AND rub_rubro    = tmo_rubro /*unificacion de base de movs con rubro*/ 
					AND con_modulo(+)  = tmo_codmod /*unificacion de base de movs con con_*/ 
					AND con_rubro(+)   = tmo_rubro /*unificacion de base de movs con con_*/ 
					AND con_numtran(+) = tmo_numtra /*unificacion de base de movs con con_*/ 
					AND con_cuenta (+) = tmo_numcue /*unificacion de base de movs con con_*/ 
					AND con_codusr(+)  = tmo_codusr /*unificacion de base de movs con con_*/ 
					AND con_sec(+)     = tmo_sec /*unificacion de base de movs con con_*/ 
					AND con_transa(+)  = tmo_codtra /*unificacion de base de movs con con_*/ 
					/*FILTROS DE MOVIMIENTOS*/ 
					AND tmo_tipotra in ('D','C') /*D=Cargo, C=Abono*/ 
					AND tmo_codmod=4
					AND tmo_codpro = 1 
					AND tmo_codtip = 1 
					AND tmo_modo = 'N' 
					AND tmo_val >= 1 /*solo montos mayores a 1 peso (mov de prueba)*/ 
					AND REPLACE(TO_DATE(tmo_fech, 'YYYY/MM/DD'), '-', '')::INTEGER >= (SELECT value FROM schm_workspace.iplaza_fecha_date WHERE nombre='FECHA_INI_MES')
					AND REPLACE(TO_DATE(tmo_fech, 'YYYY/MM/DD'), '-', '')::INTEGER <= (SELECT value FROM schm_workspace.iplaza_fecha_date WHERE nombre='FECHA_FIN_MES')
				/*FINAL: QUERY DESDE OPERACIONES*/ 
				)  C1  
			LEFT JOIN ( 
			SELECT 
			DISTINCT 
			cli_identifica,
			vis_numcue  
			FROM br_dm_prod_bigdata_fisa_db.tcli_persona /*MAESTRA DE CLIENTES BANCO*/ 
				,br_dm_prod_bigdata_fisa_db.tcap_vista /*SALDOS CUENTAS VISTAS */ 
			WHERE cli_codigo=vis_codcli 
			AND vis_mod=4/*cuenta vista, CUENTA */ 
			AND (VIS_PRO=1/*CC*/  ) 
			AND vis_tip=1  /*persona no juridica*/ 
			AND (vis_status='2' OR vis_status='9') /*solo aquellas con estado vigente o cerrado*/ 
			)  C2 
			ON (c1.tmo_numcue=c2.vis_numcue) 
		) 
	;
	--QA -- SELECT * FROM schm_workspace.iplaza_mov_cuenta_corriente2 LIMIT 10


	CREATE TABLE schm_workspace.iplaza_ccte_filtrada AS
		SELECT 
			rut
			,REPLACE(fecha::TEXT, '-', '')::INTEGER AS fec_num
			,compra_ripley
			,descripcion_cargo
		FROM schm_workspace.iplaza_mov_cuenta_corriente2
			WHERE compra_ripley='COMPRA_RIPLEY' 
			AND descripcion_cargo='Compras Redcompra'
	;
	--QA -- SELECT * FROM schm_workspace.iplaza_ccte_filtrada LIMIT 10 


	--####################################################################################################
	--[06] Marcar el tipo de Debito &Periodo.
	--####################################################################################################
	CREATE TABLE schm_workspace.iplaza_cascada_debito  AS
		SELECT DISTINCT a.* 
			,CASE 
				WHEN (a.boleta=t1.boleta AND a.lugar='.COM') THEN 'CHECK'
				WHEN (a.boleta=t4.boleta AND a.lugar='TDA') THEN 'CHECK'
				WHEN (a.rut_cpd=t2.rut AND a.rut_cpd>1 AND a.fecha=t2.fec_num) THEN 'MCD RIPLEY'
				WHEN (a.rut_cpd=t3.rut AND a.rut_cpd>1 AND a.fecha=t3.fec_num) THEN 'DEBITO RIPLEY'
				WHEN (a.rut_cpd=t5.rut AND a.rut_cpd>1 AND a.fecha=t5.fec_num) THEN 'CUENTA CORRIENTE RIPLEY'
				ELSE 'OTRAS DEBITO' 
			END AS tipo_debito
		FROM schm_workspace.iplaza_boleta a 
			LEFT JOIN  (SELECT DISTINCT boleta FROM schm_workspace.iplaza_data_loyalty_2 WHERE tda_online='.COM' )t1 
				ON (a.boleta=t1.boleta and a.lugar='.COM')
			LEFT JOIN  (SELECT DISTINCT boleta FROM schm_workspace.iplaza_data_loyalty_2 WHERE tda_online='TDA' )t4 
				ON (a.boleta=t4.boleta AND a.lugar='TDA')
			LEFT JOIN  (SELECT DISTINCT rut, fec_num FROM schm_workspace.iplaza_mov_cuenta_vista_tda WHERE descripcion_cargo='Compras Redcompra MCD' ) t2 
				ON (a.rut_cpd=t2.rut AND a.fecha=t2.fec_num)
			LEFT JOIN  (SELECT DISTINCT rut, fec_num FROM schm_workspace.iplaza_mov_cuenta_vista_tda WHERE descripcion_cargo<>'Compras Redcompra MCD') t3 
				ON (a.rut_cpd=t3.rut AND a.fecha=t3.fec_num)
			LEFT JOIN  (SELECT DISTINCT rut, fec_num FROM schm_workspace.iplaza_ccte_filtrada ) t5 
				ON (a.rut_cpd=t5.rut AND a.fecha=t5.fec_num) /* EN REVISION */
		WHERE a.ddmfp_cod_for_pag=16
	;
	--QA -- SELECT * FROM schm_workspace.iplaza_cascada_debito LIMIT 10
	

	--####################################################################################################
	--[07] Insertar MARCA DE TIPO TARJETA &Periodo.
	--####################################################################################################
	CREATE TABLE schm_workspace.iplaza_marca_tipo_tr AS 
	SELECT
		a.* 
		,CASE WHEN a.forma_pago='DEBITO' THEN b.tipo_debito ELSE 'otro' END AS tipo_debito
	FROM schm_workspace.iplaza_detalle_articulo_3 a 
	LEFT JOIN schm_workspace.iplaza_cascada_debito b ON ((a.rut_cpd=b.rut_cpd) AND (a.fecha=b.fecha) AND (a.boleta=b.boleta) AND a.ddmfp_cod_for_pag=16)
	;
	--QA -- SELECT * FROM schm_workspace.iplaza_marca_tipo_tr LIMIT 10


	CREATE TABLE schm_workspace.iplaza_uso_tr_marca_first AS
		SELECT *
			,CASE 
				WHEN  forma_pago='DEBITO' 
				THEN tipo_debito
				ELSE forma_pago 
			END AS marca_tipo_tr
		FROM schm_workspace.iplaza_marca_tipo_tr
	;
	--QA -- SELECT * FROM schm_workspace.iplaza_uso_tr_marca_first LIMIT 10


	--####################################################################################################
	--[08] MARCAR VENTAS CON OPEX
	--####################################################################################################
	CREATE TABLE schm_workspace.iplaza_canjes_opex_online AS 
	SELECT 
		DISTINCT (boleta || '-' || nro_item::TEXT) AS llave
	FROM  schm_data_analytics.clts_opex_canjesop
	WHERE tipo_codigo<>'CANJE' AND codigo_sucursal=39 
	ORDER BY llave
	;


	CREATE TABLE schm_workspace.iplaza_canjes_opex_tda AS 
	SELECT 
		DISTINCT (boleta || '-' || nro_item::TEXT) AS llave
	FROM schm_data_analytics.clts_opex_canjesop
	where tipo_codigo<>'CANJE' and codigo_sucursal<>39 
	ORDER BY  llave
	;


	CREATE TABLE schm_workspace.iplaza_uso_tr_marca_second AS
	SELECT 
		a.* 
		,CASE WHEN (((a.boleta || '-' || a.nro_item)=b.llave) AND (a.sucursal<>39) AND a.medio_pago='TAR') THEN 1 ELSE 0 END AS opex_tda
		,CASE WHEN (((a.boleta || '-' || a.nro_item)=c.llave)  AND (a.sucursal=39) AND a.medio_pago='TAR') THEN 1 ELSE 0 END AS opex_online
	FROM schm_workspace.iplaza_uso_tr_marca_first a /* revisar */
	LEFT JOIN schm_workspace.iplaza_canjes_opex_tda b ON (((a.boleta || '-' || a.nro_item)=b.llave) AND (a.sucursal<>39) AND a.medio_pago='TAR')
	LEFT JOIN schm_workspace.iplaza_canjes_opex_online c ON (((a.boleta || '-' || a.nro_item)=c.llave)  AND (a.sucursal=39) AND a.medio_pago='TAR')
	WHERE a.nro_item>0
	;
	--QA -- SELECT * FROM schm_workspace.iplaza_uso_tr_marca_second LIMIT 10


	--#########################################################
	--BORRADO DEL PERIODO
	--#########################################################	
	DELETE 
	FROM schm_data_analytics.mdpg_uso_tr_marca
	WHERE periodo=(SELECT value FROM schm_workspace.iplaza_periodos_tr_marca WHERE nombre='PERIODO')
	;


	--#########################################################
	--INSERTAR PERIODO
	--#########################################################	
	INSERT INTO schm_data_analytics.mdpg_uso_tr_marca
	SELECT
		a.periodo::integer
		,a.fecha
		,a.ddmtd_fch_dia
		,a.dia_nro::integer
		,a.sucursal
		,a.sku
		,a.rut
		,a.rut_cpd
		,a.nro_uni
		,a.tipo_compra
		,a.ddmfp_cod_for_pag
		,a.medio_pago
		,a.forma_pago
		,a.tipo_trx
		,a.lugar
		,a.boleta
		,a.aux_tipo_trx
		,a.bol_vta
		,a.bol_nc
		,a.nro_item
		,a.mto
		,a.capital
		,a.mag_fn
		,a.mag_cmc
		,a.cod_linea
		,a.lin_descripcion
		,a.prd_codestacion
		,a.mar_descripcion
		,a.nombre_division
		,a.cod_depto
		,a.departamento_fin
		,a.nombre_sucursal
		,a.blando_duro
		,a.tipo_debito
		,a.marca_tipo_tr
		,a.opex_tda
		,a.opex_online 
		,CASE WHEN a.opex_tda=1 THEN 'OPEX_TDA' WHEN a.opex_online=1  THEN 'OPEX.COM' ELSE 'NO OPEX' END AS opex
		,COALESCE(b.segmento_final,'SIN INFORMACION') AS segmento
	FROM schm_workspace.iplaza_uso_tr_marca_second a 
		LEFT JOIN (SELECT * FROM br_dm_prod_analytics_ripley_puntos_db.segmento_comercial_cierre 
						WHERE periodo=(SELECT value FROM schm_workspace.iplaza_periodos_tr_marca 
										   	WHERE nombre='PERIODO')
				) b 
		ON a.rut=b.rut /*&PERIODO NLAGOSG*/
	;


	--####################################################################################################
	--BORRADO DE TABLAS
	--####################################################################################################
	DROP TABLE IF EXISTS  schm_workspace.iplaza_periodos_tr_marca;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_fecha;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_fecha_date;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_detalle_vtas_tda;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_sucursal;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_sku;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_detalle_articulo;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_detalle_articulo_3;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_boleta;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_data_loyalty_2;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_sb_mov_cuenta_vista2;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_mov_cuenta_vista_tda;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_mov_cuenta_corriente2;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_ccte_filtrada;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_marca_tipo_tr;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_canjes_opex_online;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_canjes_opex_tda;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_uso_tr_marca_first;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_uso_tr_marca_second;
	DROP TABLE IF EXISTS  schm_workspace.iplaza_cascada_debito;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2024-01-29	-- v13	--	David Vásquez     --	Se cambia tabla en work iplaza_periodos por iplaza_periodos_tr_marca, por conflictos en la ejecución.
	2024-01-24	-- v12	--	Ignacio Plaza     --	Se actualiza campo cli_identifica.
	2024-01-16	-- v11	--	David Vásquez     --	Se actualiza fuente de sasdata a data_analytics.
	2024-01-15	-- v10	--	David Vásquez     --	se cambia periodo para que quede correctamente en la tabla.
	2024-01-15	-- v09	--	Ignacio Plaza     --	Se comenta filtro en primera query.
	2023-10-29	-- v08	--	David Vásquez     --	Se cambia campo periodo de string a integer en insert final.
	2023-10-29	-- v07	--	David Vásquez     --	Se cambia tipos de fecha en otras partes del código + orden del mismo.
	2023-10-26	-- v06	--	David Vásquez     --	Se cambia tipos de datos fecha para hacer cruces en tabla inicial.
	2023-10-26	-- v05	--	David Vásquez     --	Se cambia origen de tabla sybase.
	2023-10-25	-- v04	--	David Vásquez     --	Se actualiza tipo de dato fecha, de date a integer.
	2023-10-25	-- v03	--	David Vásquez     --	Se actualiza tabla depto_div_retail apuntando a schm_facturacion ya que es una tabla fija.
	2023-10-25	-- v02	--	David Vásquez     --	Se actualiza tabla sku apuntando a schm_data_analytics.tnda_sku.
	2023-05-26	-- v01	--	Ignacio Plaza     --	Versión refactorizada.

	=== Información adicional:
	Proceso que...
	===========================================================================================================
*/

END; 





$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_banco_secundario()
	LANGUAGE plpgsql
AS $$
	
	

BEGIN   

	DROP TABLE IF EXISTS schm_workspace.ppff_tefs_paso_x;
	DROP TABLE IF EXISTS schm_workspace.ppff_tefs_paso_x2;
	DROP TABLE IF EXISTS schm_workspace.ppff_tefs_paso_x3;
	DROP TABLE IF EXISTS schm_workspace.ppff_tefs;
	DROP TABLE IF EXISTS schm_workspace.tefs2;
	DROP TABLE IF EXISTS schm_workspace.ppff_bankFreq ;
	DROP TABLE IF EXISTS schm_workspace.ppff_maxFechas;
	DROP TABLE IF EXISTS schm_workspace.ppff_mesesEntre;
	DROP TABLE IF EXISTS schm_workspace.ppff_FechaBank;
	DROP TABLE IF EXISTS schm_workspace.ppff_montosTrx;
	DROP TABLE IF EXISTS schm_workspace.tefs3;
	DROP TABLE IF EXISTS schm_workspace.tefs4;
	DROP TABLE IF EXISTS schm_workspace.tefs5;
	DROP TABLE IF EXISTS schm_workspace.tefs6_max_por_banco;
	DROP TABLE IF EXISTS schm_workspace.tefs7_sum_max_por_banco;
	DROP TABLE IF EXISTS schm_workspace.tefs8_max;
	DROP TABLE IF EXISTS schm_workspace.tefs_ppff_final;


	CREATE TABLE schm_workspace.ppff_tefs_paso_x AS
	SELECT 
		'br_dm_prod_bigdata_fisa_db.botef_mov_trn_ifo' AS base_procedencia,
		'tefs_emisor_bco_ripley' AS base_descripcion,
		cast(mtifo_nro_cta_ore AS DECIMAL(25,0)) AS nro_cta_origen,
		mtifo_run_cli_ore AS rut_origen,
		pbco_ided_fk AS cod_bco_origen,
		TO_CHAR(mtifo_fch_ing_trs, 'YYYYMMDD')::integer as fecha_tef,
		schm_artifacts.f_period(mtifo_fch_ing_trs) as periodo, 
		mtifo_gls_mot_orc_trs AS mensaje_tef,
		mtifo_mnt_orc_trs AS monto_tef,
		mtifo_nro_cta_dtn AS nro_cta_destino,
		mtifo_run_cli_dtn AS rut_destino,
		pbco_ide_fk AS cod_bco_destino
		FROM br_dm_prod_bigdata_fisa_db.botef_mov_trn_ifo
		WHERE mtifo_flg_est_trs = 2
			AND mtifo_gls_mot_orc_trs != 'PAGO TRX'
			AND mtifo_fch_ing_trs >= schm_artifacts.f_first_day(DATEADD(month, -6, current_date)::DATE)
			AND mtifo_fch_ing_trs <=  schm_artifacts.f_last_day_given_period(schm_artifacts.f_period(current_date)-1);


	CREATE TABLE schm_workspace.ppff_tefs_paso_x2 AS -- 3 min
	SELECT 
		'br_dm_prod_bigdata_fisa_db.botef_mov_trn_ifr' AS base_procedencia,
		'tefs_receptor_bco_ripley' AS base_descripcion,
		CAST(ifr.mtifr_nro_cta_ore AS DECIMAL(25,0)) AS nro_cta_origen,
		ifr.mtifr_run_cli_ore AS rut_origen,
		ifr.pbco_ide_fk AS cod_bco_origen,
		TO_CHAR(ifr.mtifr_fch_ing_trs, 'YYYYMMDD')::integer as fecha_tef,
		schm_artifacts.f_period(ifr.mtifr_fch_ing_trs) as periodo,
		ifr.mtifr_gls_mot_orc_trs AS mensaje_tef,
		ifr.mtifr_mnt_orc_trs AS monto_tef,
		ifr.mtifr_nro_cta_dtn AS nro_cta_destino,
		ifr.mtifr_run_cli_dtn AS rut_destino,
		ifr.pbco_ided_fk AS cod_bco_destino
		FROM br_dm_prod_bigdata_fisa_db.botef_mov_trn_ifr ifr
		WHERE ifr.mtifr_flg_est_trs = 2
			AND ifr.mtifr_fch_ing_trs >= schm_artifacts.f_first_day(DATEADD(month, -6, current_date)::DATE)
			AND ifr.mtifr_fch_ing_trs <= schm_artifacts.f_last_day_given_period(schm_artifacts.f_period(current_date)-1);

/*SELECT * FROM br_dm_prod_bigdata_fisa_db.botef_mov_trn_ifr 
 * WHERE mtifr_run_cli_ore in (2813456,2896944,2651245,2479437,2400690)= 17457765

SELECT * FROM br_dm_prod_bigdata_fisa_db.botef_mov_trn_ifr 
WHERE mtifr_run_cli_ore = 1603223--in (2813456,2896944,2651245,2479437,2400690)

SELECT count(1), mtifr_fch_ing_trs
FROM br_dm_prod_bigdata_fisa_db.botef_mov_trn_ifr ifr
		WHERE ifr.mtifr_flg_est_trs = 2
			AND ifr.mtifr_fch_ing_trs >= schm_artifacts.f_first_day(DATEADD(month, -6, current_date)::DATE)
			AND ifr.mtifr_fch_ing_trs <= schm_artifacts.f_last_day_given_period(schm_artifacts.f_period(current_date)-1)
GROUP BY mtifr_fch_ing_trs
ORDER BY mtifr_fch_ing_trs DESC*/

--SELECT schm_artifacts.f_first_day(DATEADD(month, -6, current_date)::DATE)

	CREATE TABLE schm_workspace.ppff_tefs_paso_x3 AS -- 1 min
		SELECT * FROM schm_workspace.ppff_tefs_paso_x
		UNION
		SELECT * FROM schm_workspace.ppff_tefs_paso_x2
	;

--SELECT * FROM schm_workspace.ppff_tefs_paso_x3 WHERE rut_origen  = 1603223in (2813456,2896944,2651245,2479437,2400690)= 17457765

	CREATE TABLE schm_workspace.ppff_tefs AS -- 10 seg
		SELECT
		periodo
		, nro_cta_origen
		, rut_origen
		, CASE
			WHEN cod_bco_origen=504 THEN 'BBVA'
			WHEN cod_bco_origen=16 THEN 'BCI'
			WHEN cod_bco_origen=28 THEN 'BICE'
			WHEN cod_bco_origen=1 THEN 'BCH'
			WHEN cod_bco_origen=55 THEN 'Consorcio'
			WHEN cod_bco_origen=672 THEN 'COOPEUCH'
			WHEN cod_bco_origen=27 THEN 'CorpBanca'
			WHEN cod_bco_origen=507 THEN 'Desarrollo'
			WHEN cod_bco_origen=12 THEN 'Estado'
			WHEN cod_bco_origen=51 THEN 'Falabella'
			WHEN cod_bco_origen=9 THEN 'Internacional'
			WHEN cod_bco_origen=39 THEN 'Itau'
			WHEN cod_bco_origen=53 THEN 'Ripley'
			WHEN cod_bco_origen=37 THEN 'Santander'
			WHEN cod_bco_origen=14 THEN 'ScotiaBank'
			WHEN cod_bco_origen=49 THEN 'Security'
			ELSE 'Otros'  
		END AS bco_origen
		, fecha_tef AS fecha
		, monto_tef AS monto
		, mensaje_tef AS mensaje
		, nro_cta_destino
		, rut_destino
		, CASE
			WHEN cod_bco_destino=504 THEN 'BBVA'
			WHEN cod_bco_destino=16  THEN 'BCI'
			WHEN cod_bco_destino=28  THEN 'BICE'
			WHEN cod_bco_destino=1   THEN 'BCH'
			WHEN cod_bco_destino=55  THEN 'Consorcio'
			WHEN cod_bco_destino=672 THEN 'COOPEUCH'
			WHEN cod_bco_destino=27  THEN 'CorpBanca'
			WHEN cod_bco_destino=507 THEN 'Desarrollo'
			WHEN cod_bco_destino=12  THEN 'Estado'
			WHEN cod_bco_destino=51  THEN 'Falabella'
			WHEN cod_bco_destino=9   THEN 'Internacional'
			WHEN cod_bco_destino=39  THEN 'Itau'
			WHEN cod_bco_destino=53  THEN 'Ripley'
			WHEN cod_bco_destino=37  THEN 'Santander'
			WHEN cod_bco_destino=14  THEN 'ScotiaBank'
			WHEN cod_bco_destino=49  THEN 'Security'
			ELSE 'Otros'
		END AS bco_destino
		FROM schm_workspace.ppff_tefs_paso_x3;

--SELECT * FROM schm_workspace.ppff_tefs WHERE rut_origen  = 1603223in (2813456,2896944,2651245,2479437,2400690)= 17457765

	CREATE TABLE schm_workspace.tefs2 AS -- 20 seg
		SELECT
		periodo
		, rut
		, banco 
		, COUNT(*) AS nro_trxs
		, COUNT(DISTINCT fecha) AS nro_dias_distintos
		, COUNT(DISTINCT FLOOR (fecha/100)) AS frecuencia
		, SUM(monto) AS monto_trxs
		, max(floor(fecha/100)) AS max_fecha
		FROM 
			(
			SELECT
				periodo
				, rut_origen AS rut
				, bco_origen AS banco
				, fecha 
				, monto
			FROM schm_workspace.ppff_tefs 
			UNION
			SELECT 
				periodo
				, rut_destino AS rut
				, bco_destino AS banco
				, fecha
				, monto
			FROM schm_workspace.ppff_tefs
			) as x
		GROUP BY rut, banco, periodo;

--SELECT * FROM schm_workspace.tefs2 WHERE rut  = 1603223= 17457765

	CREATE TABLE schm_workspace.ppff_bankFreq as
		SELECT 
		periodo
		, rut
		, MAX(CASE WHEN banco = 'BBVA' THEN frecuencia else 0 END) as f_bbva
		, MAX(CASE WHEN banco = 'BICE' THEN frecuencia else 0 END) as f_bice
		, MAX(CASE WHEN banco = 'BCI' THEN frecuencia else 0 END) as f_bci
		, MAX(CASE WHEN banco = 'BCH' THEN frecuencia else 0 END) as f_bch
		, MAX(CASE WHEN banco = 'Consorcio' THEN frecuencia else 0 END) as f_consorcio
		, MAX(CASE WHEN banco = 'COOPEUCH' THEN frecuencia else 0 END) as f_coopeuch
		, MAX(CASE WHEN banco = 'CorpBanca' THEN frecuencia else 0 END) as f_corpbanca 
		, MAX(CASE WHEN banco = 'Desarrollo' THEN frecuencia else 0 END) as f_desarrollo
		, MAX(CASE WHEN banco = 'Estado' THEN frecuencia else 0 END) as f_estado
		, MAX(CASE WHEN banco = 'Falabella' THEN frecuencia else 0 END) as f_falabella
		, MAX(CASE WHEN banco = 'Internacional' THEN frecuencia else 0 END) as f_internacional
		, MAX(CASE WHEN banco = 'Itau' THEN frecuencia else 0 END) as f_itau
		, MAX(CASE WHEN banco = 'Ripley' THEN frecuencia else 0 END) as f_ripley
		, MAX(CASE WHEN banco = 'Santander' THEN frecuencia else 0 END) as f_Santander
		, MAX(CASE WHEN banco = 'ScotiaBank' THEN frecuencia else 0 END) as f_scotiabank
		, MAX(CASE WHEN banco = 'Security' THEN frecuencia else 0 END) as f_security
		, MAX(CASE WHEN banco = 'Otros' THEN frecuencia else 0 END) as f_otros
		FROM schm_workspace.tefs2 
	group by rut, periodo;

--SELECT * FROM schm_workspace.ppff_bankFreq WHERE rut  = 1603223= 17457765

	CREATE TABLE schm_workspace.ppff_maxFechas as
	SELECT 
		periodo
		, rut
		, max(CASE WHEN banco='BBVA' THEN max_fecha ELSE 0 end)::integer  as fecha_bbva
		, max(CASE WHEN banco='BICE' THEN max_fecha ELSE 0 end)::integer as fecha_bice
		, max(CASE WHEN banco='BCI' THEN max_fecha ELSE 0 end)::integer as fecha_bci
		, max(CASE WHEN banco='BCH' THEN max_fecha ELSE 0 end)::integer as fecha_bch
		, max(CASE WHEN banco='Consorcio' THEN max_fecha ELSE 0 end)::integer as fecha_consorcio
		, max(CASE WHEN banco='COOPEUCH' THEN max_fecha ELSE 0 end)::integer as fecha_coopeuch
		, max(CASE WHEN banco='CorpBanca' THEN max_fecha ELSE 0 end)::integer as fecha_corpbanca
		, max(CASE WHEN banco='Desarrollo' THEN max_fecha ELSE 0 end)::integer as fecha_desarrollo
		, max(CASE WHEN banco='Estado' THEN max_fecha ELSE 0 end)::integer as fecha_estado
		, max(CASE WHEN banco='Falabella' THEN max_fecha ELSE 0 end)::integer as fecha_falabella
		, max(CASE WHEN banco='Internacional' THEN max_fecha ELSE 0  end)::integer as fecha_internacional
		, max(CASE WHEN banco='Itau' THEN max_fecha ELSE 0 end)::integer as fecha_itau
		, max(CASE WHEN banco='Ripley' THEN max_fecha ELSE 0 end)::integer as fecha_ripley
		, max(CASE WHEN banco='Santander' THEN max_fecha ELSE 0 end)::integer as fecha_santander
		, max(CASE WHEN banco='ScotiaBank' THEN max_fecha ELSE 0 end)::integer as fecha_scotiabank
		, max(CASE WHEN banco='Security' THEN max_fecha ELSE 0 end)::integer as fecha_security
		, max(CASE WHEN banco='Otros' THEN max_fecha ELSE 0 end)::integer as fecha_otros
		FROM schm_workspace.tefs2
		GROUP BY rut, periodo;


	CREATE TABLE schm_workspace.ppff_FechaBank as
	SELECT a.*
	, b.fecha_bbva
	, b.fecha_bice 
	, b.fecha_bci 
	, b.fecha_bch 
	, b.fecha_consorcio 
	, b.fecha_coopeuch 
	, b.fecha_corpbanca 
	, b.fecha_desarrollo 
	, b.fecha_estado 
	, b.fecha_falabella 
	, b.fecha_internacional 
	, b.fecha_itau 
	, b.fecha_ripley 
	, b.fecha_santander 
	, b.fecha_scotiabank 
	, b.fecha_security 
	, b.fecha_otros 
	FROM schm_workspace.ppff_bankFreq  a 
	LEFT JOIN schm_workspace.ppff_maxFechas b
	ON a.rut = b.rut AND a.periodo = b.periodo;


   CREATE TABLE schm_workspace.ppff_mesesEntre as -- demora menos de 1 minuto
	SELECT	
		periodo
		, rut
		, CASE WHEN fecha_bbva = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_bbva as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_bbva
		, CASE WHEN fecha_bch = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_bch as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_bch
		, CASE WHEN fecha_bci = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_bci as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_bci
		, CASE WHEN fecha_bice = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_bice as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_bice
		, CASE WHEN fecha_consorcio = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_consorcio as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_consorcio
		, CASE WHEN fecha_coopeuch = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_coopeuch as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_coopeuch
		, CASE WHEN fecha_corpbanca = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_corpbanca  as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_corpbanca
		, CASE WHEN fecha_desarrollo = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_desarrollo as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_desarrollo
		, CASE WHEN fecha_estado = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_estado as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_estado
		, CASE WHEN fecha_falabella = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_falabella as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_falabella
		, CASE WHEN fecha_internacional = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_internacional as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_internacional
		, CASE WHEN fecha_itau = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_itau as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_itau
		, CASE WHEN fecha_ripley = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_ripley as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_ripley
		, CASE WHEN fecha_santander = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_santander as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_Santander
		, CASE WHEN fecha_scotiabank = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_scotiabank as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_scotiabank
		, CASE WHEN fecha_security = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_security as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_security
		, CASE WHEN fecha_otros = 0 THEN 0 else schm_artifacts.f_meses_entre(cast(fecha_otros as integer), schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))) end as r_otros
		FROM schm_workspace.ppff_FechaBank
	;


   CREATE TABLE schm_workspace.ppff_montosTrx AS
   SELECT
   periodo
   	,rut
   	, MAX(CASE WHEN banco='BCH' THEN monto_trxs else 0 end) as m_bch
    , MAX(CASE WHEN banco='Santander' THEN monto_trxs else 0 end) as m_Santander
    , MAX(CASE WHEN banco='Estado' THEN monto_trxs else 0 end) as m_estado
    , MAX(CASE WHEN banco='BCI' THEN monto_trxs else 0 end) as m_bci
    , MAX(CASE WHEN banco='BICE' THEN monto_trxs else 0 end) as m_bice
    , MAX(CASE WHEN banco='Itau' THEN monto_trxs else 0 end) as m_itau
    , MAX(CASE WHEN banco='Security' THEN monto_trxs else 0 end) as m_security
    , MAX(CASE WHEN banco='BBVA' THEN monto_trxs else 0 end) as m_bbva
    , MAX(CASE WHEN banco='ScotiaBank' THEN monto_trxs else 0 end) as m_scotiabank
    , MAX(CASE WHEN banco='CorpBanca' THEN monto_trxs else 0 end) as m_corpbanca
    , MAX(CASE WHEN banco='Falabella' THEN monto_trxs else 0 end) as m_falabella
    , MAX(CASE WHEN banco='Ripley' THEN monto_trxs else 0 end) as m_ripley
    , MAX(CASE WHEN banco='Consorcio' THEN monto_trxs else 0 end) as m_consorcio
    , MAX(CASE WHEN banco='COOPEUCH' THEN monto_trxs else 0 end) as m_coopeuch
    , MAX(CASE WHEN banco='Desarrollo' THEN monto_trxs else 0 end) as m_desarrollo
    , MAX(CASE WHEN banco='Internacional' THEN monto_trxs else 0 end) as m_internacional
    , MAX(CASE WHEN banco='Otros' THEN monto_trxs else 0 end) as m_otros
    FROM (
	    SELECT
		        periodo
		        , rut
		        , banco
		        , SUM(monto_trxs) as monto_trxs
		    FROM schm_workspace.tefs2
		    GROUP BY rut, banco, periodo
		) AS subquery
	GROUP BY rut, periodo;


	CREATE TABLE schm_workspace.tefs3 as 
		SELECT 
		a.periodo
	    ,a.rut
	    ,a.f_bbva 
	    ,a.f_bice 
	    ,a.f_bci 
	    ,a.f_bch 
	    ,a.f_consorcio 
	    ,a.f_coopeuch 
	    ,a.f_corpbanca 
	    ,a.f_desarrollo 
	    ,a.f_estado 
	    ,a.f_falabella 
	    ,a.f_internacional 
	    ,a.f_itau 
	    ,a.f_ripley 
	    ,a.f_santander 
	    ,a.f_scotiabank 
	    ,a.f_security 
	    ,a.f_otros 
	    ,b.r_bbva
	    ,b.r_bch
	    ,b.r_bci
	    ,b.r_bice
	    ,b.r_consorcio
	    ,b.r_coopeuch
	    ,b.r_corpbanca
	    ,b.r_desarrollo
	    ,b.r_estado
	    ,b.r_falabella
	    ,b.r_internacional
	    ,b.r_itau
	    ,b.r_ripley
	    ,b.r_santander
	    ,b.r_scotiabank
	    ,b.r_security
	    ,b.r_otros
	    ,c.m_bch::integer
	    ,c.m_santander::integer
	    ,c.m_estado::integer
	    ,c.m_bci::integer
	    ,c.m_bice::integer
	    ,c.m_itau::integer
	    ,c.m_security::integer
	    ,c.m_bbva::integer
	    ,c.m_scotiabank::integer
	    ,c.m_corpbanca::integer
	    ,c.m_falabella::integer
	    ,c.m_ripley::integer
	    ,c.m_consorcio::integer
	    ,c.m_coopeuch::integer
	    ,c.m_desarrollo::integer
	    ,c.m_internacional::integer
	    ,c.m_otros::integer 
	    FROM schm_workspace.ppff_bankFreq a
	    left join schm_workspace.ppff_mesesEntre b on a.rut = b.rut AND a.periodo = b.periodo
	    left join schm_workspace.ppff_montostrx c on a.rut = c.rut AND a.periodo = c.periodo
	;


	CREATE TABLE schm_workspace.tefs4 AS
	SELECT
		  periodo
		, rut
		,	round(0.5 * schm_artifacts.f_valor_interpolado(f_santander,1,0,6,0,1)+
					0.3 * schm_artifacts.f_valor_interpolado(r_santander,1,6,0,0,1)+
					0.2 * schm_artifacts.f_valor_interpolado(m_santander,1,0,20000*6,0,1)
				, 3)	AS  indicador_Santander
		,	round(0.5 * schm_artifacts.f_valor_interpolado(f_estado,1,0,6,0,1)+
					0.3 * schm_artifacts.f_valor_interpolado(r_estado,1,6,0,0,1)+
					0.2 * schm_artifacts.f_valor_interpolado(m_estado,1,0,20000*6,0,1)
				, 3)	AS  indicador_estado
		, 	round(0.5 * schm_artifacts.f_valor_interpolado(f_bci,1,0,6,0,1) +
					0.3 * schm_artifacts.f_valor_interpolado(r_bci,1,6,0,0,1) +
					0.2 * schm_artifacts.f_valor_interpolado(m_bci,1,0,20000*6,0,1)
				, 3)	AS  indicador_bci
		,	round(0.5 * schm_artifacts.f_valor_interpolado(f_bch,1,0,6,0,1) +
					0.3 * schm_artifacts.f_valor_interpolado(r_bch,1,6,0,0,1) +
					0.2 * schm_artifacts.f_valor_interpolado(m_bch,1,0,20000*6,0,1)
				, 3)	AS  indicador_bch
		,	round(0.5 * schm_artifacts.f_valor_interpolado(f_bice,1,0,6,0,1) +
					0.3 * schm_artifacts.f_valor_interpolado(r_bice,1,6,0,0,1) +
					0.2 * schm_artifacts.f_valor_interpolado(m_bice,1,0,20000*6,0,1)
				, 3)	AS  indicador_bice
		,	round(0.5 * schm_artifacts.f_valor_interpolado(f_itau,1,0,6,0,1)+
					0.3 * schm_artifacts.f_valor_interpolado(r_itau,1,6,0,0,1)+
					0.2 * schm_artifacts.f_valor_interpolado(m_itau,1,0,20000*6,0,1)
				, 3)	AS  indicador_itau
		,	round(0.5 * schm_artifacts.f_valor_interpolado(f_security,1,0,6,0,1) +
					0.3 * schm_artifacts.f_valor_interpolado(r_security,1,6,0,0,1) +
					0.2 * schm_artifacts.f_valor_interpolado(m_security,1,0,20000*6,0,1)
				, 3)	AS  indicador_security
		,	round(0.5 * schm_artifacts.f_valor_interpolado(f_bbva,1,0,6,0,1) +
					0.3 * schm_artifacts.f_valor_interpolado(r_bbva,1,6,0,0,1) +
					0.2 * schm_artifacts.f_valor_interpolado(m_bbva,1,0,20000*6,0,1)
				, 3)	AS  indicador_bbva
		,	round(0.5 * schm_artifacts.f_valor_interpolado(f_scotiabank,1,0,6,0,1)+
					0.3 * schm_artifacts.f_valor_interpolado(r_scotiabank,1,6,0,0,1)+
					0.2 * schm_artifacts.f_valor_interpolado(m_scotiabank,1,0,20000*6,0,1)
				, 3)	AS  indicador_scotiabank
		,	round(0.5 * schm_artifacts.f_valor_interpolado(f_corpbanca,1,0,6,0,1) +
					0.3 * schm_artifacts.f_valor_interpolado(r_corpbanca,1,6,0,0,1) +
					0.2 * schm_artifacts.f_valor_interpolado(m_corpbanca,1,0,20000*6,0,1)
				, 3)	AS  indicador_corpbanca
		,	round( 0.5 * schm_artifacts.f_valor_interpolado(f_falabella,1,0,6,0,1) +
					0.3 * schm_artifacts.f_valor_interpolado(r_falabella,1,6,0,0,1) +
					0.2 * schm_artifacts.f_valor_interpolado(m_falabella,1,0,20000*6,0,1)
				, 3)	AS  indicador_falabella
		,	round(0.5 * schm_artifacts.f_valor_interpolado(f_ripley,1,0,6,0,1) +
					0.3 * schm_artifacts.f_valor_interpolado(r_ripley,1,6,0,0,1) +
					0.2 * schm_artifacts.f_valor_interpolado(m_ripley,1,0,20000*6,0,1)
				, 3)	AS  indicador_ripley
		,	round(0.5 * schm_artifacts.f_valor_interpolado(f_consorcio,1,0,6,0,1) +
					0.3 * schm_artifacts.f_valor_interpolado(r_consorcio,1,6,0,0,1) +
					0.2 * schm_artifacts.f_valor_interpolado(m_consorcio,1,0,20000*6,0,1)
				, 3)	AS  indicador_consorcio
		,	round(0.5 * schm_artifacts.f_valor_interpolado(f_coopeuch,1,0,6,0,1) +
					0.3 * schm_artifacts.f_valor_interpolado(r_coopeuch,1,6,0,0,1) +
					0.2 * schm_artifacts.f_valor_interpolado(m_coopeuch,1,0,20000*6,0,1)
				, 3)	AS  indicador_coopeuch
		,	round(0.5 * schm_artifacts.f_valor_interpolado(f_desarrollo,1,0,6,0,1) +
					0.3 * schm_artifacts.f_valor_interpolado(r_desarrollo,1,6,0,0,1) +
					0.2 * schm_artifacts.f_valor_interpolado(m_desarrollo,1,0,20000*6,0,1)
				, 3)	AS  indicador_desarrollo
		,	round(0.5 * schm_artifacts.f_valor_interpolado(f_internacional,1,0,6,0,1) +
					0.3 * schm_artifacts.f_valor_interpolado(r_internacional,1,6,0,0,1) +
					0.2 * schm_artifacts.f_valor_interpolado(m_internacional,1,0,20000*6,0,1)
				, 3)	AS indicador_internacional
		,	round(0.5 * schm_artifacts.f_valor_interpolado(f_otros,1,0,6,0,1) +
					0.3 * schm_artifacts.f_valor_interpolado(r_otros,1,6,0,0,1) +
					0.2 * schm_artifacts.f_valor_interpolado(m_otros,1,0,20000*6,0,1)
				, 3)	AS  indicador_otros
	FROM schm_workspace.tefs3;

--SELECT * FROM schm_workspace.tefs4 WHERE rut = 17457765

--DROP TABLE schm_workspace.tefs5

--SELECT * FROM schm_workspace.tefs3 WHERE rut = 17457765

    CREATE TABLE schm_workspace.tefs5 as
    SELECT 
		schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date))) AS periodo
		,rut
		,indicador_santander
		,indicador_estado
		,indicador_bci
		,indicador_bch
		,indicador_bice
		,indicador_itau
		,indicador_security
		,indicador_bbva
		,indicador_scotiabank
		,indicador_corpbanca
		,indicador_falabella
		,indicador_ripley
		,indicador_consorcio
		,indicador_coopeuch
		,indicador_desarrollo
		,indicador_internacional
		,indicador_otros
		,
		case
		WHEN
		indicador_bch>0 AND 
		indicador_bch>=indicador_bch AND 
		indicador_bch>=indicador_Santander AND 
		indicador_bch>=indicador_estado AND 
		indicador_bch>=indicador_bci AND 
		indicador_bch>=indicador_bice AND 
		indicador_bch>=indicador_itau AND 
		indicador_bch>=indicador_security AND
		indicador_bch>=indicador_bbva AND 
		indicador_bch>=indicador_scotiabank AND 
		indicador_bch>=indicador_corpbanca AND 
		indicador_bch>=indicador_falabella AND 
		indicador_bch>=indicador_consorcio AND 
		indicador_bch>=indicador_coopeuch AND 
		indicador_bch>=indicador_desarrollo AND 
		indicador_bch>=indicador_internacional AND 
		indicador_bch>=indicador_otros
		THEN 'BCH'
		WHEN
		indicador_Santander>0 AND 
		indicador_Santander>=indicador_bch AND 
		indicador_Santander>=indicador_Santander AND 
		indicador_Santander>=indicador_estado AND 
		indicador_Santander>=indicador_bci AND 
		indicador_Santander>=indicador_bice AND 
		indicador_Santander>=indicador_itau AND 
		indicador_Santander>=indicador_security AND 
		indicador_Santander>=indicador_bbva AND 
		indicador_Santander>=indicador_scotiabank AND 
		indicador_Santander>=indicador_corpbanca AND 
		indicador_Santander>=indicador_falabella AND 
		indicador_Santander>=indicador_consorcio AND 
		indicador_Santander>=indicador_coopeuch AND 
		indicador_Santander>=indicador_desarrollo AND 
		indicador_Santander>=indicador_internacional AND 
		indicador_Santander>=indicador_otros
		THEN 'Santander'
		WHEN
		indicador_estado>0 AND 
		indicador_estado>=indicador_bch AND 
		indicador_estado>=indicador_Santander AND 
		indicador_estado>=indicador_estado AND 
		indicador_estado>=indicador_bci AND 
		indicador_estado>=indicador_bice AND 
		indicador_estado>=indicador_itau AND 
		indicador_estado>=indicador_security AND 
		indicador_estado>=indicador_bbva AND 
		indicador_estado>=indicador_scotiabank AND 
		indicador_estado>=indicador_corpbanca AND 
		indicador_estado>=indicador_falabella AND 
		indicador_estado>=indicador_consorcio AND 
		indicador_estado>=indicador_coopeuch AND 
		indicador_estado>=indicador_desarrollo AND 
		indicador_estado>=indicador_internacional AND 
		indicador_estado>=indicador_otros
		THEN 'Estado'
		WHEN
		indicador_bci>0 AND 
		indicador_bci>=indicador_bch AND 
		indicador_bci>=indicador_Santander AND 
		indicador_bci>=indicador_estado AND 
		indicador_bci>=indicador_bci AND 
		indicador_bci>=indicador_bice AND 
		indicador_bci>=indicador_itau AND 
		indicador_bci>=indicador_security AND 
		indicador_bci>=indicador_bbva AND 
		indicador_bci>=indicador_scotiabank AND 
		indicador_bci>=indicador_corpbanca AND 
		indicador_bci>=indicador_falabella AND 
		indicador_bci>=indicador_consorcio AND 
		indicador_bci>=indicador_coopeuch AND 
		indicador_bci>=indicador_desarrollo AND 
		indicador_bci>=indicador_internacional AND 
		indicador_bci>=indicador_otros
		THEN 'BCI'
		WHEN
		indicador_bice>0 AND 
		indicador_bice>=indicador_bch AND 
		indicador_bice>=indicador_Santander AND 
		indicador_bice>=indicador_estado AND 
		indicador_bice>=indicador_bci AND 
		indicador_bice>=indicador_bice AND 
		indicador_bice>=indicador_itau AND 
		indicador_bice>=indicador_security AND 
		indicador_bice>=indicador_bbva AND 
		indicador_bice>=indicador_scotiabank AND 
		indicador_bice>=indicador_corpbanca AND 
		indicador_bice>=indicador_falabella AND 
		indicador_bice>=indicador_consorcio AND 
		indicador_bice>=indicador_coopeuch AND 
		indicador_bice>=indicador_desarrollo AND 
		indicador_bice>=indicador_internacional AND 
		indicador_bice>=indicador_otros
		THEN 'BICE'
		WHEN
		indicador_itau>0 AND 
		indicador_itau>=indicador_bch AND 
		indicador_itau>=indicador_Santander AND 
		indicador_itau>=indicador_estado AND 
		indicador_itau>=indicador_bci AND 
		indicador_itau>=indicador_bice AND 
		indicador_itau>=indicador_itau AND 
		indicador_itau>=indicador_security AND 
		indicador_itau>=indicador_bbva AND 
		indicador_itau>=indicador_scotiabank AND 
		indicador_itau>=indicador_corpbanca AND 
		indicador_itau>=indicador_falabella AND 
		indicador_itau>=indicador_consorcio AND 
		indicador_itau>=indicador_coopeuch AND 
		indicador_itau>=indicador_desarrollo AND 
		indicador_itau>=indicador_internacional AND 
		indicador_itau>=indicador_otros
		THEN 'Itau'
		WHEN
		indicador_security>0 AND 
		indicador_security>=indicador_bch AND 
		indicador_security>=indicador_Santander AND 
		indicador_security>=indicador_estado AND 
		indicador_security>=indicador_bci AND 
		indicador_security>=indicador_bice AND 
		indicador_security>=indicador_itau AND 
		indicador_security>=indicador_security AND 
		indicador_security>=indicador_bbva AND 
		indicador_security>=indicador_scotiabank AND 
		indicador_security>=indicador_corpbanca AND 
		indicador_security>=indicador_falabella AND 
		indicador_security>=indicador_consorcio AND 
		indicador_security>=indicador_coopeuch AND 
		indicador_security>=indicador_desarrollo AND 
		indicador_security>=indicador_internacional AND 
		indicador_security>=indicador_otros
		THEN 'Security'
		WHEN
		indicador_bbva>0 AND 
		indicador_bbva>=indicador_bch AND 
		indicador_bbva>=indicador_Santander AND 
		indicador_bbva>=indicador_estado AND 
		indicador_bbva>=indicador_bci AND 
		indicador_bbva>=indicador_bice AND 
		indicador_bbva>=indicador_itau AND 
		indicador_bbva>=indicador_security AND 
		indicador_bbva>=indicador_bbva AND 
		indicador_bbva>=indicador_scotiabank AND 
		indicador_bbva>=indicador_corpbanca AND 
		indicador_bbva>=indicador_falabella AND 
		indicador_bbva>=indicador_consorcio AND 
		indicador_bbva>=indicador_coopeuch AND 
		indicador_bbva>=indicador_desarrollo AND 
		indicador_bbva>=indicador_internacional AND 
		indicador_bbva>=indicador_otros
		THEN 'BBVA'
		WHEN
		indicador_scotiabank>0 AND 
		indicador_scotiabank>=indicador_bch AND 
		indicador_scotiabank>=indicador_Santander AND 
		indicador_scotiabank>=indicador_estado AND 
		indicador_scotiabank>=indicador_bci AND 
		indicador_scotiabank>=indicador_bice AND 
		indicador_scotiabank>=indicador_itau AND 
		indicador_scotiabank>=indicador_security AND 
		indicador_scotiabank>=indicador_bbva AND 
		indicador_scotiabank>=indicador_scotiabank AND 
		indicador_scotiabank>=indicador_corpbanca AND 
		indicador_scotiabank>=indicador_falabella AND 
		indicador_scotiabank>=indicador_consorcio AND 
		indicador_scotiabank>=indicador_coopeuch AND 
		indicador_scotiabank>=indicador_desarrollo AND 
		indicador_scotiabank>=indicador_internacional AND 
		indicador_scotiabank>=indicador_otros
		THEN 'ScotiaBank'
		WHEN
		indicador_corpbanca>0 AND 
		indicador_corpbanca>=indicador_bch AND 
		indicador_corpbanca>=indicador_Santander AND 
		indicador_corpbanca>=indicador_estado AND 
		indicador_corpbanca>=indicador_bci AND 
		indicador_corpbanca>=indicador_bice AND 
		indicador_corpbanca>=indicador_itau AND 
		indicador_corpbanca>=indicador_security AND 
		indicador_corpbanca>=indicador_bbva AND 
		indicador_corpbanca>=indicador_scotiabank AND 
		indicador_corpbanca>=indicador_corpbanca AND 
		indicador_corpbanca>=indicador_falabella AND 
		indicador_corpbanca>=indicador_consorcio AND 
		indicador_corpbanca>=indicador_coopeuch AND 
		indicador_corpbanca>=indicador_desarrollo AND 
		indicador_corpbanca>=indicador_internacional AND 
		indicador_corpbanca>=indicador_otros
		THEN 'CorpBanca'
		WHEN
		indicador_falabella>0 AND 
		indicador_falabella>=indicador_bch AND 
		indicador_falabella>=indicador_Santander AND 
		indicador_falabella>=indicador_estado AND 
		indicador_falabella>=indicador_bci AND 
		indicador_falabella>=indicador_bice AND 
		indicador_falabella>=indicador_itau AND 
		indicador_falabella>=indicador_security AND 
		indicador_falabella>=indicador_bbva AND 
		indicador_falabella>=indicador_scotiabank AND 
		indicador_falabella>=indicador_corpbanca AND 
		indicador_falabella>=indicador_falabella AND 
		indicador_falabella>=indicador_consorcio AND 
		indicador_falabella>=indicador_coopeuch AND 
		indicador_falabella>=indicador_desarrollo AND 
		indicador_falabella>=indicador_internacional AND 
		indicador_falabella>=indicador_otros
		THEN 'Falabella'
		WHEN
		indicador_consorcio>0 AND 
		indicador_consorcio>=indicador_bch AND 
		indicador_consorcio>=indicador_Santander AND 
		indicador_consorcio>=indicador_estado AND 
		indicador_consorcio>=indicador_bci AND 
		indicador_consorcio>=indicador_bice AND 
		indicador_consorcio>=indicador_itau AND 
		indicador_consorcio>=indicador_security AND 
		indicador_consorcio>=indicador_bbva AND 
		indicador_consorcio>=indicador_scotiabank AND 
		indicador_consorcio>=indicador_corpbanca AND 
		indicador_consorcio>=indicador_falabella AND 
		indicador_consorcio>=indicador_consorcio AND 
		indicador_consorcio>=indicador_coopeuch AND 
		indicador_consorcio>=indicador_desarrollo AND 
		indicador_consorcio>=indicador_internacional AND 
		indicador_consorcio>=indicador_otros
		THEN 'Consorcio'
		WHEN
		indicador_coopeuch>0 AND 
		indicador_coopeuch>=indicador_bch AND 
		indicador_coopeuch>=indicador_Santander AND 
		indicador_coopeuch>=indicador_estado AND 
		indicador_coopeuch>=indicador_bci AND 
		indicador_coopeuch>=indicador_bice AND 
		indicador_coopeuch>=indicador_itau AND 
		indicador_coopeuch>=indicador_security AND 
		indicador_coopeuch>=indicador_bbva AND 
		indicador_coopeuch>=indicador_scotiabank AND 
		indicador_coopeuch>=indicador_corpbanca AND 
		indicador_coopeuch>=indicador_falabella AND 
		indicador_coopeuch>=indicador_consorcio AND 
		indicador_coopeuch>=indicador_coopeuch AND 
		indicador_coopeuch>=indicador_desarrollo AND 
		indicador_coopeuch>=indicador_internacional AND 
		indicador_coopeuch>=indicador_otros
		THEN 'COOPEUCH'
		WHEN
		indicador_desarrollo>0 AND 
		indicador_desarrollo>=indicador_bch AND 
		indicador_desarrollo>=indicador_Santander AND 
		indicador_desarrollo>=indicador_estado AND 
		indicador_desarrollo>=indicador_bci AND 
		indicador_desarrollo>=indicador_bice AND 
		indicador_desarrollo>=indicador_itau AND 
		indicador_desarrollo>=indicador_security AND 
		indicador_desarrollo>=indicador_bbva AND 
		indicador_desarrollo>=indicador_scotiabank AND 
		indicador_desarrollo>=indicador_corpbanca AND 
		indicador_desarrollo>=indicador_falabella AND 
		indicador_desarrollo>=indicador_consorcio AND 
		indicador_desarrollo>=indicador_coopeuch AND 
		indicador_desarrollo>=indicador_desarrollo AND 
		indicador_desarrollo>=indicador_internacional AND 
		indicador_desarrollo>=indicador_otros
		THEN 'Desarrollo'
		WHEN
		indicador_internacional>0 AND 
		indicador_internacional>=indicador_bch AND 
		indicador_internacional>=indicador_Santander AND 
		indicador_internacional>=indicador_estado AND 
		indicador_internacional>=indicador_bci AND 
		indicador_internacional>=indicador_bice AND 
		indicador_internacional>=indicador_itau AND 
		indicador_internacional>=indicador_security AND 
		indicador_internacional>=indicador_bbva AND 
		indicador_internacional>=indicador_scotiabank AND 
		indicador_internacional>=indicador_corpbanca AND 
		indicador_internacional>=indicador_falabella AND 
		indicador_internacional>=indicador_consorcio AND 
		indicador_internacional>=indicador_coopeuch AND 
		indicador_internacional>=indicador_desarrollo AND 
		indicador_internacional>=indicador_internacional AND 
		indicador_internacional>=indicador_otros
		THEN 'Internacional'
		WHEN
		indicador_otros>0 AND 
		indicador_otros>=indicador_bch AND 
		indicador_otros>=indicador_santander AND 
		indicador_otros>=indicador_estado AND 
		indicador_otros>=indicador_bci AND 
		indicador_otros>=indicador_bice AND 
		indicador_otros>=indicador_itau AND 
		indicador_otros>=indicador_security AND 
		indicador_otros>=indicador_bbva AND 
		indicador_otros>=indicador_scotiabank AND 
		indicador_otros>=indicador_corpbanca AND 
		indicador_otros>=indicador_falabella AND 
		indicador_otros>=indicador_consorcio AND 
		indicador_otros>=indicador_coopeuch AND 
		indicador_otros>=indicador_desarrollo AND 
		indicador_otros>=indicador_internacional AND 
		indicador_otros>=indicador_otros
		THEN 'Otros'
		else 'Otros'
		end as banco_secundario,
		CASE WHEN indicador_bch>0 THEN 1 else 0 end+
		CASE WHEN indicador_santander>0 THEN 1 else 0 end+
		CASE WHEN indicador_estado>0 THEN 1 else 0 end+
		CASE WHEN indicador_bci>0 THEN 1 else 0 end+
		CASE WHEN indicador_bice>0 THEN 1 else 0 end+
		CASE WHEN indicador_itau>0 THEN 1 else 0 end+
		CASE WHEN indicador_security>0 THEN 1 else 0 end+
		CASE WHEN indicador_bbva>0 THEN 1 else 0 end+
		CASE WHEN indicador_scotiabank>0 THEN 1 else 0 end+
		CASE WHEN indicador_corpbanca>0 THEN 1 else 0 end+
		CASE WHEN indicador_falabella>0 THEN 1 else 0 end+
		CASE WHEN indicador_consorcio>0 THEN 1 else 0 end+
		CASE WHEN indicador_coopeuch>0 THEN 1 else 0 end+
		CASE WHEN indicador_desarrollo>0 THEN 1 else 0 end+
		CASE WHEN indicador_internacional>0 THEN 1 else 0 end+
		CASE WHEN indicador_otros>0 THEN 1 else 0 end 
		as nro_bancos
        FROM schm_workspace.tefs4
        WHERE nro_bancos > 0;


	CREATE TABLE schm_workspace.tefs6_max_por_banco as
		SELECT
			MAX(indicador_santander) as indicador_santander
			,MAX(indicador_estado)  as indicador_estado
			,MAX(indicador_bci)  as indicador_bci
			,MAX(indicador_bch)  as indicador_bch
			,MAX(indicador_bice)  as indicador_bice
			,MAX(indicador_itau)  as indicador_itau
			,MAX(indicador_security)  as indicador_security
			,MAX(indicador_bbva)  as indicador_bbva
			,MAX(indicador_scotiabank)  as indicador_scotiabank
			,MAX(indicador_corpbanca)  as indicador_corpbanca
			,MAX(indicador_falabella)  as indicador_falabella
			,MAX(indicador_ripley)  as indicador_ripley
			,MAX(indicador_consorcio)  as indicador_consorcio
			,MAX(indicador_coopeuch)  as indicador_coopeuch
			,MAX(indicador_desarrollo)  as indicador_desarrollo
			,MAX(indicador_internacional)  as indicador_internacional
			,MAX(indicador_otros)  as indicador_otros
			,nro_bancos
			,periodo
			,rut
			,banco_secundario
		FROM schm_workspace.tefs5
		GROUP BY nro_bancos, periodo,rut,banco_secundario
	ORDER BY banco_secundario
	;


	CREATE TABLE schm_workspace.tefs7_sum_max_por_banco as
		SELECT
			SUM(indicador_santander) as indicador_santander
			,SUM(indicador_estado)  as indicador_estado
			,SUM(indicador_bci)  as indicador_bci
			,SUM(indicador_bch)  as indicador_bch
			,SUM(indicador_bice)  as indicador_bice
			,SUM(indicador_itau)  as indicador_itau
			,SUM(indicador_security)  as indicador_security
			,SUM(indicador_bbva)  as indicador_bbva
			,SUM(indicador_scotiabank)  as indicador_scotiabank
			,SUM(indicador_corpbanca)  as indicador_corpbanca
			,SUM(indicador_falabella)  as indicador_falabella
			,SUM(indicador_ripley)  as indicador_ripley
			,SUM(indicador_consorcio)  as indicador_consorcio
			,SUM(indicador_coopeuch)  as indicador_coopeuch
			,SUM(indicador_desarrollo)  as indicador_desarrollo
			,SUM(indicador_internacional)  as indicador_internacional
			,SUM(indicador_otros)  as indicador_otros
			,SUM(nro_bancos) AS nro_bancos
			,periodo
			,rut
			,banco_secundario
		FROM schm_workspace.tefs6_max_por_banco
		GROUP BY periodo,rut,banco_secundario
	ORDER BY banco_secundario
	;


	CREATE TABLE schm_workspace.tefs8_max AS 
		SELECT 
			GREATEST(
			indicador_santander ,
			indicador_estado,
			indicador_bci,
			indicador_bch   ,
			indicador_bice,
			indicador_itau  ,
			indicador_security,
			indicador_bbva,
			indicador_scotiabank,
			indicador_corpbanca ,
			indicador_falabella,
			indicador_ripley,
			indicador_consorcio,
			indicador_coopeuch,
			indicador_desarrollo,
			indicador_internacional,
			indicador_otros)  AS maximo_indicador,
			*
		FROM schm_workspace.tefs7_sum_max_por_banco
	;


	CREATE TABLE schm_workspace.tefs_ppff_final AS 
		SELECT 
		  a.rut
		, a.indicador_santander
		, a.indicador_estado
		, a.indicador_bci
		, a.indicador_bch
		, a.indicador_bice
		, a.indicador_itau
		, a.indicador_security
		, a.indicador_bbva
		, a.indicador_scotiabank
		, a.indicador_corpbanca
		, a.indicador_falabella
		, a.indicador_ripley
		, a.indicador_consorcio
		, a.indicador_cOopeuch
		, a.indicador_desarrollo
		, a.indicador_internacional
		, a.indicador_otros
		, a.banco_secundario
		, a.nro_bancos
		, a.periodo
		FROM  schm_workspace.tefs8_max AS a 
		INNER JOIN (SELECT rut,max(maximo_indicador) AS maximo_indicador 
		FROM schm_workspace.tefs8_max GROUP BY rut) AS b
		on(a.rut=b.rut) AND a.maximo_indicador=b.maximo_indicador
	ORDER BY a.rut, a.banco_secundario
	;


	DELETE FROM schm_data_analytics.ppff_sgdo_bco
		WHERE periodo = schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date)))
	;


	INSERT INTO schm_data_analytics.ppff_sgdo_bco
		SELECT
			periodo,rut,indicador_bch,indicador_santander,indicador_estado,indicador_bci
			,indicador_bice,indicador_itau,indicador_security,indicador_bbva,indicador_scotiabank
			,indicador_corpbanca,indicador_falabella,indicador_ripley,indicador_consorcio
			,indicador_coopeuch,indicador_desarrollo,indicador_internacional,indicador_otros
			,banco_secundario,nro_bancos
		FROM schm_workspace.tefs_ppff_final
		WHERE periodo = schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date))) 
		;

	/*	===========================================================================================================
	=== Control de versiones visual ===
	2024-01-03	-- v05	--	David Vásquez	--	Se actualiza llamado a función periodo para tomar correctamente el -1.
	2023-12-21	-- v04	--	David Vásquez	--	Correcciones varias al código y lógica para lograr objetivo.
	2023-12-19	-- v03	--	David Vásquez	--	Se apunta al periodo anterior y solo un periodo en tefs5
	2023-12-19	-- v02	--	David Vásquez	--	Pequeñas correcciones al código.
	2023-12-19	-- v01	--	Eduardo Gálvez	--	Versión refactorizada.

	=== Información adicional:
	Proceso que indica, en base a las TEFs, cual es el banco secundario de los clientes.
	===========================================================================================================
	*/
	
END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_capta_salida()
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN

	DROP TABLE IF EXISTS schm_data_analytics.resumen_capta_salida;
    DROP TABLE IF EXISTS schm_workspace.ppff_capta_salida;

    CREATE TABLE schm_workspace.ppff_capta_salida as
    SELECT
        *
    FROM
        br_dm_prod_bigdata_sftp_db.capta_salida
       WHERE periodo >= to_char(DATEADD(MM,-1,current_date),'YYYYMM')::INTEGER; 
      
	DELETE
	FROM
		schm_data_analytics.ppff_capta_salida
	WHERE
		periodo >= to_char(DATEADD(MM,-1,current_date),'YYYYMM')::INTEGER;
	
	INSERT
		INTO
		schm_data_analytics.ppff_capta_salida
	   (periodo,
		rut_cliente,
		cod_prod,
		producto,
		rut_vendedor,
		rut_captador,
		rut_asistente,
		cod_sucursal,
		cod_canal,
		canal,
		fecha,
		origen,
		internet,
		linea_credito,
		adicionales,
		codent,
		centalta,
		cuenta,
		concrecion,
		nro_terminal,
		hora_oferta,
		hora_inicio_venta,
		hora_entrega_producto,
		via,
		nro_solicitud,
		id_oferta,
		flag_dormidos,
		ingestion_ts,
		"year",
		"month")
	   SELECT
		periodo,
		rut_cliente,
		cod_prod,
		producto,
		rut_vendedor,
		rut_captador,
		rut_asistente,
		cod_sucursal,
		cod_canal,
		canal,
		fecha,
		origen,
		internet,
		linea_credito,
		adicionales,
		codent,
		centalta,
		cuenta,
		concrecion,
		nro_terminal,
		hora_oferta,
		hora_inicio_venta,
		hora_entrega_producto,
		via,
		nro_solicitud,
		id_oferta,
		flag_dormidos,
		ingestion_ts,
		"year",
		"month"
	FROM
		schm_workspace.ppff_capta_salida;
    
    
    CREATE TABLE schm_data_analytics.resumen_capta_salida as
    SELECT
        DISTINCT
        producto
        ,MAX(fecha) as max_fecha
        ,COUNT(rut_cliente) as cantidad
    FROM
        schm_data_analytics.ppff_capta_salida
    WHERE
        fecha BETWEEN DATE_TRUNC('month', current_date) and last_day(fecha)
    GROUP BY
        producto
    ORDER BY
        cantidad desc;

    DROP TABLE IF EXISTS schm_workspace.ppff_capta_salida;
END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_compra_en_cuotas()
	LANGUAGE plpgsql
AS $$
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.ppff_cuotas;

    CREATE TABLE schm_workspace.ppff_cuotas AS
    SELECT
        to_char(getdate(),'YYYYMMDD') as fecha_eje
        , f.pemid_gls_nro_dct_ide_k as rut
        , f.pemid_dvr_nro_dct_ide as dv
        , c.codent
        , c.centalta
        , c.cuenta
        , c.clamon
        , c.numfinan
        , c.numopecuo
        , a.siaidcd
        , a.linea
        , g.deslinea
        , b.porint
        , b.porintcar
        , a.fecaltcomp as fecha_compra
        , a.tipfran
        , a.codcom
        , case
            when a.tipfran = 1 and a.linea in ('0050', '0053') then 'FUERA DE TIENDA'
            when a.tipfran = 2 and a.linea in ('0050', '0053') then 'FUERA DE TIENDA'
            when a.tipfran = 2 and a.linea in ('0051') then 'BANCO - AVANCE EN EFECTIVO '
            when a.tipfran = 2 and a.linea in ('0052') then 'BANCO - SUPERAVANCE'
            when a.tipfran = 4 and a.linea in ('0050', '0053') then 'TIENDA'
            when a.tipfran = 4 and a.linea in ('0051') then 'AVANCE EN TIENDA'
            when a.tipfran = 4 and a.linea in ('0052') then 'SUPER AVANCE EN TIENDA'
            when a.tipfran = 6 then 'ERROR 1'
            when a.tipfran = 7 and a.linea in ('0050', '0053') then 'FUERA DE TIENDA'
            when a.tipfran = 8 then 'ERROR 2'
            when a.tipfran = 9 then 'ERROR 2'
            when a.tipfran = 1001 then 'ERROR 3'
            when a.tipfran = 1004 and a.linea = ( '0051' ) then 'AV'
            when a.tipfran = 1004 and a.linea = ( '0052' ) then 'SAV'
            when a.tipfran = 1007 and a.linea in ( '0050', '0053') then 'FUERA DE TIENDA'
            when a.linea = '0057' then 'REPACTACION'
            when a.tipfran = 8006 then 'AJUSTES'
            when a.tipfran = 9999 then 'SOL. INCIDENCIAS'
        end as franquicia
        , a.fecfac as fec_facturacion
        , a.tipofac
        , b.totcuotas as total_cuotas
        , a.impfac as monto_pactado
        , b.impinttotal as interes_total
        , c.estcuo
        , case
            when c.estcuo = 1 then 'PENDIENTE'
            when c.estcuo = 2 then 'LIQUIDADA'
            when c.estcuo = 3 then 'CANCELADA'
            when c.estcuo = 4 then 'VENCIDA'
            when c.estcuo = 98 then 'PRONTO PAGO'
            when c.estcuo = 99 then 'PAGO ANTICIPADO'
        end as def_estcuo
        , a.estcompra
        , case
            when a.estcompra='01' then 'Vigente'
            when a.estcompra='02' then 'Cancelada'
            when a.estcompra='03' then 'Amortizada o finalizada'
            when a.estcompra='04' then 'Fusión n compras'
            when a.estcompra='05' then 'Cancelada cartera-vencida'
            when a.estcompra='06' then 'Incidencia'
            when a.estcompra='07' then 'Refinanciada'
            when a.estcompra='08' then 'Acelerada'
            else ''
        end as def_estcompra
        , b.fecalta
        , b.fecbaja
        , b.motbaja
        , case
            when b.motbaja='01' then 'Amortización anticipada'
            when b.motbaja='02' then 'Modificación del número de cuotas'
            when b.motbaja='03' then 'Cancelación de compra'
            when b.motbaja='04' then 'Fusión de n compras en cuotas'
            when b.motbaja='05' then 'Cancelada por cartera-vencida'
            when b.motbaja='06' then 'Incidencia'
            when b.motbaja='07' then 'Refinanciada'
            when b.motbaja='08' then 'Acelerada'
            else ''
        end as def_motbaja
        , sum(c.impcapital - c.impcapamort) as insoluto
        , sum(1) as dif_cuotas
        , sum(c.impcapital) as monto_parcial
        , sum(c.impintereses) interes_parcial
        , sum(c.impimpto) as impuesto
        , sum(d.impbrueco - d.impboneco) as comision_parcial
    FROM 
        br_dm_prod_bigdata_reporitf_db.mpdt205 a
        INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt206 b
            ON a.codent = b.codent
                AND a.centalta = b.centalta
                AND a.cuenta = b.cuenta
                AND a.clamon = b.clamon
                AND a.numfinan = b.numfinan
                AND a.numopecuo = b.numopecuo
        INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt207 c
            ON a.codent = c.codent
                AND a.centalta = c.centalta
                AND a.cuenta = c.cuenta
                AND a.clamon = c.clamon
                AND a.numfinan = c.numfinan
                AND a.numopecuo = c.numopecuo
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt208 d 
            ON c.codent = d.codent
                AND c.centalta = d.centalta
                AND c.cuenta = d.cuenta
                AND c.clamon = d.clamon
                AND c.numfinan = d.numfinan
                AND c.numopecuo = d.numopecuo
                AND c.numcuota = d.numcuota
        INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 e
            ON a.codent = e.codent
                AND a.centalta = e.centalta
                AND a.cuenta = e.cuenta
        INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide f
            ON cast(f.pemid_nro_inn_ide as bigint) = cast(e.identcli as bigint)
        INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt042 g
            ON a.linea = g.linea
    WHERE
        a.fecaltcomp <= last_day(dateadd(month, -1, getdate())::DATE)
    GROUP BY
        f.pemid_gls_nro_dct_ide_k
        , f.pemid_dvr_nro_dct_ide
        , c.codent
        , c.centalta
        , c.cuenta
        , c.clamon
        , c.numfinan
        , c.numopecuo
        , a.siaidcd
        , a.linea
        , g.deslinea
        , b.porint
        , b.porintcar
        , a.fecaltcomp
        , a.tipfran
        , a.codcom
        , a.fecfac
        , a.tipofac
        , b.totcuotas
        , a.impfac
        , b.impinttotal
        , c.estcuo
        , a.estcompra
        , b.fecalta
        , b.fecbaja
        , b.motbaja
    ORDER BY
        cuenta
        , numopecuo
        , numfinan
        , estcuo;

    DELETE
        FROM schm_data_analytics.ppff_cuotas
    WHERE
        periodo = cast(to_char(dateadd(month, -1, getdate())::DATE,'YYYYMM') as int);

    INSERT INTO schm_data_analytics.ppff_cuotas
    SELECT
        *
    FROM
    (
        SELECT
            to_char(dateadd(month, -1, getdate())::DATE,'YYYYMM') as periodo
            , a.*
            , concat(nvl(a.codent,''),concat('-',concat(nvl(a.centalta,''),concat('-',nvl(a.cuenta,''))))) as contrato
        FROM schm_workspace.ppff_cuotas a
    )
    ORDER BY
        contrato ASC
        , numopecuo ASC
        , numfinan ASC
        , estcuo DESC;

    DROP TABLE IF EXISTS schm_workspace.ppff_cuotas;

    /*  ===========================================================================================================
        === Control de versiones visual ===
        2023-12-12 -- v00 -- David Vásquez      --  Solo tomo el código y creo sp en artifacts para luego activar.

        === Información adicional:
        Proceso que ...
        ===========================================================================================================
    */

END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_dispo_av_compra(v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
BEGIN


       DROP TABLE IF EXISTS schm_workspace.ppff_linea_egp;
       DROP TABLE IF EXISTS schm_workspace.ppff_saldos;
       DROP TABLE IF EXISTS schm_workspace.ppff_saldo_total;
       DROP TABLE IF EXISTS schm_workspace.ppff_disp_egp;
       DROP TABLE IF EXISTS schm_workspace.ppff_linea_51;
       DROP TABLE IF EXISTS schm_workspace.ppff_saldo_avance;
       DROP TABLE IF EXISTS schm_workspace.ppff_disp_51;
       DROP TABLE IF EXISTS schm_workspace.ppff_dispo_avance_final;
       DROP TABLE IF EXISTS schm_workspace.ppff_linea_50;
       DROP TABLE IF EXISTS schm_workspace.ppff_saldo_compras;
       DROP TABLE IF EXISTS schm_workspace.ppff_disp_50;
       DROP TABLE IF EXISTS schm_workspace.ppff_disp_final;
       
       
       CREATE TABLE schm_workspace.ppff_linea_egp AS
       SELECT 
              codent
              ,centalta
              ,cuenta
              ,limcrecta AS lca_egp
       FROM br_dm_prod_bigdata_reporitf_db.mpdt163;
       
       
       CREATE TABLE schm_workspace.ppff_saldos AS 
       SELECT 
              codent
              ,centalta
              ,cuenta
              ,linea
              ,sitimp
              ,(impdeuda1 + impdeuda2 + impdeuda4 + impdeuda5 + impdeuda6 + impdeuda7 + impdeuda8 + impdeuda9 + impdeuda10) AS saldo1
              ,(impapl1 + impapl2 + impapl4 + impapl5 + impapl6 + impapl7 + impapl8 + impapl9 + impapl10) AS saldo2
       FROM br_dm_prod_bigdata_reporitf_db.mpdt460
       WHERE (sitimp = 'D' OR sitimp = 'A')
              AND linea <> '0052';
       
       
       CREATE TABLE schm_workspace.ppff_saldo_total AS 
       SELECT 
              codent
              ,centalta
              ,cuenta
              ,(SUM(saldo1) - SUM(saldo2)) AS saldo_final
       FROM schm_workspace.ppff_saldos
       GROUP BY codent, centalta, cuenta;
       
       
       CREATE TABLE schm_workspace.ppff_disp_egp AS
       SELECT 
       A.*
       ,CASE
              WHEN saldo_final IS NULL THEN 0
              ELSE saldo_final
       END AS saldo_total
       , lca_egp - (CASE WHEN saldo_final IS NULL THEN 0 ELSE saldo_final END) AS disp_egp
       FROM schm_workspace.ppff_linea_egp A
       LEFT JOIN schm_workspace.ppff_saldo_total B 
              ON A.codent = B.codent 
              AND A.centalta = B.centalta 
              AND A.cuenta = B.cuenta;
       
       
       CREATE TABLE schm_workspace.ppff_linea_51 AS 
       SELECT 
              codent
              ,centalta
              ,cuenta
              ,limcrelna AS lca_51 
       FROM br_dm_prod_bigdata_reporitf_db.mpdt450
       WHERE linea = '0051';
       
       
       CREATE TABLE schm_workspace.ppff_saldo_avance AS 
       SELECT 
              codent
              ,centalta
              ,cuenta
              ,(SUM(saldo1) - SUM(saldo2)) AS saldo_final
       FROM schm_workspace.ppff_saldos
       WHERE linea = '0051'
       GROUP BY codent, centalta, cuenta;
       
       
       CREATE TABLE schm_workspace.ppff_disp_51 AS
       SELECT 
              A.*
              ,CASE 
                     WHEN saldo_final IS NULL THEN 0 
                     ELSE saldo_final 
              END AS saldo_51
              ,(lca_51 - (CASE WHEN saldo_final IS NULL THEN 0 ELSE saldo_final END)) AS disp_51
       FROM schm_workspace.ppff_linea_51 A
       LEFT JOIN schm_workspace.ppff_saldo_avance B 
              ON A.codent = B.codent 
              AND A.centalta = B.centalta 
              AND A.cuenta = B.cuenta;
       
       
       CREATE TABLE schm_workspace.ppff_dispo_avance_final AS 
       SELECT 
              A.codent
              ,A.centalta
              ,A.cuenta
              ,A.saldo_total
              ,A.disp_egp
              ,B.saldo_51
              ,B.disp_51
              ,CASE 
                     WHEN A.disp_egp < B.disp_51 THEN A.disp_egp 
                     ELSE B.disp_51 
              END AS disp_51_final
              ,B1.lca_51 AS cupo
              ,pemid_gls_nro_dct_ide_k as rut
              ,getdate() as fec_ex
       FROM schm_workspace.ppff_disp_egp A
       LEFT JOIN schm_workspace.ppff_disp_51 B 
              ON A.codent = B.codent 
              AND A.centalta = B.centalta 
              AND A.cuenta =B.cuenta
       LEFT JOIN schm_workspace.ppff_linea_51 B1 
              ON A.codent = B1.codent 
              AND A.centalta = B1.centalta 
              AND A.cuenta = B1.cuenta
       LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 C 
              ON A.codent = C.codent 
              AND A.centalta = C.centalta 
              AND A.cuenta = C.cuenta
       LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide D 
              ON CAST(C.identcli AS BIGINT) = D.pemid_nro_inn_ide;
       
       
       DELETE FROM schm_data_analytics.ppff_dispo_avance
       WHERE periodo = v_periodo;
       
             
       INSERT INTO schm_data_analytics.ppff_dispo_avance 
       SELECT 
              codent
              ,centalta
              ,cuenta
              ,saldo_total
              ,disp_egp
              ,saldo_51
              ,disp_51
              ,CASE 
                     WHEN disp_51_final < 0 THEN 0 
                     ELSE disp_51_final 
              END AS disp_51_final
              ,cupo
              ,rut
              ,fec_ex
              ,v_periodo AS periodo
       FROM schm_workspace.ppff_dispo_avance_final;
       
       
       CREATE TABLE schm_workspace.ppff_linea_50 AS 
       SELECT 
              codent
              ,centalta
              ,cuenta
              ,limcrelna AS lca_50 
       FROM br_dm_prod_bigdata_reporitf_db.mpdt450
       WHERE linea = '0050';
       
       
       CREATE TABLE schm_workspace.ppff_saldo_compras AS 
       SELECT 
              codent
              ,centalta
              ,cuenta
              ,(SUM(saldo1) - SUM(saldo2)) AS saldo_final
       FROM schm_workspace.ppff_saldos
       WHERE linea = '0050' 
       GROUP BY codent, centalta, cuenta;
       
       
       CREATE TABLE schm_workspace.ppff_disp_50 AS
       SELECT 
              A.* 
              ,CASE 
                     WHEN saldo_final IS NULL THEN 0 
                     ELSE saldo_final 
              END AS saldo_50
              ,lca_50 - (CASE WHEN saldo_final IS NULL THEN 0 ELSE saldo_final END) AS disp_50
       FROM schm_workspace.ppff_linea_50 A
       LEFT JOIN schm_workspace.ppff_saldo_compras B 
              ON A.codent = B.codent 
              AND A.centalta = B.centalta 
              AND A.cuenta = B.cuenta;
       
       
       CREATE TABLE schm_workspace.ppff_disp_final AS
       SELECT 
               A.codent
              ,A.centalta
              ,A.cuenta
              ,saldo_total
              ,disp_egp
              ,saldo_50
              ,disp_50
              ,CASE 
                     WHEN disp_egp < disp_50 THEN disp_egp 
                     ELSE disp_50 
              END AS disp_50_final
              ,B1.lca_50 as cupo
              ,pemid_gls_nro_dct_ide_k as rut
              ,getdate() AS fec_ex
       		  ,v_periodo AS periodo
       FROM schm_workspace.ppff_disp_egp A
       LEFT JOIN schm_workspace.ppff_disp_50 B 
              ON A.codent = B.codent 
              AND A.centalta = B.centalta 
              AND A.cuenta = B.cuenta
       LEFT JOIN schm_workspace.ppff_linea_50 B1 
              ON A.codent = B1.codent 
              AND A.centalta = B1.centalta 
              AND A.cuenta =B1.cuenta
       LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 C 
              ON A.codent = C.codent 
              AND A.centalta = C.centalta 
              AND A.cuenta = C.cuenta
       LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide D 
              ON CAST(C.identcli AS INTEGER) = D.pemid_nro_inn_ide;
       
       
       DELETE FROM schm_data_analytics.ppff_dispo_compra
       WHERE periodo = v_periodo;
             
             
	   INSERT INTO schm_data_analytics.ppff_dispo_compra
       SELECT 
       rut
       ,MAX(disp_50_final) AS disp_50_final
       ,cupo
       ,fec_ex
       ,periodo
       FROM schm_workspace.ppff_disp_final
       WHERE rut > 2
       GROUP BY rut,cupo,fec_ex,periodo;
      
      
       DROP TABLE IF EXISTS schm_workspace.ppff_linea_egp;
       DROP TABLE IF EXISTS schm_workspace.ppff_saldos;
       DROP TABLE IF EXISTS schm_workspace.ppff_saldo_total;
       DROP TABLE IF EXISTS schm_workspace.ppff_disp_egp;
       DROP TABLE IF EXISTS schm_workspace.ppff_linea_51;
       DROP TABLE IF EXISTS schm_workspace.ppff_saldo_avance;
       DROP TABLE IF EXISTS schm_workspace.ppff_disp_51;
       DROP TABLE IF EXISTS schm_workspace.ppff_dispo_avance_final;
       DROP TABLE IF EXISTS schm_workspace.ppff_linea_50;
       DROP TABLE IF EXISTS schm_workspace.ppff_saldo_compras;
       DROP TABLE IF EXISTS schm_workspace.ppff_disp_50;
       DROP TABLE IF EXISTS schm_workspace.ppff_disp_final;


END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_disponibles_tr(v_periodo int4)
	LANGUAGE plpgsql
AS $$
	

BEGIN

	DROP TABLE IF EXISTS schm_workspace.ppff_linea_egp;
	DROP TABLE IF EXISTS schm_workspace.ppff_saldos;
	DROP TABLE IF EXISTS schm_workspace.ppff_saldo_total;
	DROP TABLE IF EXISTS schm_workspace.ppff_disp_egp;
	DROP TABLE IF EXISTS schm_workspace.ppff_linea_50;
	DROP TABLE IF EXISTS schm_workspace.ppff_saldo_compras;
	DROP TABLE IF EXISTS schm_workspace.ppff_disp_50;
	DROP TABLE IF EXISTS schm_workspace.ppff_disp_final;
	DROP TABLE IF EXISTS schm_workspace.ppff_disponibles_tr;


	CREATE TABLE schm_workspace.ppff_linea_egp AS
	SELECT
		codent
		,centalta
		,cuenta
		,limcrecta AS lca_egp
	FROM br_dm_prod_bigdata_reporitf_db.mpdt163
	;


	CREATE TABLE schm_workspace.ppff_saldos AS
	SELECT
		codent
		,centalta
		,cuenta
		,linea
		,sitimp
		,(impdeuda1 + impdeuda2 + impdeuda4 + impdeuda5 + impdeuda6 + impdeuda7 + impdeuda8 + impdeuda9 + impdeuda10) AS saldo1
		,(impapl1 + impapl2 + impapl4 + impapl5 + impapl6 + impapl7 + impapl8 + impapl9 + impapl10) AS saldo2
	FROM br_dm_prod_bigdata_reporitf_db.mpdt460
	WHERE (sitimp = 'D' OR sitimp = 'A')
		AND linea != '0052'
	;


	CREATE TABLE schm_workspace.ppff_saldo_total AS
	SELECT
		codent
		,centalta
		,cuenta
		,(SUM(saldo1)) - (SUM(saldo2)) AS saldo_final
	FROM schm_workspace.ppff_saldos
	GROUP BY codent, centalta, cuenta
	;


	CREATE TABLE schm_workspace.ppff_disp_egp AS
	SELECT
		A.*
		,NVL(B.saldo_final, 0) AS saldo_total
		,A.lca_egp - NVL(B.saldo_final, 0) AS disp_egp
	FROM schm_workspace.ppff_linea_egp A
	LEFT JOIN schm_workspace.ppff_saldo_total B
		ON A.codent = B.codent
		AND A.centalta = B.centalta
		AND A.cuenta = B.cuenta
	;

	CREATE TABLE schm_workspace.ppff_linea_50 AS
	SELECT
		codent
		,centalta
		,cuenta
		,limcrelna AS lca_50
	FROM br_dm_prod_bigdata_reporitf_db.mpdt450
	WHERE linea = '0050'
	;


	CREATE TABLE schm_workspace.ppff_saldo_compras AS
	SELECT
		codent
		,centalta
		,cuenta
		,(SUM(saldo1)) - (SUM(saldo2)) AS saldo_final
	FROM schm_workspace.ppff_saldos
	WHERE linea = '0050'
	GROUP BY codent, centalta, cuenta
	;


	CREATE TABLE schm_workspace.ppff_disp_50 AS
	SELECT
		A.*
		,NVL(B.saldo_final, 0) AS saldo_50
		,A.lca_50 - NVL(B.saldo_final, 0) AS disp_50
	FROM schm_workspace.ppff_linea_50 A
	LEFT JOIN schm_workspace.ppff_saldo_compras B
		ON A.codent = B.codent
		AND A.centalta = B.centalta
		AND A.cuenta = B.cuenta
	;


	CREATE TABLE schm_workspace.ppff_disp_final AS
	SELECT
		A.codent
		,A.centalta
		,A.cuenta
		,lca_egp
		,saldo_total
		,disp_egp
		,lca_50
		,saldo_50
		,disp_50
		,CASE
			WHEN disp_egp < disp_50 THEN disp_egp
			ELSE disp_50
		END AS disp_50_final
		,pemid_gls_nro_dct_ide_k::INTEGER as rut
	FROM schm_workspace.ppff_disp_egp A
	LEFT JOIN schm_workspace.ppff_disp_50 B
		ON A.codent = B.codent
		AND A.centalta = B.centalta
		AND A.cuenta = B.cuenta
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 C
		ON A.codent = C.codent
		AND A.centalta = C.centalta
		AND A.cuenta = C.cuenta
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide D
		ON C.identcli::INTEGER = D.pemid_nro_inn_ide
	;


	CREATE TABLE schm_workspace.ppff_disponibles_tr AS
	SELECT
		v_periodo AS periodo
		,*
	FROM schm_workspace.ppff_disp_final;


	DELETE
	FROM schm_data_analytics.ppff_disponibles_tr
	WHERE periodo = v_periodo;


	INSERT INTO schm_data_analytics.ppff_disponibles_tr(
		codent
		,centalta
		,cuenta
		,lca_egp
		,saldo_total
		,disp_egp
		,lca_50
		,saldo_50
		,disp_50
		,disp_50_final
		,rut
		,periodo)
		SELECT
			codent
			,centalta
			,cuenta
			,lca_egp
			,saldo_total
			,disp_egp
			,lca_50
			,saldo_50
			,disp_50
			,disp_50_final
			,rut
			,periodo
		FROM schm_workspace.ppff_disponibles_tr;


	DROP TABLE IF EXISTS schm_workspace.ppff_linea_egp;
	DROP TABLE IF EXISTS schm_workspace.ppff_saldos;
	DROP TABLE IF EXISTS schm_workspace.ppff_saldo_total;
	DROP TABLE IF EXISTS schm_workspace.ppff_disp_egp;
	DROP TABLE IF EXISTS schm_workspace.ppff_linea_50;
	DROP TABLE IF EXISTS schm_workspace.ppff_saldo_compras;
	DROP TABLE IF EXISTS schm_workspace.ppff_disp_50;
	DROP TABLE IF EXISTS schm_workspace.ppff_disp_final;
	DROP TABLE IF EXISTS schm_workspace.ppff_disponibles_tr;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-11-24	-- v01	--	Esteban Pino	--	Versión original refactorizada en AWS.

	=== Información adicional:
	Proceso que genera tabla con disponibles tr por cliente.
	===========================================================================================================
*/

END;




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_evolutivo_venta_ref(periodo_actual int4, periodo_anterior int4)
	LANGUAGE plpgsql
AS $$
	
	
	
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.venta_mes;
    DROP TABLE IF EXISTS schm_workspace.ppff_venta_ref;

    CREATE TABLE schm_workspace.venta_mes AS
        SELECT
            TO_DATE(periodo, 'yyyyMM') as periodo2,
            periodo,
            via,
            fecfac AS fecha,
            COUNT(*) AS nro_trxs,
            tramo_monto_venta,
            SUM(capital) AS mto_trxs,
            -- SUM(interes) AS mto_intereses, -- schm_data_analytics.ppff_trx_refinanciamiento no contiene la columna 'interes'
            SUM(capital*totcuotas) AS sum_cuotas_x_venta,
            SUM(capital*tasa_car) AS sum_tasa_x_venta,
            SUM(CASE WHEN via IN ('SUCURSAL') THEN capital END) AS mto_trxs_prec,
            SUM(CASE WHEN via IN ('INTERNET') THEN capital END) AS mto_trxs_dig,
            SUM(CASE WHEN via IN ('CALL CENTER') THEN capital END) AS mto_trxs_call,
            SUM(capital*totcuotas)/SUM(capital) AS plazo,
            SUM(capital*tasa_car)/SUM(capital) AS tasa
        FROM
            (
            SELECT
                rut,
                fecfac,
                capital,
                totcuotas,
                tasa AS tasa_car,
                -- interes, -- schm_data_analytics.ppff_trx_refinanciamiento no contiene la columna 'interes'
                CASE WHEN  sucursal  IN (60,61,801,802) THEN 'CALL CENTER'
                     WHEN sucursal = 120 THEN 'INTERNET'
                     ELSE 'SUCURSAL'
                     END AS via,
                CASE WHEN capital >=0 AND capital < 500000 THEN '00. [ 5M - 500M )'
                     WHEN capital >=500000 AND capital < 1000000 THEN '01. [ 500M - 1MM )'
                     WHEN capital >=1000000 AND capital < 1500000 THEN '02. [ 1MM - 1.5MM )'
                     WHEN capital >=1500000 AND capital < 2000000 THEN '03. [ 1.5MM - 2MM )'
                     WHEN capital >=2000000 AND capital < 2500000 THEN '04. [ 2MM - 2.5MM )'
                     WHEN capital >=2500000 THEN '05. >= 2.5MM'
                     END AS tramo_monto_venta,
                     periodo
            -- tabla sas: br_dm_prod_bigdata_sasdata_db.sas_ppff_trx_ref 
            -- tabla correcta: schm_data_analytics.ppff_trx_refinanciamiento
            FROM schm_data_analytics.ppff_trx_refinanciamiento 
            WHERE periodo IN (periodo_anterior,periodo_actual)
            )
        GROUP BY
            via,fecfac,tramo_monto_venta,periodo;


    CREATE TABLE schm_workspace.ppff_venta_ref AS
        SELECT * FROM schm_workspace.venta_mes
        UNION ALL
        SELECT
            periodo2,
            cast(periodo as varchar) as periodo,
            via,
            fecha,
            nro_trxs,
            tramo_monto_venta,
            mto_trxs,
            -- mto_intereses, mto_intereses depende de 'interes'
            sum_cuotas_x_venta,
            sum_tasa_x_venta,
            mto_trxs_prec,
            mto_trxs_dig,
            mto_trxs_call,
            plazo,
            tasa
        FROM schm_data_analytics.ppff_venta_ref
        WHERE periodo NOT IN (periodo_anterior,periodo_actual);

    DROP TABLE IF EXISTS schm_data_analytics.ppff_venta_ref;
    CREATE TABLE schm_data_analytics.ppff_venta_ref AS SELECT * FROM schm_workspace.ppff_venta_ref;
    DROP TABLE IF EXISTS schm_workspace.ppff_venta_ref;
    DROP TABLE IF EXISTS schm_workspace.venta_mes;

END




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_evolutivo_venta_ref_prueba(periodo_actual int4, periodo_anterior int4)
	LANGUAGE plpgsql
AS $$
	
	
	
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.venta_mes;
    DROP TABLE IF EXISTS schm_workspace.ppff_venta_ref;

    CREATE TABLE schm_workspace.venta_mes AS
        SELECT
            TO_DATE(periodo, 'yyyyMM') as periodo2,
            periodo,
            via,
            fecfac AS fecha,
            COUNT(*) AS nro_trxs,
            tramo_monto_venta,
            SUM(capital) AS mto_trxs,
            -- SUM(interes) AS mto_intereses, -- schm_data_analytics.ppff_trx_refinanciamiento no contiene la columna 'interes'
            SUM(capital*totcuotas) AS sum_cuotas_x_venta,
            SUM(capital*tasa_car) AS sum_tasa_x_venta,
            SUM(CASE WHEN via IN ('SUCURSAL') THEN capital END) AS mto_trxs_prec,
            SUM(CASE WHEN via IN ('INTERNET') THEN capital END) AS mto_trxs_dig,
            SUM(CASE WHEN via IN ('CALL CENTER') THEN capital END) AS mto_trxs_call,
            SUM(capital*totcuotas)/SUM(capital) AS plazo,
            SUM(capital*tasa_car)/SUM(capital) AS tasa
        FROM
            (
            SELECT
                rut,
                fecfac,
                capital,
                totcuotas,
                tasa AS tasa_car,
                -- interes, -- schm_data_analytics.ppff_trx_refinanciamiento no contiene la columna 'interes'
                CASE WHEN  sucursal  IN (60,61,801,802) THEN 'CALL CENTER'
                     WHEN sucursal = 120 THEN 'INTERNET'
                     ELSE 'SUCURSAL'
                     END AS via,
                CASE WHEN capital >=0 AND capital < 500000 THEN '00. [ 5M - 500M )'
                     WHEN capital >=500000 AND capital < 1000000 THEN '01. [ 500M - 1MM )'
                     WHEN capital >=1000000 AND capital < 1500000 THEN '02. [ 1MM - 1.5MM )'
                     WHEN capital >=1500000 AND capital < 2000000 THEN '03. [ 1.5MM - 2MM )'
                     WHEN capital >=2000000 AND capital < 2500000 THEN '04. [ 2MM - 2.5MM )'
                     WHEN capital >=2500000 THEN '05. >= 2.5MM'
                     END AS tramo_monto_venta,
                     periodo
            -- tabla sas: br_dm_prod_bigdata_sasdata_db.sas_ppff_trx_ref 
            -- tabla correcta: schm_data_analytics.ppff_trx_refinanciamiento
            FROM schm_data_analytics.ppff_trx_refinanciamiento 
            WHERE periodo IN (periodo_anterior,periodo_actual)
            )
        GROUP BY
            via,fecfac,tramo_monto_venta,periodo;


    CREATE TABLE schm_workspace.ppff_venta_ref AS
        SELECT * FROM schm_workspace.venta_mes
        UNION ALL
        SELECT
            periodo2,
            cast(periodo as varchar) as periodo,
            via,
            fecha,
            nro_trxs,
            tramo_monto_venta,
            mto_trxs,
            -- mto_intereses, mto_intereses depende de 'interes'
            sum_cuotas_x_venta,
            sum_tasa_x_venta,
            mto_trxs_prec,
            mto_trxs_dig,
            mto_trxs_call,
            plazo,
            tasa
        FROM schm_data_analytics.ppff_venta_ref
        WHERE periodo NOT IN (periodo_anterior,periodo_actual);

    DROP TABLE IF EXISTS schm_data_analytics.ppff_venta_ref;
    CREATE TABLE schm_data_analytics.ppff_venta_ref AS SELECT * FROM schm_workspace.ppff_venta_ref;
    DROP TABLE IF EXISTS schm_workspace.ppff_venta_ref;
    DROP TABLE IF EXISTS schm_workspace.venta_mes;

END




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_funnel_av(v_fecha date)
	LANGUAGE plpgsql
AS $$
	
	
DECLARE

v_periodo_ejec INTEGER := schm_artifacts.f_period(trunc(DATEADD(MM,-0,v_fecha)));
v_periodo_1 INTEGER := schm_artifacts.f_period(trunc(DATEADD(MM,-0,v_fecha)));

BEGIN
	
	
	DELETE
	FROM schm_data_analytics.ppff_tmp_funnelav_resumen;


	DELETE
	FROM schm_data_analytics.ppff_tmp_funnelav_resumen_matriz;


	FOR i IN 1..3 LOOP
		
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_vis_mes_matriz_f;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_visita_mes_f;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_trx_mes_f;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_trx_uso_mes_f;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_verdes_mes_f;
		DROP TABLE IF EXISTS schm_workspace.ppff_avance_fin;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_totales_tv;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tot_marca_con_of;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_visitas_tot_matriz_tv;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_visitas_totales_tv;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_totales_bco;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tot_marca_con_of_bco;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_visitas_tot_matriz_bco;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_visitas_totales_bco;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_totales_tf;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tot_marca_con_of_tf;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_visitas_tot_matriz_tf;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_visitas_totales_tf;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_totales_movil;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tot_marca_con_of_movil;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_visitas_tot_matriz_movil;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_visitas_totales_movil;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_vis_mes_matriz;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_visita_mes;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_ok;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_trx_mes;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_tv;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_tv_of;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_uso_tv;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_tf;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_tf_of;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_uso_tf;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_bco;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_bco_of;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_uso_bco;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_movil;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_movil_of;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_uso_movil;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_trx_uso_mes;
		DROP TABLE IF EXISTS schm_workspace.ppff_marca_verdes;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_verdes_mes;
		DROP TABLE IF EXISTS schm_workspace.ppff_tmp_funnelav_visita_mes;
		DROP TABLE IF EXISTS schm_workspace.ppff_tmp_funnelav_trx_mes;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_trx_us;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_verdes;
		DROP TABLE IF EXISTS schm_workspace.ppff_tmp_funnelav_resumen;
		DROP TABLE IF EXISTS schm_workspace.ppff_tmp_funnelav_resumen_dia;
		DROP TABLE IF EXISTS schm_workspace.ppff_tmp_funnelav_resumen_matriz;
		
		
	
		CREATE TABLE IF NOT EXISTS schm_workspace.ppff_funnelav_vis_mes_matriz_f
		(
			periodo INTEGER   ENCODE az64
			,n_visitas BIGINT   ENCODE az64
			,visitas_rut_distintos BIGINT   ENCODE az64
			,n_visitas_con_of BIGINT   ENCODE az64
			,visitas_rut_distintos_con_of BIGINT   ENCODE az64
			,"via" VARCHAR(256)   ENCODE lzo
			,rango_prob VARCHAR(100)   ENCODE lzo
			,decil_av VARCHAR(100)   ENCODE lzo
			,actividad_tr VARCHAR(100)   ENCODE lzo
			,n INTEGER   ENCODE RAW
		)
		;
	
	
		CREATE TABLE IF NOT EXISTS schm_workspace.ppff_funnelav_visita_mes_f
		(
			periodo INTEGER   ENCODE az64
			,n_visitas BIGINT   ENCODE az64
			,visitas_rut_distintos BIGINT   ENCODE az64
			,n_visitas_con_of BIGINT   ENCODE az64
			,visitas_rut_distintos_con_of BIGINT   ENCODE az64
			,"via" VARCHAR(256)   ENCODE lzo
			,n INTEGER   ENCODE RAW
		)
		;
	
		
		CREATE TABLE IF NOT EXISTS schm_workspace.ppff_funnelav_trx_mes_f
		(
			periodo INTEGER   ENCODE az64
			,n_trx BIGINT   ENCODE az64
			,n_trx_oferta BIGINT   ENCODE az64
			,clientes BIGINT   ENCODE az64
			,venta BIGINT   ENCODE az64
			,venta_oferta BIGINT   ENCODE az64
			,"via" VARCHAR(5)   ENCODE lzo
		)
		;
		
	
		CREATE TABLE IF NOT EXISTS schm_workspace.ppff_funnelav_trx_uso_mes_f
		(
			periodo INTEGER   ENCODE az64
			,capital BIGINT   ENCODE az64
			,dispofinal BIGINT   ENCODE az64
			,uso NUMERIC(38,17)   ENCODE az64
			,"via" VARCHAR(5)   ENCODE lzo
			,n INTEGER   ENCODE RAW
		)
		;
	
	
		CREATE TABLE IF NOT EXISTS schm_workspace.ppff_funnelav_verdes_mes_f
		(
			periodo INTEGER   ENCODE az64
			,ofertados BIGINT   ENCODE az64
			,verde BIGINT   ENCODE az64
			,verdisimo BIGINT   ENCODE az64
		)
		;
	
		
		CREATE TABLE IF NOT EXISTS schm_workspace.ppff_tmp_funnelav_resumen_dia
		(
			periodo2 INTEGER   ENCODE az64
			,periodo INTEGER   ENCODE az64
			,n_visitas BIGINT   ENCODE az64
			,visitas_rut_distintos BIGINT   ENCODE az64
			,n_visitas_con_of BIGINT   ENCODE az64
			,visitas_rut_distintos_con_of BIGINT   ENCODE az64
			,"via" VARCHAR(256)   ENCODE lzo
			,n INTEGER   ENCODE az64
			,n_trx BIGINT   ENCODE az64
			,n_trx_oferta BIGINT   ENCODE az64
			,clientes BIGINT   ENCODE az64
			,venta BIGINT   ENCODE az64
			,venta_oferta BIGINT   ENCODE az64
			,capital BIGINT   ENCODE az64
			,dispofinal BIGINT   ENCODE az64
			,uso NUMERIC(38,17)   ENCODE az64
			,ofertados BIGINT   ENCODE az64
			,verde BIGINT   ENCODE az64
			,verdisimo BIGINT   ENCODE az64
			,fec_actualizacion DATE   ENCODE az64
		)
		;
		
	
		CREATE TABLE schm_workspace.ppff_visitas_totales_tv AS 
		SELECT 
			T1.rut AS rut_cliente, 
			T1.rut_real , 
			T1.n_vis AS visita, 
			T1.fecha, 
			T1.sucursal, 
			T1.origen, 
			T1.tipo, 
			T2.nomb_origen as via , 
			T2.nomb_tipo
		FROM schm_data_analytics.ppff_tablon_visitas T1
		LEFT JOIN schm_productos_financieros.parametros_tablon_visitas T2
			ON T1.origen = T2.cod_origen 
			AND T1.tipo = T2.cod_tipo
			AND T2.nomb_origen = 'TV'
			AND T1.sucursal <> 39
			AND T1.rut_real = 1  
		WHERE periodo = v_periodo_1
		;
		
		CREATE TABLE schm_workspace.ppff_avance_fin AS 
		SELECT
			*
		FROM schm_productos_financieros.ppff_avance_fin
		WHERE periodo = v_periodo_1;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_tot_marca_con_of AS 
		SELECT 
			T1.rut_cliente,
			T1.visita, 
			T1.via,
			T2.rut AS rut_registro_civil,
			CASE 
				WHEN T2.rut IS NOT NULL THEN 1 
				ELSE 0 
			END	AS vis_con_oferta, 
			T2.avance_final, 
			T2.dispofinal,
			T2.rango_prob,
			T2.decil_av,
			T2.actividad_tr
		FROM schm_workspace.ppff_visitas_totales_tv T1
		LEFT JOIN schm_workspace.ppff_avance_fin T2 
			ON T1.rut_cliente = T2.rut
		;
		
	
		CREATE TABLE schm_workspace.ppff_resumen_visitas_tot_matriz_tv AS 
		SELECT 
			v_periodo_1 AS periodo,
			(SUM(T1.visita)) AS n_visitas, 
			(COUNT(DISTINCT(T1.rut_cliente))) AS visitas_rut_distintos,
			(SUM(T1.vis_con_oferta)) AS n_visitas_con_of, 
			(COUNT(DISTINCT(T1.rut_registro_civil))) AS visitas_rut_distintos_con_of, 
			T1.via, 
			T1.rango_prob,
			T1.decil_av,
			T1.actividad_tr 
		FROM schm_workspace.ppff_visitas_tot_marca_con_of T1 
		WHERE vis_con_oferta >= 1 
		GROUP BY T1.via, 
			T1.rango_prob, 
			T1.decil_av,
			T1.actividad_tr
			;
	
	
		CREATE TABLE schm_workspace.ppff_resumen_visitas_totales_tv AS 
		SELECT 
			v_periodo_1 AS periodo,
			(SUM(T1.visita)) AS n_visitas, 
			(COUNT(DISTINCT(T1.rut_cliente))) AS visitas_rut_distintos,
			(SUM(T1.vis_con_oferta)) AS n_visitas_con_of, 
			(COUNT(DISTINCT(T1.rut_registro_civil))) AS visitas_rut_distintos_con_of, 
			T1.via 
		FROM schm_workspace.ppff_visitas_tot_marca_con_of T1 
		GROUP BY T1.via;
	
	
	-- [02.00] Extrae visitas para los canales SUCURSAL BANCO;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_totales_bco AS 
		SELECT 
			T1.rut AS rut_cliente, 
			T1.rut_real, 
			T1.n_vis AS visita, 
			T1.fecha, 
			T1.sucursal, 
			T1.origen, 
			T1.tipo, 
			'BCO' AS via, 
			T2.nomb_tipo
		FROM schm_data_analytics.ppff_tablon_visitas T1
		LEFT JOIN schm_productos_financieros.parametros_tablon_visitas T2
			ON T1.origen = T2.cod_origen AND T1.tipo = T2.cod_tipo
		WHERE T1.periodo = v_periodo_1
			AND t1.rut_real = 1
			AND T2.nomb_origen = 'BANCO'
			AND T2.nomb_tipo IN ('PAGO EPU','PAGO CONSUMO') --CONSIDERA SOLO PAGOS EN CAJA , VISITAS CCSS NO SE CONSIDERA PORQUE NO SE PUEDE CURSAR AV
		;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_tot_marca_con_of_bco AS 
		SELECT 
			T1.rut_cliente,
			T1.visita, 
			T1.via,
			T2.rut AS rut_registro_civil,
			CASE 
				WHEN T2.rut IS NOT NULL THEN 1 
				ELSE 0 
			END AS vis_con_oferta, 
			T2.avance_final, 
			T2.dispofinal,
			T2.rango_prob,
			T2.decil_av,
			T2.actividad_tr
		FROM schm_workspace.ppff_visitas_totales_bco T1
		LEFT JOIN schm_workspace.ppff_avance_fin T2 
			ON T1.rut_cliente = T2.rut
		;
	
	
		CREATE TABLE schm_workspace.ppff_resumen_visitas_tot_matriz_bco AS 
		SELECT
			v_periodo_1 AS periodo,
			(SUM(T1.visita)) AS n_visitas, 
			(COUNT(DISTINCT(T1.rut_cliente))) AS visitas_rut_distintos, 
			(SUM(T1.vis_con_oferta)) AS n_visitas_con_of, 
			(COUNT(DISTINCT(T1.rut_registro_civil))) AS visitas_rut_distintos_con_of, 
			T1.via, 
			T1.rango_prob, 
			T1.decil_av,
			T1.actividad_tr 
		FROM schm_workspace.ppff_visitas_tot_marca_con_of_bco T1 
		WHERE vis_con_oferta >= 1 
		GROUP BY T1.via, 
			T1.rango_prob, 
			T1.decil_av,
			T1.actividad_tr;
	
	
		CREATE TABLE schm_workspace.ppff_resumen_visitas_totales_bco AS 
		SELECT 
			v_periodo_1 AS periodo,
			(SUM(T1.visita)) AS n_visitas, 
			(COUNT(DISTINCT(T1.rut_cliente))) AS visitas_rut_distintos, 
			(SUM(T1.vis_con_oferta)) AS n_visitas_con_of, 
			(COUNT(DISTINCT(T1.rut_registro_civil))) AS visitas_rut_distintos_con_of, 
			T1.via 
		FROM schm_workspace.ppff_visitas_tot_marca_con_of_bco T1 
		GROUP BY T1.via;
	
	
	-- [03.00] Extrae visitas para los canal TERMINAL FINANCIERO;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_totales_tf AS 
		SELECT 
			T1.rut AS rut_cliente, 
			T1.rut_real, 
			T1.n_vis AS visita, 
			T1.fecha, 
			T1.sucursal, 
			T1.origen, 
			T1.tipo, 
			T2.nomb_origen as via, 
			T2.nomb_tipo
		FROM schm_data_analytics.ppff_tablon_visitas T1
		LEFT JOIN schm_productos_financieros.parametros_tablon_visitas T2
			ON T1.origen = T2.cod_origen 
			AND T1.tipo = T2.cod_tipo
		WHERE periodo = v_periodo_1
			AND T2.nomb_origen = 'TF'
			AND T1.rut_real = 1
		;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_tot_marca_con_of_tf AS 
		SELECT 
			T1.rut_cliente,
			T1.visita, 
			T1.via,
			T2.rut AS rut_registro_civil,
			CASE 
				WHEN T2.rut IS NOT NULL THEN 1 
				ELSE 0 
			END AS vis_con_oferta, 
			T2.avance_final, 
			T2.dispofinal,
			T2.rango_prob,
			T2.decil_av,
			T2.actividad_tr
		FROM schm_workspace.ppff_visitas_totales_tf T1
		LEFT JOIN schm_workspace.ppff_avance_fin T2
			ON T1.rut_cliente = T2.rut
		;
	
	
		CREATE TABLE schm_workspace.ppff_resumen_visitas_tot_matriz_tf AS 
		SELECT
			v_periodo_1 AS periodo,
			(SUM(T1.visita)) AS n_visitas, 
			(COUNT(DISTINCT(T1.rut_cliente))) AS visitas_rut_distintos,
			(SUM(T1.vis_con_oferta)) AS n_visitas_con_of,
			(COUNT(DISTINCT(T1.rut_registro_civil))) AS visitas_rut_distintos_con_of, 
			T1.via, 
			T1.rango_prob, 
			T1.decil_av,
			T1.actividad_tr 
		FROM schm_workspace.ppff_visitas_tot_marca_con_of_tf t1 
		WHERE vis_con_oferta >= 1 
		GROUP BY T1.via, 
			T1.rango_prob, 
			T1.decil_av,
			T1.actividad_tr
		;
	
	
		CREATE TABLE schm_workspace.ppff_resumen_visitas_totales_tf AS 
		SELECT 
			v_periodo_1 AS periodo,
			(SUM(T1.visita)) AS n_visitas, 
			(COUNT(DISTINCT(T1.rut_cliente))) AS visitas_rut_distintos, 
			(SUM(T1.vis_con_oferta)) AS n_visitas_con_of,
			(COUNT(DISTINCT(T1.rut_registro_civil))) AS visitas_rut_distintos_con_of, 
			T1.via 
		FROM schm_workspace.ppff_visitas_tot_marca_con_of_tf t1 
		GROUP BY T1.via
		;
	
	
	--[04.00] Extrae visitas para los canales MOVIL ( blue Bird );
	
	
		CREATE TABLE schm_workspace.ppff_visitas_totales_movil AS 
		SELECT 
			T1.rut AS rut_cliente, 
			T1.rut_real , 
			T1.n_vis AS visita, 
			T1.fecha, 
			T1.sucursal, 
			T1.origen, 
			T1.tipo, 
			T2.nomb_origen AS via, 
			T2.nomb_tipo
		FROM schm_data_analytics.ppff_tablon_visitas T1
		LEFT JOIN schm_productos_financieros.parametros_tablon_visitas T2
			ON T1.origen = T2.cod_origen 
			AND T1.tipo = T2.cod_tipo
		WHERE periodo = v_periodo_1
			AND T2.nomb_origen = 'MOVIL'
			AND T1.rut_real = 1
		;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_tot_marca_con_of_movil AS 
		SELECT 
			T1.rut_cliente,
			1 AS visita, 
			T1.via,
			T2.rut AS rut_registro_civil,
			CASE 
				WHEN T2.rut IS NOT NULL THEN 1 
				ELSE 0 
			END AS vis_con_oferta, 
			T2.avance_final, 
			T2.dispofinal,
			T2.rango_prob,
			T2.decil_av,
			T2.actividad_tr
		FROM schm_workspace.ppff_visitas_totales_movil T1
		LEFT JOIN schm_workspace.ppff_avance_fin T2 
			ON T1.rut_cliente = T2.rut
		;
	
	
		CREATE TABLE schm_workspace.ppff_resumen_visitas_tot_matriz_movil AS 
		SELECT 
			v_periodo_1 AS periodo,
			(SUM(T1.visita)) AS n_visitas, 
			(COUNT(DISTINCT(T1.rut_cliente))) AS visitas_rut_distintos,
			(SUM(T1.vis_con_oferta)) AS n_visitas_con_of,
			(COUNT(DISTINCT(T1.rut_registro_civil))) AS visitas_rut_distintos_con_of, 
			T1.via, 
			T1.rango_prob, 
			T1.decil_av,
			T1.actividad_tr 
		FROM schm_workspace.ppff_visitas_tot_marca_con_of_movil T1 
		WHERE vis_con_oferta >= 1 
		GROUP BY t1.VIA, 
			T1.rango_prob,
			T1.decil_av,
			T1.actividad_tr
		;
	
	
		CREATE TABLE schm_workspace.ppff_resumen_visitas_totales_movil AS 
		SELECT 
			v_periodo_1 AS periodo,
			(SUM(T1.visita)) AS n_visitas, 
			(COUNT(DISTINCT(T1.rut_cliente))) AS visitas_rut_distintos, 
			(SUM(T1.vis_con_oferta)) AS n_visitas_con_of, 
			(COUNT(DISTINCT(T1.rut_registro_civil))) AS visitas_rut_distintos_con_of, 
			T1.via 
		FROM schm_workspace.ppff_visitas_tot_marca_con_of_movil T1 
		GROUP BY T1.via;
	
	
	-- [06.00] Consolida resumen visitas y ofertas funnel;
	
	--insert into 1
		CREATE TABLE schm_workspace.ppff_funnelav_vis_mes_matriz AS
		SELECT 
			* 
		FROM (SELECT 
				*,
				3 AS n
			FROM schm_workspace.ppff_resumen_visitas_tot_matriz_tf
			UNION 
			SELECT 
				*,
				2 AS n
			FROM schm_workspace.ppff_resumen_visitas_tot_matriz_bco
			UNION 
			SELECT 
				*,
				1 AS n
			FROM schm_workspace.ppff_resumen_visitas_tot_matriz_tv
			UNION 
			SELECT 
				*,
				6 AS n
			FROM schm_workspace.ppff_resumen_visitas_tot_matriz_movil)
		ORDER BY n
		;
		
		INSERT INTO schm_workspace.ppff_funnelav_vis_mes_matriz_f
		SELECT
			*
		FROM schm_workspace.ppff_funnelav_vis_mes_matriz;
	
	
	--insert into 2
		CREATE TABLE schm_workspace.ppff_funnelav_visita_mes AS
		SELECT 
			* 
		FROM (SELECT 
				*,
				3 AS n
			FROM schm_workspace.ppff_resumen_visitas_totales_tf
			UNION 
			SELECT 
				*,
				2 AS n
			FROM schm_workspace.ppff_resumen_visitas_totales_bco
			UNION 
			SELECT 
				*,
				1 AS n
			FROM schm_workspace.ppff_resumen_visitas_totales_tv
			UNION 
			SELECT 
				*,
				6 AS n
			FROM schm_workspace.ppff_resumen_visitas_totales_movil)
		ORDER BY N
		;
	
		INSERT INTO schm_workspace.ppff_funnelav_visita_mes_f
		SELECT 
			*
		FROM schm_workspace.ppff_funnelav_visita_mes;
	
	
	--TRANSACCIONES POR CANAL
	-- [07.00] arma transacciones canales;
	-- [07.01] trx canales digitales ( no se ocupa );
	-- correccion de trx mal ingresadas en parametria
	
	
		CREATE TABLE schm_workspace.ppff_trx_av_ok AS
		SELECT 
			*, 
			CASE 
				WHEN sucursal = 4 AND n_caja = 1 THEN 1 
				ELSE 0 
			END AS eliminar
		FROM schm_data_analytics.ppff_trx_av
		WHERE periodo = v_periodo_1
			AND transaccion = 'COMPRA'
		;
	
	
	
		CREATE TABLE schm_workspace.ppff_trx_av AS 
		SELECT 
			T1.*,
			1 AS trx,
			CASE 
				WHEN T2.rut IS NOT NULL THEN 1 
				ELSE 0 
			END AS t_oferta,
			CASE 
				WHEN T2.rut IS NOT NULL THEN T1.capital 
				ELSE 0 
			END AS capital_of,
			CASE 
				WHEN t3.rut IS NOT NULL THEN 1 
				ELSE 0 
			END AS t_oferta_ad,
			v_periodo_1 AS periodo
		FROM 
			(SELECT 
				rut,
				capital,
				via
			FROM schm_workspace.ppff_trx_av_ok  /* error en parametria al salir pwa*/) T1
			LEFT JOIN schm_workspace.ppff_avance_fin T2 --noseguro
				ON T1.rut = T2.rut
			LEFT JOIN schm_workspace.ppff_avance_fin T3 --
				ON T1.rut = T3.rut
		;
	
	
	--insert into 3
		CREATE TABLE schm_workspace.ppff_funnelav_trx_mes AS 
		SELECT 
			v_periodo_1 AS periodo,
			(SUM(trx)) AS n_trx, 
			(SUM(t_oferta)) AS n_trx_oferta, 
			(COUNT(DISTINCT(rut))) AS clientes, 
			(SUM(capital)) AS venta, 
			(SUM(capital_of)) AS venta_oferta, 
			via 
		FROM schm_workspace.ppff_trx_av
			WHERE periodo = v_periodo_1
		AND via NOT IN ('TLMK',' ') 
		GROUP BY via
		;
	
		INSERT INTO schm_workspace.ppff_funnelav_trx_mes_f
		SELECT
			*
		FROM schm_workspace.ppff_funnelav_trx_mes;
	
	
	--USO AVANCE
	--TRANSACCIONES POR CANAL
	-- [08.00] Arma USO canales;
	-- [08.01] USO canal TV;
	
	
		CREATE TABLE schm_workspace.ppff_trx_av_tv AS 
		SELECT 
			rut, 
			(SUM(capital)) AS capital,
			(COUNT(rut)) AS trx 
		FROM schm_workspace.ppff_trx_av
		WHERE periodo = v_periodo_1 
			AND via = 'TV'
		GROUP BY rut;
	
	
		CREATE TABLE schm_workspace.ppff_trx_av_tv_of AS
		SELECT 
			A.*, 
			B.dispofinal
		FROM schm_workspace.ppff_trx_av_tv A
		INNER JOIN schm_workspace.ppff_avance_fin B 
			ON A.rut = B.rut
		;
	
	
		CREATE TABLE schm_workspace.ppff_resumen_uso_tv AS 
		SELECT 
			v_periodo_1 AS periodo,
			(SUM(capital)) AS capital,
			(SUM(dispofinal)) AS dispofinal ,
			((SUM(capital))*1.0) / (SUM(dispofinal)) AS uso, --FORMAT=PERCENTN6. revisar formato salida
			'TV' AS via
		FROM schm_workspace.ppff_trx_av_tv_of 
		WHERE dispofinal IS NOT NULL 
			AND dispofinal >= 5000
		;
	
	
	-- [08.02] USO canal TF;
	
	
		CREATE TABLE schm_workspace.ppff_trx_av_tf AS 
		SELECT 
			rut, 
			(SUM(capital)) AS capital,
			(COUNT(rut)) AS trx 
		FROM schm_workspace.ppff_trx_av
		WHERE via = 'TF'
		GROUP BY rut
		;
	
	
		CREATE TABLE schm_workspace.ppff_trx_av_tf_of AS
		SELECT 
			A.*, 
			B.dispofinal
		FROM schm_workspace.ppff_trx_av_tf A
		INNER JOIN schm_workspace.ppff_avance_fin B 
			ON A.rut = B.rut
		;
	
	
		CREATE TABLE schm_workspace.ppff_resumen_uso_tf AS 
		SELECT 
			v_periodo_1 AS periodo,
			(SUM(capital)) AS capital,
			(SUM(dispofinal)) AS dispofinal,
			((SUM(capital))*1.0) / (SUM(dispofinal)) AS uso, --FORMAT=PERCENTN6.
			--(sum(capital)*1.0)/(sum(capital)+sum(dispofinal)) AS test02,
			'TF' AS via
		FROM schm_workspace.ppff_trx_av_tf_of 
		WHERE dispofinal IS NOT NULL
		;
	
	
	-- [08.03] USO canal BANCO;
	
	
		CREATE TABLE schm_workspace.ppff_trx_av_bco AS 
		SELECT 
			rut, 
			(SUM(capital)) AS capital,
			(COUNT(rut)) AS trx 
		FROM schm_workspace.ppff_trx_av 
		WHERE periodo = v_periodo_1
			AND via = 'BCO'
		GROUP BY rut
		;
	
	
		CREATE TABLE schm_workspace.ppff_trx_av_bco_of AS
		SELECT 
			A.*, 
			B.dispofinal
		FROM schm_workspace.ppff_trx_av_bco A
		INNER JOIN schm_workspace.ppff_avance_fin B 
			ON A.rut = B.rut
		;
	
	
	
		CREATE TABLE schm_workspace.ppff_resumen_uso_bco AS 
		SELECT 
			v_periodo_1 AS periodo,
			(SUM(capital)) AS capital,
			(SUM(dispofinal)) AS dispofinal,
			((SUM(capital))*1.0) / (SUM(dispofinal)) AS uso, --FORMAT=PERCENTN6.
			'BCO' AS via
		FROM schm_workspace.ppff_trx_av_bco_of t1
		WHERE dispofinal IS NOT NULL
			AND dispofinal >= 5000
		;
	
	
	-- [08.05] USO canal MOVIL;
	
	
		CREATE TABLE schm_workspace.ppff_trx_av_movil AS 
		SELECT 
			rut, 
			(SUM(capital)) AS capital, /* COUNT_of_RUT */
			(COUNT(rut)) AS trx 
		FROM schm_workspace.ppff_trx_av
		WHERE periodo = v_periodo_1
			AND via = 'MOVIL'
		GROUP BY rut;
	
	
		CREATE TABLE schm_workspace.ppff_trx_av_movil_of AS
		SELECT 
			A.*, 
			B.dispofinal
		FROM schm_workspace.ppff_trx_av_movil A
		INNER JOIN schm_workspace.ppff_avance_fin B 
			ON A.RUT = B.rut		
		;
	
	
		CREATE TABLE schm_workspace.ppff_resumen_uso_movil AS 
		SELECT 
			v_periodo_1 AS periodo,
			SUM(capital) AS capital,
			SUM(dispofinal) AS dispofinal,
			((SUM(capital))*1.0) / (SUM(dispofinal)) AS uso, --FORMAT=PERCENTN6.
			'MOVIL' AS via
		FROM schm_workspace.ppff_trx_av_movil_of
		WHERE dispofinal IS NOT NULL
		AND dispofinal >= 5000
		;
	
	
	--insert into 4
		CREATE TABLE schm_workspace.ppff_funnelav_trx_uso_mes  AS
		SELECT 
			* 
		FROM (SELECT 
				*,
				3 AS n
			FROM schm_workspace.ppff_resumen_uso_tv
			UNION 
			SELECT 
				*,
				2 AS n
			FROM schm_workspace.ppff_resumen_uso_tf
			UNION 
			SELECT 
				*,
				1 AS n
			FROM schm_workspace.ppff_resumen_uso_bco
			UNION 
			SELECT 
				*,
				6 AS n
			FROM schm_workspace.ppff_resumen_uso_movil)
		ORDER BY N
		;
	
	
		INSERT INTO schm_workspace.ppff_funnelav_trx_uso_mes_f
		SELECT 
			*
		FROM schm_workspace.ppff_funnelav_trx_uso_mes;
	
	
	-- [09.00] AVANCE MARCA CLIENTES VERDES;
	
	
		CREATE TABLE schm_workspace.ppff_marca_verdes AS 
		SELECT 
			v_periodo_1 AS periodo, 
			rut,  
			rango_prob,
			decil_av,
			actividad_tr,
			CASE 
				WHEN (actividad_tr IN ('ACTIVO','SEMIACTIVO','DORMIDO BLANDO','OTROS CON SALDO') AND decil_av IN ('D10','D09','D08','D07','D06','D05')) THEN 1 
				ELSE 0 
			END AS verde,
			CASE 
				WHEN (actividad_tr IN ('ACTIVO','SEMIACTIVO') AND decil_av IN ('D10','D09','D08','D07','D06','D05')) THEN 1 
				ELSE 0 
			END AS verdisimo
		FROM schm_workspace.ppff_avance_fin
		;
	
	
	--insert into 5
		CREATE TABLE schm_workspace.ppff_funnelav_verdes_mes AS 
		SELECT 
			periodo, 
			COUNT(rut) AS ofertados,
			SUM(verde) AS verde,
			SUM(verdisimo) AS verdisimo 
		FROM schm_workspace.ppff_marca_verdes T1 
		GROUP BY periodo;
	
	
		INSERT INTO schm_workspace.ppff_funnelav_verdes_mes_f
		SELECT 
			*
		FROM schm_workspace.ppff_funnelav_verdes_mes;
	
	
	-- [3O.00] SE CONSOLIDAN RESUMEN;
	
	
		--VISITAS
	
	
		CREATE TABLE schm_workspace.ppff_tmp_funnelav_visita_mes AS
		SELECT 
			*
		FROM schm_workspace.ppff_funnelav_visita_mes_f; /*0 -1 -12*/
	
				
		--TRX
	
		CREATE TABLE schm_workspace.ppff_tmp_funnelav_trx_mes AS
		SELECT 
			*
		FROM schm_workspace.ppff_funnelav_trx_mes_f;
	
	
		--USO
	
	
		CREATE TABLE schm_workspace.ppff_funnelav_trx_us AS
		SELECT 
			*
		FROM schm_workspace.ppff_funnelav_trx_uso_mes_f
		;
	
	
		--VERDES
	
	
		CREATE TABLE schm_workspace.ppff_funnelav_verdes AS
		SELECT 
			*
		FROM schm_workspace.ppff_funnelav_verdes_mes_f
		;
	
	
		CREATE TABLE schm_workspace.ppff_tmp_funnelav_resumen AS
		SELECT 
			T1.*,
			T2.n_trx,
			T2.n_trx_oferta,
			T2.clientes,
			T2.venta,
			T2.venta_oferta,
			T3.capital,
			T3.dispofinal,
			T3.uso,
			T4.ofertados,
			T4.verde,
			T4.verdisimo,
			current_date AS fec_actualizacion
		FROM schm_workspace.ppff_tmp_funnelav_visita_mes T1
		LEFT JOIN schm_workspace.ppff_tmp_funnelav_trx_mes T2 
			ON T1.periodo = T2.periodo 
			AND T1.via = T2.via
		LEFT JOIN schm_workspace.ppff_funnelav_trx_us T3 
			ON T1.periodo = T3.periodo 
			AND T1.via = T3.via
		LEFT JOIN schm_workspace.ppff_funnelav_verdes T4 
			ON T1.periodo = T4.periodo 
		WHERE T2.via IS NOT NULL
		;
	
		
		INSERT INTO schm_data_analytics.ppff_tmp_funnelav_resumen
		SELECT
			*
		FROM schm_workspace.ppff_tmp_funnelav_resumen;
	
	
	/* BASE SALIDA SAS ADDIN  POR DIA */
	
	
		INSERT INTO schm_workspace.ppff_tmp_funnelav_resumen_dia
			(periodo2, 
			periodo, 
			n_visitas, 
			visitas_rut_distintos, 
			n_visitas_con_of, 
			visitas_rut_distintos_con_of, 
			via, 
			n, 
			n_trx, 
			n_trx_oferta, 
			clientes, 
			venta, 
			venta_oferta, 
			capital, 
			dispofinal, 
			uso, 
			ofertados, 
			verde, 
			verdisimo, 
			fec_actualizacion)
		SELECT 
			schm_artifacts.f_period(trunc(DATEADD(MM,-0,current_date))), 
			periodo, 
			n_visitas, 
			visitas_rut_distintos, 
			n_visitas_con_of, 
			visitas_rut_distintos_con_of, 
			via, 
			n, 
			n_trx, 
			n_trx_oferta, 
			clientes, 
			venta, 
			venta_oferta, 
			capital, 
			dispofinal, 
			uso, 
			ofertados, 
			verde, 
			verdisimo, 
			fec_actualizacion
		FROM schm_data_analytics.ppff_tmp_funnelav_resumen
		;
	
		
		INSERT INTO schm_data_analytics.ppff_tmp_funnelav_resumen_dia
			(periodo2, 
			periodo, 
			n_visitas, 
			visitas_rut_distintos, 
			n_visitas_con_of, 
			visitas_rut_distintos_con_of, 
			via, 
			n, 
			n_trx, 
			n_trx_oferta, 
			clientes, 
			venta, 
			venta_oferta, 
			capital, 
			dispofinal, 
			uso, 
			ofertados, 
			verde, 
			verdisimo, 
			fec_actualizacion)
		SELECT
			periodo2, 
			periodo, 
			n_visitas, 
			visitas_rut_distintos, 
			n_visitas_con_of, 
			visitas_rut_distintos_con_of, 
			via, 
			n, 
			n_trx, 
			n_trx_oferta, 
			clientes, 
			venta, 
			venta_oferta, 
			capital, 
			dispofinal, 
			uso, 
			ofertados, 
			verde, 
			verdisimo, 
			fec_actualizacion
		FROM schm_workspace.ppff_tmp_funnelav_resumen_dia
		;
	
	
		CREATE TABLE schm_workspace.ppff_tmp_funnelav_resumen_matriz AS
		SELECT 
			*,
			current_date AS fec_actualizacion
		FROM schm_workspace.ppff_funnelav_vis_mes_matriz_f
		;
	
		
		INSERT INTO schm_data_analytics.ppff_tmp_funnelav_resumen_matriz
		SELECT
			*
		FROM schm_workspace.ppff_tmp_funnelav_resumen_matriz;
		
	
		IF i = 1 THEN
		
			v_periodo_1 := schm_artifacts.f_period(trunc(DATEADD(MM,-1,v_fecha)));
			
		ELSIF i = 2 THEN 
		
			v_periodo_1 := schm_artifacts.f_period(trunc(DATEADD(MM,-12,v_fecha)));
		
		END IF;
	
	
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_vis_mes_matriz_f;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_visita_mes_f;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_trx_mes_f;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_trx_uso_mes_f;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_verdes_mes_f;
		DROP TABLE IF EXISTS schm_workspace.ppff_avance_fin;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_totales_tv;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tot_marca_con_of;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_visitas_tot_matriz_tv;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_visitas_totales_tv;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_totales_bco;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tot_marca_con_of_bco;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_visitas_tot_matriz_bco;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_visitas_totales_bco;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_totales_tf;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tot_marca_con_of_tf;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_visitas_tot_matriz_tf;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_visitas_totales_tf;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_totales_movil;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tot_marca_con_of_movil;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_visitas_tot_matriz_movil;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_visitas_totales_movil;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_vis_mes_matriz;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_visita_mes;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_ok;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_trx_mes;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_tv;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_tv_of;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_uso_tv;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_tf;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_tf_of;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_uso_tf;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_bco;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_bco_of;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_uso_bco;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_movil;
		DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_movil_of;
		DROP TABLE IF EXISTS schm_workspace.ppff_resumen_uso_movil;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_trx_uso_mes;
		DROP TABLE IF EXISTS schm_workspace.ppff_marca_verdes;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_verdes_mes;
		DROP TABLE IF EXISTS schm_workspace.ppff_tmp_funnelav_visita_mes;
		DROP TABLE IF EXISTS schm_workspace.ppff_tmp_funnelav_trx_mes;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_trx_us;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnelav_verdes;
	
	
	END LOOP;
	

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_funnel_sav(v_fecha date)
	LANGUAGE plpgsql
AS $$
	
	
DECLARE

v_periodo_ejec INTEGER := schm_artifacts.f_period(trunc(DATEADD(MM,-0,v_fecha)));
v_periodo_1 INTEGER := schm_artifacts.f_period(trunc(DATEADD(MM,-0,v_fecha)));
v_periodo_2 INTEGER := schm_artifacts.f_period(trunc(DATEADD(MM,-2,v_fecha)));

BEGIN
	
	DELETE FROM schm_data_analytics.ppff_funnel_sav_resumen
	WHERE periodo_param = v_periodo_ejec;

	FOR i IN 1..3 LOOP
		
		DROP TABLE IF EXISTS schm_workspace.ppff_repricing_periodo_paso;
		DROP TABLE IF EXISTS schm_workspace.ppff_repricing_sav_pre;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas;
		DROP TABLE IF EXISTS schm_workspace.ppff_sav_aprobado;
		DROP TABLE IF EXISTS schm_workspace.ppff_sav_aprobado_final;
		DROP TABLE IF EXISTS schm_workspace.ppff_sav_prea;
		DROP TABLE IF EXISTS schm_workspace.ppff_sav_prea_final;
		DROP TABLE IF EXISTS schm_workspace.ppff_act_tr;
		DROP TABLE IF EXISTS schm_workspace.ppff_score_sav_adva;
		DROP TABLE IF EXISTS schm_workspace.ppff_universo_vis;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tv_new;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tv_new2;
		DROP TABLE IF EXISTS schm_workspace.ppff_transacciones_tv;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tv_new3;
		DROP TABLE IF EXISTS schm_workspace.ppff_anexa_vta_tv;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tv_new4;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnel_tv_new;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tf_new;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tf_new2;
		DROP TABLE IF EXISTS schm_workspace.ppff_transacciones_tf;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tf_new3;
		DROP TABLE IF EXISTS schm_workspace.ppff_anexa_vta_tf;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tf_new4;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnel_tf_new;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_cis_new;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_cis_new2;
		DROP TABLE IF EXISTS schm_workspace.ppff_transacciones_cis;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_cis_new3;
		DROP TABLE IF EXISTS schm_workspace.ppff_anexa_vta_cis;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_cis_new4;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnel_cis_new;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_bco_new;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_bco_new2;
		DROP TABLE IF EXISTS schm_workspace.ppff_transacciones_bco;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_bco_new3;
		DROP TABLE IF EXISTS schm_workspace.ppff_anexa_vta_bco;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_bco_new4;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnel_bco_new;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_movil_new;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_movil_new2;
		DROP TABLE IF EXISTS schm_workspace.ppff_transacciones_movil;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_movil_new3;
		DROP TABLE IF EXISTS schm_workspace.ppff_anexa_vta_movil;
		DROP TABLE IF EXISTS schm_workspace.ppff_visitas_movil_new4;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnel_movil_new;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnel_new_sav;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnel_new_sav_f;
		DROP TABLE IF EXISTS schm_workspace.ppff_tv_tv;
		DROP TABLE IF EXISTS schm_workspace.ppff_tf_tf;
		DROP TABLE IF EXISTS schm_workspace.ppff_cis_cis;
		DROP TABLE IF EXISTS schm_workspace.ppff_bco_bco;
		DROP TABLE IF EXISTS schm_workspace.ppff_movil_movil;
		DROP TABLE IF EXISTS schm_workspace.ppff_funnel_sav_resumen;
	
	
		EXECUTE
        '
		CREATE TABLE schm_workspace.ppff_repricing_periodo_paso AS
		SELECT
			*
		FROM br_dm_prod_bigdata_riesgo_analytics_sql_db.repricing_sav_pre_'|| v_periodo_1::varchar ||'';
		
		
		
        CREATE TABLE schm_workspace.ppff_repricing_sav_pre AS 
        SELECT 
            *,
            CASE 
                WHEN pd_sav_ori IS NULL THEN '0. S.I.'
                WHEN pd_sav_ori BETWEEN 0 AND 0.0099 THEN '01. [ 0% - 1% )'
                WHEN pd_sav_ori BETWEEN 0.01 AND 0.0199 THEN '02. [ 1% - 2% )'
                WHEN pd_sav_ori BETWEEN 0.02 AND 0.0299 THEN '03. [ 2% - 3% )'
                WHEN pd_sav_ori BETWEEN 0.03 AND 0.0399 THEN '04. [ 3% - 4% )'
                WHEN pd_sav_ori BETWEEN 0.04 AND 0.0499 THEN '05. [ 4% - 5% )'
                WHEN pd_sav_ori BETWEEN 0.05 AND 0.0599 THEN '06. [ 5% - 6% )'
                WHEN pd_sav_ori BETWEEN 0.06 AND 0.0699 THEN '07. [ 6% - 7% )'
                WHEN pd_sav_ori BETWEEN 0.07 AND 0.0799 THEN '08. [ 7% - 8% )'
                WHEN pd_sav_ori BETWEEN 0.08 AND 0.0899 THEN '09. [ 8% - 9% )'
                WHEN pd_sav_ori BETWEEN 0.09 AND 0.0999 THEN '10. [ 9% - 10% )'
                WHEN pd_sav_ori BETWEEN 0.10 AND 0.1099 THEN '11. [ 10% - 11% )'
                WHEN pd_sav_ori BETWEEN 0.11 AND 0.1199 THEN '12. [ 11% - 12% )'
                WHEN pd_sav_ori BETWEEN 0.12 AND 0.1299 THEN '13. [ 12% - 13% )'
                WHEN pd_sav_ori BETWEEN 0.13 AND 0.1399 THEN '14. [ 13% - 14% )'
                WHEN pd_sav_ori BETWEEN 0.14 AND 0.1499 THEN '15. [ 14% - 15% )'
                WHEN pd_sav_ori BETWEEN 0.15 AND 0.1599 THEN '16. [ 15% - 16% )'
                WHEN pd_sav_ori BETWEEN 0.16 AND 0.1699 THEN '17. [ 16% - 17% )'
                WHEN pd_sav_ori BETWEEN 0.17 AND 0.1799 THEN '18. [ 17% - 18% )'
                WHEN pd_sav_ori BETWEEN 0.18 AND 0.1899 THEN '19. [ 18% - 19% )'
                WHEN pd_sav_ori BETWEEN 0.19 AND 0.1999 THEN '20. [ 19% - 20% )'   
                WHEN pd_sav_ori BETWEEN 0.20 AND 0.02099 THEN '21. [ 20% - 21% )'
                WHEN pd_sav_ori BETWEEN 0.21 AND 0.02199 THEN '22. [ 21% - 22% )'
                WHEN pd_sav_ori BETWEEN 0.22 AND 0.02299 THEN '23. [ 22% - 23% )'
                WHEN pd_sav_ori BETWEEN 0.23 AND 0.02399 THEN '24. [ 23% - 24% )'
                WHEN pd_sav_ori BETWEEN 0.24 AND 0.02499 THEN '25. [ 24% - 25% )'
                WHEN pd_sav_ori BETWEEN 0.25 AND 0.02599 THEN '26. [ 25% - 26% )'
                WHEN pd_sav_ori BETWEEN 0.26 AND 0.02699 THEN '27. [ 26% - 27% )'
                WHEN pd_sav_ori BETWEEN 0.27 AND 0.02799 THEN '28. [ 27% - 20% )'
                WHEN pd_sav_ori BETWEEN 0.28 AND 0.02899 THEN '29. [ 28% - 29% )'
                WHEN pd_sav_ori BETWEEN 0.29 AND 0.02999 THEN '30. [ 29% - 30% )'
                WHEN pd_sav_ori >= 0.30 THEN '31. [ >= 30% )'
            END AS tramo_pd_motor 
        FROM schm_workspace.ppff_repricing_periodo_paso;
        
	
	
		CREATE TABLE schm_workspace.ppff_visitas AS
		SELECT
			T1.*,
			T1.rut AS rut_cliente, 
			T2.nomb_origen, 
			T2.nomb_tipo
		FROM schm_data_analytics.ppff_tablon_visitas T1 
		LEFT JOIN schm_productos_financieros.parametros_tablon_visitas T2 
			ON T1.origen = T2.cod_origen 
			AND T1.tipo = T2.cod_tipo
		WHERE T1.periodo = v_periodo_1
		;
		
	
		CREATE TABLE schm_workspace.ppff_sav_aprobado AS 
		SELECT
			A.rut_real, 
			A.sav_aprobado_final, 
			A.monto_para_canon AS oferta_sav_aprobado,
			A.monto_oferta_sav,
			A.pd_sav_final, 
			A.tramo_pd_final,
			A.periodo,
			B.pd_sav_ori, 
			B.pd_sav_unificada, 
			B.tramo_pd_motor
		FROM schm_productos_financieros.ppff_sav_fin A
		LEFT JOIN schm_workspace.ppff_repricing_sav_pre AS B 
			ON A.rut_real = B.rut
		WHERE A.sav_aprobado_final = 1
		AND A.periodo = v_periodo_1
		;
	
	
		CREATE TABLE schm_workspace.ppff_sav_aprobado_final AS
		SELECT DISTINCT  
			* 
		FROM schm_workspace.ppff_sav_aprobado
		;
	
	
		CREATE TABLE schm_workspace.ppff_sav_prea AS 
		SELECT DISTINCT 
			A.rut_real, 
			A.monto_oferta_sav,
			A.pd_sav_final, 
			A.tramo_pd_final,
			A.periodo, 
			B.pd_sav_ori, 
			B.pd_sav_unificada,
			B.tramo_pd_motor
		FROM schm_productos_financieros.ppff_sav_fin A
		LEFT JOIN schm_workspace.ppff_repricing_sav_pre as B 
			ON A.rut_real = B.rut
		WHERE A.monto_oferta_sav >= 500000
			AND A.periodo = v_periodo_1
		;
	
	
		CREATE TABLE schm_workspace.ppff_sav_prea_final AS
		SELECT DISTINCT 
			* 
		FROM schm_workspace.ppff_sav_prea
		;


		CREATE TABLE schm_workspace.ppff_act_tr AS
		SELECT DISTINCT 
			* 
		FROM schm_data_analytics.bitr_actividad_tr
		WHERE periodo = v_periodo_2 
		;
	
	
		CREATE TABLE schm_workspace.ppff_score_sav_adva as
		SELECT DISTINCT 
			* 
		FROM schm_insight.score_sav_adva
		WHERE periodo = v_periodo_1
		;
	
	
		CREATE TABLE schm_workspace.ppff_universo_vis AS 
		SELECT
			T1.*,
			T2.actividad_tr, 
			T3.rango_prob, 
			T4.decil_sav,
			CASE 
				WHEN T5.rut_real IS NOT NULL THEN 1 
				ELSE 0 
			END AS vis_ofe_aprob,
			CASE 
				WHEN T6.rut_real IS NOT NULL THEN 1 
				ELSE 0 
			END AS vis_ofe_pre_aprob,
			T6.pd_sav_final, 
			T6.tramo_pd_final, 
			T6.pd_sav_ori, 
			T6.pd_sav_unificada, 
			T6.tramo_pd_motor 
		FROM schm_workspace.ppff_visitas T1 
		LEFT JOIN schm_workspace.ppff_act_tr T2 
			ON T1.rut_cliente = T2.rut
		LEFT JOIN schm_workspace.ppff_score_sav_adva T3 
			ON T1.rut_cliente = T3.rut
		LEFT JOIN schm_workspace.ppff_score_sav_adva T4 
			ON T1.rut_cliente = T4.rut
		LEFT JOIN schm_workspace.ppff_sav_aprobado_final T5 
			ON T1.rut_cliente = T5.rut_real
		LEFT JOIN schm_workspace.ppff_sav_prea_final T6 
			ON T1.rut_cliente = T6.rut_real
		;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_tv_new AS 
		SELECT DISTINCT 
			rut_cliente,
			(COUNT(rut_cliente)) AS cantidad,
			CASE 
				WHEN (rut_cliente BETWEEN 1000000 AND 50000000) AND rut_cliente NOT IN (1111111,2222222,3333333,4444444,5555555,6666666,7777777,8888888,9999999,11111111,22222222,33333333,44444444) THEN 1 
				ELSE 0 
			END AS humano
		FROM schm_workspace.ppff_universo_vis t1
		WHERE nomb_origen = 'TV'
			AND sucursal <> 39
			AND humano = 1
		GROUP BY rut_cliente
		;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_tv_new2 AS 
		SELECT 
			A.*,
			CASE 
				WHEN B2.rut_real IS NOT NULL THEN 1 
				ELSE 0 
			END AS vis_ofe_aprob,
			CASE 
				WHEN B2.rut_real IS NOT NULL THEN 1 
				ELSE 0 
			END AS vis_ofe_pre_aprob,
			(SUM(B2.oferta_sav_aprobado)) AS monto_oferta,  
			B2.Tramo_pd_Final,
			B2.Tramo_pd_Motor
		FROM schm_workspace.ppff_visitas_tv_new AS A 
		LEFT JOIN schm_workspace.ppff_sav_aprobado_final AS B2  
			ON A.rut_cliente = B2.rut_real
		GROUP BY 
			A.rut_cliente,
			B2.rut_real,
			A.cantidad,
			A.humano,
			B2.tramo_pd_final,
			B2.tramo_pd_motor
		;

	
		CREATE TABLE schm_workspace.ppff_transacciones_tv AS 
		SELECT 
			T1.rut,
			T2.actividad_tr,
			T3.rango_prob,
			(COUNT(T1.rut)) AS trx, 
			(SUM(T1.capital)) AS monto_curse,  
			T4.oferta_sav_aprobado, 
			T4.pd_sav_final, 
			T4.tramo_pd_final, 
			T4.pd_sav_ori, 
			T4.pd_sav_unificada, 
			T4.tramo_pd_motor, 
			T1.via_final,
			T1.periodo AS fec_num,
			v_periodo_1 AS periodo,
			CASE 
				WHEN T2.actividad_tr IN ('ACTIVO','DORMIDO BLANDO','OTROS CON SALDO','SEMIACTIVO') AND T3.rango_prob IN ('0.4 - 0.5','0.5 - 0.6','0.6 - 0.7','0.7 - 0.8','0.8 - 0.9','0.9 - 1.0') THEN 'VERDES' 
				ELSE 'NO_VERDES' 
			END AS marca_verdes
		FROM schm_data_analytics.ppff_trx_sav T1 
		LEFT JOIN schm_workspace.ppff_act_tr T2 
			ON T1.rut = T2.rut
		LEFT JOIN schm_workspace.ppff_score_sav_adva T3  
			ON T1.rut = T3.rut
		LEFT JOIN schm_workspace.ppff_sav_aprobado_final AS T4   
			ON T1.rut = T4.rut_real 
		WHERE via_final IN ('TV')
			AND T1.periodo = v_periodo_1
		GROUP BY
			T1.rut,
			T2.actividad_tr,
			T3.rango_prob,
			T4.oferta_sav_aprobado,
			T4.pd_sav_final,
			T4.tramo_pd_final, 
			T4.tramo_pd_motor,
			T4.pd_sav_ori, 
			T4.pd_sav_unificada,
			T1.via_final,
			T1.periodo
		;
	

		CREATE TABLE schm_workspace.ppff_visitas_tv_new3 AS 
		SELECT
			'TV' AS canal,
			A.*,
			CASE 
				WHEN B.rut IS NOT NULL THEN 1 
				ELSE 0 
			END AS curse,
			B.rut,
			B.trx AS trx,
			B.monto_curse,
			B.oferta_sav_aprobado,
			B.via_final
		FROM schm_workspace.ppff_visitas_tv_new2 AS A 
		LEFT JOIN schm_workspace.ppff_transacciones_tv AS B 
			ON A.rut_cliente = B.rut
		;
	
	
		UPDATE schm_workspace.ppff_visitas_tv_new3 
			SET rut_cliente = rut
		WHERE curse = 1
			AND rut IS NOT NULL 
			AND rut_cliente IS NULL
		;
	
		UPDATE schm_workspace.ppff_visitas_tv_new3
			SET monto_oferta = oferta_sav_aprobado
		WHERE curse = 1
			AND oferta_sav_aprobado IS NOT NULL 
			AND monto_oferta IS NULL
		; 
	
	
		CREATE TABLE schm_workspace.ppff_anexa_vta_tv AS  
		SELECT 
			'TV' AS canal,
			T1.rut AS rut_cliente,
			1 AS cantidad,
			1 AS humano,
			1 AS vis_ofe_aprob,
			1 AS vis_ofe_pre_aprob,
			T1.oferta_sav_aprobado AS monto_oferta,
			T2.tramo_pd_final,
			T2.tramo_pd_motor,
			1 AS curse,
			T1.rut,
			1 AS trx,
			T1.monto_curse,
			T1.oferta_sav_aprobado, 
			T1.via_final 
		FROM schm_workspace.ppff_transacciones_tv T1 
		LEFT JOIN schm_workspace.ppff_visitas_tv_new3 T2 
			ON T1.rut = T2.rut_cliente
		WHERE T2.rut_cliente IS NULL
		;
	
		CREATE TABLE schm_workspace.ppff_visitas_tv_new4 AS 
		SELECT 
			* 
		FROM schm_workspace.ppff_visitas_tv_new3 
		UNION ALL
		SELECT 
			* 
		FROM schm_workspace.ppff_anexa_vta_tv 
		;
	
	
		CREATE TABLE schm_workspace.ppff_funnel_tv_new AS
		SELECT 
			T1.*
		FROM schm_workspace.ppff_visitas_tv_new4 T1
		;

	
		CREATE TABLE schm_workspace.ppff_visitas_tf_new AS 
		SELECT DISTINCT 
			rut_cliente,
			(COUNT(rut_cliente)) AS cantidad,
			CASE 
				WHEN (rut_cliente BETWEEN 1000000 AND 50000000) AND rut_cliente NOT IN (1111111,2222222,3333333,4444444,5555555,6666666,7777777,8888888,9999999,11111111,22222222,33333333,44444444) THEN 1 
				ELSE 0 
			END AS humano
		FROM schm_workspace.ppff_universo_vis T1 
		WHERE nomb_origen IN ( 'TF') 
			AND sucursal <> 39
		GROUP BY rut_cliente
		;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_tf_new2 AS 
		SELECT 
			A.*,
			CASE 
				WHEN B2.rut_real IS NOT NULL THEN 1 
				ELSE 0 
			END AS vis_ofe_aprob,
			CASE 
				WHEN B2.rut_real IS NOT NULL THEN 1 
				ELSE 0 
			END AS vis_ofe_pre_aprob,
		   (SUM(B2.oferta_sav_aprobado)) AS monto_oferta,  
			B2.tramo_pd_final,
			B2.tramo_pd_motor
		FROM schm_workspace.ppff_visitas_tf_new AS A 
		LEFT JOIN schm_workspace.ppff_sav_aprobado_final AS B2 
			ON A.rut_cliente = B2.rut_real
		GROUP BY 
			A.rut_cliente,
			B2.rut_real,
			A.cantidad,
			A.humano,
			B2.tramo_pd_final,
			B2.tramo_pd_motor
		;
	
	
		CREATE TABLE schm_workspace.ppff_transacciones_tf AS
		SELECT 
			T1.rut,
			T2.actividad_tr,
			T3.rango_prob,
			(COUNT(T1.rut)) AS trx, 
			(SUM(T1.capital)) AS monto_curse, 
			T4.oferta_sav_aprobado,
			T4.pd_sav_final, 
			T4.tramo_pd_final, 
			T4.pd_sav_ori, 
			T4.pd_sav_unificada, 
			T4.Tramo_pd_Motor,
			T1.via_final,
			T1.periodo AS fec_num,
			v_periodo_1 AS periodo,
			CASE 
				WHEN T2.actividad_tr IN ('ACTIVO','DORMIDO BLANDO','OTROS CON SALDO','SEMIACTIVO') 
			AND T3.rango_prob IN ('0.4 - 0.5','0.5 - 0.6','0.6 - 0.7','0.7 - 0.8','0.8 - 0.9','0.9 - 1.0')THEN 'VERDES' ELSE 'NO_VERDES' END AS MARCA_VERDES
		FROM schm_data_analytics.ppff_trx_sav T1
		LEFT JOIN schm_workspace.ppff_act_tr T2 
			ON T1.rut = T2.rut
		LEFT JOIN schm_workspace.ppff_score_sav_adva T3
			ON T1.rut = T3.rut
		LEFT JOIN schm_workspace.ppff_sav_aprobado_final T4 
			ON T1.rut = T4.rut_real 
		WHERE via_final IN ('TF')
			AND T1.periodo = v_periodo_1 
		GROUP BY 
			T1.rut,
			T2.actividad_tr,
			T3.rango_prob,
			T4.oferta_sav_aprobado,
			T4.pd_sav_final,
			T4.tramo_pd_final, 
			T4.tramo_pd_motor,
			T4.pd_sav_ori, 
			T4.pd_sav_unificada,
			T1.via_final,
			T1.periodo
		;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_tf_new3 AS
		SELECT
			'TF' as canal,
			A.*,
			CASE 
				WHEN  B.rut IS NOT NULL THEN 1 
				ELSE 0 
			END AS curse,
			B.rut,
			B.trx AS trx,
			B.monto_curse,
			B.oferta_sav_aprobado,
			B.via_final
		FROM schm_workspace.ppff_visitas_tf_new2 AS A
		LEFT JOIN schm_workspace.ppff_transacciones_tf AS B
			ON A.rut_cliente = B.rut
		;
	
	
		UPDATE schm_workspace.ppff_visitas_tf_new3
			SET rut_cliente = rut
		WHERE curse = 1
			AND rut IS NOT NULL
			AND rut_cliente IS NULL
		;
	
	
		UPDATE schm_workspace.ppff_visitas_tf_new3
			SET monto_oferta = oferta_sav_aprobado
		WHERE curse = 1
			AND oferta_sav_aprobado IS NOT NULL
			AND monto_oferta IS NULL 
		; 
	
	
		CREATE TABLE schm_workspace.ppff_anexa_vta_tf AS
		SELECT 
			'TF' AS canal,
			T1.rut AS rut_cliente,
			1 AS cantidad,
			1 AS humano,
			1 AS vis_ofe_aprob,
			1 AS vis_ofe_pre_aprob,
			T1.oferta_sav_aprobado AS monto_oferta,
			T2.tramo_pd_final,
			T2.tramo_pd_motor,
			1 AS curse,
			T1.rut,
			1 AS trx,
			T1.monto_curse,
			T1.oferta_sav_aprobado, 
			T1.via_final   
		FROM schm_workspace.ppff_transacciones_tf T1
		LEFT JOIN schm_workspace.ppff_visitas_tf_new3 T2
			ON T1.rut = T2.rut_cliente
		WHERE T2.rut_cliente IS NULL;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_tf_new4 AS
		SELECT 
			* 
		FROM schm_workspace.ppff_visitas_tf_new3
		UNION ALL
		SELECT 
			* 
		FROM schm_workspace.ppff_anexa_vta_tf
		;
	
	
		CREATE TABLE schm_workspace.ppff_funnel_tf_new AS
		SELECT 
			T1.*
		FROM schm_workspace.ppff_visitas_tf_new4 T1 
		;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_cis_new AS
		SELECT DISTINCT 
			rut_cliente,
			(COUNT(rut_cliente)) AS cantidad,
			CASE 
				WHEN (rut_cliente BETWEEN 1000000 AND 50000000) AND rut_cliente NOT IN (1111111,2222222,3333333,4444444,5555555,6666666,7777777,8888888,9999999,11111111,22222222,33333333,44444444) THEN 1 
				ELSE 0 
			END AS humano
		FROM schm_workspace.ppff_universo_vis
		WHERE nomb_origen IN ('CCSS','ADM')
		GROUP BY rut_cliente;
	

		CREATE TABLE schm_workspace.ppff_visitas_cis_new2 AS
		SELECT 
			A.*,
			CASE 
				WHEN B2.rut_real IS NOT NULL THEN 1 
				ELSE 0 
			END AS vis_ofe_aprob,
			CASE 
				WHEN B2.rut_real IS NOT NULL THEN 1 
				ELSE 0 
			END AS vis_ofe_pre_aprob,
			(SUM(B2.monto_oferta_sav)) AS monto_oferta,
			B2.tramo_pd_final,
			B2.tramo_pd_motor
		FROM schm_workspace.ppff_visitas_cis_new AS A
		LEFT JOIN schm_workspace.ppff_sav_prea_final AS B2
			ON A.rut_cliente = B2.rut_real
		GROUP BY 
			A.rut_cliente,
			B2.rut_real,
			A.cantidad,
			A.humano,
			B2.tramo_pd_final,
			B2.tramo_pd_motor
		;
	
	
		CREATE TABLE schm_workspace.ppff_transacciones_cis AS
		SELECT 
			T1.rut,
			T2.actividad_tr,
			T3.rango_prob,
			(COUNT(T1.rut)) AS trx, 
			(SUM(T1.capital)) AS monto_curse, 
			T4.monto_oferta_sav, 
			T4.pd_sav_final, 
			T4.tramo_pd_final, 
			T4.pd_sav_ori, 
			T4.pd_sav_unificada, 
			T4.tramo_pd_motor, 
			T1.via_final,
			T1.periodo AS fec_num,
			v_periodo_1 AS periodo,
			CASE 
				WHEN T2.actividad_tr IN('ACTIVO','DORMIDO BLANDO','OTROS CON SALDO','SEMIACTIVO') 
			AND T3.rango_prob IN ('0.4 - 0.5','0.5 - 0.6','0.6 - 0.7','0.7 - 0.8','0.8 - 0.9','0.9 - 1.0')THEN 'VERDES' ELSE 'NO_VERDES' END AS MARCA_VERDES
		FROM schm_data_analytics.ppff_trx_sav T1 --PUBLICIN.TRX_SAV_&fechax 
		LEFT JOIN schm_workspace.ppff_act_tr T2 --PUBLICIN.ACT_TR_&fechaxx 
			ON T1.rut = T2.rut
		LEFT JOIN schm_workspace.ppff_score_sav_adva T3 --RSEPULV.SCORE_&fechax 
			ON T1.rut = T3.rut
		LEFT JOIN schm_workspace.ppff_sav_prea_final AS T4 --SAV_PREA_FINAL_&fechax 
			ON T1.rut = T4.rut_real 
		WHERE via_final IN ('CIS','TEF')
			AND T1.periodo = v_periodo_1
		GROUP BY 
			T1.rut,
			T2.actividad_tr,
			T3.rango_prob,
			T4.monto_oferta_sav,
			T4.pd_sav_final,
			T4.tramo_pd_final, 
			T4.tramo_pd_motor,
			T4.pd_sav_ori, 
			T4.pd_sav_unificada,
			T1.via_final,
			T1.periodo
		;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_cis_new3 AS 
		SELECT
			'CCSS' as canal,
			A.*,
			CASE 
				WHEN B.rut IS NOT NULL THEN 1 
				ELSE 0 
			END AS curse,
			B.rut,
			B.trx AS trx,
			B.monto_curse,
			B.monto_oferta_sav,
			B.via_final
		FROM schm_workspace.ppff_visitas_cis_new2 AS A 
		FULL JOIN schm_workspace.ppff_transacciones_cis AS B 
			ON A.rut_cliente = B.rut
		;
	
	
		UPDATE schm_workspace.ppff_visitas_cis_new3 
			SET rut_cliente = rut
		WHERE curse = 1
			AND rut IS NOT NULL
			AND rut_cliente IS NULL
		;
	
	
		UPDATE schm_workspace.ppff_visitas_cis_new3 
			SET monto_oferta = monto_oferta_sav
		WHERE curse = 1
			AND monto_oferta_sav IS NOT NULL 
			AND monto_oferta IS NULL
		;
	
	
		CREATE TABLE schm_workspace.ppff_anexa_vta_cis AS  
		SELECT 
			'CIS' AS canal,
			T1.rut AS rut_cliente,
			1 AS cantidad,
			1 AS humano,
			1 AS vis_ofe_aprob,
			1 AS vis_ofe_pre_aprob,
			T1.monto_oferta_sav AS monto_oferta,
			T2.tramo_pd_final,
			T2.tramo_pd_motor,
			1 AS curse,
			T1.rut,
			1 AS trx,
			T1.monto_curse,
			T1.monto_oferta_sav, 
			T1.via_final
		FROM schm_workspace.ppff_transacciones_cis T1 
		LEFT JOIN schm_workspace.ppff_visitas_cis_new3 T2
			ON T1.rut = T2.rut_cliente
		WHERE T2.rut_cliente IS NULL
		;

	
		CREATE TABLE schm_workspace.ppff_visitas_cis_new4 AS
		SELECT 
			* 
		FROM schm_workspace.ppff_visitas_cis_new3
		UNION ALL 
		SELECT 
			* 
		FROM schm_workspace.ppff_anexa_vta_cis
		;
	
	
		CREATE TABLE schm_workspace.ppff_funnel_cis_new AS 
		SELECT 
			T1.*
		FROM schm_workspace.ppff_visitas_cis_new4 T1
		;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_bco_new AS 
		SELECT DISTINCT 
			rut_cliente,
			(COUNT(rut_cliente)) AS cantidad,
			CASE 
				WHEN (rut_cliente BETWEEN 1000000 AND 50000000) AND rut_cliente NOT IN (1111111,2222222,3333333,4444444,5555555,6666666,7777777,8888888,9999999,11111111,22222222,33333333,44444444) THEN 1 
				ELSE 0 
			END AS humano
		FROM schm_workspace.ppff_universo_vis T1
		WHERE nomb_origen = 'BANCO'
		GROUP BY rut_cliente
		;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_bco_new2 AS
		SELECT 
			A.*,
			CASE 
				WHEN  B2.rut_real IS NOT NULL THEN 1 
				ELSE 0 
			END AS vis_ofe_aprob,
			CASE 
				WHEN  B2.RUT_REAL IS NOT NULL THEN 1 
				ELSE 0 
			END AS vis_ofe_pre_aprob,
			(SUM(B2.monto_oferta_sav)) AS monto_oferta,
			B2.tramo_pd_final,
			B2.tramo_pd_motor
		FROM schm_workspace.ppff_visitas_bco_new AS A
		LEFT JOIN schm_workspace.ppff_sav_prea_final AS B2 
			ON A.rut_cliente = B2.rut_real
		GROUP BY 
			A.rut_cliente,
			B2.rut_real,
			A.cantidad,
			A.humano,
			B2.tramo_pd_final,
			B2.tramo_pd_motor
		;
	
	
		CREATE TABLE schm_workspace.ppff_transacciones_bco AS
		SELECT 
			T1.rut,
			T2.actividad_tr,
			T3.rango_prob,
			(COUNT(T1.rut)) AS trx,
			(SUM(T1.capital)) AS monto_curse,
			T4.oferta_sav_aprobado, 
			T4.pd_sav_final, 
			T4.tramo_pd_final, 
			T4.pd_sav_ori, 
			T4.pd_sav_unificada, 
			T4.tramo_pd_motor, 
			T1.via_final,
			T1.periodo AS fec_num,
			v_periodo_1 AS periodo,
			CASE 
				WHEN T2.actividad_tr IN ('ACTIVO','DORMIDO BLANDO','OTROS CON SALDO','SEMIACTIVO') AND T3.rango_prob IN ('0.4 - 0.5','0.5 - 0.6','0.6 - 0.7','0.7 - 0.8','0.8 - 0.9','0.9 - 1.0') THEN 'VERDES' 
				ELSE 'NO_VERDES' 
			END AS marca_verdes
		FROM schm_data_analytics.ppff_trx_sav T1
		LEFT JOIN schm_workspace.ppff_act_tr T2
			ON T1.rut = T2.rut
		LEFT JOIN schm_workspace.ppff_score_sav_adva T3
			ON T1.rut = T3.rut
		LEFT JOIN schm_workspace.ppff_sav_aprobado_final AS T4
			ON T1.rut = T4.rut_real 
		WHERE via_final IN ('BCO')
			AND T1.periodo = v_periodo_1
		GROUP BY 
			T1.rut,
			T2.actividad_tr,
			T3.rango_prob,
			T4.oferta_sav_aprobado,
			T4.pd_sav_final,
			T4.tramo_pd_final, 
			T4.tramo_pd_motor,
			T4.pd_sav_ori, 
			T4.pd_sav_unificada,
			T1.via_final,
			T1.periodo
		;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_bco_new3 AS 
		SELECT
			'BCO' AS canal,
			A.*,
			CASE 
				WHEN B.rut IS NOT NULL THEN 1 
				ELSE 0 
			END AS curse,
			B.rut,
			B.trx AS trx,
			B.monto_curse,
			B.oferta_sav_aprobado,
			B.via_final
		FROM schm_workspace.ppff_visitas_bco_new2 AS A
		FULL JOIN schm_workspace.ppff_transacciones_bco AS B --FULL
			ON A.rut_cliente = B.rut
		;
	
	
		UPDATE schm_workspace.ppff_visitas_bco_new3
			SET rut_cliente = rut
		WHERE curse = 1
			AND rut IS NOT NULL
			AND rut_cliente IS NULL
		;
	
	
		UPDATE schm_workspace.ppff_visitas_bco_new3
			SET monto_oferta = oferta_sav_aprobado
		WHERE curse = 1
			AND oferta_sav_aprobado IS NOT NULL
			AND monto_oferta IS NULL
		;
	
	
		CREATE TABLE schm_workspace.ppff_anexa_vta_bco AS 
		SELECT 
			'BCO' as canal,
			T1.rut as rut_cliente,
			1 as cantidad,
			1 as humano,
			1 as vis_ofe_aprob,
			1 as vis_ofe_pre_aprob,
			T1.oferta_sav_aprobado as monto_oferta,
			T2.tramo_pd_final,
			T2.tramo_pd_motor,
			1 as curse,
			T1.rut,
			1 as trx,
			T1.monto_curse,
			T1.oferta_sav_aprobado, 
			T1.via_final
		FROM schm_workspace.ppff_transacciones_bco T1
		LEFT JOIN schm_workspace.ppff_visitas_bco_new3 T2
			ON T1.rut = T2.rut_cliente
		WHERE T2.rut_cliente IS NULL;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_bco_new4 AS
		SELECT 
			* 
		FROM schm_workspace.ppff_visitas_bco_new3
		UNION ALL 
		SELECT 
			* 
		FROM schm_workspace.ppff_anexa_vta_bco
		;
	
	
		CREATE TABLE schm_workspace.ppff_funnel_bco_new AS 
		SELECT 
			T1.*
		FROM schm_workspace.ppff_visitas_bco_new4 T1
		;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_movil_new AS
		SELECT DISTINCT 
			rut_cliente,
			(COUNT(rut_cliente)) AS cantidad,
			CASE 
				WHEN (rut_cliente BETWEEN 1000000 AND 50000000) AND rut_cliente NOT IN (1111111,2222222,3333333,4444444,5555555,6666666,7777777,8888888,9999999,11111111,22222222,33333333,44444444) THEN 1 
				ELSE 0 
			END AS humano
		FROM schm_workspace.ppff_universo_vis T1
		WHERE nomb_origen = 'MOVIL'
		GROUP BY rut_cliente
		;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_movil_new2 AS
		SELECT 
			A.*,
			CASE 
				WHEN  B2.rut_real IS NOT NULL THEN 1 
				ELSE 0 
			END AS vis_ofe_aprob,
			CASE 
				WHEN  B2.rut_real IS NOT NULL THEN 1 
				ELSE 0 
			END AS vis_ofe_pre_aprob,
			(SUM(B2.monto_oferta_sav)) AS monto_oferta,
			B2.Tramo_pd_Final,
			B2.Tramo_pd_Motor
		FROM schm_workspace.ppff_visitas_movil_new AS A 
		LEFT JOIN schm_workspace.ppff_sav_prea_final AS B2
			ON A.rut_cliente = B2.rut_real
		GROUP BY 
			A.rut_cliente,
			B2.rut_real,
			A.cantidad,
			A.humano,
			B2.tramo_pd_final,
			B2.tramo_pd_motor
		;
	
	
		CREATE TABLE schm_workspace.ppff_transacciones_movil AS
		SELECT 
			T1.rut,
			T2.actividad_tr,
			T3.rango_prob,
			(COUNT(T1.rut)) AS trx, 
			(SUM(T1.capital)) AS monto_curse,
			T4.oferta_sav_aprobado,
			T4.pd_sav_final, 
			T4.tramo_pd_final, 
			T4.pd_sav_ori, 
			T4.pd_sav_unificada, 
			T4.tramo_pd_motor, 
			T1.via_final,
			T1.periodo AS fec_num,
			v_periodo_1 AS periodo,
			CASE 
				WHEN T2.actividad_tr IN ('ACTIVO','DORMIDO BLANDO','OTROS CON SALDO','SEMIACTIVO') AND T3.rango_prob IN ('0.4 - 0.5','0.5 - 0.6','0.6 - 0.7','0.7 - 0.8','0.8 - 0.9','0.9 - 1.0') THEN 'VERDES' 
				ELSE 'NO_VERDES' 
			END AS marca_verdes
		FROM schm_data_analytics.ppff_trx_sav T1
		LEFT JOIN schm_workspace.ppff_act_tr T2
			ON T1.rut = T2.rut
		LEFT JOIN schm_workspace.ppff_score_sav_adva T3
			ON T1.rut = T3.rut
		LEFT JOIN schm_workspace.ppff_sav_aprobado_final AS T4
			ON T1.rut = T4.rut_real 
		WHERE via_final = 'MOVIL'
			AND T1.periodo = v_periodo_1
		GROUP BY 
			T1.rut,
			T2.actividad_tr,
			T3.rango_prob,
			T4.oferta_sav_aprobado,
			T4.pd_sav_final,
			T4.tramo_pd_final, 
			T4.tramo_pd_motor,
			T4.pd_sav_ori, 
			T4.pd_sav_unificada,
			T1.via_final,
			T1.periodo
		;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_movil_new3 AS 
		SELECT
			'MOVIL' AS CANAL,
			A.*,
			CASE 
				WHEN B.rut IS NOT NULL THEN 1 
				ELSE 0 
			END AS curse,
			B.rut,
			B.trx AS trx,
			B.monto_curse,
			B.oferta_sav_aprobado,
			B.via_final
		FROM schm_workspace.ppff_visitas_movil_new2 AS A
		FULL JOIN schm_workspace.ppff_transacciones_movil AS B  
			ON A.rut_cliente = B.rut
		;
	
	
		UPDATE schm_workspace.ppff_visitas_movil_new3
		SET rut_cliente = rut
		WHERE curse = 1
			AND rut IS NOT NULL
			AND rut_cliente IS NULL
		;
	
		UPDATE schm_workspace.ppff_visitas_movil_new3
			SET monto_oferta = oferta_sav_aprobado
		WHERE curse = 1
			AND oferta_sav_aprobado IS NOT NULL
			AND monto_oferta IS NULL 
		; 
	
	
		CREATE TABLE schm_workspace.ppff_anexa_vta_movil AS
		SELECT 
			'MOVIL' AS canal,
			T1.rut AS rut_cliente,
			1 AS cantidad,
			1 AS humano,
			1 AS vis_ofe_aprob,
			1 AS vis_ofe_pre_aprob,
			T1.oferta_sav_aprobado AS monto_oferta,
			T2.tramo_pd_final,
			T2.tramo_pd_motor,
			1 AS curse,
			T1.rut,
			1 AS trx,
			T1.monto_curse,
			T1.oferta_sav_aprobado, 
			T1.via_final  
		FROM schm_workspace.ppff_transacciones_movil T1
		LEFT JOIN schm_workspace.ppff_visitas_movil_new3 T2
			ON T1.rut = T2.rut_cliente
		WHERE T2.rut_cliente IS NULL
		;
	
	
		CREATE TABLE schm_workspace.ppff_visitas_movil_new4 AS
		SELECT 
			* 
		FROM schm_workspace.ppff_visitas_movil_new3
		UNION ALL
		SELECT 
			* 
		FROM schm_workspace.ppff_anexa_vta_movil
		;
	
	
		CREATE TABLE schm_workspace.ppff_funnel_movil_new AS
		SELECT 
			T1.*
		FROM schm_workspace.ppff_visitas_movil_new4 T1
		;
	
	
		CREATE TABLE schm_workspace.ppff_funnel_new_sav AS
		SELECT 
			* 
		FROM schm_workspace.ppff_funnel_tv_new
		UNION ALL 
		SELECT 
			* 
		FROM schm_workspace.ppff_funnel_tf_new
		UNION ALL 
		SELECT 
			* 
		FROM schm_workspace.ppff_funnel_cis_new
		UNION ALL 
		SELECT 
			* 
		FROM schm_workspace.ppff_funnel_bco_new
		UNION ALL 
		SELECT 
			* 
		FROM schm_workspace.ppff_funnel_movil_new
		;
	
	
		CREATE TABLE schm_workspace.ppff_funnel_new_sav_f AS 
		SELECT 
			T1.*,
			T2.actividad_tr, 
			T3.rango_prob,
			T4.decil_sav,
			CASE 
				WHEN T2.actividad_tr IN ('ACTIVO','DORMIDO BLANDO','OTROS CON SALDO','SEMIACTIVO') AND T3.rango_prob IN ('0.4 - 0.5','0.5 - 0.6','0.6 - 0.7','0.7 - 0.8','0.8 - 0.9','0.9 - 1.0') THEN 'VERDES' 
				ELSE 'NO_VERDES' 
			END AS marca_verdes,
			CASE 
				WHEN T2.actividad_tr IN ('ACTIVO','DORMIDO BLANDO','OTROS CON SALDO','SEMIACTIVO') AND T4.decil_sav IN ('D10','D09','D08') THEN 'VERDES' 
				ELSE 'NO_VERDES' 
			END AS marca_verdes_new
		FROM schm_workspace.ppff_funnel_new_sav T1
		LEFT JOIN schm_workspace.ppff_act_tr T2 
			ON T1.rut_cliente = T2.rut
		LEFT JOIN schm_workspace.ppff_score_sav_adva T3 
			ON T1.rut_cliente = T3.rut
		LEFT JOIN schm_workspace.ppff_score_sav_adva T4 
			ON T1.rut_cliente = T4.rut
		;
	
	
		CREATE TABLE schm_workspace.ppff_tv_tv AS  
		SELECT
			current_date AS fecha_ejec,
			schm_artifacts.f_period(current_date) AS periodo_ejec,
			schm_artifacts.f_period(v_fecha) AS periodo_param,
			'01.TV' AS canal,
			'01.TV' AS seguimiento, 
			v_periodo_1 as periodo,
			marca_verdes,
			marca_verdes_new,
			tramo_pd_final, 
			tramo_pd_motor,
			decil_sav,
			vis_ofe_aprob AS oferta_a, 
			vis_ofe_pre_aprob AS oferta_prea, 
			SUM(cantidad) AS visitas_totales,
			COUNT(cantidad) AS visitas_unicas, 
			COUNT(CASE WHEN humano = 1 AND vis_ofe_aprob IN (1) THEN rut_cliente END) AS oferta_unica,
			SUM(CASE WHEN humano IN (1) AND vis_ofe_aprob IN (1,0) AND curse = 1 AND via_final IN ('TV') THEN curse END) AS curse,
			SUM(monto_curse) AS mto_curse,
			SUM(CASE WHEN curse = 1 AND via_final IN ('TV') THEN monto_oferta END ) AS mto_oferta 
		FROM schm_workspace.ppff_funnel_new_sav_f
		WHERE canal = 'TV'
		GROUP BY 
			canal,
			seguimiento, 
			periodo,
			marca_verdes,
			marca_verdes_new,
			tramo_pd_final, 
			tramo_pd_motor,
			decil_sav,
			vis_ofe_aprob, 
			vis_ofe_pre_aprob
		;
	
	
		CREATE TABLE schm_workspace.ppff_tf_tf AS  
		SELECT
			current_date AS fecha_ejec,
			schm_artifacts.f_period(current_date) AS periodo_ejec,
			schm_artifacts.f_period(v_fecha) AS periodo_param,
			'02.TF' AS canal,
			'02.TF' AS seguimiento, 
			v_periodo_1 AS periodo,
			marca_verdes,
			marca_verdes_new,
			tramo_pd_final, 
			tramo_pd_motor,
			decil_sav,
			vis_ofe_aprob AS oferta_a, 
			vis_ofe_pre_aprob AS oferta_prea,  
			SUM(cantidad) AS visitas_totales,
			COUNT(cantidad) AS visitas_unicas,  
			COUNT(CASE WHEN humano = 1 AND vis_ofe_aprob IN (1) THEN rut_cliente END) AS oferta_unica,
			SUM(CASE WHEN humano IN (1) AND vis_ofe_aprob IN (1,0) AND curse = 1 AND via_final IN ('TF') THEN curse END ) AS curse,
			SUM(monto_curse) as mto_curse,
			SUM(CASE WHEN curse = 1 AND via_final IN ('TF') THEN monto_oferta END ) AS mto_oferta  
		FROM schm_workspace.ppff_funnel_new_sav_f
		WHERE canal = 'TF'
		GROUP BY 
			canal,
			seguimiento, 
			periodo,
			marca_verdes,
			marca_verdes_new,
			tramo_pd_final, 
			tramo_pd_motor,
			decil_sav,
			vis_ofe_aprob, 
			vis_ofe_pre_aprob 
		;
		
		
		CREATE TABLE schm_workspace.ppff_cis_cis AS  
		SELECT
			current_date AS fecha_ejec,
			schm_artifacts.f_period(current_date) AS periodo_ejec,
			schm_artifacts.f_period(v_fecha) AS periodo_param,
			'03.CIS' AS canal,
			'03.CIS' AS seguimiento, 
			v_periodo_1 AS periodo,
			marca_verdes,
			marca_verdes_new,
			tramo_pd_final, 
			tramo_pd_motor,
			decil_sav,
			vis_ofe_aprob AS oferta_a, 
			vis_ofe_pre_aprob AS oferta_prea,  
			SUM(cantidad) AS visitas_totales,
			COUNT(cantidad) AS visitas_unicas, 
			COUNT(CASE WHEN humano = 1 AND vis_ofe_pre_aprob  IN (1) THEN rut_cliente END) AS oferta_unica,
			SUM(CASE WHEN humano IN (1) AND vis_ofe_pre_aprob IN (1,0) AND curse = 1 AND via_final IN ('CIS','TEF') THEN curse END) AS curse,
			SUM(monto_curse) AS mto_curse,
			SUM(CASE WHEN curse = 1 AND via_final IN ('CIS','TEF') THEN monto_oferta END) AS mto_oferta 
		FROM schm_workspace.ppff_funnel_new_sav_f
		WHERE canal = 'CCSS'
		GROUP BY 
			canal,
			seguimiento, 
			periodo,
			marca_verdes,
			marca_verdes_new,
			tramo_pd_final, 
			tramo_pd_motor,
			decil_sav,
			vis_ofe_aprob, 
			vis_ofe_pre_aprob
		;
		
		
		CREATE TABLE schm_workspace.ppff_bco_bco AS  
		SELECT
			current_date AS fecha_ejec,
			schm_artifacts.f_period(current_date) AS periodo_ejec,
			schm_artifacts.f_period(v_fecha) AS periodo_param,
			'04.BCO' AS canal,
			'04.BCO' AS seguimiento, 
			v_periodo_1 AS periodo,
			marca_verdes,
			marca_verdes_new,
			tramo_pd_final, 
			tramo_pd_motor,
			decil_sav,
			vis_ofe_aprob AS oferta_a, 
			vis_ofe_pre_aprob AS oferta_prea,  
			SUM(cantidad) AS visitas_totales,
			COUNT(cantidad) AS visitas_unicas, 
			COUNT(CASE WHEN humano = 1 AND vis_ofe_pre_aprob IN (1) THEN rut_cliente END) AS oferta_unica,
			SUM(CASE WHEN humano IN (1) AND vis_ofe_aprob IN (1,0) AND curse = 1 AND via_final IN ('BCO') THEN curse END ) AS curse,
			SUM(monto_curse) AS mto_curse,
			SUM(CASE WHEN curse = 1 AND via_final IN ('BCO') THEN monto_oferta END) AS mto_oferta 
		FROM schm_workspace.ppff_funnel_new_sav_f
		WHERE canal = 'BCO'
		GROUP BY 
			canal,
			seguimiento, 
			periodo,
			marca_verdes,
			marca_verdes_new,
			tramo_pd_final, 
			tramo_pd_motor,
			decil_sav,
			vis_ofe_aprob, 
			vis_ofe_pre_aprob
		;
	
	
		CREATE TABLE schm_workspace.ppff_movil_movil AS  
		SELECT
			current_date AS fecha_ejec,
			schm_artifacts.f_period(current_date) AS periodo_ejec,
			schm_artifacts.f_period(v_fecha) AS periodo_param,
			'05.MOVIL' AS canal,
			'05.MOVIL' AS seguimiento, 
			v_periodo_1 AS periodo,
			marca_verdes,
			marca_verdes_new,
			tramo_pd_final, 
			tramo_pd_motor,
			decil_sav,
			vis_ofe_aprob AS oferta_a, 
			vis_ofe_pre_aprob AS oferta_prea,  
			SUM(cantidad) AS visitas_totales,
			COUNT(cantidad) AS visitas_unicas, 
			COUNT(CASE WHEN humano = 1 AND vis_ofe_pre_aprob IN (1,0) THEN rut_cliente END) AS oferta_unica,
			SUM(CASE WHEN humano IN (1) AND vis_ofe_aprob IN (1,0) AND curse = 1 AND via_final = 'MOVIL' THEN curse END) AS curse,
			SUM(monto_curse) AS mto_curse,
			SUM(CASE WHEN curse = 1 AND via_final = 'MOVIL' THEN monto_oferta END) AS mto_oferta 
		FROM schm_workspace.ppff_funnel_new_sav_f
		WHERE canal = 'MOVIL'
		GROUP BY 
			canal,
			seguimiento, 
			periodo,
			marca_verdes,
			marca_verdes_new,
			tramo_pd_final, 
			tramo_pd_motor,
			decil_sav,
			vis_ofe_aprob, 
			vis_ofe_pre_aprob
		;
	
	
		CREATE TABLE schm_workspace.ppff_funnel_sav_resumen AS
		SELECT 
			* 
		FROM schm_workspace.ppff_tv_tv
		UNION ALL 
		SELECT 
			* 
		FROM schm_workspace.ppff_tf_tf
		UNION ALL 
		SELECT 
			* 
		FROM schm_workspace.ppff_cis_cis
		UNION ALL 
		SELECT 
			* 
		FROM schm_workspace.ppff_bco_bco
		UNION ALL 
		SELECT 
			* 
		FROM schm_workspace.ppff_movil_movil
		;
		
	
		INSERT INTO schm_data_analytics.ppff_funnel_sav_resumen
		SELECT
			*
		FROM schm_workspace.ppff_funnel_sav_resumen
		;

	
		IF i = 1 THEN
		
			v_periodo_1 := schm_artifacts.f_period(trunc(DATEADD(MM,-1,v_fecha)));
			v_periodo_2 := schm_artifacts.f_period(trunc(DATEADD(MM,-3,v_fecha)));
			
		ELSIF i = 2 THEN 
		
			v_periodo_1 := schm_artifacts.f_period(trunc(DATEADD(MM,-12,v_fecha)));
			v_periodo_2 := schm_artifacts.f_period(trunc(DATEADD(MM,-14,v_fecha)));
		
		END IF;
	
	
	END LOOP;
	
	
	DROP TABLE IF EXISTS schm_workspace.ppff_repricing_periodo_paso;
	DROP TABLE IF EXISTS schm_workspace.ppff_repricing_sav_pre;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas;
	DROP TABLE IF EXISTS schm_workspace.ppff_sav_aprobado;
	DROP TABLE IF EXISTS schm_workspace.ppff_sav_aprobado_final;
	DROP TABLE IF EXISTS schm_workspace.ppff_sav_prea;
	DROP TABLE IF EXISTS schm_workspace.ppff_sav_prea_final;
	DROP TABLE IF EXISTS schm_workspace.ppff_act_tr;
	DROP TABLE IF EXISTS schm_workspace.ppff_score_sav_adva;
	DROP TABLE IF EXISTS schm_workspace.ppff_universo_vis;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tv_new;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tv_new2;
	DROP TABLE IF EXISTS schm_workspace.ppff_transacciones_tv;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tv_new3;
	DROP TABLE IF EXISTS schm_workspace.ppff_anexa_vta_tv;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tv_new4;
	DROP TABLE IF EXISTS schm_workspace.ppff_funnel_tv_new;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tf_new;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tf_new2;
	DROP TABLE IF EXISTS schm_workspace.ppff_transacciones_tf;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tf_new3;
	DROP TABLE IF EXISTS schm_workspace.ppff_anexa_vta_tf;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_tf_new4;
	DROP TABLE IF EXISTS schm_workspace.ppff_funnel_tf_new;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_cis_new;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_cis_new2;
	DROP TABLE IF EXISTS schm_workspace.ppff_transacciones_cis;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_cis_new3;
	DROP TABLE IF EXISTS schm_workspace.ppff_anexa_vta_cis;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_cis_new4;
	DROP TABLE IF EXISTS schm_workspace.ppff_funnel_cis_new;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_bco_new;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_bco_new2;
	DROP TABLE IF EXISTS schm_workspace.ppff_transacciones_bco;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_bco_new3;
	DROP TABLE IF EXISTS schm_workspace.ppff_anexa_vta_bco;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_bco_new4;
	DROP TABLE IF EXISTS schm_workspace.ppff_funnel_bco_new;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_movil_new;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_movil_new2;
	DROP TABLE IF EXISTS schm_workspace.ppff_transacciones_movil;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_movil_new3;
	DROP TABLE IF EXISTS schm_workspace.ppff_anexa_vta_movil;
	DROP TABLE IF EXISTS schm_workspace.ppff_visitas_movil_new4;
	DROP TABLE IF EXISTS schm_workspace.ppff_funnel_movil_new;
	DROP TABLE IF EXISTS schm_workspace.ppff_funnel_new_sav;
	DROP TABLE IF EXISTS schm_workspace.ppff_funnel_new_sav_f;
	DROP TABLE IF EXISTS schm_workspace.ppff_tv_tv;
	DROP TABLE IF EXISTS schm_workspace.ppff_tf_tf;
	DROP TABLE IF EXISTS schm_workspace.ppff_cis_cis;
	DROP TABLE IF EXISTS schm_workspace.ppff_bco_bco;
	DROP TABLE IF EXISTS schm_workspace.ppff_movil_movil;
	DROP TABLE IF EXISTS schm_workspace.ppff_funnel_sav_resumen;
	

END;





$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_leads(v_nombre_campaing varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
	
BEGIN 
	
	DROP TABLE IF EXISTS schm_workspace.simulation_sav;
	DROP TABLE IF EXISTS schm_workspace.simulation_av;
 	DROP TABLE IF EXISTS schm_workspace.union_simulations;
	DROP TABLE IF EXISTS schm_workspace.oferta_sav_aprobado;
	DROP TABLE IF EXISTS schm_workspace.rutero_cons_aprobado;
	DROP TABLE IF EXISTS schm_workspace.of_aprobada_con_cup;
	DROP TABLE IF EXISTS schm_workspace.simulation_personal_loan;
	DROP TABLE IF EXISTS schm_workspace.pwa_curses;
	DROP TABLE IF EXISTS schm_workspace.minimo;
	DROP TABLE IF EXISTS schm_workspace.simulaciones_final;
	DROP TABLE IF EXISTS schm_workspace.simulaciones_final_2;
	DROP TABLE IF EXISTS schm_workspace.base_extraccion;
	DROP TABLE IF EXISTS schm_data_analytics.ppff_leads_call_center;
	
	CREATE TABLE schm_workspace.simulation_sav AS
	SELECT
		a.id 
		,a."token" 
		,a.first_expiration_date 
		,a.total
		,a.number_of_installments 
		,a.special_installment 
		,a.cae 
		,a.taxes_amount 
		,a.comision_amount 
		,a.monthly_interest_rate 
		,a.created_at_utc_cl AS fecha
		,a.created_at_utc_cl_hora AS hora
		,a.simulation_amount 
		,a.insurance_amount 
		,a.device AS dispositivo
		,a.uuid 
		,a.confirmed 
		,a.origin 
		,a.insurance_code 
		,a.periodo
		,b.session_rut AS rut
		,current_date AS fecha_r
		,'sav' AS producto
	FROM
		br_dm_prod_bigdata_pwa_db.sim_sav AS a
	JOIN "br_dm_prod_bigdata_pwa_db"."login" AS b 
	      ON
		a.token = b.token
	WHERE
		a.created_at_utc_cl BETWEEN (dateadd(DAY,-15,current_date)) AND current_date
	;
	
	CREATE TABLE schm_workspace.simulation_av AS
	SELECT
		a.id 
		,a."token" 
		,a.first_expiration_date 
		,a.total
		,a.number_of_installments 
		,a.special_installment 
		,a.cae 
		,a.taxes_amount 
		,a.comision_amount 
		,a.monthly_interest_rate  
		,a.created_at_utc_cl AS fecha
		,a.created_at_utc_cl_hora AS hora
		,a.simulation_amount 
		,a.insurance_amount 
		,a.device AS dispositivo
		,a.uuid 
		,a.confirmed 
		,a.origin 
		,a.insurance_code 
		,a.periodo
		,b.session_rut AS rut
		,current_date AS fecha_r
		,'av' AS producto
	FROM
		br_dm_prod_bigdata_pwa_db.sim_av AS a
	JOIN "br_dm_prod_bigdata_pwa_db"."login" AS b 
	      ON
		a.token = b.token
	WHERE
		a.created_at_utc_cl BETWEEN (dateadd(DAY,-15,current_date)) AND current_date
	;

	CREATE TABLE schm_workspace.union_simulations AS 
	SELECT *
	FROM schm_workspace.simulation_sav
	UNION
	SELECT *
	FROM schm_workspace.simulation_av
	;

	--calcular Oferta sav aprobado cargado  en bbdd campañas para filtrar;
	
	CREATE TABLE schm_workspace.oferta_sav_aprobado AS
	SELECT
		DISTINCT
		a.camp_rut_cli AS rut,
		a.camp_cod_cnd_prod,
		a.camp_flg_camp,
		b.camp_est_camp
	FROM
		br_dm_prod_bigdata_camreport_db.cbcamp_mae_ofertas a
	INNER JOIN br_dm_prod_bigdata_camreport_db.cbcamp_mae_campana b ON
		(a.camp_cod_camp_fk = b.camp_cod_camp_k)
	WHERE b.camp_est_camp IN (2)/* campaña vigente y distribuida */
		AND a.camp_flg_camp IN (1)/* oferta  vigente  */
		AND a.camp_cod_tip_prod IN ('6')/* producto sav */
		AND a.camp_cod_cnd_prod IN('605')/* sub producto sav aprobado*/
	;
	
	-- [04] Conexion a Fisa , rescate de clientes Of. Aprobada y cruce con cup_firmado;
	
	CREATE TABLE schm_workspace.rutero_cons_aprobado AS
	SELECT
		rut
	FROM br_dm_prod_bigdata_fisa_db.br_cam_minuta_final
	WHERE tipo_promo_plat = 66
	;
	
	CREATE TABLE schm_workspace.of_aprobada_con_cup AS
	SELECT
		t1.rut
	FROM
		schm_workspace.rutero_cons_aprobado AS t1
	INNER JOIN (
		SELECT DISTINCT(rut) AS rut
		FROM schm_data_analytics.cup_vigente) AS t2
	ON (t1.rut = t2.rut)
	;
	
	-- [05] Extraccion de datos de simulaciones Solo Ultimos dias;
	
	CREATE TABLE schm_workspace.simulation_personal_loan AS 
	   SELECT
		a.*
		,b.session_rut AS rut
	FROM
		br_dm_prod_bigdata_pwa_db.sim_personal_loan AS a
	JOIN "br_dm_prod_bigdata_pwa_db"."login" AS b 
	      ON a.token = b.token
	WHERE a.created_at_utc_cl BETWEEN (dateadd(DAY,-15,current_date)) AND current_date
	;
	
--LLamado a sp de validación del día, para traer la info del fds si es lunes.		
	CALL schm_artifacts.sp_eval_day_leads(DATE_PART(dayofweek, current_date)::int)
	;

-- [06] calcular curses para luego descontar;

	CREATE TABLE schm_workspace.pwa_curses AS 
	SELECT
		DISTINCT rut
	FROM
		schm_data_analytics.ppff_trx_av
	WHERE
		fecfac >= (dateadd(DAY,-15,current_date))
	UNION 
	SELECT
		DISTINCT rut
	FROM
		schm_data_analytics.ppff_trx_sav
	WHERE
		fecha >= (dateadd(DAY,-15,current_date))
	UNION 
	SELECT
		DISTINCT rut
	FROM
		schm_data_analytics.ppff_trx_consumo
	WHERE
		fecha_contble >= (dateadd(DAY,-15,current_date))
	;
	
--[07] Llevar a nivel de rut unico quedandose con primera simulacion y descontando curses;

	CREATE TABLE schm_workspace.minimo AS 
	SELECT 
	rut, 
	MIN(fecha) AS min_of_fecha
	FROM schm_workspace.simulaciones_now
	WHERE rut NOT IN (SELECT rut FROM schm_data_analytics.ctbl_lnegro_car)
	AND rut NOT IN (SELECT rut FROM schm_workspace.pwa_curses) 
	--AND rut NOT IN (SELECT rut FROM schm_data_analytics.ctbl_lnegro_car)
	--AND rut NOT IN (SELECT rut FROM br_dm_prod_bigdata_sasdata_db.sas_ctbl_lnegro_call)
	--and rut <>17603094
	GROUP BY 
	rut
	;

	CREATE TABLE schm_workspace.simulaciones_final AS 
	SELECT DISTINCT
	t1.rut, 
	t2.producto, 
	t2.monto, 
	t2.costo_final, 
	t2.cuotas, 
	t2.nro_cuotas,
	t2.monto_seguro, 
	t1.min_of_fecha AS fecha, 
	t2.dia, 
	--t2.hora,
	t2.dispositivo
	FROM schm_workspace.minimo as t1
	join schm_workspace.simulaciones_now as t2
	on (t1.rut = t2.rut AND t1.min_of_fecha = t2.fecha)
	order by 
	t1.min_of_fecha asc /*Ordenar Por Fecha*/
	;
	
-- [09] Pegar informacion de Contacto (Telefono) y Marcar con Fecha_Proceso;

	CREATE TABLE schm_workspace.simulaciones_final_2 AS 
	SELECT 
	current_date as Fecha_Proceso
	,t1.*
	,t2.telefono
	,t3.dv
	,t3.nombres
	,t3.paterno
	,t3.materno
	,t4.email
	FROM schm_workspace.simulaciones_final as t1
	left join schm_data_analytics.ctbl_fonos_movil_final as t2
	on (t1.rut = t2.clirut)
	left join schm_data_analytics.ctbl_base_nombres as t3
	on (t1.rut = t3.rut)
	left join schm_data_analytics.ctbl_base_trabajo_email  as t4
	on (t1.rut = t4.rut)  
	WHERE t2.periodo=(SELECT max(periodo) FROM schm_data_analytics.ctbl_fonos_movil_final)
	AND t1.rut NOT IN 
	(SELECT rut FROM schm_data_analytics.ppff_leads_carga_dia /* excluye cleintes en bases actuales */ 
	 WHERE Fecha_Proceso >=current_date)
	;

	CREATE TABLE schm_workspace.base_extraccion AS 
	SELECT 
	rut,
	Fecha_Proceso
	FROM schm_workspace.simulaciones_final_2
	;

--delete FROM schm_data_analytics.ppff_leads_carga_dia WHERE fecha_proceso = current_date;

	INSERT INTO schm_data_analytics.ppff_leads_carga_dia
	 (rut, fecha_proceso) 
	SELECT rut, fecha_proceso
	FROM schm_workspace.base_extraccion
	;
		
	/*Quedarse solamente con aquellos que si tienen Fono*/
	
	CREATE TABLE schm_data_analytics.ppff_leads_call_center AS 
	SELECT * 
	FROM schm_workspace.simulaciones_final_2
	WHERE
	telefono IS NOT NULL
	ORDER BY
	fecha ASC 
	;

	EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/ppff/leads/' || v_nombre_campaing || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
	RETURN;

	/*	===========================================================================================================
		=== Control de versiones visual ===
		2023-11-24 -- v01 -- Sergio Jara 	--	Versión final refactorizada y aprobada en AWS.

		=== Información adicional:
		Proceso que genera para los Call Centers, los Leads de SAV, AV y consumo para ser gestionados.
		===========================================================================================================
	*/

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_operaciones_dap(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
	
	

begin

    /* DROP TABLE IF EXISTS */
    DROP TABLE IF EXISTS schm_workspace.ppff_operaciones_dap;


    CREATE TABLE schm_workspace.ppff_operaciones_dap AS
    SELECT
          a.pda_cuenta
        , a.pda_fechaper
        , a.pda_fechaper_hora
        , a.pda_moneda
        , a.pda_status
        , a.pda_plazo
        , a.pda_capital
        , a.pda_codsuc AS codigo_sucursal
        , b.sol_channel
        , b.sol_operador
        , b.sol_numero
        , c.cli_identifica
        , c.cli_identifica AS rut
        , to_char(a.pda_fechaper,'yyyymmdd')::INTEGER AS fecha_apertura
        , ((date_part("year", a.pda_fechaper) * 100) + date_part("month", a.pda_fechaper)) AS periodo
	FROM br_dm_prod_bigdata_fisa_db.tpla_cuenta a
        INNER JOIN br_dm_prod_bigdata_fisa_db.tsol_solicitud b
        ON (a.pda_cuenta = b.sol_cuenta)
        INNER JOIN br_dm_prod_bigdata_fisa_db.tcli_persona c
        ON (a.pda_clientep = c.cli_codigo)
        WHERE c.cli_tipoper = 1
        AND a.pda_fechaper BETWEEN v_fecha_inicio AND v_fecha_fin --'20230501' AND '20230525'
	ORDER BY A.pda_fechaper;


    /* Eliminar periodo a procesar */
    DELETE FROM schm_data_analytics.ppff_operaciones_dap
    WHERE periodo = v_periodo; --202305


    /* Insertar lo nuevo para el periodo*/
    INSERT INTO schm_data_analytics.ppff_operaciones_dap
    SELECT
        a.pda_cuenta
        , a.pda_fechaper
        , a.pda_fechaper_hora
        , a.pda_moneda
        , a.pda_status
        , a.pda_plazo
        , a.pda_capital
        , a.codigo_sucursal
        , a.sol_channel
        , a.sol_operador
        , a.sol_numero
        , a.cli_identifica
        , a.rut
        , a.fecha_apertura
        , a.periodo
    FROM schm_workspace.ppff_operaciones_dap a;


    /* DROP TABLE IF EXISTS */
    DROP TABLE IF EXISTS schm_workspace.ppff_operaciones_dap;

END




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_planes_operaciones()
	LANGUAGE plpgsql
AS $$
	
	
BEGIN 


	DROP TABLE IF EXISTS schm_workspace.Seguimiento_Planes;
	CREATE TABLE schm_workspace.Seguimiento_Planes AS 
	SELECT 
		rut_cliente AS rut
		,rut_cliente_dv AS dv
		,creado_el AS Fecha_apertura
		,actualizado_el_hora AS Hora_Apertura
		,CASE 
			WHEN estado='ENABLED' THEN 'vigente'
			WHEN estado='DISABLED' THEN 'cerrada' 
		END AS estado
		,CASE 
			WHEN estado='DISABLED' THEN actualizado_el 
		END AS Fecha_cierre
		,id
		,plan_id
	FROM br_dm_prod_bigdata_reporitf_db.planes_tbl_plan_cliente
	;
	
	
	DROP TABLE IF EXISTS schm_workspace.Seguimiento_Planes2;
	CREATE TABLE schm_workspace.Seguimiento_Planes2 AS 
	SELECT 
		a.*
		,trim(b.nombres) || ' ' || trim(b.paterno) || ' ' || trim(b.materno) AS Nombre_ApPaterno_ApMaterno
	FROM schm_workspace.Seguimiento_Planes a
	LEFT JOIN schm_data_analytics.ctbl_base_nombres b 
		ON a.rut = b.rut
	;


	DROP TABLE IF EXISTS schm_workspace.Informacion_Planes;
	CREATE TABLE schm_workspace.Informacion_Planes AS 
	SELECT 
		concat(rut,dv) AS rut_dv
		,Nombre_ApPaterno_ApMaterno
		,fecha_apertura
		,hora_apertura
		,estado
		,fecha_cierre
		,id
		,plan_id
	FROM schm_workspace.Seguimiento_Planes2
	;


	DROP TABLE IF EXISTS schm_data_analytics.ppff_Informacion_Planes;
	CREATE TABLE schm_data_analytics.ppff_Informacion_Planes AS 
	SELECT DISTINCT  
		*
	FROM schm_workspace.Informacion_Planes
	ORDER BY 
		fecha_apertura DESC 
	;


	EXECUTE 'UNLOAD('|| quote_literal('select * from schm_data_analytics.ppff_Informacion_Planes order by fecha_apertura desc') ||') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/ppff/planes_operaciones/PLANES_OPERACIONES_CALL_ARCHIVO_UNICO'' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
	
	/*  ===========================================================================================================
	    === Control de versiones visual ===
	    2024-01-22 -- v01 -- David Vásquez      	-- Se actualiza esquema para UNLOAD, esta ppff y debía ser schm_data_analytics. 
	    2024-01-17 -- v00 -- Benjamín Martínez	-- Versión original refactorizada.

	    === Información adicional:
	    Proceso que..
	    ===========================================================================================================
	*/
	
	END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_principalidad_uso_tctd(v_fecha_inicio date, v_fecha_fin date, v_periodo_inicio int4, v_periodo_fin int4)
	LANGUAGE plpgsql
AS $$
	
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.ppff_periodo_rut_tc;
    DROP TABLE IF EXISTS schm_workspace.ppff_periodo_rut_td;
    DROP TABLE IF EXISTS schm_workspace.ppff_periodo_rut;
    DROP TABLE IF EXISTS schm_workspace.ppff_rutero_movs;
    DROP TABLE IF EXISTS schm_workspace.ppff_rutero_movs_2;
    DROP TABLE IF EXISTS schm_workspace.ppff_rutero_movs_3;
    DROP TABLE IF EXISTS schm_workspace.ppff_rutero_movs_4;
    DROP TABLE IF EXISTS schm_workspace.ppff_rutero_movs_5;


    CREATE TABLE schm_workspace.ppff_periodo_rut_tc AS
    SELECT
        periodo
        , rut
        , sum(mto) as monto 
    FROM ( 
        SELECT
            periodo
            , rut
            , sum(venta_tarjeta) as mto
        FROM schm_data_analytics.spos_aut 
        WHERE periodo between v_periodo_inicio and v_periodo_fin
        GROUP BY periodo, rut
        UNION ALL
        SELECT
            periodo
            , rut
            , sum(capital) as mto
        FROM schm_data_analytics.tnda_tda_itf 
        WHERE periodo between v_periodo_inicio and v_periodo_fin
        GROUP BY periodo, rut
        UNION ALL
        SELECT
            periodo
            , rut
            , sum(capital) as mto
        FROM schm_data_analytics.ppff_trx_av 
        WHERE periodo between v_periodo_inicio and v_periodo_fin
        GROUP BY periodo, rut
    )
    GROUP BY periodo, rut;


    CREATE TABLE schm_workspace.ppff_periodo_rut_td AS
    SELECT
        to_char(c1.fecha,'YYYYMM') as periodo
        , nvl(c2.cli_identifica,0) as rut
        , sum(c1.monto) as monto
    FROM
    (
        SELECT 
            b.tmo_numcue as cuenta
            , b.tmo_fechcon as fechacon
            , b.tmo_fech as fecha
            , c.rub_desc as descripcion
            , b.tmo_val as monto
            , a.con_libre as desc_negocio
            , b.tmo_codmod
            , b.tmo_tipotra
            , b.tmo_rubro
            , b.tmo_numtra
            , b.tmo_numcue
            , b.tmo_codusr
            , b.tmo_codusr
            , b.tmo_sec
            , b.tmo_codtra
            , d.cod_destra as gls_transac 
        FROM br_dm_prod_bigdata_fisa_db.tcap_concepto AS a
        LEFT JOIN br_dm_prod_bigdata_fisa_db.tcap_tramon AS b
            ON a.con_modulo = b.tmo_codmod
                AND a.con_rubro = b.tmo_rubro
                AND a.con_numtran = b.tmo_numtra
                AND a.con_cuenta = b.tmo_numcue
                AND a.con_codusr = b.tmo_codusr
                AND a.con_sec = b.tmo_sec
                AND a.con_transa = b.tmo_codtra
        INNER JOIN br_dm_prod_bigdata_fisa_db.tgen_tranrubro AS c
            ON c.rub_mod = b.tmo_codmod
                AND c.rub_tra = b.tmo_codtra
                AND c.rub_rubro = b.tmo_rubro
        LEFT JOIN br_dm_prod_bigdata_fisa_db.tgen_codtrans AS d
            ON b.tmo_codtra = d.cod_tra
                AND b.tmo_codmod = d.cod_mod
        WHERE b.tmo_tipotra in ('D')
            AND b.tmo_codpro = 4 
            AND b.tmo_codtip = 1 
            AND b.tmo_modo = 'N' 
            AND b.tmo_val > 1
            AND b.tmo_fech >= v_fecha_inicio
            AND b.tmo_fech <= v_fecha_fin
            AND c.rub_desc in ('COMPRA NACIONAL','COMPRA INTERNACIONAL','GIRO CAJERO AUTOMATICO','GIRO POR CAJA','GIRO INTERNACIONAL')
    ) AS c1
    LEFT JOIN
    (
        SELECT DISTINCT 
            cli_identifica
            , vis_numcue 
        FROM
        (
            SELECT
                a.cli_identifica
                , b.vis_numcue
            FROM br_dm_prod_bigdata_fisa_db.tcli_persona AS a
            INNER JOIN br_dm_prod_bigdata_fisa_db.tcap_vista AS b
                ON a.cli_codigo = b.vis_codcli 
            WHERE b.vis_mod = 4
                AND b.vis_pro in (4,40) 
                AND b.vis_tip = 1
                AND b.vis_status in ('2','9')
        )
    ) AS c2
    ON c1.tmo_numcue = c2.vis_numcue
    GROUP BY 1, 2;

   
    CREATE TABLE schm_workspace.ppff_periodo_rut AS 
    SELECT
        *
    FROM 
    (
        SELECT
            'TC' as categoria
            , cast(periodo as int) as periodo
            , cast(rut as int) as rut
            , monto
        FROM schm_workspace.ppff_periodo_rut_tc
        UNION ALL
        SELECT
            'TD' as categoria
            , cast(periodo as int) as periodo
            , cast(rut as int) as rut
            , monto
        FROM schm_workspace.ppff_periodo_rut_td
    );


    CREATE TABLE schm_workspace.ppff_rutero_movs AS 
    SELECT
        * 
    FROM
    (
        SELECT 
            cast(categoria as varchar(10)) as categoria
            , rut
            , count(distinct periodo) as f
            , schm_artifacts.f_meses_entre(max(periodo),v_periodo_fin) as r
            , sum(monto)/(count(distinct periodo)+0.001) as m
        FROM schm_workspace.ppff_periodo_rut
        GROUP BY 1, 2
        UNION ALL
        SELECT 
            cast('Total' as varchar(10)) as categoria
            , rut
            , count(distinct periodo) as f
            , schm_artifacts.f_meses_entre(max(periodo),v_periodo_fin) as r
            , sum(monto)/(count(distinct periodo)+0.001) as m
        FROM schm_workspace.ppff_periodo_rut
        GROUP BY 1, 2
    );


    CREATE TABLE schm_workspace.ppff_rutero_movs_2 AS
    SELECT
        categoria
        , rut
        , r
        , f
        , m
        , ntile(20) over (partition by categoria order by m desc) as mv
    FROM schm_workspace.ppff_rutero_movs;


    CREATE TABLE schm_workspace.ppff_rutero_movs_3 AS
    SELECT 
        *
        , schm_artifacts.f_valor_interpolado(r,1,12,0,0,1) as r2
        , schm_artifacts.f_valor_interpolado(f,1,0,12,0,1) as f2
        , schm_artifacts.f_valor_interpolado(mv,1,20,1,0,1) as m2
    FROM schm_workspace.ppff_rutero_movs_2;


    CREATE TABLE schm_workspace.ppff_rutero_movs_4 AS
    SELECT
        *
        , 0.35*r2 + 0.50*f2 + 0.15*m2 as rfm
    FROM schm_workspace.ppff_rutero_movs_3;


    CREATE TABLE schm_workspace.ppff_rutero_movs_5 AS 
    SELECT
        rut
        , max(case when categoria='Total' then r end) as r_total
        , max(case when categoria='Total' then f end) as f_total
        , max(case when categoria='Total' then m end) as m_total
        , max(case when categoria='Total' then mv end) as mv_total
        , max(case when categoria='TC' then r end) as r_tc
        , max(case when categoria='TC' then f end) as f_tc
        , max(case when categoria='TC' then m end) as m_tc
        , max(case when categoria='TC' then mv end) as mv_tc
        , max(case when categoria='TD' then r end) as r_td
        , max(case when categoria='TD' then f end) as f_td
        , max(case when categoria='TD' then m end) as m_td
        , max(case when categoria='TD' then mv end) as mv_td
        , max(case when categoria='Total' then rfm end) as rfm_total
        , max(case when categoria='TC' then rfm end) as rfm_tc
        , max(case when categoria='TD' then rfm end) as rfm_td  
    FROM schm_workspace.ppff_rutero_movs_4  
    GROUP BY 
        rut;


    DELETE
    FROM schm_data_analytics.ppff_principalidad_tctd
    WHERE periodo = v_periodo_fin;

   
    INSERT INTO schm_data_analytics.ppff_principalidad_tctd
    SELECT
        v_periodo_fin as periodo
        , *
    FROM schm_workspace.ppff_rutero_movs_5;

   
    DROP TABLE IF EXISTS schm_workspace.ppff_periodo_rut_tc;
    DROP TABLE IF EXISTS schm_workspace.ppff_periodo_rut_td;
    DROP TABLE IF EXISTS schm_workspace.ppff_periodo_rut;
    DROP TABLE IF EXISTS schm_workspace.ppff_rutero_movs;
    DROP TABLE IF EXISTS schm_workspace.ppff_rutero_movs_2;
    DROP TABLE IF EXISTS schm_workspace.ppff_rutero_movs_3;
    DROP TABLE IF EXISTS schm_workspace.ppff_rutero_movs_4;
    DROP TABLE IF EXISTS schm_workspace.ppff_rutero_movs_5;

	/*	===========================================================================================================
		=== Control de versiones visual ===
		2023-12-04 -- v01 -- Julio Nina		--	Versión refactorizada y validada.

		=== Información adicional:
		Proceso que ...
		===========================================================================================================
	*/
   
END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_retira_plastico(v_fecha_inicio date)
	LANGUAGE plpgsql
AS $$
	
	

BEGIN

	DROP TABLE IF EXISTS schm_workspace.retiro_ctacte;
	DROP TABLE IF EXISTS schm_workspace.salida_retira_cc2;
	DROP TABLE IF EXISTS schm_workspace.Stock_Cuenta_corriente;
	DROP TABLE IF EXISTS schm_workspace.salida_retira_cc;  


     CREATE TABLE schm_workspace.retiro_ctacte AS
        SELECT DISTINCT
            mae.pcom_cod_ide_cli_k AS id_bopers
            ,tar.tar_cac_nro_ctt_k AS numero_contrato
            ,det.pcom_pan AS numero_tarjeta
            ,SUBSTRING(prd.prd_cac_nro_ctt,9) AS numero_cuenta
            ,sol.sol_cod_ide_cli AS rut_cliente
            ,per.per_cac_ide_cli_dv AS dv
            ,sol.sol_fch_alt_sol AS fecha_solicitud
            ,sol.sol_cod_nro_sol_k AS numero_solicitud
            ,sol.sol_cod_est_sol AS estado
            ,trunc(mae.pcom_fch_k) AS  fecha_retiro
            ,mae.pcom_gls_usr_crc
            ,det.pcom_coc_suc AS codigo_suc
        FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol AS sol
        INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe AS ofe/* nuevo */
            ON sol.sol_cod_nro_sol_k = ofe.ofe_cod_nro_sol_k /* nuevo */
            AND  SUBSTRING(ofe.ofe_cod_prd_ofe_k ,1,2) = '21' /* nuevo - codigo de ctacte*/
            AND ofe.ofe_cod_ind_ngc = 1 /* nuevo - indicador de negociacion*/
            AND ofe.ofe_cod_ind_alt = 1 /* nuevo - referencia a la alta del producto */
        INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_tar AS tar
            ON tar.tar_cod_nro_sol_k = sol.sol_cod_nro_sol_k
        INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol AS prd
            ON tar.tar_cod_nro_sol_k = prd.prd_cod_nro_sol_k
            AND tar.tar_cod_tip_prd_k = prd.prd_cod_tip_prd_k
        INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_dat_per AS per
            ON prd.prd_cod_nro_sol_k = per.per_cod_nro_sol_k
            AND sol.sol_cod_ide_cli = per.per_cod_ide_cli_k
        INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_mae_reg_evt AS mae
            ON sol.sol_nro_inn_ide  = mae.pcom_cod_ide_cli_k
            AND mae.pcom_cod_evt_k = 257
            AND  mae.pcom_desc_doc = sol.sol_cod_ide_cli
            AND  MAE.PCOM_FCH_K > SOL.SOL_FCH_ALT_SOL
            --AND mae.YEAR = 2023 AND mae.MONTH = 12
        INNER JOIN br_dm_prod_bigdata_reporitf_db.fepcom_det_reg_evt AS det
            ON mae.pcom_nro_seq_k = det.pcom_nro_seq_k AND
            det.pcom_cod_evt_k = 257 AND
            (det.pcom_nro_ctt = SUBSTRING(tar.tar_cac_nro_ctt_k,1,4) || '-' || SUBSTRING(tar.tar_cac_nro_ctt_k,5,4) || '-' || SUBSTRING(tar.tar_cac_nro_ctt_k,9,12) OR
            det.pcom_nro_ctt = SUBSTRING(tar.tar_cac_nro_ctt_k,9,12))
        INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt009 mp
            ON mp.cuenta = SUBSTRING(REPLACE(det.PCOM_NRO_CTT, '-', ''),9,12)
            AND MP.codent = SUBSTRING(REPLACE(det.PCOM_NRO_CTT, '-', ''),1,4)
            AND MP.centalta = SUBSTRING(REPLACE(det.PCOM_NRO_CTT, '-', ''),5,4)
            AND trim(mp.PAN) = trim(DET.PCOM_PAN)
            AND MP.numbencta = 1
            AND TRIM(MP.INDULTTAR) = 'S' /*ULTIMA TARJETA EN PODER DEL CLIENTE */
        WHERE
            SUBSTRING(tar.tar_cod_tip_prd_k,1,2) = '21'
            AND sol.sol_cod_cll_adm = 2
            AND MAE.PCOM_FCH_K between '2021-09-01' AND v_fecha_inicio
            AND EXISTS (SELECT
                            btc_cod_nro_sol_k
                        FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_btc_sol
                        WHERE
                            btc_cod_nro_sol_k = sol.sol_cod_nro_sol_k
                            AND btc_cod_tip_reg_k = 1
                            AND btc_cod_eta_k = 102
                            AND btc_cod_evt_k = 30)
        ORDER BY  sol.sol_cod_nro_sol_k ASC;
 
 
   
    CREATE TABLE schm_workspace.Stock_Cuenta_corriente AS
         SELECT
            b.cli_identifica AS  rut
            ,b.cli_identifica_dv AS dv
            ,a.vis_numcue AS Cuenta
            ,a.vis_fechape AS Fecha_Apertura
            ,a.periodo AS Periodo_Apertura
            ,a.vis_fechcierr AS Fecha_Cierre
            ,CASE
                WHEN a.vis_pro=4 THEN 'CUENTA_VISTA'
                WHEN a.vis_pro=1 THEN 'CUENTA_CORRIENTE'
                WHEN a.vis_pro=40 THEN 'LCA'
            END AS descrip_producto
            ,CASE
                WHEN a.vis_status ='9' THEN 'cerrado'   
                WHEN a.vis_status ='2' THEN 'vigente'
            END as estado_cuenta
            ,a.vis_suc AS Codigo_Sucursal
            ,d.suc_nombre AS nombre_sucursal
            ,c.des_codigo cod_cierre_contrato
            ,c.des_descripcion desc_cierre_contrato
            ,CASE WHEN a.vis_suc=70 THEN 1 ELSE 0 END AS Digital
            ,CASE WHEN a.vis_suc<>70 THEN 1 ELSE 0 END AS Presencial          
        FROM  br_dm_prod_bigdata_fisa_db.tcap_vista AS a       
        INNER JOIN  br_dm_prod_bigdata_fisa_db.tcli_persona AS  b
            ON (a.vis_codcli = b.cli_codigo)
        LEFT JOIN br_dm_prod_bigdata_fisa_db.tgen_desctabla AS c
            ON (a.vis_codtab=c.des_codtab) AND (a.vis_caucierr=c.des_codigo)
        LEFT JOIN br_dm_prod_bigdata_fisa_db.tgen_sucursal AS d
            ON (a.vis_suc=d.suc_codigo)
        WHERE
            a.vis_mod=4
            AND (a.VIS_PRO=1)
            AND a.vis_tip=1  
            AND (a.vis_status='2')
            and a.vis_suc = 70;
 
                  
    CREATE TABLE schm_workspace.salida_retira_cc AS
        SELECT
        a.rut
        ,a.dv
        ,a.cuenta
        ,a.fecha_apertura
        ,a.estado_cuenta
        ,CASE
            WHEN b.rut_cliente IS NOT NULL THEN 1 ELSE 0
        END AS retiro        
        FROM schm_workspace.Stock_Cuenta_corriente a
        LEFT JOIN schm_workspace.retiro_ctacte b
            ON a.rut = b.rut_cliente AND a.cuenta = b.numero_cuenta ;  
           
     
    CREATE TABLE schm_workspace.salida_retira_cc2 AS
        SELECT
            rut,
            dv
        FROM schm_workspace.salida_retira_cc
        WHERE retiro=0;
 
       
END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_retira_plastico_proceso(v_fecha_inicio date, v_fecha_fin date)
	LANGUAGE plpgsql
AS $$
	

BEGIN
 
	DROP TABLE IF EXISTS schm_workspace.POPRET_PL_DETAL_01_CAMP;
	DROP TABLE IF EXISTS schm_workspace.POPRET_PL_ENCAB_01_CAMP;
	DROP TABLE IF EXISTS schm_workspace.tmp2;
 
 
   CREATE TABLE schm_workspace.POPRET_PL_DETAL_01_CAMP AS	/*	ACTUALIZAR */
   SELECT 3 AS "2",
          'CAMPRET01' AS COD_CAMP,
          v_fecha_inicio AS FEC_INI,
          v_fecha_fin AS FEC_TER,
          t1.rut  AS RUT,
		  t1.dv AS DV,
          0 AS MTO_OFERTA,									/*	ACTUALIZAR SI CORRESPONDE	*/
          0 AS PLZ_MIN,
          0 AS PLZ_MAX, 									/*	ACTUALIZAR SI CORRESPONDE	*/
          0 AS TAS_MIN_RIESGO, 								/*	ACTUALIZAR SI CORRESPONDE	*/
          0 AS RENTA, 										/*	ACTUALIZAR SI CORRESPONDE	*/
          '' 	AS COD_ENTIDAD,
          '' 	AS CENTRO_ALTA,
          '' 	AS CUENTA,
          0 AS CLASE_PROM,
          '800' AS TIP_PROD,
          '8034' AS COND_PROD, 							/*	ACTUALIZAR SI CORRESPONDE	*/
          0 AS PAGO_MIN,
          '206' AS ORIGEN_BASE,
          0 AS ENTIDAD,
          4 AS CREADOR,
          1 AS FLAG_CAMP, /*1= se ve  0=no se ve*/
          1 AS ORDEN_PRIO,
          0 AS EGP,
          0 AS ECP,
         '0000'  AS COD_LIN1,
          0 AS MTO_LIN1,
          '0000' AS COD_LIN2,
          0 AS MTO_LIN2,
          '0000' AS COD_LIN3,
          0 AS MTO_LIN3,
          '0000' AS COD_LIN4,
          0 AS MTO_LIN4,
          '0000' AS COD_LIN5,
          0 AS MTO_LIN5,
         '0000' AS COD_LIN6,
          0 AS MTO_LIN6,
          '0000' AS COD_LIN7,
          0 AS MTO_LIN7,
          '0000' AS COD_LIN8,
          0 AS MTO_LIN8,
          '0000' AS COD_LIN9,
          0 AS MTO_LIN9,
          '0000' AS COD_LIN10,
          0 AS MTO_LIN10,
          0 AS FILLER1,
          0 AS FILLER2,
          0 AS FILLER3,
          0 AS FILLER4,
          0 AS FILLER5,
          0 AS FILLER6,
          0 AS FILLER7,
          0 AS FILLER8,
          0 AS FILLER9,
          0 AS FILLER10,
          0 AS FILLER11,
          0 AS FILLER12,
          0 AS FILLER13,
          0 AS FILLER14
		from schm_workspace.salida_retira_cc2 t1;
 
 
   CREATE TABLE schm_workspace.POPRET_PL_ENCAB_01_CAMP AS
        SELECT 1 	AS numero_fila,
        'CAMPRET01'	AS codigo_camapan,
        'POP - RETIRO DE PLASTICO'	AS descripcion_campana,		
        FEC_INI	AS FECHA_INICIO,
        FEC_TER AS FECHA_TERMINO,
        TIP_PROD,
        COND_PROD
        FROM schm_workspace.POPRET_PL_DETAL_01_CAMP; /*(obs=1)*/
 
        
  
        
    CREATE TABLE schm_workspace.tmp2 AS
        	SELECT '3' AS numero,
            COD_CAMP::varchar(50),
            replace(FEC_INI::varchar(50), '-','') AS FEC_INI,
            replace(FEC_TER::varchar(50), '-', '') AS FEC_TER,  
            RUT::varchar(50) as RUT,
            DV::varchar(50),
            MTO_OFERTA::varchar(50) as MTO_OFERTA,
            PLZ_MIN::varchar(50) as PLZ_MIN,
            PLZ_MAX::varchar(50) as PLZ_MAX,
            TAS_MIN_RIESGO::varchar(50) as TAS_MIN_RIESGO,
            RENTA::varchar(50) as RENTA,
            COD_ENTIDAD::varchar(50),
            CENTRO_ALTA::varchar(50),
            CUENTA::varchar(50),
            CLASE_PROM::varchar(50) as CLASE_PROM,
            TIP_PROD::varchar(50),
            COND_PROD::varchar(50),
            PAGO_MIN::varchar(50) as PAGO_MIN,
            ORIGEN_BASE::varchar(50),
            ENTIDAD::varchar(50) as ENTIDAD,  
            CREADOR::varchar(50) as CREADOR,
            FLAG_CAMP::varchar(50) as FLAG_CAMP,
            ORDEN_PRIO::varchar(50) AS ORDEN_PRIO,
            EGP::varchar(50) AS EGP,
            ECP::varchar(50) AS ECP,
            COD_LIN1::varchar(50) AS COD_LIN1,
            MTO_LIN1::varchar(50) AS MTO_LIN1,
            COD_LIN2::varchar(50) AS COD_LIN2,
            MTO_LIN2::varchar(50) AS MTO_LIN2,
            COD_LIN3::varchar(50) AS COD_LIN3,
            MTO_LIN3::varchar(50) AS MTO_LIN3,
            COD_LIN4::varchar(50) AS COD_LIN4,
            MTO_LIN4::varchar(50) AS MTO_LIN4,
            COD_LIN5::varchar(50) AS COD_LIN5,
            MTO_LIN5::varchar(50) AS MTO_LIN5,
            COD_LIN6::varchar(50) AS COD_LIN6,
            MTO_LIN6::varchar(50) AS MTO_LIN6,
            COD_LIN7::varchar(50) AS COD_LIN7,
            MTO_LIN7::varchar(50) AS MTO_LIN7,
            COD_LIN8::varchar(50) AS COD_LIN8,
            MTO_LIN8::varchar(50) AS MTO_LIN8,
            COD_LIN9::varchar(50) AS COD_LIN9,
            MTO_LIN9::varchar(50) AS MTO_LIN9,
            COD_LIN10::varchar(50) AS COD_LIN10,
            MTO_LIN10::varchar(50) AS MTO_LIN10,
            FILLER1::varchar(50) AS FILLER1,
            FILLER2::varchar(50) AS FILLER2,
            FILLER3::varchar(50) AS FILLER3,
            FILLER4::varchar(50) AS FILLER4,
            FILLER5::varchar(50) AS FILLER5,
            FILLER6::varchar(50) AS FILLER6,
            FILLER7::varchar(50) AS FILLER7,
            FILLER8::varchar(50) AS FILLER8,
            FILLER9::varchar(50) AS FILLER9,
            FILLER10::varchar(50) AS FILLER10,
            FILLER11::varchar(50) AS FILLER11,
            FILLER12::varchar(50) AS FILLER12,
            FILLER13::varchar(50) AS FILLER13,
            FILLER14::varchar(50) AS FILLER14
        FROM schm_workspace.POPRET_PL_DETAL_01_CAMP;
        
	INSERT INTO schm_workspace.tmp2 (
	    numero,
	    COD_CAMP,
	    FEC_INI,
	    FEC_TER,
	    RUT,
	    DV,
	    MTO_OFERTA,
	    PLZ_MIN,
	    PLZ_MAX,
	    TAS_MIN_RIESGO,
	    RENTA,
	    COD_ENTIDAD,
	    CENTRO_ALTA,
	    CUENTA,
	    CLASE_PROM,
	    TIP_PROD,
	    COND_PROD,
	    PAGO_MIN,
	    ORIGEN_BASE,
	    ENTIDAD,
	    CREADOR,
	    FLAG_CAMP,
	    ORDEN_PRIO,
	    EGP,
	    ECP,
	    COD_LIN1,
	    MTO_LIN1,
	    COD_LIN2,
	    MTO_LIN2,
	    COD_LIN3,
	    MTO_LIN3,
	    COD_LIN4,
	    MTO_LIN4,
	    COD_LIN5,
	    MTO_LIN5,
	    COD_LIN6,
	    MTO_LIN6,
	    COD_LIN7,
	    MTO_LIN7,
	    COD_LIN8,
	    MTO_LIN8,
	    COD_LIN9,
	    MTO_LIN9,
	    COD_LIN10,
	    MTO_LIN10,
	    FILLER1,
	    FILLER2,
	    FILLER3,
	    FILLER4,
	    FILLER5,
	    FILLER6,
	    FILLER7,
	    FILLER8,
	    FILLER9,
	    FILLER10,
	    FILLER11,
	    FILLER12,
	    FILLER13,
	    FILLER14
	)
	VALUES (
	    '2',
	    'COD_CAMP',
	    'FEC_INI',
	    'FEC_TER',
	    'RUT',
	    'DV',
	    'MTO_OFERTA',
	    'PLZ_MIN',
	    'PLZ_MAX',
	    'TAS_MIN_RIESGO',
	    'RENTA',
	    'COD_ENTIDAD',
	    'CENTRO_ALTA',
	    'CUENTA',
	    'CLASE_PROM',
	    'TIP_PROD',
	    'COND_PROD',
	    'PAGO_MIN',
	    'ORIGEN_BASE',
	    'ENTIDAD',
	    'CREADOR',
	    'FLAG_CAMP',
	    'ORDEN_PRIO',
	    'EGP',
	    'ECP',
	    'COD_LIN1',
	    'MTO_LIN1',
	    'COD_LIN2',
	    'MTO_LIN2',
	    'COD_LIN3',
	    'MTO_LIN3',
	    'COD_LIN4',
	    'MTO_LIN4',
	    'COD_LIN5',
	    'MTO_LIN5',
	    'COD_LIN6',
	    'MTO_LIN6',
	    'COD_LIN7',
	    'MTO_LIN7',
	    'COD_LIN8',
	    'MTO_LIN8',
	    'COD_LIN9',
	    'MTO_LIN9',
	    'COD_LIN10',
	    'MTO_LIN10',
	    'FILLER1',
	    'FILLER2',
	    'FILLER3',
	    'FILLER4',
	    'FILLER5',
	    'FILLER6',
	    'FILLER7',
	    'FILLER8',
	    'FILLER9',
	    'FILLER10',
	    'FILLER11',
	    'FILLER12',
	    'FILLER13',
	    'FILLER14'
	);


           
    INSERT INTO schm_workspace.tmp2
        SELECT
            '1' AS numero,
            codigo_camapan AS COD_CAMP,
            descripcion_campana AS FEC_INI,
            replace(fecha_inicio::varchar(50), '-','') AS FEC_TER,
            replace(fecha_termino::varchar(50), '-','') AS RUT,
            TIP_PROD AS DV,
            COND_PROD AS MTO_OFERTA,
            '' AS PLZ_MIN,
            '' AS PLZ_MAX,
            '' AS TAS_MIN_RIESGO,
            '' AS RENTA,
            '' AS COD_ENTIDAD,
            '' AS CENTRO_ALTA,
            '' AS CUENTA,
            '' AS CLASE_PROM,
            '' AS TIP_PROD,
            '' AS COND_PROD,
            '' AS PAGO_MIN,
            '' AS ORIGEN_BASE,
            '' AS ENTIDAD,
            '' AS CREADOR,
            '' AS FLAG_CAMP,
            '' AS ORDEN_PRIO,
            '' AS EGP,
            '' AS ECP,
            '' AS COD_LIN1,
            '' AS MTO_LIN1,
            '' AS COD_LIN2,
            '' AS MTO_LIN2,
            '' AS COD_LIN3,
            '' AS MTO_LIN3,
            '' AS COD_LIN4,
            '' AS MTO_LIN4,
            '' AS COD_LIN5,
            '' AS MTO_LIN5,
            '' AS COD_LIN6,
            '' AS MTO_LIN6,
            '' AS COD_LIN7,
            '' AS MTO_LIN7,
            '' AS COD_LIN8,
            '' AS MTO_LIN8,
            '' AS COD_LIN9,
            '' AS MTO_LIN9,
            '' AS COD_LIN10,
            '' AS MTO_LIN10,
            '' AS FILLER1,
            '' AS FILLER2,
            '' AS FILLER3,
            '' AS FILLER4,
            '' AS FILLER5,
            '' AS FILLER6,
            '' AS FILLER7,
            '' AS FILLER8,
            '' AS FILLER9,
            '' AS FILLER10,
            '' AS FILLER11,
            '' AS FILLER12,
            '' AS FILLER13,
            '' AS FILLER14
        FROM schm_workspace.POPRET_PL_ENCAB_01_CAMP limit 1;

       
      call schm_artifacts.f_unload_s3_txt('select * from schm_workspace.tmp2 order by numero asc', concat('ppff/salida_retira_plastico/GCO_INI_IC00027_',to_char(current_date, 'DDMMYYYY')));
       
	END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_run_principalidad_uso_tctd()
	LANGUAGE plpgsql
AS $$
	
BEGIN

    CALL schm_artifacts.sp_ppff_principalidad_uso_tctd(schm_artifacts.f_first_day(dateadd(month,-12,getdate())::DATE), last_day(dateadd(month,-1,getdate())::DATE), schm_artifacts.f_period(dateadd(month,-12,getdate())::DATE), schm_artifacts.f_period(dateadd(month,-1,getdate())::DATE));

END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_saldo_sav(v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
BEGIN


    DROP TABLE IF EXISTS schm_workspace.ppff_saldos_sav;
    DROP TABLE IF EXISTS schm_workspace.ppff_saldo_final_sav;
    DROP TABLE IF EXISTS schm_workspace.ppff_contrato_rut;
    DROP TABLE IF EXISTS schm_workspace.ppff_saldo_final_sav1;


    CREATE TABLE schm_workspace.ppff_saldos_sav AS 
        SELECT 
            codent
            ,centalta
            ,cuenta
            ,linea
            ,sitimp
            ,impdeuda1 AS cuota_fija
            ,fecfutvto AS vcto
            ,impdeuda1 + impdeuda2 + impdeuda3 + impdeuda4  + impdeuda8  + impdeuda9  + impdeuda10 AS cuota
            ,impdeuda1 + impdeuda2 + impdeuda3 + impdeuda4 + impdeuda5 + impdeuda6 + impdeuda7 + impdeuda8 + impdeuda9 + impdeuda10 AS saldo1
            ,impapl1 + impapl2 + impapl3 + impapl4 + impapl5 + impapl6 + impapl7 + impapl8 + impapl9 + impapl10 AS saldo2 
        FROM br_dm_prod_bigdata_reporitf_db.mpdt460 
        WHERE linea  = '0052' 
            AND (sitimp = 'D' OR sitimp = 'A');
            

    CREATE TABLE schm_workspace.ppff_saldo_final_sav AS 
        SELECT 
            codent
            ,centalta
            ,cuenta
            ,AVG(cuota_fija) AS valor_cuota
            ,COUNT(vcto) AS n_cuotas
            ,SUM(cuota) AS saldo
            ,SUM(saldo1) AS deuda_total
            ,SUM(saldo2) AS pagos_total
            ,SUM(saldo1) - SUM(saldo2) AS saldo_total
        FROM schm_workspace.ppff_saldos_sav
        GROUP BY 
            codent, 
            centalta, 
            cuenta;


    CREATE TABLE schm_workspace.ppff_contrato_rut AS
        SELECT DISTINCT 
            B.pemid_gls_nro_dct_ide_k AS rut
            ,A.identcli AS id
            ,A.codent
            ,A.cuenta
            ,A.centalta
            ,(A.codent||A.centalta||A.cuenta) AS contrato
            ,A.fecalta
            ,A.fecbaja
            ,A.grupoliq
            ,A.producto
            ,C.conprod
            ,C.descon
            ,C.desconred
            ,D.descred AS dia_de_pago
            ,D.descripcion
            ,E.version AS cod_garantia
            ,E.clamon
            ,F.desversion AS tipo_garantia
            ,CASE 
                WHEN SUBSTRING(G.pan,1,6) = '628156' THEN 'CERRADA'
                WHEN SUBSTRING(G.pan,1,6) = '549070' AND SUBSTRING(G.pan,1,7) >= '5490702' THEN 'TAM CHIP' 
                WHEN SUBSTRING(G.pan,1,6) = '549070' AND SUBSTRING(G.pan,1,7) < '5490702' THEN 'TAM' 
                ELSE 'CERRADA' 
            END AS tipo_tr
            ,G.numplastico,
            G.fecalta AS fecalta_tr
            ,G.fecbaja AS fecbaja_tr
            ,G.pan
            ,G.feccadtar
            ,G.indsittar
            ,H.dessittar
            ,G.fecultblq
            ,CASE 
                WHEN G.codblq = 1 AND texblq = 'BLOQUEO TARJETA NO ISO' THEN 'BLOQUEO TARJETA NO ISO' 
                WHEN G.codblq = 1 AND texblq NOT IN ('BLOQUEO TARJETA NO ISO') THEN 'ROBO/CODIGO_BLOQUEO' 
                WHEN G.codblq IN (79, 98) THEN 'CAMBIO DE PRODUCTO'
                WHEN G.codblq IN (16, 43) THEN 'FRAUDE' 
                WHEN G.codblq > 1 AND G.codblq NOT IN (16, 43, 79, 98) THEN desblq 
            END AS motivo_bloqueo
            ,CASE 
                WHEN A.fecalta <> '0001-12-30' AND A.fecbaja = '0001-12-30' THEN 1 
                ELSE 0 
            END AS t_ctto_vig
            ,CASE 
                WHEN G.indsittar = 5 AND G.fecalta <> '0001-12-30' AND G.fecbaja = '0001-12-30' AND G.fecultblq = '0001-12-30' THEN 1 
                ELSE 0 
            END AS t_tr_vig
            FROM br_dm_prod_bigdata_reporitf_db.mpdt007 A 
            INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide B 
                ON b.pemid_nro_inn_ide = cast(A.identcli as int)
            INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt167 C 
                ON A.codent = C.codent 
                AND A.producto = C.producto 
                AND A.subprodu = C.subprodu 
                AND A.conprod = C.conprod
            INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt086 D 
                ON A.grupoliq = D.codgrupo 
                AND D.codproceso = 1
            INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt494 E
                ON A.codent = E.codent 
                AND A.centalta = E.centalta 
                AND A.cuenta = E.cuenta
            INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt496 F 
                ON A.codent = F.codent 
                AND A.producto = F.producto 
                AND A.subprodu = F.subprodu 
                AND E.clamon = F.clamon 
                AND E.version = F.version
            INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt009 G 
                ON A.codent = G.codent 
                AND A.centalta = G.centalta 
                AND A.cuenta = G.cuenta 
                AND G.numbencta = 1 
                AND indulttar = 'S'
            INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt063 H 
                ON G.codent = H.codent 
                AND G.indsittar = H.indsittar
            LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt060 I 
                ON G.codblq = I.codblq;
        

        CREATE TABLE schm_workspace.ppff_saldo_final_sav1 AS
        SELECT 
            T2.contrato
            ,T2.rut
            ,T1.valor_cuota
            ,T1.n_cuotas
            ,T1.saldo
            ,T1.deuda_total
            ,T1.pagos_total
            ,T1.saldo_total
            ,v_periodo AS periodo
        FROM schm_workspace.ppff_saldo_final_sav AS t1
        LEFT JOIN schm_workspace.ppff_contrato_rut AS t2 
            ON (T1.codent = T2.codent 
            AND T1.centalta = T2.centalta 
            AND T1.cuenta = T2.cuenta);


    DELETE FROM schm_data_analytics.ppff_saldo_sav
    WHERE periodo = v_periodo;


    INSERT INTO schm_data_analytics.ppff_saldo_sav  
    SELECT * FROM schm_workspace.ppff_saldo_final_sav1 
    WHERE saldo_total > 0 
    ORDER BY saldo_total;


    DROP TABLE IF EXISTS schm_workspace.ppff_saldos_sav;
    DROP TABLE IF EXISTS schm_workspace.ppff_saldo_final_sav;
    DROP TABLE IF EXISTS schm_workspace.ppff_contrato_rut;
    DROP TABLE IF EXISTS schm_workspace.ppff_saldo_final_sav1;


END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_saldos_diarios_pasivos(v_fecha date)
	LANGUAGE plpgsql
AS $$
	
BEGIN

	
	DELETE FROM schm_data_analytics.ppff_saldos_diarios_cc
	WHERE acp_fecha = v_fecha;
	
	
    INSERT INTO schm_data_analytics.ppff_saldos_diarios_cc
    SELECT
    	b.cli_identifica AS rut
    	, CAST(TO_CHAR(a.acp_fecha::DATE,'YYYYMMDD') AS INT) AS cod_fecha
    	, a.acp_fecha::DATE
    	, a.acp_numcue
    	, SUM(a.acp_salefe + a.acp_sal12h + a.acp_sal24h + a.acp_sal48h) AS Saldo 
    FROM br_dm_prod_bigdata_fisa_db.tcap_acrpas a
    LEFT JOIN (
    	SELECT 
        	DISTINCT 
        	cli_identifica
        	, vis_numcue 
      	FROM br_dm_prod_bigdata_fisa_db.tcli_persona, br_dm_prod_bigdata_fisa_db.tcap_vista 
      	WHERE cli_codigo = vis_codcli 
      		AND vis_mod = 4
      		AND vis_pro = 1 
     	 	AND vis_tip = 1  
      		AND (vis_status = '2' OR vis_status = '9')) b
    	ON a.acp_numcue = b.vis_numcue
    WHERE a.acp_pro = 1 
    	AND a.acp_tip = 1 
      	AND a.acp_fecha = v_fecha
    GROUP BY a.acp_fecha, 
    	a.acp_numcue,
      	b.cli_identifica;
    
    
    DELETE FROM schm_reporting.ppff_tbl_resumen_saldos_diarios_cc
    WHERE acp_fecha = v_fecha;
      
    
    INSERT INTO schm_reporting.ppff_tbl_resumen_saldos_diarios_cc 
    SELECT 
    	acp_fecha
      	, SUM(saldo) AS saldo
    FROM schm_data_analytics.ppff_saldos_diarios_cc
    WHERE acp_fecha = v_fecha
    GROUP BY acp_fecha 
    ORDER BY acp_fecha;
    
   
   	DELETE FROM schm_data_analytics.ppff_saldos_diarios_cv
    WHERE acp_fecha = v_fecha;
    
    
    INSERT INTO schm_data_analytics.ppff_saldos_diarios_cv
    SELECT 
        b.cli_identifica AS rut
        , CAST(TO_CHAR(a.acp_fecha::DATE, 'YYYYMMDD') AS INT) AS cod_fecha
        , a.acp_fecha::DATE
        , a.acp_numcue
        , SUM(a.acp_salefe + a.acp_sal12h + a.acp_sal24h + a.acp_sal48h) AS saldo 
    FROM br_dm_prod_bigdata_fisa_db.tcap_acrpas a
    LEFT JOIN ( 
        SELECT 
            DISTINCT 
            cli_identifica
            , vis_numcue
        FROM br_dm_prod_bigdata_fisa_db.tcli_persona, br_dm_prod_bigdata_fisa_db.tcap_vista 
        WHERE cli_codigo = vis_codcli 
            AND vis_mod = 4
            AND (vis_pro = 4 OR vis_pro = 40) 
            AND vis_tip = 1  
            AND (vis_status = '2' OR vis_status = '9')) b
        ON a.acp_numcue = b.vis_numcue
    WHERE a.acp_pro = 4 
        AND a.acp_tip = 1 
        AND a.acp_fecha = v_fecha
    group by a.acp_fecha
        , a.acp_numcue
        , b.cli_identifica;


    DELETE FROM schm_reporting.ppff_tbl_resumen_saldos_diarios_cv
    WHERE acp_fecha = v_fecha;
      
    
    INSERT INTO schm_reporting.ppff_tbl_resumen_saldos_diarios_cv
    SELECT 
        acp_fecha
        , SUM(saldo) AS saldo
    FROM schm_data_analytics.ppff_saldos_diarios_cv
    WHERE acp_fecha = v_fecha
    GROUP BY acp_fecha 
    ORDER BY acp_fecha;
   
   
END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_stock_cc()
	LANGUAGE plpgsql
AS $$
	
BEGIN

	
	DROP TABLE IF EXISTS schm_workspace.ppff_stock_ctacte;


	CREATE TABLE schm_workspace.ppff_stock_ctacte AS   	
	SELECT DISTINCT
		trunc(getdate()) AS fecha_ejecucion
		, B.cli_identifica AS rut
		, B.cli_identifica_dv AS dv
		, A.vis_numcue AS cuenta
		, A.vis_fechape AS fecha_apertura
		, CAST(TO_CHAR(A.vis_fechape,'YYYYMM') AS INT) AS periodo_apertura
		, A.vis_fechcierr AS fecha_cierre
		, CAST(TO_CHAR(A.vis_fechcierr,'YYYYMM') AS INT) AS periodo_cierre
		, CASE 
			WHEN A.vis_pro = 4 THEN 'CUENTA_VISTA'
			WHEN A.vis_pro = 1 THEN 'CUENTA_CORRIENTE'
			WHEN A.vis_pro = 40 THEN 'LCA' 
		END AS descrip_producto
		, A.vis_status AS status
		, CASE 
			WHEN A.vis_status = '9' THEN 'cerrado' 	
			WHEN A.vis_status = '2' THEN 'vigente'
		END AS estado_cuenta
		, A.vis_suc AS sucursal_apertura
		, D.suc_nombre nombre_sucursal
		, C.des_codigo cod_cierre_contrato
		, C.des_descripcion desc_cierre_contrato
		, CASE 
			WHEN A.vis_suc = 70 THEN 1 
			ELSE 0 
		END AS Digital
		, CASE 
			WHEN A.vis_suc <> 70 THEN 1 
			ELSE 0 
		END AS Presencial
	FROM br_dm_prod_bigdata_fisa_db.tcap_vista AS A 
	INNER JOIN  br_dm_prod_bigdata_fisa_db.tcli_persona AS  B
		ON A.vis_codcli = B.cli_codigo
	LEFT JOIN br_dm_prod_bigdata_fisa_db.tgen_desctabla AS C
		ON A.vis_codtab = C.des_codtab 
		AND A.vis_caucierr = C.des_codigo
	LEFT JOIN br_dm_prod_bigdata_fisa_db.tgen_sucursal AS D 
		ON A.vis_suc = D.suc_codigo
	WHERE A.vis_mod = 4
		AND A.VIS_PRO = 1
		AND A.vis_tip = 1  
	;


	DELETE
	FROM schm_data_analytics.ppff_stock_cc;

	
	INSERT INTO schm_data_analytics.ppff_stock_cc (
		fecha_ejecucion
		,rut
		,dv
		,cuenta
		,fecha_apertura
		,periodo_apertura
		,fecha_cierre
		,periodo_cierre
		,descrip_producto
		,status
		,estado_cuenta
		,sucursal_apertura
		,nombre_sucursal
		,cod_cierre_contrato
		,desc_cierre_contrato
		,digital
		,presencial)
	SELECT
		fecha_ejecucion
		,rut
		,dv
		,cuenta
		,fecha_apertura
		,periodo_apertura
		,fecha_cierre
		,periodo_cierre
		,descrip_producto
		,status
		,estado_cuenta
		,sucursal_apertura
		,nombre_sucursal
		,cod_cierre_contrato
		,desc_cierre_contrato
		,digital
		,presencial
	FROM schm_workspace.ppff_stock_ctacte;

	
	DROP TABLE IF EXISTS schm_workspace.ppff_stock_ctacte;


END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_tablas_cta_vista()
	LANGUAGE plpgsql
AS $$
	
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.ppff_stock_ctavta;
    DROP TABLE IF EXISTS schm_workspace.ppff_tmp_00_movs_ctavta;
    DROP TABLE IF EXISTS schm_workspace.ppff_tmp_01_movs_ctavta;
    DROP TABLE IF EXISTS schm_workspace.ppff_movs_ctavta;
    DROP TABLE IF EXISTS schm_workspace.ppff_movs_ctavta2;
    DROP TABLE IF EXISTS schm_workspace.ppff_movs_ctavta_tmp;
    DROP TABLE IF EXISTS schm_workspace.ppff_saldos_ctavta;
    DROP TABLE IF EXISTS schm_workspace.ppff_saldos_ctavta2;
    DROP TABLE IF EXISTS schm_workspace.ppff_stock_ctavta_consolidado;
    DROP TABLE IF EXISTS schm_workspace.ppff_stock_ctavta_segmentos;
    DROP TABLE IF EXISTS schm_workspace.ppff_puntos_bonificados;
    DROP TABLE IF EXISTS schm_workspace.ppff_saldos_ctavta3_max_prd;
    DROP TABLE IF EXISTS schm_workspace.ppff_saldos_ctavta;
    DROP TABLE IF EXISTS schm_workspace.ppff_movs_ctavta2;
    DROP TABLE IF EXISTS schm_workspace.ppff_saldos_ctavta2;
    DROP TABLE IF EXISTS schm_workspace.ppff_stock_ctavta_segmentos;
    DROP TABLE IF EXISTS schm_workspace.ppff_saldos_ctavta3;
    DROP TABLE IF EXISTS schm_workspace.ppff_stock_ctavta_ptos;
    DROP TABLE IF EXISTS schm_workspace.puntosdisp;
    DROP TABLE IF EXISTS schm_workspace.ppff_puntos_bonificados;
    DROP TABLE IF EXISTS schm_workspace.pff_stock_ctavta_ptos_bonificados;
    DROP TABLE IF EXISTS schm_workspace.ppff_ctavta2_movs;
    DROP TABLE IF EXISTS schm_workspace.ppff_puntos_bonificados;
    DROP TABLE IF EXISTS schm_workspace.ppff_ctavta1_stock;


    CREATE TABLE schm_workspace.ppff_stock_ctavta AS
    SELECT
        tclip.cli_identifica as rut
         ,tclip.cli_identifica_dv as dv
         ,tcapv.vis_numcue as cuenta
         ,CASE
            WHEN tcapv.vis_pro=4 THEN 'CUENTA_VISTA'
            WHEN tcapv.vis_pro=40 THEN 'LCA'
          END as descripcion_producto
         ,CASE
            WHEN vis_status ='9' THEN 'cerrado'
            WHEN vis_status ='2' THEN 'vigente'
          END as estado_cuenta
         ,tcapv.vis_fechape as fecha_apertura
         ,tcapv.vis_fechcierr as fecha_cierre
    FROM br_dm_prod_bigdata_fisa_db.tcli_persona tclip
       , br_dm_prod_bigdata_fisa_db.tcap_vista tcapv
    WHERE tclip.cli_codigo = tcapv.vis_codcli
      AND tcapv.vis_mod=4 /*cuenta vista*/
      AND (tcapv.vis_pro=4/*CV*/ OR tcapv.vis_pro=40/*LCA*/)
      AND tcapv.vis_tip=1  -- persona no juridica
      ;


    CREATE TABLE schm_workspace.ppff_tmp_00_movs_ctavta as
    SELECT
       tmo_numcue as cuenta
       ,tmo_fechcon as fechacon
       ,tmo_fech as fecha -- validar
       ,rub_desc as descripcion
       ,tmo_val as monto
       ,con_libre as desc_negocio
       ,tmo_codmod
       ,tmo_tipotra
       ,tmo_rubro
       ,tmo_numtra
       ,tmo_numcue
       ,tmo_codusr
       ,tmo_sec
       ,tmo_codtra
       ,( SELECT cod_destra
         FROM br_dm_prod_bigdata_fisa_db.tgen_codtrans
         WHERE cod_tra = tmo_codtra AND cod_mod = tmo_codmod
       ) as gls_transac
    FROM br_dm_prod_bigdata_fisa_db.tcap_tramon    -- base de movimientos
      , br_dm_prod_bigdata_fisa_db.tgen_tranrubro -- base descriptiva (para complementar movimientos)
      , br_dm_prod_bigdata_fisa_db.tcap_concepto  -- base descriptiva (para complementar movimientos)
    WHERE rub_mod = tmo_codmod -- unificacion de base de movs con rubro
        AND rub_tra = tmo_codtra -- unificacion de base de movs con rubro
        AND rub_rubro = tmo_rubro -- Unificacion de base de movs con rubro
        AND con_modulo(+) = tmo_codmod -- unificacion de base de movs con con_
        AND con_rubro(+) = tmo_rubro  -- unificacion de base de movs con con_
        AND con_numtran(+) = tmo_numtra -- unificacion de base de movs con con_
        AND con_cuenta(+) = tmo_numcue -- unificacion de base de movs con con_
        AND con_codusr(+) = tmo_codusr -- unificacion de base de movs con con_
        AND con_sec(+) = tmo_sec  -- unificacion de base de movs con con_
        AND con_transa(+)  = tmo_codtra -- unificacion de base de movs con con_
        AND tmo_tipotra in ('D','C') /*D=Cargo, C=Abono*/
        AND tmo_codpro = 4
        AND tmo_codtip = 1
        AND tmo_modo = 'N'
        AND tmo_val > 1
        AND tmo_fechcon >= schm_artifacts.f_first_day(dateadd(month,-2,current_date::date)::date)
        AND tmo_fechcon <= last_day(current_date::date);


    CREATE TABLE schm_workspace.ppff_tmp_01_movs_ctavta as
    SELECT distinct cli_identifica ,vis_numcue
    FROM br_dm_prod_bigdata_fisa_db.tcli_persona
        ,br_dm_prod_bigdata_fisa_db.tcap_vista
    WHERE cli_codigo=vis_codcli
      AND vis_mod=4
      AND (VIS_PRO=4/*CV*/ OR VIS_PRO=40/*LCA*/)
      AND vis_tip=1
      AND (vis_status='2' OR vis_status='9') ;


    CREATE TABLE schm_workspace.ppff_movs_ctavta_tmp as
    SELECT
        c1.*
        ,c2.cli_identifica as rut_dv
        ,c2.cli_identifica as rut
        ,schm_artifacts.f_period(c1.fecha) as periodo
        ,c1.fecha as codfecha
         ,CASE
             WHEN c1.tmo_tipotra='D' THEN 'CARGO'
             WHEN c1.tmo_tipotra='C' THEN 'ABONO'
          END as tipo_movimiento
         ,CASE
             WHEN tmo_rubro = 1 AND tmo_codtra = 30 AND c1.DESC_NEGOCIO LIKE 'Depo%' THEN 1
             ELSE 0
          END AS marca_dap
         ,CASE
             WHEN c1.tmo_tipotra='C'
                      AND c1.descripcion='DESDE OTROS BANCOS'
                      AND ( regexp_substr(c1.desc_negocio,'Remuneraciones', 1, 1, 'i') = 'Remuneraciones'
                                OR regexp_substr(c1.desc_negocio,'Anticipos', 1, 1, 'i') = 'Anticipos'
                                OR regexp_substr(c1.desc_negocio,'Sueldos', 1, 1, 'i') = 'Sueldos')  THEN 1
            ELSE 0
        END as si_abr
         ,CASE
             WHEN c1.tmo_tipotra='D' THEN
                 CASE
                     WHEN c1.descripcion IN ('COMPRA NACIONAL') THEN 'Compras Redcompra'
                     WHEN c1.descripcion IN ('COMPRA INTERNACIONAL') THEN 'Compras Internacionales'
                     WHEN c1.descripcion IN ('CARGO POR PEC') THEN 'PEC'
                     WHEN c1.descripcion IN ('GIRO CAJERO AUTOMATICO') THEN 'Giros ATM'
                     WHEN c1.descripcion IN ('GIRO POR CAJA') THEN 'Giros Caja'
                     WHEN c1.descripcion IN ('GIRO INTERNACIONAL') THEN 'Giro Internacional'
                     WHEN c1.descripcion IN ('TRANSFERENCIA A OTROS BANCOS') THEN 'TEF emitidas Otros Bancos'
                     WHEN c1.descripcion IN ('PAGO TARJETA DE CREDITO') THEN 'Pago de Tarjeta'
                     WHEN c1.descripcion IN ('A CUENTA BANCO RIPLEY','POR TRASPASO A CUENTA')  THEN 'Pago LCA'
                     WHEN c1.descripcion IN ('COSTO DE MANTENCION MENSUAL CUENTA VISTA') THEN 'Comision planes'
                     ELSE 'OTROS CARGOS'
                END
        END AS descripcion_cargo
    FROM schm_workspace.ppff_tmp_00_movs_ctavta c1
    LEFT JOIN schm_workspace.ppff_tmp_01_movs_ctavta c2
           ON c1.tmo_numcue=c2.vis_numcue;


    CREATE TABLE schm_workspace.ppff_movs_ctavta as
    SELECT
        c1.*
        ,CASE
            WHEN  c1.si_abr=1 AND regexp_substr(c1.desc_negocio,'BANCO RIPLEY', 1, 1, 'i') = 'BANCO RIPLEY' THEN 'BANCO RIPLEY'
            WHEN c1.si_abr=1 AND regexp_substr(c1.desc_negocio,'CAR S.A.', 1, 1, 'i') = 'CAR S.A.' THEN 'CAR'
            WHEN c1.si_abr=1 AND regexp_substr(c1.desc_negocio,'RIPLEY STORE', 1, 1, 'i') = 'RIPLEY STORE' THEN 'RIPLEY STORE'
            WHEN c1.si_abr=1 AND ( regexp_substr(c1.desc_negocio,'RIPLEY STORE', 1, 1, 'i') = 'RIPLEY STORE'
             OR regexp_substr(c1.desc_negocio,'CAR S.A.', 1, 1, 'i') = 'CAR S.A.'
             OR regexp_substr(c1.desc_negocio,'BANCO RIPLEY', 1, 1, 'i') = 'BANCO RIPLEY'
         ) THEN 'OTROS BANCOS'
        END AS descripcion_abr
        ,CASE
         WHEN c1.tipo_movimiento IN ('CARGO')
         AND (regexp_substr(c1.desc_negocio,'Ripley', 1, 1, 'i') = 'Ripley' OR regexp_substr(c1.desc_negocio,'RIPLEY', 1, 1, 'i') = 'RIPLEY')
         AND  regexp_substr(c1.desc_negocio,'PAGO', 1, 1, 'i') != 'PAGO'
         THEN 'COMPRA_RIPLEY'
        END AS compra_ripley,
        CASE
        WHEN c1.tipo_movimiento='ABONO' THEN
         CASE
            WHEN c1.descripcion IN ('VALOR EFECTIVO','EN EFECTIVO') AND c1.gls_transac ='DEPOSITO' AND c1.si_abr!=1  THEN 'Dep�sitos en Efectivo'
            WHEN c1.descripcion IN ('CON DOCUMENTOS') AND c1.gls_transac ='DEPOSITO' AND c1.si_abr!=1 THEN 'Dep�sitos con Documento'
            WHEN c1.descripcion IN ('TRANSFERENCIA DESDE OTROS BANCOS') AND c1.si_abr!=1 THEN 'TEF Recibidas'
            WHEN c1.descripcion IN ('DESDE OTROS BANCOS') AND c1.si_abr!=1 THEN 'TEF Recibidas'
            WHEN c1.descripcion IN ('DESDE OTROS BANCOS') AND c1.si_abr!=1 THEN 'Abono de Remuneraciones'
            WHEN c1.descripcion IN ('DESDE OTROS BANCOS') AND c1.si_abr!=1 AND regexp_substr(c1.desc_negocio,'Proveedores', 1, 1, 'i') = 'Proveedores' THEN 'TEF Recibidas'
            WHEN c1.descripcion IN ('POR REGULARIZACION') AND c1.si_abr!=1 THEN 'Otros (pago proveedores)'
            WHEN c1.descripcion IN ('DESDE LINEA DE CREDITO') AND c1.gls_transac ='TRASPASO DE FONDOS' AND c1.si_abr!=1 THEN 'Traspaso desde LCA'
            WHEN c1.descripcion IN ('AVANCE DESDE TARJETA DE CREDITO BANCO RIPLEY') AND c1.si_abr!=1 THEN 'Avance desde Tarjeta Ripley'
            WHEN c1.descripcion IN ('DEVOLUCION COMISION') AND c1.si_abr!=1 THEN 'DEVOLUCION COMISION'
            WHEN c1.descripcion IN ('POR TRANSFERENCIA  DE LCA A CTA VISTA') AND c1.si_abr!=1 THEN 'Traspaso desde LCA'
            ELSE 'OTROS ABONOS'
         END
      END AS descripcion_abono
    FROM schm_workspace.ppff_movs_ctavta_tmp c1;


    CREATE TABLE schm_workspace.ppff_movs_ctavta2 AS
    SELECT
        cuenta
        ,sum(CASE WHEN PERIODO=schm_artifacts.f_period(current_date) and tipo_movimiento='CARGO' then 1 else 0 end) as nro_cargos_t
        ,sum(CASE WHEN PERIODO=schm_artifacts.f_period(current_date) and tipo_movimiento='CARGO' then MONTO else 0 end) as mto_cargos_t
        ,sum(CASE WHEN PERIODO=schm_artifacts.f_period(current_date) and tipo_movimiento='ABONO' then 1 else 0 end) as nro_abonos_t
        ,sum(CASE WHEN PERIODO=schm_artifacts.f_period(current_date) and tipo_movimiento='ABONO' then MONTO else 0 end) as mto_abonos_t
        ,sum(CASE WHEN PERIODO=schm_artifacts.f_period(current_date) and SI_ABR=1 then MONTO else 0 end) as mto_ar_t
        ,sum(CASE WHEN periodo=schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(current_date::date), -1) and tipo_movimiento='CARGO' then 1 else 0 end) as nro_cargos_tmenos1
        ,sum(CASE WHEN periodo=schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(current_date::date), -1) and tipo_movimiento='CARGO' then MONTO else 0 end) as mto_cargos_tmenos1
        ,sum(CASE WHEN periodo=schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(current_date::date), -1) and tipo_movimiento='ABONO' then 1 else 0 end) as nro_abonos_tmenos1
        ,sum(CASE WHEN periodo=schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(current_date::date), -1) and tipo_movimiento='ABONO' then MONTO else 0 end) as mto_abonos_tmenos1
        ,sum(CASE WHEN periodo=schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(current_date::date), -1) and SI_ABR=1 then MONTO else 0 end) as mto_ar_tmenos1
        ,sum(CASE WHEN periodo=schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(current_date::date), -2)and tipo_movimiento='CARGO' then 1 else 0 end) as nro_cargos_tmenos2
        ,sum(CASE WHEN periodo=schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(current_date::date), -2) and tipo_movimiento='CARGO' then MONTO else 0 end) as mto_cargos_tmenos2
        ,sum(CASE WHEN periodo=schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(current_date::date), -2) and tipo_movimiento='ABONO' then 1 else 0 end) as nro_abonos_tmenos2
        ,sum(CASE WHEN periodo=schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(current_date::date), -2) and tipo_movimiento='ABONO' then MONTO else 0 end) as mto_abonos_tmenos2
        ,sum(CASE WHEN periodo=schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(current_date::date), -2) and SI_ABR=1 then MONTO else 0 end) as mto_ar_tmenos2
    FROM schm_workspace.ppff_movs_ctavta
    GROUP BY cuenta;


    CREATE TABLE schm_workspace.ppff_saldos_ctavta as
    SELECT
       c2.cli_identifica as rut
       ,c1.acp_fecha as codfecha
       ,c1.*
    FROM (
    SELECT
      acp_fecha
      ,acp_numcue
      ,sum(acp_salefe + acp_sal12h + acp_sal24h + acp_sal48h) as saldo
    FROM br_dm_prod_bigdata_fisa_db.tcap_acrpas
    WHERE acp_pro = 4
      AND acp_tip = 1
      AND ( acp_fecha = dateadd(month,-1,current_date)::date
         OR acp_fecha = schm_artifacts.f_first_day(dateadd(month,-1,current_date)::date)
         OR acp_fecha = schm_artifacts.f_first_day(dateadd(month,-2,current_date)::date))
    GROUP BY
       acp_fecha,
       acp_numcue
    ) as c1
    LEFT JOIN (
        SELECT distinct cli_identifica ,vis_numcue
        FROM br_dm_prod_bigdata_fisa_db.tcli_persona, br_dm_prod_bigdata_fisa_db.tcap_vista
        WHERE cli_codigo=vis_codcli
        AND vis_mod=4
        AND (VIS_PRO=4 or VIS_PRO=40)
        AND vis_tip=1
        AND (vis_status='2' or vis_status='9')
    ) as c2
    ON (c1.acp_numcue = c2.vis_numcue) ;


    CREATE TABLE schm_workspace.ppff_saldos_ctavta2 as
    SELECT
        acp_numcue as cuenta
        ,sum(case when codfecha=current_date::date then saldo else 0 end) as saldo_t
        ,sum(case when codfecha=dateadd(month,-1,current_date)::date then saldo else 0 end) as saldo_tmenos1
        ,sum(case when codfecha=dateadd(month,-2,current_date)::date then saldo else 0 end) as saldo_tmenos2
    FROM schm_workspace.ppff_saldos_ctavta
    GROUP BY acp_numcue;


    CREATE TABLE schm_workspace.ppff_stock_ctavta_consolidado as
    SELECT
       a.*,
       d.duplicidad_rut
       ,coalesce(b.nro_cargos_t,0) as nro_cargos_t
       ,coalesce(b.mto_cargos_t,0) as mto_cargos_t
       ,coalesce(b.nro_abonos_t,0) as nro_abonos_t
       ,coalesce(b.mto_abonos_t,0) as mto_abonos_t
       ,coalesce(b.mto_ar_t,0) as mto_ar_t
       ,coalesce(c.saldo_t,0) as saldo_t
       ,coalesce(b.nro_cargos_tmenos1,0) as nro_cargos_tmenos1
       ,coalesce(b.mto_cargos_tmenos1,0) as mto_cargos_tmenos1
       ,coalesce(b.nro_abonos_tmenos1,0) as nro_abonos_tmenos1
       ,coalesce(b.mto_abonos_tmenos1,0) as mto_abonos_tmenos1
       ,coalesce(b.mto_ar_tmenos1,0) as mto_ar_tmenos1
       ,coalesce(c.saldo_tmenos1,0) as saldo_tmenos1
       ,coalesce(b.nro_cargos_tmenos2,0) as nro_cargos_tmenos2
       ,coalesce(b.mto_cargos_tmenos2,0) as mto_cargos_tmenos2
       ,coalesce(b.nro_abonos_tmenos2,0) as nro_abonos_tmenos2
       ,coalesce(b.mto_abonos_tmenos2,0) as mto_abonos_tmenos2
       ,coalesce(b.mto_ar_tmenos2,0) as mto_ar_tmenos2
       ,coalesce(c.saldo_tmenos2,0) as saldo_tmenos2
    FROM schm_workspace.ppff_stock_ctavta as a
    LEFT JOIN schm_workspace.ppff_movs_ctavta2 as b ON (a.cuenta=b.cuenta)
    LEFT JOIN schm_workspace.ppff_saldos_ctavta2 as c ON (a.cuenta=c.cuenta)
    LEFT JOIN (
        SELECT rut,count(*) as duplicidad_rut
        FROM schm_workspace.ppff_stock_ctavta
        GROUP BY rut
    ) as d ON (a.rut=d.rut);


    CREATE TABLE schm_workspace.ppff_stock_ctavta_segmentos AS
    SELECT
        a.*
        ,b.segmento_final as segmento_comercial
    FROM schm_workspace.ppff_stock_ctavta_consolidado as a
    LEFT JOIN br_dm_prod_analytics_ripley_puntos_db.segmento_comercial_diario as b
    ON (a.rut=b.rut)
    WHERE
        b.fecha_ejecucion = (DATEADD(day, -1, getdate())::DATE);


    CREATE TABLE schm_workspace.puntosdisp AS
    SELECT
        codcuent as rut
        ,max(cantpunt) as puntos_disponibles
    FROM br_dm_prod_bigdata_psfc1_db.t7542700
    WHERE tipopunt = '01'
    GROUP BY codcuent;


    CREATE TABLE schm_workspace.ppff_stock_ctavta_ptos AS
    SELECT
        a.*
        ,coalesce(b.puntos_disponibles,0) as puntos_disponibles
    FROM schm_workspace.ppff_stock_ctavta_segmentos as a
    LEFT JOIN schm_workspace.puntosdisp as b
    ON (a.rut=b.rut);


    CREATE TABLE schm_workspace.ppff_puntos_bonificados AS
    SELECT
        rut
        ,max(fecha_puntos) as max_fecha_puntos
        ,sum(puntos) as puntos_bonificados
    FROM (
        SELECT
            codcuent as rut,
            fectrx as fecha_puntos,
            COALESCE(punobten, 0) as puntos
        FROM br_dm_prod_bigdata_psfc1_db.t7542350 -- PSFC1.T7542350
        WHERE indicador != 5 /* CADUCIDAD*/
        AND conconce IN (
            '00000105', /*TDA TR*/
            '00000106', /*TDA TR*/
            '00000107', /*INTERNET TR*/
            '00000109', /*SPOS*/
            '00000110', /*TDA EFEC*/
            '00000111', /*TDA CHEQUE*/
            '00000114', /*SAV*/
            '00000115', /*AV*/
            '00000116', /*RECARGA SPOS*/
            '00000123', /*TDA DEBITO*/
            '00000124', /*TDA TAR BANCO*/
            '00000125', /*RECARGA TDA*/
            '00000131', /*AV ATM*/
            '00000148', /*SEG*/
            '00000305', /*TDA ANULACION*/
            '00000306', /*TDA ANULACION*/
            '00000307', /*ANULACION INT*/
            '00000309', /*ANULA SPOS*/
            '00000310', /*ANULA EFECT*/
            '00000314', /*ANULA SAV*/
            '00000315', /*ANULA AV*/
            '00000316', /*ANULA RECARGA SPOS*/
            '00000324'  /*ANULA TDA TARJETA BCO*/
        )
        AND fectrx >= schm_artifacts.f_first_day(DATE_TRUNC('year', current_date)::date)
        AND fectrx <= current_date::date -- revisar
    ) as X
    GROUP BY rut;


    CREATE TABLE schm_workspace.pff_stock_ctavta_ptos_bonificados AS
    SELECT
        a.*
        ,coalesce(b.puntos_bonificados, 0) as puntos_bonificados
    FROM schm_workspace.ppff_stock_ctavta_ptos as a
    LEFT JOIN schm_workspace.ppff_puntos_bonificados as b
    ON (a.rut=b.rut) ;


    -- --------------------------------------------------------------------------------------------------;
    --  [01.9] Guardar Resultados en tabla entregable;
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_ctavta1_stock as
    SELECT
        current_date::date as fecha_proceso
        ,schm_artifacts.f_period(current_date::date) as periodo_movs
        ,*
    FROM schm_workspace.ppff_stock_ctavta ;

    DROP TABLE IF EXISTS schm_data_analytics.ppff_ctavta1_stock; -- v_periodo

    CREATE TABLE schm_data_analytics.ppff_ctavta1_stock AS
    SELECT
        fecha_proceso
         , periodo_movs
         , rut
         , dv
         , cuenta
         , descripcion_producto
         , estado_cuenta
         , fecha_apertura
         , fecha_cierre
    FROM schm_workspace.ppff_ctavta1_stock;

    -- --------------------------------------------------------------------------------------------------;
    --  [02] Detalle de Movimientos de Cuenta Vista (ultimos 33 dias);
    -- --------------------------------------------------------------------------------------------------;

    CREATE TABLE schm_workspace.ppff_ctavta2_movs as
    SELECT
        current_date::date as fecha_proceso
        ,*
    FROM schm_workspace.ppff_movs_ctavta
    WHERE codfecha >= dateadd(day,-33,current_date)::date;

    DROP TABLE IF EXISTS schm_data_analytics.ppff_ctavta2_movs; -- v_periodo

    CREATE TABLE schm_data_analytics.ppff_ctavta2_movs AS
    SELECT
        fecha_proceso
        ,cuenta
        ,fechacon
        ,fecha
        ,descripcion
        ,monto
        ,desc_negocio
        ,tmo_codmod
        ,tmo_tipotra
        ,tmo_rubro
        ,tmo_numtra
        ,tmo_numcue
        ,tmo_codusr
        ,tmo_sec
        ,tmo_codtra
        ,gls_transac
        ,rut_dv
        ,rut
        ,periodo
        ,codfecha
        ,tipo_movimiento
        ,marca_dap
        ,si_abr
        ,descripcion_cargo
        ,descripcion_abr
        ,compra_ripley
        ,descripcion_abono
    FROM schm_workspace.ppff_ctavta2_movs;

    -- --------------------------------------------------------------------------------------------------;
    -- [03] Evolutivo de Saldos cuenta vista (ultimos 12 meses);
    -- --------------------------------------------------------------------------------------------------;
    -- Sacar Base de Saldos
    CREATE TABLE schm_workspace.ppff_saldos_ctavta3 as
    SELECT
        schm_artifacts.f_period(codfecha::date) as periodo
        ,codfecha
        ,CASE
            WHEN saldo<0 then '00. <0'
            WHEN saldo=0 then '01. 0'
            WHEN saldo=1 then '02. 1'
            WHEN saldo<=10000 then '03. (1-10M]'
            WHEN saldo<=50000 then '04. (10M-50M]'
            WHEN saldo<=100000 then '05. (50M-100M]'
            WHEN saldo<=200000 then '06. (100M-200M]'
            WHEN saldo<=300000 then '07. (200M-300M]'
            WHEN saldo<=500000 then '08. (300M-500M]'
            WHEN saldo<=750000 then '09. (500M-750M]'
            WHEN saldo<=1000000 then '10. (750M-1MM]'
            WHEN saldo<=1500000 then '11. (1MM-1,5MM]'
            ELSE '12. >1,5MM'
        END as tramo_saldo
        ,sum(saldo) as sum_saldo
        ,count(*) as nro_cuentas
    FROM (
            SELECT
                acp_fecha as codfecha
                ,c1.*
            FROM (
                /*INICIO: QUERY DESDE OPERACIONES*/
                SELECT
                    ACP_FECHA
                    ,ACP_NUMCUE
                    ,sum(acp_salefe + acp_sal12h + acp_sal24h + acp_sal48h) as saldo
                FROM br_dm_prod_bigdata_fisa_db.tcap_acrpas
                WHERE acp_pro = 4 and acp_tip = 1
                AND acp_fecha >= schm_artifacts.f_first_day(dateadd(month,-12,current_date)::date)
                AND acp_fecha <= current_date::date
                GROUP BY acp_fecha, acp_numcue
            ) as C1
    ) as X
    GROUP BY periodo, codfecha,
    CASE
        WHEN saldo<0 then '00. <0'
        WHEN saldo=0 then '01. 0'
        WHEN saldo=1 then '02. 1'
        WHEN saldo<=10000 then '03. (1-10M]'
        WHEN saldo<=50000 then '04. (10M-50M]'
        WHEN saldo<=100000 then '05. (50M-100M]'
        WHEN saldo<=200000 then '06. (100M-200M]'
        WHEN saldo<=300000 then '07. (200M-300M]'
        WHEN saldo<=500000 then '08. (300M-500M]'
        WHEN saldo<=750000 then '09. (500M-750M]'
        WHEN saldo<=1000000 then '10. (750M-1MM]'
        WHEN saldo<=1500000 then '11. (1MM-1,5MM]'
        ELSE '12. >1,5MM'
    END ;

    -- Pegar Marca de Ultimo Dia del mes
    CREATE TABLE schm_workspace.ppff_saldos_ctavta3_max_prd AS
    SELECT
        a.*
        ,CASE
            WHEN b.periodo IS NOT NULL
                     AND b.max_codfecha is not null THEN 1 ELSE 0
        END as si_ultima_fecha
    FROM schm_workspace.ppff_saldos_ctavta3 as a
    LEFT JOIN (
        SELECT
            periodo
            ,max(codfecha) as max_codfecha
        FROM schm_workspace.ppff_saldos_ctavta3
        group by periodo
    ) as b
    ON (a.periodo=b.periodo AND a.codfecha=b.max_codfecha);

    DROP TABLE schm_data_analytics.ppff_ctavta3_saldos; -- v_periodo

    CREATE TABLE schm_data_analytics.ppff_ctavta3_saldos AS
    SELECT
        current_date as fecha_proceso
        ,periodo
        ,codfecha::date
        ,tramo_saldo
        ,sum_saldo
        ,nro_cuentas
        ,si_ultima_fecha
    FROM schm_workspace.ppff_saldos_ctavta3_max_prd;

    DROP TABLE IF EXISTS schm_workspace.ppff_stock_ctavta;
    DROP TABLE IF EXISTS schm_workspace.ppff_tmp_00_movs_ctavta;
    DROP TABLE IF EXISTS schm_workspace.ppff_tmp_01_movs_ctavta;
    DROP TABLE IF EXISTS schm_workspace.ppff_movs_ctavta;
    DROP TABLE IF EXISTS schm_workspace.ppff_movs_ctavta2;
    DROP TABLE IF EXISTS schm_workspace.ppff_movs_ctavta_tmp;
    DROP TABLE IF EXISTS schm_workspace.ppff_saldos_ctavta;
    DROP TABLE IF EXISTS schm_workspace.ppff_saldos_ctavta2;
    DROP TABLE IF EXISTS schm_workspace.ppff_stock_ctavta_consolidado;
    DROP TABLE IF EXISTS schm_workspace.ppff_stock_ctavta_segmentos;
    DROP TABLE IF EXISTS schm_workspace.ppff_puntos_bonificados;
    DROP TABLE IF EXISTS schm_workspace.ppff_saldos_ctavta3_max_prd;
    DROP TABLE IF EXISTS schm_workspace.ppff_saldos_ctavta;
    DROP TABLE IF EXISTS schm_workspace.ppff_movs_ctavta2;
    DROP TABLE IF EXISTS schm_workspace.ppff_saldos_ctavta2;
    DROP TABLE IF EXISTS schm_workspace.ppff_stock_ctavta_segmentos;
    DROP TABLE IF EXISTS schm_workspace.ppff_saldos_ctavta3;
    DROP TABLE IF EXISTS schm_workspace.ppff_stock_ctavta_ptos;
    DROP TABLE IF EXISTS schm_workspace.puntosdisp;
    DROP TABLE IF EXISTS schm_workspace.ppff_puntos_bonificados;
    DROP TABLE IF EXISTS schm_workspace.pff_stock_ctavta_ptos_bonificados;
    DROP TABLE IF EXISTS schm_workspace.ctavta2_movs;
    DROP TABLE IF EXISTS schm_workspace.ppff_puntos_bonificados;
    DROP TABLE IF EXISTS schm_workspace.ppff_ctavta1_stock;

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_tablon_visitas(v_periodo_ini date, v_periodo_fin date, v_periodo int4, v_dia date)
	LANGUAGE plpgsql
AS $$
	
	
	
	
	
BEGIN

	
    DROP TABLE IF EXISTS schm_workspace.tda1;
    DROP TABLE IF EXISTS schm_workspace.tda2;
    DROP TABLE IF EXISTS schm_workspace.tda3;
    DROP TABLE IF EXISTS schm_workspace.cruce_tda;
    DROP TABLE IF EXISTS schm_workspace.venta_final_tmp;
    DROP TABLE IF EXISTS schm_workspace.agrupa;
    DROP TABLE IF EXISTS schm_workspace.ppff_tablon_visitas;
    DROP TABLE IF EXISTS schm_workspace.pago_cuotas;
    DROP TABLE IF EXISTS schm_workspace.fecha_max_p_cuotas;
    DROP TABLE IF EXISTS schm_workspace.pago_cuotas_final;
    DROP TABLE IF EXISTS schm_workspace.ppff_tablo_visitas;
    DROP TABLE IF EXISTS schm_workspace.transacciones_camp;
    DROP TABLE IF EXISTS schm_workspace.movil;
    DROP TABLE IF EXISTS schm_workspace.ccss;
    DROP TABLE IF EXISTS schm_workspace.rpos;
    DROP TABLE IF EXISTS schm_workspace.adm;
    DROP TABLE IF EXISTS schm_workspace.hb;
    DROP TABLE IF EXISTS schm_workspace.insertar;
    DROP TABLE IF EXISTS schm_workspace.agrupado;
    DROP TABLE IF EXISTS schm_workspace.agrupado1;
    DROP TABLE IF EXISTS schm_workspace.trx_abonos;
    DROP TABLE IF EXISTS schm_workspace.pago_epu_banco;
    DROP TABLE IF EXISTS schm_workspace.pagos_banco;
    DROP TABLE IF EXISTS schm_workspace.pagos_creditos_banco;

    --01
    CREATE TABLE schm_workspace.tda1 AS 
    SELECT 
        rut_titular
        , monto_capital
        , agno_mes_dia_trx
        , (cod_comercio || cod_sucursal || TO_CHAR(fecha,'YYYYMMDD') || num_caja::integer || num_documento || TO_CHAR(agno_mes_dia_trx,'YYYYMMDD')) AS boleta
    FROM br_dm_prod_analytics_sybase_db.ventas_tarjetas_actual 
    WHERE agno_mes_dia_trx BETWEEN v_periodo_ini AND v_periodo_fin;


    --02
    CREATE TABLE schm_workspace.tda2 AS 
    SELECT  
        monto_transaccion
        , rut_compr_pag
        , agno_mes_dia_trx
        , cod_tipo_transaccion
        , cod_transaccion
        , cod_sucursal
        , CASE 
            WHEN cod_transaccion IN (3, 10, 23, 30) THEN 'TARJ' 
            ELSE 'OMP' 
        END AS tipo
        , (cod_comercio || cod_sucursal || TO_CHAR(fecha,'YYYYMMDD') || num_caja::integer || num_documento|| TO_CHAR(agno_mes_dia_trx,'YYYYMMDD')) AS boleta 
    FROM br_dm_prod_analytics_sybase_db.ventas_header_actual
    WHERE agno_mes_dia_trx BETWEEN v_periodo_ini AND v_periodo_fin
        AND cod_tipo_transaccion IN (1, 3)
        AND cod_transaccion NOT IN (300, 304, 308, 401, 402);

       
    --03 
    CREATE TABLE schm_workspace.tda3 AS 
    SELECT   
        agno_mes_dia_trx
        , (cod_comercio || cod_sucursal || TO_CHAR(fecha,'YYYYMMDD') || num_caja::integer || num_documento || TO_CHAR(agno_mes_dia_trx,'YYYYMMDD')) AS boleta 
    FROM br_dm_prod_analytics_sybase_db.ventas_detalle_actual
    WHERE agno_mes_dia_trx  BETWEEN v_periodo_ini AND v_periodo_fin
        AND num_item = 1;
       
       
    --04
    CREATE TABLE schm_workspace.cruce_tda AS 
    SELECT 
        CASE 
            WHEN T2.cod_tipo_transaccion = 1 THEN 'Compra' 
            ELSE 'Nota Credito' 
        END AS trx
        , T2.agno_mes_dia_trx
        , T2.monto_transaccion
        , T2.rut_compr_pag
        , T2.tipo
        , T2.cod_sucursal
        , T3.boleta
        , CASE 
            WHEN T1.boleta IS NOT NULL THEN 1 
            ELSE 0 
        END AS tda
        , CASE 
            WHEN T3.boleta IS NOT NULL THEN 1 
            ELSE 0 
        END AS detalle 
    FROM schm_workspace.tda2 AS T2
    LEFT JOIN schm_workspace.tda1 AS T1
        ON T1.boleta = T2.boleta 
    LEFT JOIN schm_workspace.tda3 AS T3 
        ON T2.boleta = T3.boleta;


    --05
    CREATE TABLE schm_workspace.venta_final_tmp AS 
    SELECT 
        *
    FROM schm_workspace.cruce_tda 
    WHERE tipo = 'TARJ' 
        AND tda = 1 
        AND detalle = 0 
    UNION ALL
    SELECT 
        *
    FROM schm_workspace.cruce_tda 
    WHERE tipo = 'OMP'  
        AND detalle = 1 
        AND tda = 0
    UNION ALL
    SELECT 
        *
    FROM schm_workspace.cruce_tda 
    WHERE tipo = 'OMP'  
        AND detalle = 0 
        AND tda = 1;

       
    --06
    CREATE TABLE schm_workspace.agrupa AS
    SELECT 
        rut_compr_pag AS rut
        , agno_mes_dia_trx AS fecha
        , cod_sucursal AS sucursal
        , CASE 
            WHEN trx = 'Nota Credito' THEN 04 
            WHEN trx = 'Compra' AND monto_transaccion > 1 AND tipo = 'TARJ' THEN 01 
            WHEN trx = 'Compra' AND monto_transaccion > 1 AND tipo = 'OMP' THEN 02 
            WHEN trx = 'Compra' AND monto_transaccion = 1 AND tipo = 'OMP' THEN 03  
            ELSE 04 
        END AS tipo
    FROM schm_workspace.venta_final_tmp;   


    --07
    create table schm_workspace.ppff_tablon_visitas as
    SELECT 
    	rut
    	, CASE 
            WHEN rut BETWEEN 1000000 AND 49999999 AND rut NOT IN (1111111, 2222222, 3333333, 4444444, 5555555, 6666666, 7777777, 8888888, 9999999, 11111111, 22222222, 33333333, 44444444) THEN 1 
            ELSE 0 
        END  AS rut_real
    	, COUNT(rut) AS n_vis
        , fecha
    	, sucursal
    	, 01 as origen
    	, tipo
    	, v_periodo AS periodo
    FROM schm_workspace.agrupa
    GROUP BY 
    	rut
    	, sucursal
    	, fecha 
    	, tipo;


    --08
    CREATE TABLE schm_workspace.pago_cuotas AS 
    SELECT 
        sucursal
        , fecha
        , nro_cja_num AS nro_caja
        , nro_docto
        , rut_cliente
        , cajero
        , fecha_trunc
    FROM br_dm_prod_analytics_sybase_db.trx_header_abonos
    WHERE 
    	fecha_trunc BETWEEN v_periodo_ini AND v_periodo_fin 
    	AND tipo_trx = 2 
    	AND comercio = 1  
    	AND sucursal <> 63;


    --09
    CREATE TABLE schm_workspace.fecha_max_p_cuotas AS 
    SELECT 
        sucursal
        , MAX(fecha) AS max_of_fecha
        , rut_cliente
        , cajero
        , nro_caja
    FROM schm_workspace.pago_cuotas
    GROUP BY 
        sucursal
        , rut_cliente
        , cajero
        , nro_caja;


    --10
    CREATE TABLE schm_workspace.pago_cuotas_final AS 
    SELECT 
        sucursal
        , max_of_fecha
        , nro_caja AS num_caja
        , rut_cliente
        , cajero
        , 'PAGOS' AS detalle
        , CASE 
            WHEN nro_caja >= 200 THEN 'TF' 
            ELSE 'TV' 
        END AS via 
    FROM schm_workspace.fecha_max_p_cuotas;


    --11
    CREATE TABLE schm_workspace.ppff_tablo_visitas AS
    SELECT 
        rut_cliente AS rut
        , CASE 
            WHEN rut_cliente BETWEEN 1000000 AND 49999999 AND rut_cliente NOT IN (1111111, 2222222, 3333333, 4444444, 5555555, 6666666, 7777777, 8888888, 9999999, 11111111, 22222222, 33333333, 44444444) THEN 1 
            ELSE 0 
        END AS rut_real
        , max_of_fecha AS fecha
        , sucursal
        , via
        , CASE 
            WHEN via = 'TF' THEN 07 
            ELSE 01 
        END AS origen
        , CASE 
            WHEN VIA = 'TF' THEN 01 
            ELSE 05 
        END AS tipo
        , COUNT(rut_cliente) AS n_vis
    FROM schm_workspace.pago_cuotas_final
    GROUP BY
    	rut_cliente
    	, max_of_fecha
    	, sucursal
    	, via; 
    	

    INSERT INTO schm_workspace.ppff_tablon_visitas
    SELECT
    	rut
    	, CASE 
            WHEN rut BETWEEN 1000000 AND 49999999 AND rut NOT IN (1111111, 2222222, 3333333, 4444444, 5555555, 6666666, 7777777, 8888888, 9999999, 11111111, 22222222, 33333333, 44444444) THEN 1 
            ELSE 0 
        END AS rut_real
        , COUNT(rut) AS n_vis
    	, fecha
        , sucursal
    	, origen 
        , tipo
        , v_periodo AS periodo
    FROM schm_workspace.ppff_tablo_visitas
    GROUP BY
    	rut
    	, sucursal
    	, fecha
    	, tipo
    	, origen;


    --12
    CREATE TABLE schm_workspace.transacciones_camp AS 
    SELECT 
        camp_mov_id_k AS identificador
        , camp_mov_rut_cli AS rut
        , camp_mov_cod_canal AS canal
        , camp_mov_cod_suc AS sucursal
        , camp_mov_fch_hor AS fecha
        , camp_mov_nro_term AS caja
    FROM br_dm_prod_bigdata_camreport_db.cbcamp_mov_trx_ofe 
    WHERE camp_mov_cod_canal IN (4, 9, 3, 11, 2)
        AND camp_mov_fch_hor BETWEEN v_periodo_ini AND v_periodo_fin;
     

    --13
    CREATE TABLE schm_workspace.movil AS 
    SELECT DISTINCT 
        rut
        , CASE 
            WHEN rut BETWEEN 1000000 AND 49999999 AND rut NOT IN (1111111, 2222222, 3333333, 4444444, 5555555, 6666666, 7777777, 8888888, 9999999, 11111111, 22222222, 33333333, 44444444) THEN 1 
            ELSE 0 
        END AS rut_real
        , COUNT(rut) AS n_vis
        , fecha
        , sucursal
        , 09 AS origen
        , 01 AS tipo
        , v_periodo AS periodo
    FROM schm_workspace.transacciones_camp
    WHERE canal = 9
    GROUP BY 
        rut
        , rut_real
        , fecha
        , sucursal;

       
    --14
    CREATE TABLE schm_workspace.ccss AS 
    SELECT DISTINCT 
        rut
        , CASE 
            WHEN rut BETWEEN 1000000 AND 49999999 AND rut NOT IN (1111111, 2222222, 3333333, 4444444, 5555555, 6666666, 7777777, 8888888, 9999999, 11111111, 22222222, 33333333, 44444444) THEN 1 
            ELSE 0 
        END AS rut_real
        , COUNT(rut) AS n_vis
        , fecha
        , sucursal
        , CASE 
            WHEN sucursal BETWEEN 500 AND 799 THEN 00
            WHEN sucursal IN (800, 801, 802, 60, 61) THEN 03 
            ELSE 03 
        END AS origen
        , CASE 
            WHEN sucursal BETWEEN 500 AND 799 THEN 01
            WHEN sucursal IN (800, 801, 802, 60, 61) THEN 02 
            ELSE 01 
        END AS tipo
        , v_periodo AS periodo
    FROM schm_workspace.transacciones_camp
    WHERE canal = 3
    GROUP BY 
        rut
        , rut_real
        , fecha
        , sucursal
        , origen
        , tipo;

       
    --15
    CREATE TABLE schm_workspace.rpos AS 
    SELECT DISTINCT 
        rut
        , CASE 
            WHEN rut BETWEEN 1000000 AND 49999999 AND rut NOT IN (1111111, 2222222, 3333333, 4444444, 5555555, 6666666, 7777777, 8888888, 9999999, 11111111, 22222222, 33333333, 44444444) THEN 1 
            ELSE 0 
        END AS rut_real
        , COUNT(rut) AS n_vis
        , fecha
        , sucursal
        , 11 AS origen
        , 01 AS tipo
        , v_periodo AS periodo
    FROM schm_workspace.transacciones_camp
    WHERE canal = 11
    GROUP BY 
        rut
        , rut_real
        , fecha
        , sucursal;


    --16
    CREATE TABLE schm_workspace.adm AS 
    SELECT DISTINCT 
    	rut
    	, CASE 
    	    WHEN rut BETWEEN 1000000 AND 49999999 AND rut not in (1111111, 2222222, 3333333, 4444444, 5555555, 6666666, 7777777, 8888888, 9999999, 11111111, 22222222, 33333333, 44444444) THEN 1 
    	    ELSE 0 
    	END AS rut_real
    	, COUNT(rut) AS n_vis
    	, fecha
    	, sucursal
    	, CASE 
    	    WHEN sucursal BETWEEN 500 AND 799 THEN 00
    	    WHEN sucursal IN (800, 801, 802, 60, 61) THEN 04 
    	    ELSE 04 
    	END AS origen
    	, CASE 
    	    WHEN sucursal BETWEEN 500 AND 799 THEN 02
    	    WHEN sucursal IN (800, 801, 802, 60, 61) THEN 02 
    	    ELSE 01 
    	END AS tipo
    	, v_periodo AS periodo
    FROM schm_workspace.transacciones_camp
    WHERE canal = 4
    GROUP BY 
    	rut
    	, rut_real
    	, fecha
    	, sucursal
    	, origen
    	, tipo;


    --17
    CREATE TABLE schm_workspace.hb AS 
    SELECT DISTINCT 
        rut
        , CASE 
            WHEN rut BETWEEN 1000000 AND 49999999 AND rut NOT IN (1111111, 2222222, 3333333, 4444444, 5555555, 6666666, 7777777, 8888888, 9999999, 11111111, 22222222, 33333333, 44444444) THEN 1 
            ELSE 0 
        END AS rut_real
        , COUNT(rut) AS n_vis
        , fecha
        , sucursal
        , 02 AS origen
        , 01 AS tipo
        , v_periodo AS periodo
    FROM schm_workspace.transacciones_camp
    WHERE canal = 2
    GROUP BY 
        rut
        , rut_real
        , fecha
        , sucursal;

       
    --18
    insert INTO schm_workspace.ppff_tablon_visitas 
    SELECT 
    	*
    FROM schm_workspace.movil 
    UNION ALL
    SELECT 
    	*
    FROM schm_workspace.ccss
    UNION ALL 
    SELECT 
    	*
    FROM schm_workspace.rpos 
    UNION ALL 
    SELECT 
    	*
    FROM schm_workspace.adm
    UNION ALL  
    SELECT 
    	*
    FROM schm_workspace.hb;


    --19
    --INSERT INTO schm_workspace.tablon_visitas
    --SELECT 
    	--*
    	--, v_periodo AS periodo
    --FROM schm_workspace.insertar;
    		

    --20 
    CREATE TABLE schm_workspace.agrupado AS 
    SELECT 
        rut
    	, tipo_logueo
        , COUNT(rut) AS n_vis 
    FROM schm_data_analytics.dgtl_logueos_internet --preg si es la lib correcta, esta hasta el 202305
    WHERE periodo = v_periodo
    GROUP BY 
    	rut
    	, tipo_logueo;


    --21
    CREATE TABLE schm_workspace.agrupado1 AS 
    SELECT  
        rut
        , CASE 
            WHEN rut BETWEEN 1000000 AND 49999999 AND rut NOT IN (1111111, 2222222, 3333333, 4444444, 5555555, 6666666, 7777777, 8888888, 9999999, 11111111, 22222222, 33333333, 44444444) THEN 1 
            ELSE 0 
        END AS rut_real
        , n_vis
        , v_dia AS fecha
        , 39 AS sucursal
        , 19 AS origen
        , CASE 
            WHEN tipo_logueo = 'APP' THEN 01 
            ELSE 02 
        END AS tipo
        , v_periodo AS periodo
    FROM  schm_workspace.agrupado;
       

    INSERT INTO schm_workspace.ppff_tablon_visitas
    SELECT * 
    FROM schm_workspace.agrupado1;


    --22
    CREATE TABLE schm_workspace.trx_abonos AS 
    SELECT DISTINCT
        rut_cliente AS rut
        , fecha
        , sucursal
    FROM br_dm_prod_analytics_sybase_db.trx_abonos 
    WHERE fecha_ori BETWEEN v_periodo_ini AND v_periodo_fin
        AND sucursal = 63;


    --23
    CREATE TABLE schm_workspace.pago_epu_banco AS
    SELECT DISTINCT  
        rut
        , fecha AS fec_num
        , sucursal
    FROM schm_workspace.trx_abonos;


    INSERT INTO schm_workspace.ppff_tablon_visitas
    SELECT 
        rut
        , CASE 
            WHEN rut BETWEEN 1000000 AND 49999999 AND rut NOT IN (1111111, 2222222, 3333333, 4444444, 5555555, 6666666, 7777777, 8888888, 9999999, 11111111, 22222222, 33333333, 44444444) THEN 1 
            ELSE 0 
        END AS rut_real
        , COUNT(rut) AS n_vis
        , fec_num AS fecha
        , sucursal
        , 00 AS origen
        , 03 AS tipo
        , v_periodo AS periodo
    FROM schm_workspace.pago_epu_banco 
    GROUP BY 
    	rut
        , rut_real
        , fecha
        , sucursal;
         

    --24
    CREATE TABLE schm_workspace.pagos_banco AS
    SELECT 
        C.cli_identifica AS rut
        , B.pre_credito AS nro_operacion
        , A.fpa_codeje AS codigo_usuario
        , C.cli_identifica AS rut_cliente
        , C.cli_nomcorresp AS nombre_cliente
        , A.fpa_valor AS cuota_pagada
        , A.fpa_fecha AS fecha_pago
        , B.pre_fecontab AS fecha_contable
        , A.fpa_sucorg AS codigo_suc_origen
        , A.fpa_sucdes AS codigo_suc_destino
        , v_dia AS fecha_extraccion 
    FROM br_dm_prod_bigdata_fisa_db.tcaj_forpago AS A
        , br_dm_prod_bigdata_fisa_db.tpre_prestamos AS B
        , br_dm_prod_bigdata_fisa_db.tcli_persona AS C
    WHERE A.fpa_cuentades = B.pre_credito 
    	AND A.fpa_clides = C.cli_codigo 
        AND A.fpa_fecha BETWEEN v_periodo_ini AND v_periodo_fin;


    --25
    CREATE TABLE schm_workspace.pagos_creditos_banco AS 
    SELECT DISTINCT 
        rut_cliente AS rut
    	, fecha_pago AS fec_num
        , codigo_suc_destino
    FROM schm_workspace.pagos_banco
    WHERE codigo_suc_origen NOT IN (82, 83, 84);


    INSERT INTO schm_workspace.ppff_tablon_visitas
    SELECT 
        rut
        , CASE 
            WHEN rut BETWEEN 1000000 AND 49999999 AND rut not in (1111111, 2222222, 3333333, 4444444, 5555555, 6666666, 7777777, 8888888, 9999999, 11111111, 22222222, 33333333, 44444444) THEN 1 
            ELSE 0 
        END AS rut_real
        , COUNT(rut) AS n_vis
        , fec_num AS fecha
        , codigo_suc_destino AS sucursal
        , 00 AS origen
        , 04 AS tipo
        , v_periodo AS periodo     
    FROM schm_workspace.pagos_creditos_banco
    GROUP BY 
        rut
        , rut_real
        , fecha
        , tipo
        , sucursal;  


    DELETE FROM schm_data_analytics.ppff_tablon_visitas
        WHERE periodo = v_periodo;


    INSERT INTO schm_data_analytics.ppff_tablon_visitas
    SELECT
        rut
        , rut_real
        , n_vis
        , fecha
        , sucursal
        , origen
        , tipo
        , periodo
    FROM schm_workspace.ppff_tablon_visitas
    ;


    /*DROP TABLE IF EXISTS schm_workspace.tda1;
    DROP TABLE IF EXISTS schm_workspace.tda2;
    DROP TABLE IF EXISTS schm_workspace.tda3;
    DROP TABLE IF EXISTS schm_workspace.cruce_tda;
    DROP TABLE IF EXISTS schm_workspace.venta_final_tmp;
    DROP TABLE IF EXISTS schm_workspace.agrupa;
    DROP TABLE IF EXISTS schm_workspace.ppff_tablon_visitas;
    DROP TABLE IF EXISTS schm_workspace.pago_cuotas;
    DROP TABLE IF EXISTS schm_workspace.fecha_max_p_cuotas;
    DROP TABLE IF EXISTS schm_workspace.pago_cuotas_final;
    DROP TABLE IF EXISTS schm_workspace.ppff_tablo_visitas;
    DROP TABLE IF EXISTS schm_workspace.transacciones_camp;
    DROP TABLE IF EXISTS schm_workspace.movil;
    DROP TABLE IF EXISTS schm_workspace.ccss;
    DROP TABLE IF EXISTS schm_workspace.rpos;
    DROP TABLE IF EXISTS schm_workspace.adm;
    DROP TABLE IF EXISTS schm_workspace.hb;
    DROP TABLE IF EXISTS schm_workspace.insertar;-- eliminar si esq funciona
    DROP TABLE IF EXISTS schm_workspace.agrupado;
    DROP TABLE IF EXISTS schm_workspace.agrupado1;
    DROP TABLE IF EXISTS schm_workspace.trx_abonos;
    DROP TABLE IF EXISTS schm_workspace.pago_epu_banco;
    DROP TABLE IF EXISTS schm_workspace.pagos_banco;
    DROP TABLE IF EXISTS schm_workspace.pagos_creditos_banco;*/

    /*  ===========================================================================================================
        === Control de versiones visual ===
        2024-01-03  -- v03  --  Sergio Jara    -- Se corrige periodo en delete para un nuevo periodo no se duplique. 
        2023-12-29  -- v02  --  David Vásquez  -- Corrección a nombre de tabla de paso, nombres ppff_tablon_visitas y ppff_tablo_visitas.    
        2023-12-27  -- v01  --  Nicolás Reyes  -- Versión refactorizada del proceso en AWS.

        === Información adicional:
        Proceso que ...
        ===========================================================================================================
    */

END;
	





$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_trx_av_actual(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
BEGIN


	DROP TABLE IF EXISTS schm_workspace.ppff_cuota;
	DROP TABLE IF EXISTS schm_workspace.ppff_sincuota;
	DROP TABLE IF EXISTS schm_workspace.ppff_nc;
	DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_pisa;
	DROP TABLE IF EXISTS schm_workspace.ppff_trx_av;


	CREATE TABLE schm_workspace.ppff_cuota AS
	SELECT
		rut,
		dv,
		codent,
		centalta,
		cuenta,
		fecfac,
		pan,
		v_periodo AS periodo,
		numaut,
		numboleta,
		siaidcd,
		codpais AS pais,
		CASE
			WHEN codpais = 152 THEN 'NACIONAL'
			ELSE 'INTERNACIONAL'
		END AS nacional,
		sucursal,
		caja,
		codcom,
		nomcomred,
		codact,
		desact,
		CASE
			WHEN signo = '-'  THEN 'NOTA CREDITO'
			ELSE 'COMPRA'
		END AS transaccion,
		codmar,
		indtipt,
		destipt,
		tipo_tarjeta,
		linea,
		tipfran AS franquicia,
		desfra,
		tipofac,
		destipfac,
		signo,
		totcuotas,
		CASE
			WHEN totcuotas = 0 THEN 'REVOLVING'
			WHEN totcuotas = 1 THEN '1 CUOTA'
			ELSE '2 O MAS CUOTAS'
		END AS financiamiento,
		CASE
			WHEN signo = '-' THEN capital * -1
			ELSE capital
		END AS capital,
		CASE
			WHEN signo = '-' THEN entrada * -1
			ELSE entrada
		END AS pie,
		porint,
		valor_cuota,
		CASE
			WHEN signo = '-' THEN mgfin * -1 ELSE mgfin
		END AS mgfin,
		imptotal,
		porintcar,
		nummescar,
		CASE
			WHEN nummescar > 0 THEN 1
			ELSE 0
		END AS i_diferido,
		CASE
			WHEN signo = '-' THEN comision * -1
			ELSE comision
		END AS comision,
		modentdat,
		idterm,
		producto
	FROM (
	SELECT
		CAST(G.pemid_gls_nro_dct_ide_k AS INT) AS rut,
		G.pemid_dvr_nro_dct_ide AS dv,
		A.codent,
		A.centalta,
		A.cuenta,
		A.fecfac,
		A.pan,
		A.numaut,
		A.numboleta,
		A.siaidcd,
		A.codpais,
		SUBSTRING(A.sucursal, 1, 4) AS sucursal,
		SUBSTRING(A.sucursal, 5, 4) AS caja,
		A.codcom,
		A.nomcomred,
		A.codact,
		E.desact,
		F.codmar,
		F.indtipt,
		J.destipt,
		CASE
			WHEN F.codmar = 1 AND F.indtipt IN (1,3,9,11) then 'TR'
			WHEN F.codmar = 2 AND F.indtipt	IN (1,6,7,10,14) then 'TAM'
			WHEN F.codmar = 2 AND F.indtipt	IN (8) then 'MASTERCARD DEBITO'
			WHEN F.codmar = 2 AND F.indtipt	IN (13) then 'DEBITO CTACTE'
			WHEN F.codmar = 2 AND F.indtipt	IN (12) then 'MASTERCARD CHEK'
			WHEN F.codmar = 4 AND F.indtipt	IN (1) then 'MAESTRO DEBITO' 
		END AS tipo_tarjeta,
		A.linea,
		A.tipfran,
		I.desfra,
		A.tipofac,
		H.destipfac,
		H.indnorcor,
		H.signo,
		A.impfac AS capital,
		A.entrada,
		C.totcuotas,
		C.impcuota AS valor_cuota,
		C.impinttotal AS mgfin,
		C.imptotal,
		C.porint,
		C.porintcar,
		C.nummescar,
		X.modentdat,
		X.idterm,
		B.producto,
		SUM(COALESCE((D.impbrueco - D.impboneco), 0)) AS comision
	FROM br_dm_prod_bigdata_reporitf_db.mpdt205 A
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt004 X
		ON A.siaidcd = X.siaidcd
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 B
		ON A.codent = B.codent
		AND A.centalta = B.centalta
		AND A.cuenta = B.cuenta
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt206 C
		ON A.codent = C.codent
		AND A.centalta = C.centalta
		AND A.cuenta = C.cuenta
		AND A.clamon = C.clamon
		AND A.numopecuo = C.numopecuo
		AND A.numfinan = C.numfinan
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt208 D
		ON A.codent = D.codent
		AND A.centalta = D.centalta
		AND A.cuenta = D.cuenta
		AND A.clamon = D.clamon
		AND A.numopecuo = D.numopecuo
		AND A.numfinan = D.numfinan
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt039 E
		ON A.codent = E.codent
		AND A.codact = E.codact
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt009 F
		ON A.codent = F.codent
		AND A.centalta = F.centalta
		AND A.cuenta = F.cuenta
		AND A.pan = F.pan
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide G
		ON G.pemid_nro_inn_ide = B.identcli::integer
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt044 H
		ON A.codent = H.codent
		AND A.tipofac = H.tipofac
		AND A.indnorcor = H.indnorcor
		AND H.indfacinf = 'N'
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt131 I
		ON A.tipfran = I.tipfran
		AND I.codidioma = '1'
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt026 J
		ON J.codent = F.codent
		AND J.codmar = F.codmar
		AND J.indtipt = F.indtipt
	WHERE A.tipofac NOT IN (210, 115, 117)
		AND A.linea IN ('0051')
		AND A.tipfran NOT IN (9999, 8006, 0)
		AND A.fecfac BETWEEN v_fecha_inicio  AND v_fecha_fin
	GROUP BY
		G.pemid_gls_nro_dct_ide_k,
		G.pemid_dvr_nro_dct_ide,
		A.codent,
		A.centalta,
		A.cuenta,
		A.fecfac,
		A.pan,
		A.numaut,
		A.numboleta,
		A.siaidcd,
		A.codpais,
		SUBSTRING(A.sucursal, 1, 4),
		SUBSTRING(A.sucursal, 5, 4),
		A.codcom,
		A.nomcomred,
		A.codact,
		E.desact,
		F.codmar,
		F.indtipt,
		J.destipt,
		CASE
			WHEN F.codmar = 1 AND F.indtipt in (1, 3, 9, 11) THEN 'TR'
			WHEN F.codmar = 2 AND F.indtipt in (1, 6, 7, 10, 14) THEN 'TAM'
			WHEN F.codmar = 2 AND F.indtipt in (8) THEN 'MASTERCARD DEBITO'
			WHEN F.codmar = 2 AND F.indtipt in (13) THEN 'DEBITO CTACTE'
			WHEN F.codmar = 2 AND F.indtipt in (12) THEN 'MASTERCARD CHEK'
			WHEN F.codmar = 4 AND F.indtipt in (1) THEN 'MAESTRO DEBITO' 
		END,
		A.linea,
		A.tipfran,
		I.desfra,
		A.tipofac,
		H.destipfac,
		H.indnorcor,
		H.signo,
		A.impfac,
		A.entrada,
		C.totcuotas,
		C.impcuota,
		C.impinttotal,
		C.imptotal,
		C.porint,
		C.porintcar,
		C.nummescar,
		X.modentdat,
		X.idterm,
		B.producto);


	CREATE TABLE schm_workspace.ppff_sincuota AS
	SELECT
		rut,
		dv,
		codent,
		centalta,
		cuenta,
		fecfac,
		pan,
		v_periodo AS periodo,
		numaut,
		numboleta,
		siaidcd,
		codpais AS pais,
		CASE
			WHEN codpais = 152 THEN 'NACIONAL'
			ELSE 'INTERNACIONAL'
		END AS nacional,
		sucursal,
		caja,
		codcom,
		nomcomred,
		codact,
		desact,
		CASE
			WHEN signo = '-' THEN 'NOTA CREDITO'
			ELSE 'COMPRA'
		END AS transaccion,
		codmar,
		indtipt,
		destipt,
		tipo_tarjeta,
		linea,
		tipfran AS franquicia,
		desfra,
		tipofac,
		destipfac,
		signo,
		totcuotas,
		'REVOLVING' AS financiamiento,
		CASE
			WHEN signo = '-' THEN capital * -1
			ELSE capital
		END AS capital,
		CASE
			WHEN signo = '-' THEN entrada * -1
			ELSE entrada
		END AS pie,
		0 AS valor_cuota,
		0 AS mgfin,
		0 AS imptotal,
		0 AS porint,
		0 AS porintcar,
		0 AS nummescar,
		0 AS i_diferido,
		CASE
			WHEN signo = '-'
			THEN comision * -1
			ELSE comision
		END AS comision,
		modentdat,
		idterm,
		producto
	FROM (
	SELECT
		CAST(G.pemid_gls_nro_dct_ide_k AS int) AS rut,
		G.pemid_dvr_nro_dct_ide AS dv,
		A.codent,
		A.centalta,
		A.cuenta,
		A.codpais,
		A.fecfac,
		A.pan,
		A.numaut,
		A.numboleta,
		A.siaidcd,
		SUBSTRING(A.sucursal, 1, 4) AS sucursal,
		SUBSTRING(A.sucursal, 5, 4) AS caja,
		A.codcom,
		A.nomcomred,
		A.codact,
		A.totcuotas,
		D.desact,
		F.codmar,
		F.indtipt,
		J.destipt,
		CASE
			WHEN F.codmar = 1 AND F.indtipt in (1, 3, 9, 11) THEN 'TR'
			WHEN F.codmar = 2 AND F.indtipt	in (1, 6, 7, 10, 14) THEN 'TAM'
			WHEN F.codmar = 2 AND F.indtipt	in (8) THEN 'MASTERCARD DEBITO'
			WHEN F.codmar = 2 AND F.indtipt	in (13) THEN 'DEBITO CTACTE'
			WHEN F.codmar = 2 AND F.indtipt	in (12) THEN 'MASTERCARD CHEK'
			WHEN F.codmar = 4 AND F.indtipt	in (1) THEN 'MAESTRO DEBITO' 
		END AS tipo_tarjeta,
		A.linea,
		A.tipfran,
		I.desfra,
		A.tipofac,
		E.destipfac,
		E.indnorcor,
		E.signo,
		A.impfac AS capital,
		A.entrada,
		X.modentdat,
		X.idterm,
		B.producto,
		COALESCE((C.impbrueco - C.impboneco), 0) AS comision
	FROM br_dm_prod_bigdata_reporitf_db.mpdt012 A
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt004 X
		ON A.siaidcd = X.siaidcd
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 B
		ON A.codent = B.codent
		AND A.centalta = B.centalta
		AND A.cuenta = B.cuenta
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt039 D
		ON A.codent = D.codent
		AND A.codact = D.codact
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt009 F
		ON A.codent = F.CODENT
		AND A.centalta = F.centalta
		AND A.cuenta = F.cuenta
		AND A.pan = F.pan
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide G
		ON G.pemid_nro_inn_ide = B.identcli::integer
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt044 E
		ON A.tipofac = E.tipofac
		AND A.indnorcor = E.indnorcor
		AND E.indfacinf = 'N'
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt151 C
		ON A.codent = C.codent
		AND A.centalta = C.centalta
		AND A.cuenta = C.cuenta
		AND A.clamon = C.clamon
		AND A.numextcta = C.numextcta
		AND A.nummovext = C.nummovext
		AND C.tipimp = 2
		AND C.codconeco = 200
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt131 I
		ON A.tipfran = I.tipfran
		AND I.codidioma = '1'
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt026 J
		ON J.codent = F.codent
		AND J.codmar = F.codmar
		AND J.indtipt = F.indtipt
	WHERE A.tipofac NOT IN (210, 115, 117)
		AND A.linea in ('0051')
		AND A.indnorcor = 0
		AND A.tipfran NOT IN (9999, 8006, 0)
		AND A.numcuota = 0
		AND E.tipofacsist = 2
		AND A.fecfac BETWEEN  v_fecha_inicio AND v_fecha_fin);


	CREATE TABLE schm_workspace.ppff_nc AS
	SELECT
		rut,
		dv,
		codent,
		centalta,
		cuenta,
		fecfac,
		pan,
		v_periodo AS periodo,
		numaut,
		numboleta,
		siaidcd,
		codpais AS pais,
		CASE
			WHEN codpais = 152 THEN 'NACIONAL'
			ELSE 'INTERNACIONAL'
		END AS nacional,
		sucursal,
		caja,
		codcom,
		nomcomred,
		codact,
		desact,
		CASE
			WHEN signo = '-' THEN 'NOTA CREDITO'
			ELSE 'COMPRA'
		END AS transaccion,
		codmar,
		indtipt,
		destipt,
		tipo_tarjeta,
		linea,
		tipfran AS franquicia,
		desfra,
		tipofac,
		destipfac,
		signo,
		0 AS totcuotas,
		'NC' AS financiamiento,
		CASE
			WHEN signo = '-' THEN capital * -1
			ELSE capital
		END AS capital,
		CASE
			WHEN signo = '-' THEN entrada * -1
			ELSE entrada
		END AS pie,
		0 AS valor_cuota,
		0 AS mgfin,
		0 AS imptotal,
		0 AS porint,
		0 AS porintcar,
		0 AS nummescar,
		0 AS i_diferido,
		CASE
			WHEN signo = '-' THEN comision * -1
			ELSE comision
		END AS comision,
		modentdat,
		idterm,
		producto
	FROM (
	SELECT
		CAST(G.pemid_gls_nro_dct_ide_k AS int) AS rut,
		G.pemid_dvr_nro_dct_ide AS dv,
		A.codent,
		A.centalta,
		A.cuenta,
		A.codpais,
		A.fecfac,
		A.pan,
		A.numaut,
		A.numboleta,
		A.siaidcd,
		SUBSTRING(A.sucursal, 1, 4) AS sucursal,
		SUBSTRING(A.sucursal, 5, 4) AS caja,
		A.codcom,
		A.nomcomred,
		A.codact,
		D.desact,
		F.codmar,
		F.indtipt,
		J.destipt,
		CASE
			WHEN F.codmar = 1 AND F.indtipt IN (1, 3, 9, 11) THEN 'TR'
			WHEN F.codmar = 2 AND F.indtipt	IN (1, 6, 7, 10, 14) THEN 'TAM'
			WHEN F.codmar = 2 AND F.indtipt	IN (8) THEN 'MASTERCARD DEBITO'
			WHEN F.codmar = 2 AND F.indtipt	IN (13) THEN 'DEBITO CTACTE'
			WHEN F.codmar = 2 AND F.indtipt	IN (12) THEN 'MASTERCARD CHEK'
			WHEN F.codmar = 4 AND F.indtipt	IN (1) THEN 'MAESTRO DEBITO' 
		END AS tipo_tarjeta,
		A.linea,
		A.tipfran,
		I.desfra,
		A.tipofac,
		E.destipfac,
		E.indnorcor,
		E.signo,
		A.impfac AS capital,
		A.entrada,
		X.modentdat,
		X.idterm,
		B.producto,
		COALESCE((C.impbrueco - C.impboneco), 0) AS comision
	FROM br_dm_prod_bigdata_reporitf_db.mpdt012 A
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt004 X
		ON A.siaidcd = X.siaidcd
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 B
		ON A.codent = B.codent
		AND A.centalta = B.centalta
		AND A.cuenta = B.cuenta
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt039 D
		ON A.codent = D.codent
		AND A.codact = D.codact
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt009 F
		ON A.codent = F.codent
		AND A.centalta = F.centalta
		AND A.cuenta = F.cuenta
		AND A.pan = F.pan
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide G
		ON G.pemid_nro_inn_ide = B.identcli::INTEGER
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt044 E
		ON A.tipofac = E.tipofac
		AND A.indnorcor = E.indnorcor
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt131 I
		ON A.tipfran = I.tipfran
		AND I.codidioma = '1'
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt151 C
		ON A.codent = C.codent
		AND A.centalta = C.centalta
		AND A.cuenta = C.cuenta
		AND A.clamon = C.clamon
		AND A.numextcta = C.numextcta
		AND A.nummovext = C.nummovext
		AND C.tipimp = 2
		AND C.codconeco = 200
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt026 J
		ON J.codent = F.codent
		AND J.codmar = F.codmar
		AND J.indtipt = F.indtipt
	WHERE A.tipofac NOT IN (210, 115, 117)
		AND A.linea IN ('0051')
		AND A.indnorcor = 0
		AND (E.tipofacsist = 1500 AND A.indmovanu = 0)
		AND A.fecfac BETWEEN v_fecha_inicio AND v_fecha_fin);


	CREATE TABLE schm_workspace.ppff_trx_av_pisa AS
	SELECT
		D.rut,
		D.dv,
		schm_artifacts.f_period(CURRENT_DATE) AS periodo,
		D.codent,
		D.centalta,
		D.cuenta,
		D.producto,
		E.desprod,
		D.linea,
		D.fecfac,
		D.totcuotas,
		D.capital,
		D.sucursal AS suc,
		CAST(REPLACE(D.sucursal, ' ', '0') AS INTEGER) AS sucursal,
		CAST(REPLACE(D.caja, ' ', '0') AS INTEGER) AS n_caja,
		D.numboleta	AS documento,
		D.porint AS tasa_car,
		D.porintcar	AS tasa_diferido,
		D.valor_cuota AS cuota,
		D.mgfin AS interes,
		D.base,
		D.nummescar	AS diferido,
		D.i_diferido,
		D.pan,
		D.numaut,
		D.siaidcd,
		D.pais,
		D.nacional,
		D.transaccion,
		D.codmar,
		D.indtipt,
		D.destipt,
		D.tipo_tarjeta,
		D.franquicia,
		D.desfra,
		D.tipofac,
		D.destipfac,
		D.signo,
		D.financiamiento,
		D.imptotal,
		D.comision,
		CASE
			WHEN Linea = '0051' THEN 'AV'
			ELSE 'OTRO'
		END AS lugar
	FROM(
		SELECT
			A.*,
			'con cuota' AS base
		FROM schm_workspace.ppff_cuota A
		WHERE periodo = v_periodo

		UNION ALL

		SELECT
			B.*,
			'sin cuota' AS base
		FROM schm_workspace.ppff_sincuota B
		WHERE periodo = v_periodo

		UNION ALL

		SELECT
			C.*,
			'nc' AS base
		FROM schm_workspace.ppff_nc C
		WHERE periodo = v_periodo) D
		
		LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt043 E
			ON D.producto = E.producto;



	CREATE TABLE schm_workspace.ppff_trx_av AS
	SELECT
		rut,
		dv,
		v_periodo AS periodo,
		codent,
		centalta,
		cuenta,
		producto,
		desprod AS tipo_pdto,
		linea,
		fecfac,
		totcuotas,
		CAST(capital AS integer) AS capital,
		suc,
		sucursal,
		n_caja,
		documento,
		CASE
			WHEN n_caja = 0 AND sucursal NOT IN (1, 63) THEN 'ATM'
			WHEN sucursal = 1 AND n_caja = 1 THEN 'HB'
			WHEN sucursal = 300 AND n_caja = 1 THEN 'HB'
			WHEN sucursal = 400 AND n_caja = 1 THEN 'APP'
			WHEN sucursal = 1 AND n_caja = 2000 THEN 'PF'
			WHEN sucursal = 200 THEN 'MOVIL'
			WHEN sucursal = 63 THEN 'BCO'
			WHEN n_caja = 201 AND sucursal = 6 THEN 'TLMK'
			WHEN n_caja >= 200 AND sucursal NOT IN (6, 1, 63, 300, 400) THEN 'TF'
			WHEN n_caja < 200 AND sucursal NOT IN (6, 1, 63, 300, 400) THEN 'TV'
		END AS via,
		tasa_car,
		tasa_diferido,
		cuota,
		interes,
		base,
		diferido,
		CURRENT_DATE AS fec_ex,
		i_diferido,
		pan,
		numaut,
		siaidcd,
		pais,
		nacional,
		transaccion,
		codmar,
		indtipt,
		destipt,
		tipo_tarjeta,
		franquicia,
		desfra,
		tipofac,
		destipfac,
		signo,
		financiamiento,
		imptotal,
		comision,
		lugar
	FROM schm_workspace.ppff_trx_av_pisa
	WHERE sucursal <> 901
	ORDER BY fecfac DESC;

-- ---------------------------
-- Tabla Final
-- ---------------------------

	DELETE FROM schm_data_analytics.ppff_trx_av
	WHERE periodo = v_periodo;


	INSERT INTO schm_data_analytics.ppff_trx_av(
		rut,
		dv,
		periodo,
		codent,
		centalta,
		cuenta,
		producto,
		tipo_pdto,
		linea,
		fecfac,
		totcuotas,
		capital,
		suc,
		sucursal,
		n_caja,
		documento,
		via,
		tasa_car,
		tasa_diferido,
		cuota,
		interes,
		base,
		diferido,
		fec_ex,
		i_diferido,
		pan,
		numaut,
		siaidcd,
		pais,
		nacional,
		transaccion,
		codmar,
		indtipt,
		destipt,
		tipo_tarjeta,
		franquicia,
		desfra,
		tipofac,
		destipfac,
		signo,
		financiamiento,
		imptotal,
		comision,
		lugar)
	SELECT
		rut,
		dv,
		periodo,
		codent,
		centalta,
		cuenta,
		producto,
		tipo_pdto,
		linea,
		fecfac,
		totcuotas,
		capital,
		suc,
		sucursal,
		n_caja,
		documento,
		via,
		tasa_car,
		tasa_diferido,
		cuota,
		interes,
		base,
		diferido,
		fec_ex,
		i_diferido,
		pan,
		numaut,
		siaidcd,
		pais,
		nacional,
		transaccion,
		codmar,
		indtipt,
		destipt,
		tipo_tarjeta,
		franquicia,
		desfra,
		tipofac,
		destipfac,
		signo,
		financiamiento,
		imptotal,
		comision,
		lugar
	FROM schm_workspace.ppff_trx_av;

	DROP TABLE IF EXISTS schm_workspace.ppff_cuota;
	DROP TABLE IF EXISTS schm_workspace.ppff_sincuota;
	DROP TABLE IF EXISTS schm_workspace.ppff_nc;
	DROP TABLE IF EXISTS schm_workspace.ppff_trx_av_pisa;
	DROP TABLE IF EXISTS schm_workspace.ppff_trx_av;


END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_trx_consumo(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
	
	


BEGIN
    DROP TABLE IF EXISTS schm_workspace.ppff_pre_00_trx_bco1;
    DROP TABLE IF EXISTS schm_workspace.ppff_pre_01_trx_bco1;
    DROP TABLE IF EXISTS schm_workspace.ppff_pre_02_trx_bco1;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_bco1;
    DROP TABLE IF EXISTS schm_workspace.ppff_multi1;
    DROP TABLE IF EXISTS schm_workspace.ppff_multi2;
    DROP TABLE IF EXISTS schm_workspace.ppff_multi3;
    DROP TABLE IF EXISTS schm_workspace.ppff_base1;
    DROP TABLE IF EXISTS schm_workspace.ppff_base2;
    DROP TABLE IF EXISTS schm_workspace.ppff_base3;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_consumo;

    CREATE TABLE schm_workspace.ppff_pre_00_trx_bco1 AS
    SELECT
        a.pre_credito
       ,a.pre_numper
       ,a.pre_fecontab as fecha_contble
       ,a.pre_fecemi
       ,a.pre_tasapac
       ,CASE
            WHEN a.pre_sucursal = 0 THEN 'huerfanos 1060'
            WHEN a.pre_sucursal = 1 THEN 'HUERFANOS 1060'
            ELSE b.descripcion
        END AS sucursal
       ,a.pre_sucursal -- as zona
       ,a.pre_codeje
       -- ,a.PRE_CODEJE as nombre_ejecutivo_curse
       ,a.pre_fecONTAB
       ,a.pre_pro
       ,a.pre_status
       ,b.codigo
       ,a.pre_clientep
    FROM br_dm_prod_bigdata_fisa_db.tpre_prestamos a
    LEFT JOIN br_dm_prod_bigdata_fisa_db.br_desctabla b
           ON a.pre_sucursal = b.codigo
          AND b.entidad = 'BANCO'
          AND b.codigotab = 41
    WHERE a.pre_fecONTAB between schm_artifacts.f_first_day(v_fecha_inicio::date) and last_day(v_fecha_fin::date)
       AND a.pre_pro not in(45,59,73,50,51,80,15,38,70,8,39,82,99,41)
       AND a.pre_status = 'E';

    CREATE TABLE schm_workspace.ppff_pre_01_trx_bco1 AS
    SELECT
        a.pre_credito
       ,a.pre_numper
       ,a.pre_fecontab as fecha_contble
       ,a.pre_fecemi
       ,a.pre_tasapac
       ,a.sucursal
       ,b.glosa
       ,a.pre_codeje
       ,a.pre_fecONTAB
       ,a.pre_pro
       ,a.pre_status
       ,b.codigo
       ,a.pre_clientep
    FROM schm_workspace.ppff_pre_00_trx_bco1 a
    LEFT JOIN br_dm_prod_bigdata_fisa_db.br_desctabla b
           ON a.pre_sucursal = b.codigo
          AND b.entidad = 'BANCO'
          AND b.codigotab = 31;

    CREATE TABLE schm_workspace.ppff_pre_02_trx_bco1 AS
    SELECT a.pre_credito
       ,a.pre_numper
       ,a.pre_fecontab as fecha_contble
       ,a.pre_fecemi
       ,a.pre_tasapac
       ,a.sucursal
       ,a.glosa -- as zona
       ,b.emp_identifi as rut_ejecutivo_curse
       ,b.emp_nombre as nombre_ejecutivo_curse
       ,a.pre_fecONTAB
       ,a.pre_pro
       ,a.pre_status
       ,a.codigo
       ,a.pre_clientep
    FROM schm_workspace.ppff_pre_01_trx_bco1 a,
         br_dm_prod_bigdata_fisa_db.tgen_empleado b,
        br_dm_prod_bigdata_fisa_db.tgen_usuario c
    WHERE c.usr_codemp = b.emp_codigo
      AND c.usr_codigo = a.pre_codeje;

    CREATE TABLE schm_workspace.ppff_trx_bco1 AS
    SELECT
        a.pre_credito
       ,d.rut
       ,sum (d.monto_liquido) as venta_liquida
       ,sum (d.monto_bruto) as venta_bruta
       ,a.pre_numper
       ,a.pre_fecontab as fecha_contble
       ,a.pre_fecemi
       ,a.pre_tasapac
       ,a.sucursal
       ,a.glosa as zona
       ,e.canal_agenda
       ,(f.propension * 10) as propension
       ,f.rango_propension
       ,a.rut_ejecutivo_curse
       ,a.nombre_ejecutivo_curse
       ,g.leverage
       ,h.prd_nombre
       ,e.nombre_promocion as promo_base
       ,e.nombre_promocion as nombre_promocion
       ,e.cupo_promo as monto_oferta_promo_base
    FROM schm_workspace.ppff_pre_02_trx_bco1 a,
         br_dm_prod_bigdata_fisa_db.tcli_persona b,
         br_dm_prod_bigdata_fisa_db.br_dm_colocaciones_bco_sav d,
         br_dm_prod_bigdata_fisa_db.br_cam_minuta_final e,
         br_dm_prod_bigdata_fisa_db.br_dm_propension_crm f,
         br_dm_prod_bigdata_fisa_db.br_dm_leverage_campanas g,
        (SELECT prd_pro, prd_nombre
         FROM br_dm_prod_bigdata_fisa_db.tgen_productos
         WHERE prd_mod = 6) h
    WHERE a.pre_clientep = b.cli_codigo
      AND b.cli_identifica = d.rut
      AND d.fecini_promocion = schm_artifacts.f_first_day(v_fecha_inicio::date)
      AND d.lugar_pago = 'BCO'
      AND d.rut = e.rut
      AND d.rut = f.rut
      AND d.rut = g.rut
      AND g.fecini = schm_artifacts.f_first_day(v_fecha_inicio::date)
      AND a.pre_pro = h.prd_pro
      AND e.tipo_promo_plat not in (66, 69, 70)
    GROUP BY a.pre_credito
         , d.rut
         , a.pre_numper
         , a.pre_fecontab
         , a.pre_fecemi
         , a.pre_tasapac
         , a.glosa
         , a.sucursal
         , e.canal_agenda
         , f.propension
         , f.rango_propension
         , a.rut_ejecutivo_curse
         , a.nombre_ejecutivo_curse
         , g.LEVERAGe
         , h.prd_nombre
         , e.NOMBRE_PROMOCION
         , e.cupo_promo;

    CREATE TABLE schm_workspace.ppff_multi1 AS
    SELECT
        rut
        ,nombre_promocion
        ,cupo_promo
    FROM br_dm_prod_bigdata_fisa_db.br_cam_minuta_final
    WHERE tipo_promo_plat = 66;

    CREATE TABLE schm_workspace.ppff_multi2 AS
    SELECT
        rut
        ,nombre_promocion
        ,cupo_promo
    FROM br_dm_prod_bigdata_fisa_db.br_cam_minuta_final
    WHERE tipo_promo_plat = 69;

    CREATE TABLE schm_workspace.ppff_multi3 AS
    SELECT
        rut
        ,nombre_promocion
        ,cupo_promo
    FROM br_dm_prod_bigdata_fisa_db.br_cam_minuta_final
    WHERE tipo_promo_plat = 70;

    CREATE TABLE schm_workspace.ppff_base1 AS
    SELECT
       a.*,
       b.nombre_promocion as multi1,
       b.cupo_promo as oferta_multi1
    FROM schm_workspace.ppff_trx_bco1 as a
    LEFT JOIN schm_workspace.ppff_multi1 as b ON(a.rut = b.rut);

    CREATE TABLE schm_workspace.ppff_base2 AS
    SELECT
       a.*,
       b.nombre_promocion as multi2,
       b.cupo_promo as oferta_multi2
    FROM schm_workspace.ppff_base1 as a
    LEFT JOIN schm_workspace.ppff_multi2 b ON(a.RUT = b.RUT);

    CREATE TABLE schm_workspace.ppff_base3 AS
    SELECT
       a.*,
       b.nombre_promocion as multi3,
       b.cupo_promo as oferta_multi3
    FROM schm_workspace.ppff_base2 as a
    LEFT JOIN schm_workspace.ppff_multi3 AS b ON(a.rut = b.rut);

    CREATE TABLE schm_workspace.ppff_trx_consumo AS
    SELECT
        *,
        v_periodo as periodo
    FROM schm_workspace.ppff_base3;
    -- ---------------------------
    -- Tabla Final
    -- ---------------------------
    DELETE
        FROM schm_data_analytics.ppff_trx_consumo
    WHERE
        periodo = v_periodo;

    INSERT INTO schm_data_analytics.ppff_trx_consumo
        (pre_credito, rut, venta_liquida, venta_bruta, pre_numper, fecha_contble, pre_fecemi, pre_tasapac, sucursal, zona, canal_agenda, propension, rango_propension, rut_ejecutivo_curse, nombre_ejecutivo_curse, leverage, prd_nombre, promo_base, nombre_promocion, monto_oferta_promo_base, multi1, oferta_multi1, multi2, oferta_multi2, multi3, oferta_multi3, periodo)
    SELECT pre_credito, rut, venta_liquida, venta_bruta, pre_numper, fecha_contble, pre_fecemi, pre_tasapac, sucursal, zona, canal_agenda, propension, rango_propension, rut_ejecutivo_curse, nombre_ejecutivo_curse, leverage, prd_nombre, promo_base, nombre_promocion, monto_oferta_promo_base, multi1, oferta_multi1, multi2, oferta_multi2, multi3, oferta_multi3, periodo
    FROM schm_workspace.ppff_trx_consumo WHERE periodo = v_periodo;


    /*DROP TABLE IF EXISTS schm_workspace.ppff_pre_00_trx_bco1;
    DROP TABLE IF EXISTS schm_workspace.ppff_pre_01_trx_bco1;
    DROP TABLE IF EXISTS schm_workspace.ppff_pre_02_trx_bco1;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_bco1;
    DROP TABLE IF EXISTS schm_workspace.ppff_multi1;
    DROP TABLE IF EXISTS schm_workspace.ppff_multi2;
    DROP TABLE IF EXISTS schm_workspace.ppff_multi3;
    DROP TABLE IF EXISTS schm_workspace.ppff_base1;
    DROP TABLE IF EXISTS schm_workspace.ppff_base2;
    DROP TABLE IF EXISTS schm_workspace.ppff_base3;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_consumo;*/

	/*	===========================================================================================================
		=== Control de versiones visual ===
		2024-01-16	-- v01	--	David Vásquez     --	Se actualiza fuente de sasdata a data_analytics.

		=== Información adicional:
		Proceso que...
		===========================================================================================================
	*/

END;




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_trx_ref_rene(periodo_paso int4)
	LANGUAGE plpgsql
AS $$
	
	
begin
	
	DROP TABLE IF EXISTS schm_workspace.PPFF_ref_rene;
	
		CREATE TABLE schm_workspace.PPFF_ref_rene AS
	select distinct 
	al1.codent,
	al1.centalta,
	al1.cuenta,
	al1.fecfac,
	al1.estcompra,
	REPLACE(al1.fecfac, '-', '')::INT as fecha_trunc,
	al2.totcuotas,
	al2.porint as tasa,
	al1.impfac as capital,
	al2.impcuota as cuota,
	al2.impinttotal as interes,
	al2.impimptotot as impuesto,
	al1.tipofac,
	(substring(al1.sucursal,1,4))::INT  as sucursal,--pasar a numerico
	al5.destipc,
	al1.codtipc,
	cast(al4.pemid_gls_nro_dct_ide_k as int) as rut,
	al4.pemid_dvr_nro_dct_ide as dv,
	al1.linea,
	al1.numboleta,
	al3.identcli,
	al7.tipimp_9 as dm,
	al2.nummescar as carencia,
	(al2.imptotal + al2.impimptotot) as generado, 
	al2.numcuopag,
	al2.fecbaja,
	al2.motbaja,
	al3.producto,
	al6.desprod,
	cast(al1.fecfac as varchar)||cast(al4.pemid_gls_nro_dct_ide_k as varchar)||numboleta as key_1,
	substring(al1.fecfac,1,4)||substring(al1.fecfac,6,2) as periodo
	from br_dm_prod_bigdata_reporitf_db.mpdt205 al1
	left join br_dm_prod_bigdata_reporitf_db.mpdt206 al2
	on al1.codent = al2.codent and 
	   al1.centalta = al2.centalta and 
	   al1.cuenta = al2.cuenta and 
	   al1.codtipc = al2.codtipc and 
	   al1.numopecuo = al2.numopecuo and 
	   al1.clamon = al2.clamon and
	   al2.numfinan = 1 --ADICION NEORIS   
	left join br_dm_prod_bigdata_reporitf_db.mpdt007 al3    
	on (al1.codent = al3.codent and 
	   al1.centalta = al3.centalta and 
	   al1.cuenta = al3.cuenta)
	left join br_dm_prod_bigdata_reporitf_db.bopers_mae_ide al4
	on al3.identcli::integer = al4.pemid_nro_inn_ide 
	left join br_dm_prod_bigdata_reporitf_db.mpdt737 al5
	on al1.codent = al5.codent and 
	   al1.codtipc = al5.codtipc
	left join br_dm_prod_bigdata_reporitf_db.mpdt043 al6
	on al3.codent = al6.codent and 
	   al3.producto = al6.producto and 
	   al3.subprodu = al6.subprodu
	left join
	(
	select distinct codent, centalta, cuenta, fecalta, tipimp_9
	from br_dm_prod_bigdata_reporitf_db.mpdt196 
	where schm_artifacts.f_period(fecalta) = (schm_artifacts.f_period_add_n_months(schm_artifacts.f_period(getdate()::date),0)) 
	and estcompra not in(2,5)
	) al7
	on al1.codent = al7.codent and 
	    al1.centalta = al7.centalta and 
	    al1.cuenta = al7.cuenta 
	    and al1.fecfac = al7.fecalta --ADICION NEORIS
	where 
	al1.codtipc in ('0060', '0070') and 
	al1.linea = '0057' and 
	al1.estcompra not in (2,5) and 
	al1.tipofac = 210 and 
	al1.YEAR=floor(periodo_paso/100) AND 
	al1.month=periodo_paso-floor(periodo_paso/100)*100
	;
	
	-- ---------------------------
	-- Tabla Final REFINANCIAMIENTO
	-- ---------------------------
	
	DELETE 
		FROM schm_data_analytics.ppff_trx_refinanciamiento
	WHERE 
		periodo=periodo_paso;
	
	insert into schm_data_analytics.ppff_trx_refinanciamiento
	select 
	CENTALTA
	,CUENTA
	,FECFAC
	,ESTCOMPRA
	,fecha_trunc
	,TOTCUOTAS
	,TASA
	,CAPITAL
	,CUOTA
	--,INTERES
	--,IMPUESTO
	,TIPOFAC
	,sucursal 
	,DESTIPC
	
	,CASE WHEN sucursal=60 THEN 'CALL CENTER OPC'--Call Center
	WHEN sucursal= 61 THEN 'CALL  CENTER COB VALPARAISO'--Call Center
	WHEN sucursal IN (801,802) THEN 'CALL CENTER EXTERNO'--EmpEx
	ELSE 'TDA' END AS Origen_venta
	
	,CASE WHEN  sucursal IN (60,61,801,802) THEN 'CALL'
	WHEN sucursal THEN 'INTERNET'--PWA
	ELSE 'CCSS' END AS VIA --centro servicio
	,NUMBOLETA
	,CARENCIA
	,case
	when (sucursal=61 or sucursal=60 or sucursal=300 ) then 'Call Center'
	when (sucursal=800 or sucursal=801 or sucursal=802) then 'EmpEx'
	when sucursal=120 then 'PWA'
	--when r.COD_SUC=388 then 'Miraflores 388'
	--when r.COD_SUC=103 then 'Centro de Servicios'
	--else 'Otros'
	else 'Centro de Servicios' end as Canal
	,RUT
	,DV
	,PERIODO
	
	from schm_workspace.PPFF_ref_rene
	where codtipc='0060' and rut<49000000
	order by periodo,key_1;
	
	
	
	-- ---------------------------
	-- Tabla Final RENEGOCIACION
	-- ---------------------------
	
	DELETE 
		FROM schm_data_analytics.ppff_trx_renegociacion
	WHERE 
		periodo=periodo_paso;
	
	
	
	insert into schm_data_analytics.ppff_trx_renegociacion
	select 
	centalta
	,cuenta
	,fecfac
	,estcompra
	,fecha_trunc
	,totcuotas --as plazo
	,tasa
	,capital
	,cuota
	,tipofac
	,sucursal --pasar a numerico
	,destipc
	,numboleta
	,carencia
	,case
	when (sucursal=61 or sucursal=60 or sucursal=300 ) then 'Call Center'
	when (sucursal=800 or sucursal=801 or sucursal=802) then 'EmpEx'
	when sucursal=120 then 'PWA'
	--when r.COD_SUC=388 then 'Miraflores 388'
	--when r.COD_SUC=103 then 'Centro de Servicios'
	--else 'Otros'
	else 'Centro de Servicios' end as Canal
	,rut
	,dv
	,periodo
	from schm_workspace.PPFF_ref_rene
	where codtipc='0070' and rut<49000000
	order by periodo,key_1;
	
	DROP TABLE IF EXISTS schm_workspace.PPFF_ref_rene;

	/*	===========================================================================================================
		=== Control de versiones visual ===
		2023-11-21 -- v01 -- Pedro Muñoz 	--	Versión original.

		=== Información adicional:
		Proceso que trae todos los refinanciamientos y renegociaciones del periodo.
		===========================================================================================================
	*/

END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_trx_refinanciamiento(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
begin 

	
    DROP TABLE IF EXISTS schm_workspace.ppff_tmp_trx_mpdt205;
    DROP TABLE IF EXISTS schm_workspace.ppff_ref_itf_prueba;
    DROP TABLE IF EXISTS schm_workspace.ppff_ref_itf_prueba1;
    DROP TABLE IF EXISTS schm_workspace.ppff_ref_itf_prueba2;
    DROP TABLE IF EXISTS schm_workspace.ppff_ref_itf_prueba3;


    CREATE TABLE schm_workspace.ppff_tmp_trx_mpdt205 AS
    SELECT 
    	centalta
    	,clamon
    	,codent
    	,cuenta
    	,codtipc
    	,linea
    	,fecfac
    	,estcompra
    	,sucursal
    	,tipofac
    	,impfac
    	,numopecuo
    FROM br_dm_prod_bigdata_reporitf_db.mpdt205
    WHERE fecfac BETWEEN v_fecha_inicio AND v_fecha_fin
    	AND linea = '0057'
    	AND codtipc = '0060';


    CREATE TABLE schm_workspace.ppff_ref_itf_prueba AS
    SELECT 
    	t1.centalta
    	,t1.cuenta
    	,t1.codtipc
    	,t1.linea
    	,t1.fecfac
    	,t1.estcompra
    	,t1.sucursal
    	,t1.tipofac
    	,t2.totcuotas
    	,t2.porint as tasa
    	,t1.impfac as capital
    	,t2.impcuota as cuota
    	,t2.impinttotal as interes
    	,t2.impimptotot as impuesto
    FROM schm_workspace.ppff_tmp_trx_mpdt205 t1
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt206 t2
    	ON t1.codent = t2.codent 
    	AND t1.centalta = t2.centalta 
    	AND t1.cuenta = t2.cuenta 
    	AND t1.clamon = t2.clamon 
    	AND t1.codtipc = t2.codtipc 
    	AND t1.numopecuo = t2.numopecuo;


    CREATE TABLE schm_workspace.ppff_ref_itf_pruebA1 AS 
    SELECT 
    	a.*
    	,b.destipc
    FROM schm_workspace.ppff_ref_itf_prueba AS a
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt737 AS b
    	ON a.codtipc = b.codtipc;


    CREATE TABLE schm_workspace.ppff_ref_itf_prueba2 AS 
    SELECT 
    	a.*
    	,b.identcli
    	,CAST(b.identcli AS INTEGER) AS ide
    	,CAST(SUBSTRING(a.fecfac,1,4)||SUBSTRING(a.fecfac,6,2)||SUBSTRING(a.fecfac,9,2) AS INTEGER) AS fecha_trunc
    FROM schm_workspace.ppff_ref_itf_prueba1 AS A
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 AS B
      ON a.centalta = b.centalta 
      AND a.cuenta = b.cuenta;

 
    CREATE TABLE schm_workspace.ppff_ref_itf_prueba3 AS 
    SELECT 
    	t1.centalta
    	,t1.cuenta
    	,t1.codtipc
    	,t1.linea
    	,t1.fecfac
    	,t1.estcompra
    	,t1.fecha_trunc
    	,TO_CHAR(t1.fecfac,'dd/mm/yyyy') as fecha_ok
    	,t1.totcuotas
    	,t1.tasa
    	,t1.capital
    	,t1.cuota
    	,t1.interes
    	,t1.impuesto
    	,t1.sucursal
    	,t1.tipofac
    	,CAST(SUBSTRING(t1.sucursal,1,4) as INTEGER) as sucursales
    	,t1.destipc
    	,t1.identcli
    	,t1.ide
    	,t2.pemid_gls_nro_dct_ide_k as rut
    	,t2.pemid_dvr_nro_dct_ide as dv
    FROM schm_workspace.ppff_ref_itf_prueba2 AS t1 
    INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide AS t2 
      ON t1.ide = t2.pemid_nro_inn_ide;


    /* Eliminar periodo a procesar en */ 
    DELETE FROM schm_data_analytics.ppff_trx_refinanciamiento
    WHERE periodo = v_periodo;


    /* schm_productos_financieros.TRX_REF */
    INSERT INTO schm_data_analytics.ppff_trx_refinanciamiento
    SELECT 
    	centalta
    	,cuenta
    	,fecfac
    	,estcompra
    	,fecha_trunc
    	,totcuotas
    	,tasa
    	,capital
    	,cuota
    	,interes
    	,impuesto
    	,tipofac
    	,sucursales AS sucursal
    	,destipc
    	,rut
    	,CASE 
    	  WHEN sucursales = 60 THEN 'CALL CENTER OPC'
    	  WHEN sucursales = 61 THEN 'CALL  CENTER COB VALPARAISO'
    	  WHEN sucursales IN (801,802) THEN 'CALL CENTER EXTERNO'
    	  ELSE 'TDA' 
    	END AS origen_venta
    	,CASE 
    	  WHEN sucursales IN (60,61,801,802) THEN 'CALL'
    	  WHEN sucursales = 120 THEN 'INTERNET'
    	  ELSE 'CCSS' 
    	END AS via
    	,v_periodo as periodo
    FROM schm_workspace.ppff_ref_itf_prueba3;
    
    
    /* DROP TABLE IF EXISTS */
    DROP TABLE IF EXISTS schm_workspace.ppff_tmp_trx_mpdt205;
    DROP TABLE IF EXISTS schm_workspace.ppff_ref_itf_prueba;
    DROP TABLE IF EXISTS schm_workspace.ppff_ref_itf_prueba1;
    DROP TABLE IF EXISTS schm_workspace.ppff_ref_itf_prueba2;
    DROP TABLE IF EXISTS schm_workspace.ppff_ref_itf_prueba3;

END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_trx_renegociacion(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
BEGIN

   DROP TABLE IF EXISTS schm_workspace.ppff_trx_rene_mpdt205;
   DROP TABLE IF EXISTS schm_workspace.ppff_rene_itf_prueba;
   DROP TABLE IF EXISTS schm_workspace.ppff_trx_rene_itf_prueba1;
   DROP TABLE IF EXISTS schm_workspace.ppff_trx_rene_itf_prueba2;
   DROP TABLE IF EXISTS schm_workspace.ppff_trx_rene_itf_prueba3;
  
  
   CREATE TABLE schm_workspace.ppff_trx_rene_mpdt205 AS 
   SELECT 
      codent
      ,centalta
      ,cuenta
      ,clamon
      ,codtipc
      ,linea
      ,fecfac
      ,estcompra
      ,sucursal
      ,tipofac
      ,impfac
      ,numopecuo
   FROM br_dm_prod_bigdata_reporitf_db.mpdt205
   WHERE linea = '0057'
      AND codtipc = '0070'
      AND fecfac BETWEEN v_fecha_inicio AND v_fecha_fin;


   CREATE TABLE schm_workspace.ppff_rene_itf_prueba AS 
   SELECT 
      t1.centalta
      ,t1.cuenta
      ,t1.codtipc
      ,t1.linea
      ,t1.fecfac
      ,t1.estcompra
      ,t1.sucursal
   	  ,t1.tipofac
      ,t2.totcuotas
      ,t2.porint AS tasa
      ,t1.impfac AS capital
      ,t2.impcuota AS cuota
      ,t2.impinttotal AS interes
      ,t2.impimptotot AS impuesto
   FROM schm_workspace.ppff_trx_rene_mpdt205 AS t1
   LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt206 AS t2
      ON (t1.codent = t2.codent 
         AND t1.centalta = t2.centalta
         AND t1.cuenta = t2.cuenta
         AND t1.clamon = t2.clamon
         AND t1.codtipc = t2.codtipc
         AND t1.numopecuo = t2.numopecuo);


   CREATE TABLE schm_workspace.ppff_trx_rene_itf_prueba1 AS 
   SELECT 
      A.*
      ,B.destipc
   FROM schm_workspace.ppff_rene_itf_prueba AS A
   INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt737 AS B 
      ON (A.codtipc = B.codtipc);


   CREATE TABLE schm_workspace.ppff_trx_rene_itf_prueba2 AS 
   SELECT 
      A.*
      ,B.identcli
      ,CAST(B.identcli AS INTEGER) AS ide
      ,CAST(SUBSTRING(a.fecfac,1,4)||SUBSTRING(a.fecfac,6,2)||SUBSTRING(a.fecfac,9,2) AS INTEGER) AS fecha_trunc
   FROM schm_workspace.ppff_trx_rene_itf_prueba1 AS A
   INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 AS B
      ON A.centalta = B.centalta 
         AND A.cuenta = B.cuenta;


   CREATE TABLE schm_workspace.ppff_trx_rene_itf_prueba3 AS 
   SELECT 
      t1.centalta
      ,t1.cuenta
      ,t1.codtipc
      ,t1.linea
      ,t1.fecfac
      ,t1.estcompra
      ,t1.fecha_trunc
      ,TO_CHAR(t1.fecfac,'dd/mm/yyyy') AS fecha_ok
      ,t1.totcuotas
      ,t1.tasa
      ,t1.capital
      ,t1.cuota
      ,t1.interes
      ,t1.impuesto
      ,t1.sucursal
      ,t1.tipofac
      ,CAST(SUBSTRING(t1.sucursal, 1, 4) AS INTEGER) AS sucursales
      ,t1.destipc
      ,t1.identcli
      ,t1.ide
      ,t2.pemid_gls_nro_dct_ide_k AS rut
      ,t2.pemid_dvr_nro_dct_ide AS dv
   FROM schm_workspace.ppff_trx_rene_itf_prueba2 AS t1 
   INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide AS t2 
      ON t1.ide = t2.pemid_nro_inn_ide;

     
   DELETE FROM schm_data_analytics.ppff_trx_renegociacion
   WHERE periodo = v_periodo;

   INSERT INTO schm_data_analytics.ppff_trx_renegociacion
   SELECT 
      centalta
      ,cuenta
      ,fecfac
      ,estcompra
      ,fecha_trunc
      ,totcuotas
      ,tasa
      ,capital
      ,cuota
      ,interes
      ,impuesto
      ,tipofac
      ,sucursales AS sucursal
      ,destipc
      ,rut
      ,v_periodo AS periodo
   FROM schm_workspace.ppff_trx_rene_itf_prueba3;

   
   DROP TABLE IF EXISTS schm_workspace.ppff_trx_rene_mpdt205;
   DROP TABLE IF EXISTS schm_workspace.ppff_rene_itf_prueba;
   DROP TABLE IF EXISTS schm_workspace.ppff_trx_rene_itf_prueba1;
   DROP TABLE IF EXISTS schm_workspace.ppff_trx_rene_itf_prueba2;
   DROP TABLE IF EXISTS schm_workspace.ppff_trx_rene_itf_prueba3;
   

  
END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_trx_sav(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
	
	

BEGIN


    DROP TABLE IF EXISTS schm_workspace.ppff_ofertas;
    DROP TABLE IF EXISTS schm_workspace.ppff_curse_sav_pa;
    DROP TABLE IF EXISTS schm_workspace.ppff_curse_sav_pa_1;
    DROP TABLE IF EXISTS schm_workspace.ppff_curse_sav_pa_2;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_adm_0;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_adm_1;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_adm_2;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_adm_3;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_admision;
    DROP TABLE IF EXISTS schm_workspace.ppff_cuota;
    DROP TABLE IF EXISTS schm_workspace.ppff_nc;
    DROP TABLE IF EXISTS schm_workspace.ppff_aprob_sav;
    DROP TABLE IF EXISTS schm_workspace.ppff_aprob_sav2;
    DROP TABLE IF EXISTS schm_workspace.ppff_cruce_sav;
    DROP TABLE IF EXISTS schm_workspace.ppff_cruce_sav1;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_sav;
    DROP TABLE IF EXISTS schm_workspace.ppff_sav_aprobado;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_sav1;
    DROP TABLE IF EXISTS schm_workspace.ppff_salida;


    CREATE TABLE schm_workspace.ppff_ofertas AS
    SELECT
         ofe_cod_nro_sol_k
         , ofe_cod_prd_ofe_k
         , ofe_vlr_rta_ofe
         , ofe_vlr_cup_ofe
         , ofe_vlr_cup_rca
         , ofe_cac_nro_ctt
         , ofe_cod_ind_ofe
         , ofe_cod_ind_sol
         , ofe_vlr_cup_sol
         , ofe_fch_ini_vig
         , ofe_fch_fin_vig
         , ofe_cac_cod_cps
         , ofe_gls_des_cps
         , ofe_gls_des_ofe
    FROM br_dm_prod_bigdata_reporitf_db.sfadmi_bco_ofe
    WHERE ofe_cod_prd_ofe_k = '050001'
        AND ofe_cod_ind_sol = 1;


    CREATE TABLE schm_workspace.ppff_curse_sav_pa AS
    SELECT
        T1.*
        , T2.sol_cod_est_sol
        , T2.sol_fch_crc_sol
        , T2.sol_fch_alt_sol
        , T2.sol_nro_suc_ore AS nro_sucursal_origen
        , T2.sol_cac_suc_adm AS sucursal_admision
        , T2.sol_cod_cll_adm
        , T2.sol_cod_cll_sol
    FROM schm_workspace.ppff_ofertas T1
    INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_sol T2
        ON T1.ofe_cod_nro_sol_k = T2.sol_cod_nro_sol_k
    WHERE T2.sol_cod_est_sol = 11;


    CREATE TABLE schm_workspace.ppff_curse_sav_pa_1 AS
    SELECT
        T1.*
        , T2.per_cod_ide_cli_k AS rut
    FROM schm_workspace.ppff_curse_sav_pa T1
    INNER JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_dat_per T2
        ON T1.ofe_cod_nro_sol_k = T2.per_cod_nro_sol_k;


    CREATE TABLE schm_workspace.ppff_curse_sav_pa_2 AS
    SELECT
        T1.*
        , T2.prd_vlr_cup_sol
        , sol_fch_alt_sol AS fecha_num
    FROM schm_workspace.ppff_curse_sav_pa_1 T1
        ,br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol T2
    WHERE T1.ofe_cod_nro_sol_k = T2.prd_cod_nro_sol_k
        AND T1.ofe_cod_prd_ofe_k = T2.prd_cod_tip_prd_k;


    CREATE TABLE schm_workspace.ppff_trx_adm_0 AS
    SELECT
        rut
        , rut AS rut_real
        , ofe_cod_nro_sol_k
        , ofe_vlr_cup_ofe
        , ofe_vlr_cup_rca
        , prd_vlr_cup_sol
        , sol_fch_alt_sol
        , nro_sucursal_origen
        , sucursal_admision
    FROM schm_workspace.ppff_curse_sav_pa_2
    WHERE fecha_num BETWEEN v_fecha_inicio AND v_fecha_fin;
    --WHERE fecha_num BETWEEN '2023-11-01' AND '2023-11-30';


    CREATE TABLE schm_workspace.ppff_trx_adm_1 AS
    SELECT
        T1.rut
        , T1.rut_real
        , T1.ofe_cod_nro_sol_k
        , T1.ofe_vlr_cup_ofe
        , T1.ofe_vlr_cup_rca
        , T1.prd_vlr_cup_sol
        , T1.sol_fch_alt_sol
        , T1.nro_sucursal_origen
        , T1.sucursal_admision
        , T2.prd_cod_tip_prd_k
        , T2.prd_cac_det_prd
        , T2.prd_gls_des_pln
        , T2.prd_gls_des_afi
    FROM schm_workspace.ppff_trx_adm_0 T1
    LEFT JOIN br_dm_prod_bigdata_reporitf_db.sfadmi_bco_prd_sol T2
        ON T1.ofe_cod_nro_sol_k = T2.prd_cod_nro_sol_k
        AND T1.prd_vlr_cup_sol = T2.prd_vlr_cup_sol;


    CREATE TABLE schm_workspace.ppff_trx_adm_2 AS
    SELECT
        *
        , CASE
            WHEN prd_cac_det_prd ILIKE '%EFECTIVO%' THEN 'EFECTIVO'
            WHEN prd_cac_det_prd ILIKE '%TRANSFERENCIA EXTERNA MISMO RUT%' THEN 'TRANSFERENCIA'
            ELSE 'TRANSFERENCIA'
        END AS tipo_desembolso
    FROM schm_workspace.ppff_trx_adm_1;


    CREATE TABLE schm_workspace.ppff_trx_adm_3 AS
    SELECT
        *
        , sol_fch_alt_sol AS fecha
    FROM schm_workspace.ppff_trx_adm_2;


    CREATE TABLE schm_workspace.ppff_trx_admision AS
    SELECT
        T1.*
        , T2.tgmsu_nom_suc
        , CASE
            WHEN T1.sucursal_admision > 100 THEN 'BANCO_R'
            ELSE 'T_RIPLEY'
        END AS tipo_suc
        , CASE
            WHEN T1.tipo_desembolso = 'EFECTIVO' THEN 'CIS'
            ELSE 'TEF'
        END AS via
    FROM schm_workspace.ppff_trx_adm_3 T1
    INNER JOIN br_dm_prod_bigdata_reporitf_db.botgen_mae_suc T2
        ON T1.sucursal_admision = T2.tgmsu_cod_suc_k;


    CREATE TABLE schm_workspace.ppff_cuota AS
    SELECT
        rut
        , dv
        , id
        , codent
        , centalta
        , cuenta
        , fecfac
        , pan
        , numaut
        , numboleta
        , siaidcd
        , codpais AS pais
        , codtipc
        , CASE
            WHEN codpais = 152 THEN 'NACIONAL'
            ELSE 'INTERNACIONAL'
        END AS nacional
        , sucursal
        , caja
        , codcom
        , nomcomred
        , codact
        , desact
        , CASE
            WHEN signo = '-' THEN 'NOTA CREDITO'
            ELSE 'COMPRA'
        END AS transaccion
        , codmar
        , indtipt
        , destipt
        , tipo_tarjeta
        , linea
        , tipfran AS franquicia
        , desfra
        , tipofac
        , destipfac
        , signo
        , totcuotas
        , CASE
            WHEN totcuotas = 0 THEN 'REVOLVING'
            WHEN totcuotas = 1 THEN '1 CUOTA'
            ELSE '2 O MAS CUOTAS'
        END AS financiamiento
        , CASE
            WHEN signo = '-' THEN capital * -1
            ELSE capital
        END AS capital
        , CASE
            WHEN signo = '-' THEN entrada * -1
            ELSE entrada
        END AS pie
        , porint
        , valor_cuota
        , CASE
            WHEN signo = '-' THEN mgfin * -1
            ELSE mgfin
        END AS mgfin
        , imptotal
        , porintcar
        , nummescar
        , CASE
            WHEN nummescar > 0 THEN 1
            ELSE 0
        END AS i_diferido
        , CASE
            WHEN signo = '-' THEN comision * -1
            ELSE comision
        END AS comision
        , modentdat
        , idterm
        , impuesto
        , estcompra
        , producto
        , subprodu
        , numbencta
    FROM(
        SELECT
            CAST(G.pemid_gls_nro_dct_ide_k as INT) AS rut
            , G.pemid_dvr_nro_dct_ide AS dv
            , G.pemid_nro_inn_ide AS id
            , A.codent
            , A.centalta
            , A.cuenta
            , A.fecfac
            , A.pan
            , A.numaut
            , A.numboleta
            , A.siaidcd
            , A.codpais
            , A.codtipc
            , SUBSTRING(A.sucursal, 1, 4) AS sucursal
            , SUBSTRING(A.sucursal, 5, 4) AS caja
            , A.codcom
            , A.nomcomred
            , A.codact
            , E.desact
            , F.codmar
            , F.indtipt
            , J.destipt
            , CASE
                WHEN F.codmar = 1 AND F.indtipt IN (1, 3, 9, 11) THEN 'TR'
                WHEN F.codmar = 2 AND F.indtipt IN (1, 6, 7, 10, 14) THEN 'TAM'
                WHEN F.codmar = 2 AND F.indtipt = 8 THEN 'MASTERCARD DEBITO'
                WHEN F.codmar = 2 AND F.indtipt = 13 THEN 'DEBITO CTACTE'
                WHEN F.codmar = 2 AND F.indtipt = 12 THEN 'MASTERCARD CHEK'
                WHEN F.codmar = 4 AND F.indtipt = 1 THEN 'MAESTRO DEBITO'
            END AS TIPO_TARJETA
            , A.linea
            , A.tipfran
            , I.desfra
            , A.tipofac
            , h.destipfac
            , h.indnorcor
            , h.signo
            , A.impfac AS capital
            , C.impimptotot AS impuesto
            , A.estcompra
            , A.entrada
            , C.totcuotas
            , C.impcuota AS valor_cuota
            , C.impinttotal AS mgfin
            , C.imptotal
            , C.porint
            , C.porintcar
            , C.nummescar
            , C.motbaja
            , C.fecbaja
            , X.modentdat
            , X.idterm
            , B.producto
            , B.subprodu
            , F.numbencta
            , SUM(COALESCE((D.impbrueco - D.impboneco),0)) AS comision
        FROM br_dm_prod_bigdata_reporitf_db.mpdt205 A
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt004 X
            ON A.siaidcd = X.siaidcd
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 B
            ON A.codent = B.codent
            AND A.centalta = B.centalta
            AND A.cuenta = B.cuenta
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt206 C
            ON A.codent = C.codent
            AND A.centalta = C.centalta
            AND A.cuenta = C.cuenta
            AND A.clamon = C.clamon
            AND A.numopecuo = C.numopecuo
            AND A.numfinan = C.numfinan
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt208 D
            ON A.codent = D.codent
            AND A.centalta = D.centalta
            AND A.cuenta = D.cuenta
            AND A.clamon = D.clamon
            AND A.numopecuo = D.numopecuo
            AND A.numfinan = D.numfinan
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt039 E
            ON A.codent=E.codent
            AND A.codact=E.codact
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt009 F
            ON A.codent=F.codent
            AND A.centalta = F.centalta
            AND A.cuenta = F.cuenta
            AND A.pan = F.pan
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide G
            ON G.pemid_nro_inn_ide = CAST(B.identcli AS INTEGER)
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt044 H
            ON A.codent = H.codent
            AND A.tipofac = H.tipofac
            AND A.indnorcor = H.indnorcor
            AND H.indfacinf = 'N'
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt131 I
            ON A.tipfran = I.tipfran
            AND I.codidioma = '1'
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt026 J
            ON J.codent = F.codent
            AND J.codmar = F.codmar
            AND J.indtipt = F.indtipt
        WHERE A.tipofac NOT IN (210, 115, 117)
            AND A.linea = '0052'
            AND A.tipfran NOT IN (9999, 8006, 0)
            AND A.fecfac BETWEEN v_fecha_inicio AND v_fecha_fin
          --AND A.fecfac BETWEEN '2023-11-01' AND '2023-11-30'
        GROUP BY
            G.pemid_gls_nro_dct_ide_k
            , G.pemid_dvr_nro_dct_ide
            , G.pemid_nro_inn_ide
            , A.codent
            , A.centalta
            , A.cuenta
            , A.fecfac
            , A.pan
            , A.numaut
            , A.numboleta
            , A.siaidcd
            , A.codpais
            , A.codtipc
            , SUBSTRING(A.sucursal, 1, 4)
            , SUBSTRING(A.sucursal, 5, 4)
            , A.codcom
            , A.nomcomred
            , A.codact
            , E.desact
            , F.codmar
            , F.indtipt
            , J.destipt
            , CASE
                WHEN F.codmar = 1 AND F.indtipt IN (1, 3, 9, 11) THEN 'TR'
                WHEN F.codmar = 2 AND F.indtipt IN (1, 6, 7, 10) THEN 'TAM'
                WHEN F.codmar = 2 AND F.indtipt IN (8, 12, 13) THEN 'MASTERCARD DEBITO'
                WHEN F.codmar = 4 AND F.indtipt = 1 THEN 'MAESTRO DEBITO'
            END
            , A.linea
            , A.tipfran
            , I.desfra
            , A.tipofac
            , H.destipfac
            , H.indnorcor
            , H.signo
            , A.impfac
            , C.impimptotot
            , A.estcompra
            , A.entrada
            , C.totcuotas
            , C.impcuota
            , C.impinttotal
            , C.imptotal
            , C.porint
            , C.porintcar
            , C.nummescar
            , C.motbaja
            , C.fecbaja
            , X.modentdat
            , X.idterm
            , B.producto
            , B.subprodu
            , F.numbencta);


    CREATE TABLE schm_workspace.ppff_nc AS
    SELECT
        rut
        , dv
        , id
        , codent
        , centalta
        , cuenta
        , fecfac
        , pan
        , numaut
        , numboleta
        , siaidcd
        , codpais AS pais
        , '0000' AS codtipc
        , CASE
            WHEN codpais = 152 THEN 'NACIONAL'
            ELSE 'INTERNACIONAL'
        END AS nacional
        , sucursal
        , caja
        , codcom
        , nomcomred
        , codact
        , desact
        , CASE
            WHEN signo = '-' THEN 'NOTA CREDITO'
            ELSE 'COMPRA'
        END AS transaccion
        , codmar
        , indtipt
        , destipt
        , tipo_tarjeta
        , linea
        , tipfran AS franquicia
        , desfra
        , tipofac
        , destipfac
        , signo
        , totcuotas
        , 'NC' AS financiamiento
        , CASE
            WHEN signo = '-' THEN capital*(-1)
            ELSE capital
        END AS capital
        , CASE
            WHEN signo = '-' THEN entrada*(-1)
            ELSE entrada
        END AS pie
        , 0 AS valor_cuota
        , 0 AS mgfin
        , 0 AS imptotal
        , 0 AS porint
        , 0 AS porintcar
        , 0 AS nummescar
        , 0 AS i_diferido
        , CASE
            WHEN signo = '-' THEN comision*(-1)
            ELSE comision
        END AS comision
        , modentdat
        , idterm
        , impimpto AS impuesto
        , 0 AS estcompra
        , producto
        , subprodu
        , numbencta
    FROM(
        SELECT
            CAST(G.pemid_gls_nro_dct_ide_k AS INT) AS rut
            , G.pemid_dvr_nro_dct_ide AS dv
            , G.pemid_nro_inn_ide AS id
            , A.codent
            , A.centalta
            , A.cuenta
            , A.codpais
            , A.fecfac
            , A.pan
            , A.numaut
            , A.numboleta
            , A.siaidcd
            , SUBSTRING(A.sucursal, 1, 4) AS sucursal
            , SUBSTRING(A.sucursal, 5, 4) AS caja
            , A.codcom
            , A.nomcomred
            , A.codact
            , A.totcuotas
            , d.desact
            , F.codmar
            , F.indtipt
            , J.destipt
            , CASE
                WHEN F.codmar = 1 AND F.indtipt IN (1, 3, 9, 11) THEN 'TR'
                WHEN F.codmar = 2 AND F.indtipt IN (1, 6, 7, 10, 14) THEN 'TAM'
                WHEN F.codmar = 2 AND F.indtipt = 8 THEN 'MASTERCARD DEBITO'
                WHEN F.codmar = 2 AND F.indtipt = 13 THEN 'DEBITO CTACTE'
                WHEN F.codmar = 2 AND F.indtipt = 12 THEN 'MASTERCARD CHEK'
                WHEN F.codmar = 4 AND F.indtipt = 1 THEN 'MAESTRO DEBITO'
            END AS tipo_tarjeta
            , A.linea
            , A.tipfran
            , I.desfra
            , A.tipofac
            , E.destipfac
            , E.indnorcor
            , E.signo
            , A.impfac AS capital
            , A.entrada
            , X.modentdat
            , X.idterm
            , A.impimpto
            , B.producto
            , B.subprodu
            , f.numbencta
            , COALESCE((C.impbrueco - C.impboneco),0) AS comision
        FROM br_dm_prod_bigdata_reporitf_db.mpdt012 A
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt004 X
            ON A.siaidcd = X.siaidcd
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 B
            ON A.codent = B.codent
            AND A.centalta = B.centalta
            AND A.cuenta = B.cuenta
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt039 D
            ON A.codent = d.codent
            AND A.codact = d.codact
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt009 F
            ON A.codent = F.codent
            AND A.centalta = F.centalta
            AND A.cuenta = F.cuenta
            AND A.pan = F.pan
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide G
            ON G.pemid_nro_inn_ide = CAST(B.identcli AS INT)
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt044 E
            ON A.tipofac = E.tipofac
            AND A.indnorcor = E.indnorcor
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt131 I
            ON A.tipfran = I.tipfran
            AND I.codidioma = '1'
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt151 C
            ON A.codent = C.codent
            AND A.centalta = C.centalta
            AND A.cuenta = C.cuenta
            AND A.clamon = C.clamon
            AND A.numextcta = C.numextcta
            AND A.nummovext = C.nummovext
            AND C.tipimp = 2
            AND C.codconeco = 200
        LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt026 J
            ON J.codent = F.codent
            AND J.codmar = F.codmar
            AND J.indtipt = F.indtipt
        WHERE A.tipofac NOT IN (210, 115, 117)
            AND A.linea = '0052'
            AND A.indnorcor = 0
            AND E.tipofacsist = 1500
            AND A.indmovanu = 0
            AND A.fecfac BETWEEN v_fecha_inicio AND v_fecha_fin);
            --AND A.fecfac BETWEEN '2023-11-01' AND '2023-11-30');


    CREATE TABLE schm_workspace.ppff_aprob_sav AS
    SELECT
        D.fecfac AS periodo
        , D.rut
        , D.dv
        , D.id
        , D.codent
        , D.centalta
        , D.cuenta
        , D.linea
        , D.fecfac
        , D.fecfac AS fecha1
        , D.totcuotas
        , D.capital
        , CAST(D.sucursal AS INT) AS sucursal
        , CAST(D.caja AS INT) AS caja
        , D.numboleta
        , D.porint AS tasa_car
        , D.porintcar AS tasa_diferido
        , D.valor_cuota AS cuota
        , D.mgfin AS interes
        , D.base
        , D.nummescar AS diferido
        , D.i_diferido
        , D.pan
        , D.numaut
        , D.siaidcd
        , D.pais
        , D.codtipc
        , D.nacional
        , D.transaccion
        , D.codmar
        , D.indtipt
        , D.destipt
        , D.tipo_tarjeta
        , D.franquicia
        , D.desfra
        , D.tipofac
        , D.destipfac
        , D.signo
        , D.financiamiento
        , D.imptotal
        , D.comision
        , D.impuesto
        , D.estcompra
        , CASE
            WHEN estcompra = 1 THEN 'Vigente'
            WHEN estcompra = 2 THEN 'Cancelada'
            WHEN estcompra = 3 THEN 'Amortizada o Finalizada'
            WHEN estcompra = 4 THEN 'Fusión compras'
            WHEN estcompra = 5 THEN 'Cancelada cartera-vencida'
            WHEN estcompra = 6 THEN 'Generada Incidencia'
            WHEN estcompra = 7 THEN 'Refinanciada'
            WHEN estcompra = 8 THEN 'Acelerada'
        END AS desestcompra
        , D.producto
        , E.desprod
        , D.subprodu
        , D.numbencta
        , 'sav' AS lugar
    FROM(
        SELECT A.*, 'con cuota' AS base FROM schm_workspace.ppff_cuota A
        UNION ALL
        SELECT C.*, 'nc' AS base FROM schm_workspace.ppff_nc C) D
          LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt043 E
          ON D.producto = E.producto;


    CREATE TABLE schm_workspace.ppff_aprob_sav2 AS
    SELECT
        rut
        , dv
        , codent
        , centalta
        , cuenta
        , linea
        , fecfac
        , fecfac AS fecha1
        , fecha1 AS fecha
        , totcuotas
        , ROUND(capital) AS capital
        , sucursal
        , caja
        , CASE
            WHEN codtipc = '0030' AND caja >= 200 AND sucursal NOT IN (1, 63, 900, 6) THEN 'TF'
            WHEN codtipc = '0030' AND caja < 200 AND sucursal NOT IN (1, 63, 900, 6) THEN 'TV'
            WHEN codtipc = '0035' AND sucursal = 0 AND caja = 1 THEN 'TEF'
            WHEN codtipc = '0035' AND sucursal = 1 AND caja = 1 THEN 'HOME_B'
            WHEN codtipc = '0035' AND sucursal = 300 AND caja = 1 THEN 'HOME_B'
            WHEN codtipc = '0035' AND sucursal = 400 AND caja = 1 THEN 'APP'
            WHEN codtipc = '0036' AND sucursal = 100 AND caja = 1 THEN 'SAV_CENTER'
            WHEN codtipc = '0035' AND sucursal = 200 AND caja = 1 AND tipofac = 1652 THEN 'MOVIL'
            WHEN sucursal IN (6, 900) THEN 'TLMK'
            WHEN sucursal = 63 THEN 'BCO'
            WHEN codtipc = '0035' AND sucursal = 500 AND caja = 1 AND tipofac = 1652 THEN 'CHEK'
            WHEN signo = '-' THEN 'NC'
        END AS via
        , tasa_car
        , tasa_diferido
        , ROUND(cuota) AS cuota
        , interes
        , base
        , diferido
        , i_diferido
        , pan
        , numaut
        , siaidcd
        , pais
        , nacional
        , codtipc
        , producto
        , desprod AS tipo_tarjeta_rsat /* cambio 20231115 */
        , impuesto
        , estcompra
        , numboleta
        , id
        , desestcompra
        , subprodu
        , numbencta
        , transaccion
        , codmar
        , indtipt
        , destipt
        , tipo_tarjeta
        , franquicia
        , desfra
        , tipofac
        , destipfac
        , signo
        , financiamiento
        , imptotal
        , comision
        , lugar
    FROM schm_workspace.ppff_aprob_sav
    WHERE sucursal <> 901
    ORDER BY fecfac ASC;


    CREATE TABLE schm_workspace.ppff_cruce_sav AS
    SELECT
        DISTINCT
        T1.*
        , T2.prd_vlr_cup_sol
        , T2.ofe_vlr_cup_ofe
        , T2.ofe_vlr_cup_rca
        , T2.sol_fch_alt_sol
        , T2.sucursal_admision
        , T2.tipo_desembolso
        , T2.tipo_suc
        , T2.via AS via1
    FROM schm_workspace.ppff_aprob_sav2 T1
    LEFT JOIN schm_workspace.ppff_trx_admision T2
        ON (T1.fecha = T2.fecha)
        AND (T1.rut = T2.rut_real);


    CREATE TABLE schm_workspace.ppff_cruce_sav1 AS
    SELECT
        *
        , via AS via_final
    FROM schm_workspace.ppff_cruce_sav;


    UPDATE schm_workspace.ppff_cruce_sav1
    SET via_final = 'CIS'
    WHERE via1 = 'CIS' AND via_final = 'TF';


    UPDATE schm_workspace.ppff_cruce_sav1
    SET via_final = 'CIS'
    WHERE via1 = 'CIS' AND via_final = 'BCO';


    UPDATE schm_workspace.ppff_cruce_sav1
    SET via_final = 'CIS'
    WHERE via1 = 'CIS' AND via_final = 'TLMK';


    UPDATE schm_workspace.ppff_cruce_sav1
    SET via_final = 'TEF'
    WHERE via1 = 'TEF' AND via_final = 'TF';


    UPDATE schm_workspace.ppff_cruce_sav1
    SET via_final = 'TEF'
    WHERE via1 = 'TEF' AND via_final = 'TF';


    UPDATE schm_workspace.ppff_cruce_sav1
    SET via_final = 'TEF'
    WHERE via1 = 'TEF' AND via_final = 'HOME_B' AND VIA = 'HOME_B';


    CREATE TABLE schm_workspace.ppff_trx_sav AS
    SELECT * FROM schm_workspace.ppff_cruce_sav1;


    UPDATE schm_workspace.ppff_trx_sav
    SET via_final = 'BCO'
    WHERE sucursal IN (0, 63) AND sucursal_admision > 100 AND via_final IN ('CIS', 'TEF');


    UPDATE schm_workspace.ppff_trx_sav
    SET via_final = 'BCO'
    WHERE sucursal = 63 AND via_final = 'CIS';


    CREATE TABLE schm_workspace.ppff_sav_aprobado AS
    SELECT
        rut_real
        , sav_aprobado_final
        , monto_para_canon AS oferta_sav_aprobado
        , cuenta
        , centalta
        , pd_sav_final
        , tramo_pd_final
    FROM schm_productos_financieros.ppff_sav_fin
    WHERE periodo = v_periodo
        AND sav_aprobado_final = 1;


    CREATE TABLE schm_workspace.ppff_trx_sav1 AS
    SELECT
        t1.*
        , t2.oferta_sav_aprobado
        , t2.pd_sav_final
        , t2.tramo_pd_final
        , v_periodo AS periodo        
    FROM  schm_workspace.ppff_trx_sav T1
    LEFT JOIN schm_workspace.ppff_sav_aprobado T2
        ON T1.cuenta = T2.cuenta
        AND T1.rut = T2.rut_real
        AND T1.centalta = T2.centalta;


    UPDATE schm_workspace.ppff_trx_sav1
    SET via_final = 'CIS'
    WHERE via_final = 'TF' AND capital > 1120000;


    UPDATE schm_workspace.ppff_trx_sav1
    SET via_final = 'BCO'
    WHERE via_final IS NULL AND sucursal = 1 AND caja = 1;


    UPDATE schm_workspace.ppff_trx_sav1
    SET via_final = 'CHEK'
    WHERE via = 'CHEK' AND sucursal = 500 AND caja = 1;


    DELETE FROM schm_data_analytics.ppff_trx_sav
    WHERE periodo = v_periodo;


    INSERT INTO schm_data_analytics.ppff_trx_sav
    SELECT
        centalta
        , cuenta
        , codtipc
        , tipofac
        , producto
        , linea
        , fecfac::date AS fecfac
        , totcuotas
        , diferido
        , tasa_diferido
        , tasa_car
        , capital
        , cuota
        , interes
        , impuesto
        , sucursal
        , caja
        , estcompra
        , numboleta
        , pan
        , id
        , rut
        , periodo
        , via
        , fecha
        , prd_vlr_cup_sol
        , ofe_vlr_cup_ofe
        , ofe_vlr_cup_rca
        , sol_fch_alt_sol
        , sucursal_admision
        , tipo_desembolso
        , tipo_suc
        , via1
        , via_final
        , oferta_sav_aprobado
        , pd_sav_final 	/* agregado 20231115 */
        , tramo_pd_final	/* agregado 20231115 */
        , base
        , codent
        , signo
        , i_diferido
        , numaut
        , siaidcd
        , pais
        , nacional
        , transaccion
        , codmar
        , indtipt
        , tipo_tarjeta_rsat /* cambio 20231115 */
        , tipo_tarjeta
        , franquicia
        , desfra
        , destipfac
        , financiamiento
        , imptotal
        , comision
        , desestcompra
        , subprodu
        , numbencta
        , lugar
    FROM schm_workspace.ppff_trx_sav1;


    DROP TABLE IF EXISTS schm_workspace.ppff_ofertas;
    DROP TABLE IF EXISTS schm_workspace.ppff_curse_sav_pa;
    DROP TABLE IF EXISTS schm_workspace.ppff_curse_sav_pa_1;
    DROP TABLE IF EXISTS schm_workspace.ppff_curse_sav_pa_2;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_adm_0;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_adm_1;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_adm_2;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_adm_3;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_admision;
    DROP TABLE IF EXISTS schm_workspace.ppff_cuota;
    DROP TABLE IF EXISTS schm_workspace.ppff_nc;
    DROP TABLE IF EXISTS schm_workspace.ppff_aprob_sav;
    DROP TABLE IF EXISTS schm_workspace.ppff_aprob_sav2;
    DROP TABLE IF EXISTS schm_workspace.ppff_cruce_sav;
    DROP TABLE IF EXISTS schm_workspace.ppff_cruce_sav1;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_sav;
    DROP TABLE IF EXISTS schm_workspace.ppff_sav_aprobado;
    DROP TABLE IF EXISTS schm_workspace.ppff_trx_sav1;
    DROP TABLE IF EXISTS schm_workspace.ppff_salida;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2024-01-16	-- v06	--	Esteban Pino.	--	Cambio de fuentes sasdata a data_analytics.
	2023-11-15	-- v05	--	David Vásquez	--	Cambio de carchar a integer campo caja para cruce de VIA posterior.
	2023-11-15	-- v04	--	David Vásquez	--	Nuevo cambio para validar campo VIA
	2023-11-15	-- v03	--	David Vásquez	--	Se agregan campos pd desde sav_fin, levantandos en QA como faltantes en tabla final.
                                                  --	Cambio en nombre de columna de tipo_pdto a tipo_tarjeta_rsat
                                                  --	Ajustes para campo VIA.
	2023-05-26	-- v02	--	David Vásquez	--	Update a código RS según indicación de Ale Marinao (DGO)
                                                  --	Se agregan productos MC_Black y TD_CC
                                                  --	Se agregan join a MPDT043 + campo tipo_pdto.
	2023-04-06	-- v01	--	José Aburto	--	Versión original validada en Redshift vs código SAS.

	=== Información adicional:
	Transacciones de Super Avances
	===========================================================================================================
*/

END




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_ppff_variables_motor_precios_final(v_periodo_anterior int4, v_periodo_siguiente int4)
	LANGUAGE plpgsql
AS $$
	
	
	
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.base_repricing_riesgo;
    DROP TABLE IF EXISTS schm_workspace.rut_pruebas_motor;
    DROP TABLE IF EXISTS schm_workspace.repricing_riesgo_final;
    DROP TABLE IF EXISTS schm_workspace.activityReference;
    DROP TABLE IF EXISTS schm_workspace.productTypeReference;
    DROP TABLE IF EXISTS schm_workspace.inactivityPeriod;
    DROP TABLE IF EXISTS schm_workspace.customerrelationhiprating;
    DROP TABLE IF EXISTS schm_workspace.customerbehaviormodeltype;
    DROP TABLE IF EXISTS schm_workspace.customerbehaviormodelother;
    DROP TABLE IF EXISTS schm_workspace.productreference;
    DROP TABLE IF EXISTS schm_workspace.propensityadvance;
    DROP TABLE IF EXISTS schm_workspace.propensityconsumption;
    DROP TABLE IF EXISTS schm_workspace.cruce_variables_motor_1;
    DROP TABLE IF EXISTS schm_workspace.base_repricing_riesgo_v;
    DROP TABLE IF EXISTS schm_workspace.revision_variables;
    DROP TABLE IF EXISTS schm_workspace.salida_final;


    EXECUTE 'CREATE TABLE schm_workspace.base_repricing_riesgo AS
    SELECT rut
    FROM br_dm_prod_bigdata_riesgo_analytics_sql_db.repricing_sav_pre_'||v_periodo_siguiente||'';


   CREATE TABLE schm_workspace.base_repricing_riesgo_v as
   SELECT 
	cast(rut as varchar)
   FROM schm_workspace.base_repricing_riesgo;


    CREATE TABLE schm_workspace.activityreference AS
    SELECT
        rut
        , CASE
            WHEN actividad_tr = 'ACTIVO' THEN 4
            WHEN actividad_tr = 'SEMIACTIVO' THEN 3
            WHEN actividad_tr = 'NUEVO SIN USO' THEN 0
            WHEN actividad_tr = 'OTROS CON SALDO' THEN 5
            WHEN actividad_tr = 'DORMIDO BLANDO' THEN 2
            WHEN actividad_tr = 'DORMIDO DURO' THEN 1
        END AS activityreference
    FROM schm_data_analytics.bitr_actividad_tr
    WHERE periodo = v_periodo_anterior;


    CREATE TABLE schm_workspace.producttypereference AS
    SELECT
        rut AS rut
        , SUBSTRING(rango_prob, 3, 1)*10 AS producttypereference
    FROM schm_insight.score_sav_adva
    WHERE periodo = v_periodo_siguiente;

--select * FROM schm_workspace.producttypereference WHERE producttypereference > 0

--select SUBSTRING(rango_prob, 3, 1)*10 AS producttypereference,* FROM schm_insight.score_sav_adva WHERE periodo = 202401 AND rut IN (10420091,9221117,16190214) LIMIT 10

    CREATE TABLE schm_workspace.inactivityperiod AS
    SELECT
        rut
        , recencia_tr AS inactivityperiod
    FROM schm_data_analytics.bitr_actividad_tr
    WHERE periodo = v_periodo_anterior AND recencia_tr IS NOT NULL;


    CREATE TABLE schm_workspace.customerRelationhipRating AS
    SELECT
        rut
        , CASE
            WHEN gse IN ('AB', 'C1') THEN 'ABC1'
            ELSE gse
        END AS customerRelationhipRating
    FROM schm_data_analytics.ctbl_demo_basket WHERE periodo = v_periodo_anterior
    AND GSE IS NOT NULL;


    CREATE TABLE schm_workspace.customerbehaviormodeltype AS
    SELECT
        rut
        , CASE
            WHEN digitalizacion_in = 'FULL_DGL' THEN 3
            WHEN digitalizacion_in = 'MEDIO_DGL' THEN 2
            WHEN digitalizacion_in = 'BAJO_DGL' THEN 1
            WHEN digitalizacion_in = 'NO_DGL' THEN 0
        END AS customerbehaviormodeltype
    FROM br_dm_prod_bigdata_sasdata_db.sas_dgtl_perfil_digital -- pendiente de refactorizcion de equipo de digital 
    WHERE periodo = 202311;

   
   CREATE TABLE schm_workspace.customerbehaviormodelother AS
    SELECT
        rut
        , case 
			when banco_secundario='Falabella' then 1 
			when banco_secundario='Estado' then 2 
			when banco_secundario='Security' then 3 
			when banco_secundario='BBVA' then 4 
			when banco_secundario='BICE' then 5 
			when banco_secundario='Santander' then 6 
			when banco_secundario='BCH' then 7  
			when banco_secundario='BCI' then 8   
			when banco_secundario='ScotiaBank' then 9   
			when banco_secundario='CorpBanca' then 10 
			else 11  
		end 
	as customerbehaviormodelother 
    FROM schm_data_analytics.ppff_sgdo_bco
    WHERE periodo = v_periodo_anterior;

   
    CREATE TABLE schm_workspace.productReference AS
    SELECT
        rut
        , CASE
            WHEN ROUND(100 * rfm_total) >= 100 THEN 99
            ELSE ROUND(100 * rfm_total)
        END AS productReference
    FROM schm_data_analytics.ppff_principalidad_tctd
    WHERE periodo = v_periodo_anterior;

    
    CREATE TABLE schm_workspace.propensityAdvance AS
    SELECT
        rut
        , SUBSTRING(rango_prob, 3, 1)*10 AS propensityadvance
    FROM schm_insight.score_sav_adva 
    WHERE periodo = v_periodo_siguiente;


    EXECUTE 'CREATE TABLE schm_workspace.propensityconsumption AS 
    SELECT
        rut
        , prop_desafiante
        , rango_bco
        , rango_bco * 10 AS propensityconsumption
    FROM br_dm_prod_bigdata_riesgo_analytics_sql_db.score_desafiante_' || v_periodo_siguiente ||'';


    CREATE TABLE schm_workspace.cruce_variables_motor_1 AS 
    SELECT 
        rr.RUT as rut
        , COALESCE(ar.activityreference, -9) AS activityreference
        , COALESCE(cbmo.customerbehaviormodelother, -9) AS customerbehaviormodelother
        , COALESCE(cbmt.customerbehaviormodeltype, -9) AS customerbehaviormodeltype
        , COALESCE(crr.customerrelationhiprating, 'X') AS customerrelationhiprating
        , COALESCE(ip.inactivityperiod, -9) AS inactivityperiod
        , COALESCE(pr.productreference, -9) AS productreference
        , COALESCE(ptr.producttypereference, -9) AS producttypereference
        , COALESCE(pa.propensityadvance, -9) AS propensityadvance
        , COALESCE(pc.propensityconsumption, -9) AS propensityconsumption
    FROM 
        schm_workspace.base_repricing_riesgo_v rr
        LEFT JOIN schm_workspace.activityreference ar ON (rr.RUT = ar.RUT)
        LEFT JOIN schm_workspace.customerbehaviormodelother cbmo ON (rr.RUT = cbmo.RUT)
        LEFT JOIN schm_workspace.customerbehaviormodeltype cbmt ON (rr.RUT = cbmt.RUT)
        LEFT JOIN schm_workspace.customerrelationhiprating crr ON (rr.RUT = crr.RUT)
        LEFT JOIN schm_workspace.inactivityperiod ip ON (rr.RUT = ip.RUT)
        LEFT JOIN schm_workspace.productreference pr ON (rr.RUT = pr.rut)
        LEFT JOIN schm_workspace.producttypereference ptr ON (rr.RUT = ptr.rut)
        LEFT JOIN schm_workspace.propensityadvance pa ON (rr.RUT = pa.rut)
        LEFT JOIN schm_workspace.propensityconsumption pc ON (rr.RUT = pc.rut);


    CREATE TABLE schm_workspace.revision_variables AS  
    SELECT 
        CONCAT(t1.rut, upper(schm_artifacts.get_dv(t1.rut))) AS customeridentification
        , t1.activityreference
        , t1.producttypereference
        , 0 AS productpropensitychannel
        , t1.inactivityperiod
        , t1.customerrelationhiprating
        , t1.customerbehaviormodeltype
        , 0 AS customerrelationshipstatus
        , t1.customerbehaviormodelother
        , t1.productreference
        , '-9,99' AS elasticity
        , -9 AS rentability
        , t1.propensityadvance
        , t1.propensityconsumption
    FROM schm_workspace.cruce_variables_motor_1 t1;


    CREATE TABLE schm_workspace.salida_final AS  
    SELECT 
        DISTINCT
        CONCAT(repeat('0', 11 - LENGTH(t1.customerIdentification) - 1), customerIdentification) AS customerIdentification,
        t1.activityreference,
        t1.producttypereference,
        t1.productpropensitychannel,
        t1.inactivityperiod,
        t1.customerrelationhiprating,
        t1.customerbehaviormodeltype,
        t1.customerrelationshipstatus, 
        t1.customerbehaviormodelother, 
        t1.productreference,
        t1.elasticity,
        t1.rentability,
        t1.propensityadvance,
        t1.propensityconsumption,
        '' AS punto_y_coma,
        v_periodo_siguiente as periodo
    FROM schm_workspace.revision_variables t1
    ORDER BY 1;


	DELETE FROM schm_data_analytics.ppff_variables_motor_precio
	WHERE periodo = v_periodo_siguiente
	;


	INSERT INTO schm_data_analytics.ppff_variables_motor_precio
	SELECT 
		customerIdentification,
		activityreference,
		producttypereference,
		productpropensitychannel,
		inactivityperiod,
		customerrelationhiprating,
		customerbehaviormodeltype,
		customerrelationshipstatus,
		customerbehaviormodelother,
		productreference,
		elasticity,
		rentability,
		propensityadvance,
		propensityconsumption,
		punto_y_coma,
		periodo
	FROM schm_workspace.salida_final
	WHERE periodo = v_periodo_siguiente;

    	/*	===========================================================================================================
	=== Control de versiones visual === 
	2024-01-26	-- v03	--	David Vásquez	--	Se cambia a fijo el periodo en tabla sas_dgtl_perfil_digital hasta que se regularice.
	2024-01-04	-- v02	--	David Vásquez	--	Se corrige cálculo de variables producttypereference 
										--	y propensityadvance para que entreguen dato.
	2023-12-28	-- v01	--	Eduardo Gálvez	--	Versión refactorizada.
	
	=== Información adicional:
	Se definen las lógicas comerciales que se utilizan para el funcionamiento del motor, para excepción de tasas
	cuando los clientes la soliciten en un punto final de contacto.
	===========================================================================================================
	*/

END;




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_bitr_act_tr_test()
	LANGUAGE plpgsql
AS $$
	
	
DECLARE
	contador INTEGER:=0;
	
BEGIN

    IF contador = 0
    THEN
		RAISE NOTICE 'Value: %', contador;
    ELSE
        RAISE NOTICE 'Value no: %', contador;
    END IF;
END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_clts_opex_canjesop()
	LANGUAGE plpgsql
AS $$
	
	
	

BEGIN

	
	CALL schm_artifacts.sp_clts_opex_canjesop(schm_artifacts.f_period(current_date));
	CALL schm_artifacts.sp_clts_opex_canjesop(schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date))));
	CALL schm_artifacts.sp_clts_opex_canjesop(schm_artifacts.f_period(trunc(DATEADD(MM,-2,current_date))));
	CALL schm_artifacts.sp_clts_opex_canjesop(schm_artifacts.f_period(trunc(DATEADD(MM,-3,current_date)))); 
   

END




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_dgtl_logueos_internet()
	LANGUAGE plpgsql
AS $$
	
BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_dgtl_logueos_internet(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
        call schm_artifacts.sp_dgtl_logueos_internet(schm_artifacts.f_first_day(DATEADD(month, -1, getdate())::DATE), last_day(DATEADD(month, -1, getdate())::DATE), schm_artifacts.f_period(DATEADD(month, -1, getdate())::DATE));
    ELSE
        call schm_artifacts.sp_dgtl_logueos_internet(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
    END IF;


END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_mdpg_cargos_pat()
	LANGUAGE plpgsql
AS $$
	
	
BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_mdpg_cargos_pat(0);
        call schm_artifacts.sp_mdpg_cargos_pat(1);
    ELSE
        call schm_artifacts.sp_mdpg_cargos_pat(0);
    END IF;


END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_mdpg_clave_coordenadas()
	LANGUAGE plpgsql
AS $$
	
BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 1
    THEN
        call schm_artifacts.sp_mdpg_clave_coordenadas(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
        call schm_artifacts.sp_mdpg_clave_coordenadas(schm_artifacts.f_first_day(DATEADD(month, -1, getdate())::DATE), last_day(DATEADD(month, -1, getdate())::DATE), schm_artifacts.f_period(DATEADD(month, -1, getdate())::DATE));
    ELSE
        call schm_artifacts.sp_mdpg_clave_coordenadas(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
    END IF;


END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_mdpg_clave_unica()
	LANGUAGE plpgsql
AS $$
	

BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 1
    THEN
        call schm_artifacts.sp_mdpg_clave_unica(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
        call schm_artifacts.sp_mdpg_clave_unica(schm_artifacts.f_first_day(DATEADD(month, -1, getdate())::DATE), last_day(DATEADD(month, -1, getdate())::DATE), schm_artifacts.f_period(DATEADD(month, -1, getdate())::DATE));
    ELSE
        call schm_artifacts.sp_mdpg_clave_unica(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
    END IF;


END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_mdpg_cliente_uso_corte()
	LANGUAGE plpgsql
AS $$
	


BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_mdpg_cliente_unico_uso_corte(schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date))));
        call schm_artifacts.sp_mdpg_cliente_unico_uso_corte(schm_artifacts.f_period(current_date));
    ELSE
                call schm_artifacts.sp_mdpg_cliente_unico_uso_corte(schm_artifacts.f_period(current_date));
    END IF;


END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_mdpg_movimientos_debito()
	LANGUAGE plpgsql
AS $$
	

BEGIN

    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_mdpg_movimientos_debito(schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date))),extract(year from DATEADD(MM,-1,current_date))-2000);
        call schm_artifacts.sp_mdpg_movimientos_debito(schm_artifacts.f_period(trunc(DATEADD(MM,-0,current_date))),extract(year from current_date)-2000);
    ELSE
        call schm_artifacts.sp_mdpg_movimientos_debito(schm_artifacts.f_period(trunc(DATEADD(MM,-0,current_date))),extract(year from current_date)-2000);
    END IF;


END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_mdpg_pagos_digitales()
	LANGUAGE plpgsql
AS $$
	

BEGIN

    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_mdpg_pagos_digitales(schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date))));
        call schm_artifacts.sp_mdpg_pagos_digitales(schm_artifacts.f_period(current_date));
    ELSE
        call schm_artifacts.sp_mdpg_pagos_digitales(schm_artifacts.f_period(current_date));
    END IF;
END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_mdpg_seguimiento_pec()
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN

    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        CALL schm_artifacts.sp_mdpg_seguimiento_pec(0);
        CALL schm_artifacts.sp_mdpg_seguimiento_pec(1);
    ELSE
        CALL schm_artifacts.sp_mdpg_seguimiento_pec(0);
    END IF;

END



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_mdpg_tableau_epu()
	LANGUAGE plpgsql
AS $$
	
	
BEGIN

    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_mdpg_tableau_epu(schm_artifacts.f_period(GETDATE()::DATE));
        call schm_artifacts.sp_mdpg_tableau_epu(schm_artifacts.f_period(DATEADD(month, -1, GETDATE())::DATE));
    ELSE
        call schm_artifacts.sp_mdpg_tableau_epu(schm_artifacts.f_period(GETDATE()::DATE));
    END IF;


END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_mdpg_trx_mcchek()
	LANGUAGE plpgsql
AS $$
	
	
BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_mdpg_trx_mcchek(schm_artifacts.f_period(getdate()::DATE));
        call schm_artifacts.sp_mdpg_trx_mcchek(schm_artifacts.f_period(DATEADD(month, -1, getdate())::DATE));
    ELSE
        call schm_artifacts.sp_mdpg_trx_mcchek(schm_artifacts.f_period(getdate()::DATE));
    END IF;


END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_mdpg_uso_tr_marca()
	LANGUAGE plpgsql
AS $$
	
	
BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        CALL schm_artifacts.sp_mdpg_uso_tr_marca(0);
        CALL schm_artifacts.sp_mdpg_uso_tr_marca(1);
    ELSE
        CALL schm_artifacts.sp_mdpg_uso_tr_marca(0);
    END IF;

END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_ppff_disponibles_tr()
	LANGUAGE plpgsql
AS $$
	
	
	
	
BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        CALL schm_artifacts.sp_ppff_disponibles_tr(schm_artifacts.f_period(current_date));
        CALL schm_artifacts.sp_ppff_disponibles_tr(schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date))));
    ELSE
        CALL schm_artifacts.sp_ppff_disponibles_tr(schm_artifacts.f_period(current_date));
    END IF;

END




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_ppff_funnel_av()
	LANGUAGE plpgsql
AS $$
	
	
	
	
BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        CALL schm_artifacts.sp_ppff_funnel_av(current_date);
        CALL schm_artifacts.sp_ppff_funnel_av(DATEADD(month, -1, current_date)::DATE);
    ELSE
        CALL schm_artifacts.sp_ppff_funnel_av(current_date);
    END IF;

END




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_ppff_funnel_sav()
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        CALL schm_artifacts.sp_ppff_funnel_sav(current_date);
        CALL schm_artifacts.sp_ppff_funnel_sav(DATEADD(month, -1, current_date)::DATE);
    ELSE
        CALL schm_artifacts.sp_ppff_funnel_sav(current_date);
    END IF;

END



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_ppff_operaciones_dap()
	LANGUAGE plpgsql
AS $$
	
BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 1
    THEN
        call schm_artifacts.sp_ppff_operaciones_dap(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
        call schm_artifacts.sp_ppff_operaciones_dap(schm_artifacts.f_first_day(DATEADD(month, -1, getdate())::DATE), last_day(DATEADD(month, -1, getdate())::DATE), schm_artifacts.f_period(DATEADD(month, -1, getdate())::DATE));
    ELSE
        call schm_artifacts.sp_ppff_operaciones_dap(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
    END IF;


END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_ppff_panel_cta_vta()
	LANGUAGE plpgsql
AS $$
	

BEGIN

    IF EXTRACT(DAY FROM GETDATE()) <= 3
    THEN
        CALL schm_artifacts.ppff_panel_cta_vta(schm_artifacts.f_first_day(current_date), last_day(current_date), schm_artifacts.f_period(current_date));
        CALL schm_artifacts.ppff_panel_cta_vta(schm_artifacts.f_first_day(DATEADD(month, -1, getdate())::DATE), last_day(DATEADD(month, -1, getdate())::DATE), schm_artifacts.f_period(DATEADD(month, -1, getdate())::DATE));
    ELSE
        CALL schm_artifacts.ppff_panel_cta_vta(schm_artifacts.f_first_day(current_date), last_day(current_date), schm_artifacts.f_period(current_date));
    END IF;

END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_ppff_trx_av_actual()
	LANGUAGE plpgsql
AS $$
	
BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_ppff_trx_av_actual(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
        call schm_artifacts.sp_ppff_trx_av_actual(schm_artifacts.f_first_day(DATEADD(month, -1, getdate())::DATE), last_day(DATEADD(month, -1, getdate())::DATE), schm_artifacts.f_period(DATEADD(month, -1, getdate())::DATE));
    ELSE
        call schm_artifacts.sp_ppff_trx_av_actual(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
    END IF;


END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_ppff_trx_consumo()
	LANGUAGE plpgsql
AS $$
	
	
BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_ppff_trx_consumo(schm_artifacts.f_first_day(current_date), last_day(current_date), schm_artifacts.f_period(current_date));
        call schm_artifacts.sp_ppff_trx_consumo(schm_artifacts.f_first_day(DATEADD(month, -1, getdate())::DATE), last_day(DATEADD(month, -1, getdate())::DATE), schm_artifacts.f_period(DATEADD(month, -1, getdate())::DATE));
    ELSE
        call schm_artifacts.sp_ppff_trx_consumo(schm_artifacts.f_first_day(current_date), last_day(current_date), schm_artifacts.f_period(current_date));
    END IF;
   
END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_ppff_trx_ref_rene()
	LANGUAGE plpgsql
AS $$
	

BEGIN

    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_ppff_trx_ref_rene(schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date))));
        call schm_artifacts.sp_ppff_trx_ref_rene(schm_artifacts.f_period(current_date));
    ELSE
        call schm_artifacts.sp_ppff_trx_ref_rene(schm_artifacts.f_period(current_date));
    END IF;
END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_ppff_trx_refinanciamiento()
	LANGUAGE plpgsql
AS $$
	
BEGIN
	
	
    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_ppff_trx_refinanciamiento(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
        call schm_artifacts.sp_ppff_trx_refinanciamiento(schm_artifacts.f_first_day(DATEADD(month, -1, getdate())::DATE), last_day(DATEADD(month, -1, getdate())::DATE), schm_artifacts.f_period(DATEADD(month, -1, getdate())::DATE));
    ELSE
        call schm_artifacts.sp_ppff_trx_refinanciamiento(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
    END IF;
    
   
END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_ppff_trx_renegociacion()
	LANGUAGE plpgsql
AS $$
	
BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_ppff_trx_renegociacion(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
        call schm_artifacts.sp_ppff_trx_renegociacion(schm_artifacts.f_first_day(DATEADD(month, -1, getdate())::DATE), last_day(DATEADD(month, -1, getdate())::DATE), schm_artifacts.f_period(DATEADD(month, -1, getdate())::DATE));
    ELSE
        call schm_artifacts.sp_ppff_trx_renegociacion(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
    END IF;


END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_ppff_trx_sav()
	LANGUAGE plpgsql
AS $$
	
BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_ppff_trx_sav(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
        call schm_artifacts.sp_ppff_trx_sav(schm_artifacts.f_first_day(DATEADD(month, -1, getdate())::DATE), last_day(DATEADD(month, -1, getdate())::DATE), schm_artifacts.f_period(DATEADD(month, -1, getdate())::DATE));
    ELSE
        call schm_artifacts.sp_ppff_trx_sav(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
    END IF;


END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_spos_antiguedad_uso()
	LANGUAGE plpgsql
AS $$
	

BEGIN

    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_spos_antiguedad_uso(schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date))));
        call schm_artifacts.sp_spos_antiguedad_uso(schm_artifacts.f_period(current_date));
    ELSE
        call schm_artifacts.sp_spos_antiguedad_uso(schm_artifacts.f_period(current_date));
    END IF;

END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_spos_aut()
	LANGUAGE plpgsql
AS $$
	
BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_spos_aut(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
        call schm_artifacts.sp_spos_aut(schm_artifacts.f_first_day(DATEADD(month, -1, getdate())::DATE), last_day(DATEADD(month, -1, getdate())::DATE), schm_artifacts.f_period(DATEADD(month, -1, getdate())::DATE));
    ELSE
        call schm_artifacts.sp_spos_aut(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
    END IF;


END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_spos_cliente_unico_3m()
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN

    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_spos_cliente_unico_3m(schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date))));
        call schm_artifacts.sp_spos_cliente_unico_3m(schm_artifacts.f_period(current_date));
    ELSE
        call schm_artifacts.sp_spos_cliente_unico_3m(schm_artifacts.f_period(current_date));
    END IF;
END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_spos_dau_mau_wau()
	LANGUAGE plpgsql
AS $$
	

BEGIN

    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_spos_dau_mau_wau(schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date))));
        call schm_artifacts.sp_spos_dau_mau_wau(schm_artifacts.f_period(current_date));
    ELSE
        call schm_artifacts.sp_spos_dau_mau_wau(schm_artifacts.f_period(current_date));
    END IF;
END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_spos_foto_resumen()
	LANGUAGE plpgsql
AS $$
	

BEGIN

    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.spos_foto_resumen(schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date))));
        call schm_artifacts.spos_foto_resumen(schm_artifacts.f_period(current_date));
    ELSE
        call schm_artifacts.spos_foto_resumen(schm_artifacts.f_period(current_date));
    END IF;

END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_spos_foto_rubro()
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_SPOS_FOTO_RUBRO(schm_artifacts.f_period(trunc(dateadd('month',-1,current_date))),
EXTRACT (DAY FROM last_day(dateadd('month',-1,current_date))));
        call schm_artifacts.sp_SPOS_FOTO_RUBRO(schm_artifacts.f_period(current_date),
EXTRACT (DAY FROM last_day(current_date)));
    ELSE
        call schm_artifacts.sp_SPOS_FOTO_RUBRO(schm_artifacts.f_period(current_date),
EXTRACT (DAY FROM last_day(current_date)));
    END IF;


END



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_spos_nacional_internacional()
	LANGUAGE plpgsql
AS $$
	

BEGIN

    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_spos_nacional_internacional(schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date))));
        call schm_artifacts.sp_spos_nacional_internacional(schm_artifacts.f_period(current_date));
    ELSE
        call schm_artifacts.sp_spos_nacional_internacional(schm_artifacts.f_period(current_date));
    END IF;

END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_spos_rubro_preferente()
	LANGUAGE plpgsql
AS $$
	

BEGIN

    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_spos_rubro_preferente(schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date))));
        call schm_artifacts.sp_spos_rubro_preferente(schm_artifacts.f_period(current_date));
    ELSE
        call schm_artifacts.sp_spos_rubro_preferente(schm_artifacts.f_period(current_date));
    END IF;

END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_spos_transacciones_maestro(v_current_date date)
	LANGUAGE plpgsql
AS $$
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.spos_trx_maestro_cuentas;
    CREATE TABLE schm_workspace.spos_trx_maestro_cuentas AS
    select
    a.cli_identifica as rut,
    a.cli_identifica_dv as dv,
    b.vis_numcue as cuenta,
    b.vis_fechape as fecha_apertura,
    b.vis_fechcierr as fecha_cierre,
    case when b.vis_pro=4 then 'cuenta_vista'
    when b.vis_pro=40 then 'lca' end  descrip_producto,
    case when b.vis_status ='9' then 'cerrado'
    when b.vis_status ='2' then 'vigente' end as estado_cuenta,
    c.des_codigo as cod_cierre_contrato,
    c.des_descripcion as desc_cierre_contrato,
    d.sta_descripcion as desc_est_cuenta
    from  br_dm_prod_bigdata_fisa_db.tcap_vista  as b
    inner join br_dm_prod_bigdata_fisa_db.tcli_persona as a
    on (a.cli_codigo=b.vis_codcli)
    left join br_dm_prod_bigdata_fisa_db.tgen_desctabla as c
    on(b.vis_codtab=c.des_codtab) and 	(b.vis_caucierr=c.des_codigo)
    left join br_dm_prod_bigdata_fisa_db.tgen_status as d
    on(b.vis_status=d.sta_codigo) and (d.sta_mod=4)
    where b.vis_mod=4
    and (b.vis_pro=4 or b.vis_pro=40)
    and b.vis_tip=1;

    IF EXTRACT(DAY FROM v_current_date)<=5
    THEN
        call schm_artifacts.sp_spos_transacciones_maestro(EXTRACT(YEAR FROM v_current_date), EXTRACT(MONTH FROM v_current_date));
        call schm_artifacts.sp_spos_transacciones_maestro(EXTRACT(YEAR FROM DATEADD(month, -1, v_current_date)), EXTRACT(MONTH FROM DATEADD(month, -1, v_current_date)));
    ELSE
        call schm_artifacts.sp_spos_transacciones_maestro(EXTRACT(YEAR FROM v_current_date), EXTRACT(MONTH FROM v_current_date));
    END IF;


END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_spos_trx_seguros()
	LANGUAGE plpgsql
AS $$
	
BEGIN
	
	
    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_spos_trx_seguros(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
        call schm_artifacts.sp_spos_trx_seguros(schm_artifacts.f_first_day(DATEADD(month, -1, getdate())::DATE), last_day(DATEADD(month, -1, getdate())::DATE), schm_artifacts.f_period(DATEADD(month, -1, getdate())::DATE));
    ELSE
        call schm_artifacts.sp_spos_trx_seguros(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
    END IF;
    
   
END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_spos_vta_comercios()
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN

    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_spos_vta_comercios(schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date))));
        call schm_artifacts.sp_spos_vta_comercios(schm_artifacts.f_period(current_date));
    ELSE
        call schm_artifacts.sp_spos_vta_comercios(schm_artifacts.f_period(current_date));
    END IF;
END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_spos_vta_rubros()
	LANGUAGE plpgsql
AS $$
	
	
	
	
BEGIN

    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_spos_vta_rubros(schm_artifacts.f_period(trunc(DATEADD(MM,-1,current_date))));
        call schm_artifacts.sp_spos_vta_rubros(schm_artifacts.f_period(current_date));
    ELSE
        call schm_artifacts.sp_spos_vta_rubros(schm_artifacts.f_period(current_date));
    END IF;


END




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_tnda_forma_de_pago(stop int4)
	LANGUAGE plpgsql
AS $$
	

    DECLARE
	contador INTEGER:=0;

    BEGIN
    
        WHILE contador<=stop
            LOOP
                CALL schm_artifacts.sp_tnda_forma_de_pago(contador);
                contador=contador+1;
            END LOOP;
    
    END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_run_tnda_tda_itf()
	LANGUAGE plpgsql
AS $$
	
BEGIN


    IF EXTRACT(DAY FROM GETDATE()) <= 5
    THEN
        call schm_artifacts.sp_tnda_tda_itf(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
        call schm_artifacts.sp_tnda_tda_itf(schm_artifacts.f_first_day(DATEADD(month, -1, getdate())::DATE), last_day(DATEADD(month, -1, getdate())::DATE), schm_artifacts.f_period(DATEADD(month, -1, getdate())::DATE));
    ELSE
        call schm_artifacts.sp_tnda_tda_itf(schm_artifacts.f_first_day(getdate()::DATE), last_day(getdate()::DATE), schm_artifacts.f_period(getdate()::DATE));
    END IF;


END

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_sj_test2(v_day_of_the_week varchar)
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN 
	DROP TABLE IF EXISTS schm_workspace.estoesunapruebadeunafuncionmuybacan;
	DROP TABLE IF EXISTS schm_workspace.estoesunapruebadeunafuncionmuybacan2;

    --  Un ejemplo que verifica si la fecha actual corresponde al día 15 o al día 30
    IF v_day_of_the_week='wednesday' THEN

CREATE TABLE schm_workspace.estoesunapruebadeunafuncionmuybacan AS 
SELECT 
*
FROM schm_workspace.simulaciones_now
WHERE producto='av'
LIMIT 5;

ELSE 

CREATE TABLE schm_workspace.estoesunapruebadeunafuncionmuybacan2 AS 
SELECT 
*
FROM schm_workspace.simulaciones_now
WHERE producto='sav'
LIMIT 10;
    
    END IF;
END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_spos_analisis_petrobras_miercoles(periodo_paso int4)
	LANGUAGE plpgsql
AS $$
	
	

	BEGIN 


	DROP TABLE IF EXISTS schm_workspace.kgonzale_segmento_comercial;
	DROP TABLE IF EXISTS schm_workspace.kgonzale_codcom_camps_spos_periodo;
	DROP TABLE IF EXISTS schm_workspace.kgonzale_venta_petrobras_credito;
	DROP TABLE IF EXISTS schm_workspace.kgonzale_venta_petrobras_debito;
	DROP TABLE IF EXISTS schm_workspace.kgonzale_venta_petro ;
	DROP TABLE IF EXISTS schm_workspace.kgonzale_venta_petrobras;
	DROP TABLE IF EXISTS schm_workspace.kgonzale_agrupado;


	CREATE TABLE schm_workspace.kgonzale_segmento_comercial as 
	SELECT
		rut,
		isnull(segmento_final,'SIN INFO') AS segmento
	FROM br_dm_prod_analytics_ripley_puntos_db.segmento_comercial_cierre  
	WHERE periodo=
		(SELECT MAX(periodo)
			FROM br_dm_prod_analytics_ripley_puntos_db.segmento_comercial_cierre);


	CREATE TABLE schm_workspace.kgonzale_codcom_camps_spos_periodo as 
	SELECT DISTINCT
		codigo_comercio,
		marca_campana
	FROM br_dm_prod_bigdata_sftp_db.cod_com  
	where periodo_campana=periodo_paso;


	/*SPOS_AUT*/
	CREATE TABLE schm_workspace.kgonzale_venta_petrobras_credito as 
	SELECT
		a.periodo,  
		a.rut,
		'TAM' AS tipo_tarjeta,
		extract(day from a.fecha) AS dia_nro,
		EXTRACT(DOW from A.fecha) AS dia_semana,
		c.segmento,
		SUM(a.venta_tarjeta) AS venta,
		COUNT(a.rut) AS trx
	FROM 
		(SELECT * from schm_data_analytics.spos_aut 
			WHERE periodo=periodo_paso AND codigo_comercio IN 
				(SELECT codigo_comercio from schm_workspace.kgonzale_codcom_camps_spos_periodo)
		) AS a
	LEFT JOIN schm_workspace.kgonzale_codcom_camps_spos_periodo AS b on (a.codigo_comercio=b.codigo_comercio)
	LEFT JOIN schm_workspace.kgonzale_segmento_comercial AS c on (a.rut=c.rut)
	GROUP BY
	a.periodo, 
	a.rut,
	c.segmento,
	a.fecha;


	CREATE TABLE schm_workspace.kgonzale_VENTA_PETROBRAS_DEBITO as 
	SELECT
		a.periodo,  
		a.rut,
		a.tipo AS Tipo_Tarjeta,
		extract(day from a.fecha) AS dia_nro,
		EXTRACT(DOW from A.FECHA) AS DIA_SEMANA,
		c.SEGMENTO,
		sum(a.venta_tarjeta) as venta,
		count(a.rut) AS trx
	FROM (SELECT * FROM schm_data_analytics.mpdg_movimientos_debito 
	WHERE periodo=periodo_paso AND  codigo_comercio IN 
		(SELECT codigo_comercio from schm_workspace.kgonzale_CodCom_Camps_SPOS_Periodo) 
			AND tipo_compra='SPOS') AS a
	LEFT JOIN schm_workspace.kgonzale_CodCom_Camps_SPOS_Periodo as b on (a.codigo_comercio=b.codigo_comercio)
	LEFT JOIN schm_workspace.kgonzale_SEGMENTO_COMERCIAL as c on (a.rut=c.rut)
	GROUP BY
	a.periodo, 
	a.rut,
	a.tipo,
	c.SEGMENTO,
	a.fecha;


	CREATE TABLE schm_workspace.kgonzale_venta_petro AS 
	SELECT * 
	FROM schm_workspace.kgonzale_venta_petrobras_credito
	union SELECT * FROM  schm_workspace.kgonzale_venta_petrobras_debito;


	CREATE TABLE  schm_workspace.kgonzale_venta_petrobras as 
	SELECT *,
		CASE WHEN dia_nro<=EXTRACT(day FROM DATEADD('DAY',-1,current_date)) THEN 1 ELSE 0 END AS dia_comparable,
		CASE WHEN dia_semana=3 THEN 1 ELSE 0 END as miercoles
	FROM schm_workspace.kgonzale_venta_petro;


	CREATE TABLE schm_workspace.kgonzale_agrupado as
	SELECT 
		periodo,
		tipo_tarjeta,
		segmento,
		'TOTAL' AS marca_petrobras,
		COUNT(DISTINCT rut) AS cliente_unico,
		SUM(venta) AS venta,
		SUM(trx) AS trx
	FROM schm_workspace.kgonzale_venta_petrobras
	GROUP BY 
		periodo,
		tipo_tarjeta,
		segmento
	UNION 
	SELECT 
		periodo,
		tipo_tarjeta,
		segmento,
		'MIERCOLES' AS marca_petrobras,
		count(DISTINCT rut) AS cliente_unico,
		SUM(venta) AS venta,
		sum(trx) AS trx
	FROM schm_workspace.kgonzale_venta_petrobras
	WHERE miercoles=1
	GROUP BY 
		periodo,
		tipo_tarjeta,
		segmento;

	DELETE
	FROM schm_data_analytics.spos_analisis_petrobras_miercoles
	WHERE periodo=periodo_paso;


	INSERT INTO schm_data_analytics.spos_analisis_petrobras_miercoles
	SELECT *
	FROM schm_workspace.kgonzale_agrupado;


	/*  ===========================================================================================================
	    === Control de versiones visual ===
	    2024-01-25 -- v01 -- David Vásquez      	-- Se quita creación de tabla, ya que dio error en la ejecución inicial.
	    2024-01-23 -- v00 -- Kevin González      	-- Versión original refactorizada.

	    === Información adicional:
	    Proceso que..
	    ===========================================================================================================
	*/
	
END;
	


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_spos_antiguedad_uso(periodo_paso int4)
	LANGUAGE plpgsql
AS $$
	

	BEGIN
	
	DROP TABLE IF EXISTS schm_workspace.universo_tda_tc_Antiguedad;
	DROP TABLE IF EXISTS schm_workspace.universo_spos_tc_antiguedad;
	DROP TABLE IF EXISTS schm_workspace.universo_seg_tc_antiguedad;
	DROP TABLE IF EXISTS schm_workspace.universo_debito_antiguedad;
	DROP TABLE IF EXISTS schm_workspace.universo_unico_antiguedad;
	DROP TABLE IF EXISTS schm_workspace.universo_captado_antiguedad;
	DROP TABLE IF EXISTS schm_workspace.universo_unico_antiguedad_colapso;
	DROP TABLE IF EXISTS schm_workspace.universo_unico_antiguedad2;
	DROP TABLE IF EXISTS schm_workspace.universo_unico_antiguedad_colapso;

	CREATE TABLE schm_workspace.universo_tda_tc_Antiguedad AS 
	SELECT 
	a.rut,
	sum(a.capital) AS monto_total
	 FROM schm_data_analytics.tnda_tda_itf AS a  
	 WHERE a.periodo=periodo_paso AND a.centalta<>'0105'
	 GROUP BY 1
	 HAVING sum(a.capital)>0
	 ;

	CREATE TABLE schm_workspace.universo_spos_tc_antiguedad AS 
	SELECT 
	a.rut,
	sum(a.venta_tarjeta) AS monto_total
	 FROM schm_data_analytics.spos_aut AS a 
	 WHERE a.periodo=periodo_paso AND a.centalta<>'0105'
	 GROUP BY 1
	  HAVING sum(a.venta_tarjeta)>0
	 ;

	CREATE TABLE schm_workspace.universo_seg_tc_antiguedad  AS 
	SELECT distinct  
	a.rut
	FROM schm_data_analytics.spos_trx_seguros AS a 
	WHERE a.periodo=periodo_paso AND
	a.CODCONREC not in ('S201','S083','S170')
	and a.TIPO_SEGURO<>'SEGUROS TARJETA'
	;


	CREATE TABLE schm_workspace.universo_debito_antiguedad AS 
	SELECT 
	rut,
	max(CASE WHEN TIPO='CTA CTE' AND tipo_compra='SPOS' THEN 1 ELSE 0 END ) AS SPOS_CTACTE,
	max(CASE WHEN TIPO='CTA CTE' AND tipo_compra<>'SPOS' THEN 1 ELSE 0 END ) AS TNDA_CTACTE,
	max(CASE WHEN TIPO<>'CTA CTE' AND tipo_compra='SPOS' THEN 1 ELSE 0 END ) AS SPOS_CTAvta,
	max(CASE WHEN TIPO<>'CTA CTE' AND tipo_compra<>'SPOS' THEN 1 ELSE 0 END ) AS TNDA_CTAvta
	FROM schm_data_analytics.mpdg_movimientos_debito
	WHERE periodo=periodo_paso
	GROUP BY 1
	;


	CREATE table schm_workspace.universo_unico_antiguedad AS 
	SELECT 
	a.rut,
	CASE WHEN b.rut IS NOT NULL THEN 1 ELSE 0 END AS Tc_TDA,
	CASE WHEN c.rut IS NOT NULL OR d.rut IS NOT NULL
	THEN 1 ELSE 0 END AS Tc_spos,
	COALESCE(e.SPOS_CTACTE,0) AS SPOS_CTACTE ,
	COALESCE(e.TNDA_CTACTE,0) AS TNDA_CTACTE,
	COALESCE(e.SPOS_CTAvta,0) AS SPOS_CTAvta,
	COALESCE(e.TNDA_CTAvta,0) AS TNDA_CTAvta

	FROM (
	SELECT rut FROM schm_workspace.universo_tda_tc_Antiguedad
	UNION 
	SELECT rut FROM schm_workspace.universo_spos_tc_antiguedad
	UNION 
	SELECT rut FROM schm_workspace.universo_seg_tc_antiguedad
	UNION 
	SELECT rut FROM schm_workspace.universo_debito_antiguedad
	) AS a 
	LEFT JOIN schm_workspace.universo_tda_tc_Antiguedad AS b
	on(a.rut=b.rut)
	LEFT JOIN schm_workspace.universo_spos_tc_antiguedad AS c
	on(a.rut=c.rut)
	LEFT JOIN schm_workspace.universo_seg_tc_antiguedad AS d
	on(a.rut=d.rut)
	LEFT JOIN schm_workspace.universo_debito_antiguedad AS e
	on(a.rut=e.rut)
	;


	----- antiguedad de captación

	CREATE TABLE schm_workspace.universo_captado_antiguedad AS 
	SELECT 
	rut_cliente AS rut,
	max(CASE WHEN producto NOT IN ('CUENTA VISTA','CUENTA CORRIENTE')
	THEN periodo END ) AS PERIODO_TC,
	max(CASE WHEN producto  IN ('CUENTA VISTA','CUENTA CORRIENTE')
	THEN periodo END ) AS PERIODO_TD,
	max(CASE WHEN producto  IN ('CUENTA VISTA')
	THEN periodo END ) AS PERIODO_CTAVTA,
	max(CASE WHEN producto  IN ('CUENTA CORRIENTE')
	THEN periodo END ) AS PERIODO_CTACTE

	FROM schm_data_analytics.ppff_capta_salida
	WHERE periodo<=periodo_paso
	GROUP BY 1
	;



	CREATE TABLE schm_workspace.universo_unico_antiguedad2 AS 
	SELECT 
	a.*,
	COALESCE(b.PERIODO_TC,999999) AS PERIODO_TC,
	COALESCE(b.PERIODO_TD,999999) AS PERIODO_TD,
	COALESCE(b.PERIODO_CTAVTA,999999) AS PERIODO_CTAVTA,
	COALESCE(b.PERIODO_CTACTE,999999) AS PERIODO_CTACTE
	FROM schm_workspace.universo_unico_antiguedad AS a 
	LEFT JOIN schm_workspace.universo_captado_antiguedad AS b
	on(a.rut=b.rut)
	;


	CREATE TABLE schm_workspace.universo_unico_antiguedad_colapso AS 
	SELECT 
	periodo_paso AS periodo,
	CASE WHEN Tc_TDA +Tc_spos>0 AND SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 THEN '01.TC+TD'
	WHEN Tc_TDA +Tc_spos>0 AND SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta=0 THEN '02.Solo TC'
	WHEN Tc_TDA +Tc_spos=0 AND SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 THEN '03.Solo TD'
	END AS tipo_uso,

	CASE WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC=999999 THEN '05.Captado >24 meses atrás'
	WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC<>999999
	AND datediff(MONTH,to_date(periodo_tc,'YYYYmm'),to_date(periodo_paso,'YYYYmm'))=0 
	THEN  '01.Captado en el mes'

	WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC<>999999
	AND datediff(MONTH,to_date(periodo_tc,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 1 AND 5
	THEN  '02.Captado 1-5 meses atrás'

	WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC<>999999
	AND datediff(MONTH,to_date(periodo_tc,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 6 AND 11
	THEN  '03.Captado 6-11 meses atrás'

	WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC<>999999
	AND datediff(MONTH,to_date(periodo_tc,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 12 AND 24
	THEN  '04.Captado 12-24 meses atrás'

	WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC<>999999
	AND datediff(MONTH,to_date(periodo_tc,'YYYYmm'),to_date(periodo_paso,'YYYYmm'))>24
	THEN  '05.Captado >24 meses atrás'

	ELSE '06.No Aplica' END AS antiguedad_tc,



	CASE WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD=999999 THEN '05.Captado >24 meses atrás'
	WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD<>999999
	AND datediff(MONTH,to_date(PERIODO_TD,'YYYYmm'),to_date(periodo_paso,'YYYYmm'))=0 
	THEN  '01.Captado en el mes'

	WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD<>999999
	AND datediff(MONTH,to_date(PERIODO_TD,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 1 AND 5
	THEN  '02.Captado 1-5 meses atrás'

	WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD<>999999
	AND datediff(MONTH,to_date(PERIODO_TD,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 6 AND 11
	THEN  '03.Captado 6-11 meses atrás'

	WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD<>999999
	AND datediff(MONTH,to_date(PERIODO_TD,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 12 AND 24
	THEN  '04.Captado 12-24 meses atrás'

	WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD<>999999
	AND datediff(MONTH,to_date(PERIODO_TD,'YYYYmm'),to_date(periodo_paso,'YYYYmm'))>24
	THEN  '05.Captado >24 meses atrás'

	ELSE '06.No Aplica' END AS antiguedad_td,
	count(rut) AS clientes
	FROM schm_workspace.universo_unico_antiguedad2
	GROUP BY 2,3,4

	UNION 
	SELECT 
	periodo_paso AS periodo,
	'04.Total TC' AS tipo_uso,

	CASE WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC=999999 THEN '05.Captado >24 meses atrás'
	WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC<>999999
	AND datediff(MONTH,to_date(periodo_tc,'YYYYmm'),to_date(periodo_paso,'YYYYmm'))=0 
	THEN  '01.Captado en el mes'

	WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC<>999999
	AND datediff(MONTH,to_date(periodo_tc,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 1 AND 5
	THEN  '02.Captado 1-5 meses atrás'

	WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC<>999999
	AND datediff(MONTH,to_date(periodo_tc,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 6 AND 11
	THEN  '03.Captado 6-11 meses atrás'

	WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC<>999999
	AND datediff(MONTH,to_date(periodo_tc,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 12 AND 24
	THEN  '04.Captado 12-24 meses atrás'

	WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC<>999999
	AND datediff(MONTH,to_date(periodo_tc,'YYYYmm'),to_date(periodo_paso,'YYYYmm'))>24
	THEN  '05.Captado >24 meses atrás'

	ELSE '06.No Aplica' END AS antiguedad_tc,



	CASE WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD=999999 THEN '05.Captado >24 meses atrás'
	WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD<>999999
	AND datediff(MONTH,to_date(PERIODO_TD,'YYYYmm'),to_date(periodo_paso,'YYYYmm'))=0 
	THEN  '01.Captado en el mes'

	WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD<>999999
	AND datediff(MONTH,to_date(PERIODO_TD,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 1 AND 5
	THEN  '02.Captado 1-5 meses atrás'

	WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD<>999999
	AND datediff(MONTH,to_date(PERIODO_TD,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 6 AND 11
	THEN  '03.Captado 6-11 meses atrás'

	WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD<>999999
	AND datediff(MONTH,to_date(PERIODO_TD,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 12 AND 24
	THEN  '04.Captado 12-24 meses atrás'

	WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD<>999999
	AND datediff(MONTH,to_date(PERIODO_TD,'YYYYmm'),to_date(periodo_paso,'YYYYmm'))>24
	THEN  '05.Captado >24 meses atrás'

	ELSE '06.No Aplica' END AS antiguedad_td,
	count(rut) AS clientes
	FROM schm_workspace.universo_unico_antiguedad2
	WHERE Tc_TDA +Tc_spos>0
	GROUP BY 3,4
	UNION 
	SELECT 
	periodo_paso AS periodo,
	'05.Total TD' AS tipo_uso,

	CASE WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC=999999 THEN '05.Captado >24 meses atrás'
	WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC<>999999
	AND datediff(MONTH,to_date(periodo_tc,'YYYYmm'),to_date(periodo_paso,'YYYYmm'))=0 
	THEN  '01.Captado en el mes'

	WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC<>999999
	AND datediff(MONTH,to_date(periodo_tc,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 1 AND 5
	THEN  '02.Captado 1-5 meses atrás'

	WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC<>999999
	AND datediff(MONTH,to_date(periodo_tc,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 6 AND 11
	THEN  '03.Captado 6-11 meses atrás'

	WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC<>999999
	AND datediff(MONTH,to_date(periodo_tc,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 12 AND 24
	THEN  '04.Captado 12-24 meses atrás'

	WHEN Tc_TDA +Tc_spos>0 AND PERIODO_TC<>999999
	AND datediff(MONTH,to_date(periodo_tc,'YYYYmm'),to_date(periodo_paso,'YYYYmm'))>24
	THEN  '05.Captado >24 meses atrás'

	ELSE '06.No Aplica' END AS antiguedad_tc,



	CASE WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD=999999 THEN '05.Captado >24 meses atrás'
	WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD<>999999
	AND datediff(MONTH,to_date(PERIODO_TD,'YYYYmm'),to_date(periodo_paso,'YYYYmm'))=0 
	THEN  '01.Captado en el mes'

	WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD<>999999
	AND datediff(MONTH,to_date(PERIODO_TD,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 1 AND 5
	THEN  '02.Captado 1-5 meses atrás'

	WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD<>999999
	AND datediff(MONTH,to_date(PERIODO_TD,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 6 AND 11
	THEN  '03.Captado 6-11 meses atrás'

	WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD<>999999
	AND datediff(MONTH,to_date(PERIODO_TD,'YYYYmm'),to_date(periodo_paso,'YYYYmm')) BETWEEN 12 AND 24
	THEN  '04.Captado 12-24 meses atrás'

	WHEN SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0 AND PERIODO_TD<>999999
	AND datediff(MONTH,to_date(PERIODO_TD,'YYYYmm'),to_date(periodo_paso,'YYYYmm'))>24
	THEN  '05.Captado >24 meses atrás'

	ELSE '06.No Aplica' END AS antiguedad_td,
	count(rut) AS clientes
	FROM schm_workspace.universo_unico_antiguedad2
	WHERE SPOS_CTACTE +TNDA_CTACTE+SPOS_CTAvta+TNDA_CTAvta>0
	GROUP BY 3,4

	;

	DELETE FROM schm_data_analytics.spos_antiguedad_uso
	WHERE periodo=periodo_paso;

	INSERT INTO  schm_data_analytics.spos_antiguedad_uso 
	SELECT 
	current_date AS fecha_actualizacion,
	* 
	FROM schm_workspace.universo_unico_antiguedad_colapso
	;

	DROP TABLE IF EXISTS schm_workspace.universo_tda_tc_Antiguedad;
	DROP TABLE IF EXISTS schm_workspace.universo_spos_tc_antiguedad;
	DROP TABLE IF EXISTS schm_workspace.universo_seg_tc_antiguedad;
	DROP TABLE IF EXISTS schm_workspace.universo_debito_antiguedad;
	DROP TABLE IF EXISTS schm_workspace.universo_unico_antiguedad;
	DROP TABLE IF EXISTS schm_workspace.universo_captado_antiguedad;
	DROP TABLE IF EXISTS schm_workspace.universo_unico_antiguedad_colapso;
	DROP TABLE IF EXISTS schm_workspace.universo_unico_antiguedad2;
	DROP TABLE IF EXISTS schm_workspace.universo_unico_antiguedad_colapso;

	/*  ===========================================================================================================
         === Control de versiones visual ===
         2024-02-19 -- v00 -- Pedro Muñoz         -- Versión original

         === Información adicional:
         Proceso que ve los clientes stock uso y saldo.
         ===========================================================================================================
    */

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_spos_aut(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN


	DROP TABLE IF EXISTS schm_workspace.spos_aut_mpdt004;
	DROP TABLE IF EXISTS schm_workspace.spos_aut_tc_spos;
	DROP TABLE IF EXISTS schm_workspace.spos_compras_aut;
	DROP TABLE IF EXISTS schm_workspace.spos_aut_mpdt012;
	DROP TABLE IF EXISTS schm_workspace.spos_nc_spos;
	DROP TABLE IF EXISTS schm_workspace.spos_nc_aprob;
	DROP TABLE IF EXISTS schm_workspace.spos_aut_temp;
	DROP TABLE IF EXISTS schm_workspace.spos_comercios_pat;


	CREATE TABLE schm_workspace.spos_aut_mpdt004 AS
	SELECT
		 fectrn
		,hortrn
		,codent
		,centalta
		,cuenta
		,inddebcre
		,pan
		,codrespu
		,numaut
		,siaidcd
		,codpais
		,codcom
		,nomcom
		,codact
		,modentdat
		,idterm
		,tipomsgon
		,codproon
		,codmar
		,indtipt
		,tipfran
		,tipofac
		,totcuotas
		,imptrn
		,porint
		,datadi
		,mescarcuo
		,indnorcor
		,indanul
		,indcruce
	FROM br_dm_prod_bigdata_reporitf_db.mpdt004
	WHERE fectrn BETWEEN v_fecha_inicio AND v_fecha_fin;


	CREATE TABLE schm_workspace.spos_aut_tc_spos AS
	SELECT
		T.fectrn AS fecha
		,CAST(TO_CHAR(T.fectrn,'yyyyMMdd') AS INTEGER) AS fecha_num
		,T.hora
		,v_periodo AS periodo
		,CASE
			WHEN regexp_replace(T.codcom,'([^0-9])','') SIMILAR TO '[0-9]+(.[0-9][0-9])?' then regexp_replace(T.codcom,'([^0-9])','')::BIGINT
			ELSE NULL
		END AS codigo_comercio_mpdt
		,CASE
			WHEN regexp_replace(T.codcom2,'([^0-9])','') SIMILAR TO '[0-9]+(.[0-9][0-9])?' then regexp_replace(T.codcom2,'([^0-9])','')::BIGINT
			ELSE NULL
		END AS codigo_comercio
		,T.nomcom AS nombre_comercio
		,T.desact AS actividad_comercio
		,T.imptrn AS venta_tarjeta
		,T.codpais
		,T.totcuotas
		,T.pan
		,T.codact
		,T.porint
		,T.codent
		,T.centalta
		,T.cuenta
		,T.tipo_tarjeta
		,SUBSTRING(T.pan, 13, 4) AS pan2
		,(T.codent||T.centalta||T.cuenta||SUBSTRING(T.pan, 13, 4)) AS contrato_pan
		,SUBSTRING(T.modentdat, 1, 2) AS ind_pan
		,T.financiamiento
		,T.tasa
		,T.presencial
		,T.franquicia
		,T.tipofac
		,T.codrespu
		,T.numaut
		,T.siaidcd
		,T.nacional
		,T.transaccion
		,T.codmar
		,T.indtipt
		,T.destipt
		,T.linea
		,T.deslinea
		,T.desc_franquicia
		,T.destipfac
		,T.signo
		,T.valor_cuota
		,T.bruto
		,(CAST(regexp_replace(T.tasa_carencia,'([^0-9])','') AS DECIMAL(20,2))/10000) AS tasa_carencia
		,T.meses_carencia
		,CAST(regexp_replace(T.interes_carencia,'([^0-9])','') AS BIGINT) * 1 AS interes_carencia
		,T.modentdat
		,T.idterm
		,T.lugar
	FROM (
		SELECT
			A.fectrn
			,A.hortrn AS hora
			,A.codent
			,A.centalta
			,A.cuenta
			,A.inddebcre
			,A.pan
			,A.codrespu
			,A.numaut
			,A.siaidcd
			,A.codpais
			,CASE
				WHEN A.codpais = 152 THEN 'NACIONAL'
				ELSE 'INTERNACIONAL'
			END AS nacional
			,A.codcom
			,CASE
				WHEN SUBSTRING(a.codcom, 1, 4) = '5970' THEN SUBSTRING(a.codcom, 5, length(a.codcom))
				ELSE a.codcom
			END AS codcom2
			,A.nomcom
			,A.codact
			,G.desact
			,A.modentdat
			,A.idterm
			,CASE
				WHEN SUBSTRING(A.modentdat, 10, 1) = '0' THEN 'PRESENCIAL'
				WHEN SUBSTRING(A.modentdat, 10, 1) <> '0' AND A.idterm LIKE '%ORACLE%' THEN 'PAT'
				WHEN A.modentdat IS NULL THEN 'SIN INFORMACION'
				ELSE 'NO PRESENCIAL'
			END AS presencial
			,CASE
				WHEN (A.tipomsgon = '1220' AND A.codproon = 200000) THEN 'NOTA CREDITO'
				ELSE 'COMPRA'
			END AS transaccion
			,A.codmar
			,A.indtipt
			,B.destipt
			,CASE
				WHEN A.codmar = 1 AND A.indtipt IN (1, 3, 9, 11) THEN 'TR'
				WHEN A.codmar = 2 AND A.indtipt IN (1, 6, 7, 10, 14) THEN 'TAM'
				WHEN A.codmar = 2 AND A.indtipt = 8 THEN 'MASTERCARD DEBITO'
				WHEN A.codmar = 2 AND A.indtipt	= 13 THEN 'DEBITO CTACTE'
				WHEN A.codmar = 2 AND A.indtipt	= 12 THEN 'MASTERCARD CHEK'
				WHEN A.codmar = 4 AND A.indtipt = 1 THEN 'MAESTRO DEBITO'
			END as tipo_tarjeta
			,D.linea
			,E.deslinea
			,A.tipfran AS franquicia
			,C.desfra AS desc_franquicia
			,A.tipofac
			,D.destipfac
			,D.signo
			,A.totcuotas
			,CASE
				WHEN A.totcuotas = 0 THEN 'REVOLVING'
				WHEN A.totcuotas = 1 THEN 'NO FINANCIABLE (1 CUOTA)'
				WHEN A.totcuotas >= 2 THEN 'FINANCIABLE (2 O MAS CUOTAS)'
				ELSE 'SIN INFO'
			END AS financiamiento
			,CASE
				WHEN D.signo = '-' THEN A.imptrn * -1
				ELSE A.imptrn
			END AS imptrn
			,A.porint
			,CASE
				WHEN A.porint = 0 THEN 'SIN INTERES'
				ELSE 'CON INTERES'
			END AS tasa
			,CAST(SUBSTRING(A.datadi, 61, 15) AS BIGINT) AS valor_cuota
			,CASE
				WHEN A.totcuotas > 0 AND D.signo = '+' THEN SUBSTRING(A.datadi, 61, 15) * A.totcuotas
				ELSE A.imptrn
			END AS bruto
			,CASE
				WHEN D.signo = '-' THEN COALESCE(F.entrada, 0) * -1
				ELSE COALESCE(F.entrada, 0)
			END AS pie
			,SUBSTRING(a.datadi, 88, 7) AS tasa_carencia
			,A.mescarcuo AS meses_carencia
			,SUBSTRING(A.datadi, 168, 15) AS interes_carencia
			,CASE
				WHEN D.linea = '0052' THEN 'SAV'
				WHEN D.linea = '0051' THEN 'AV'
				WHEN D.linea IN ('0050', '0053', '0000') AND A.tipfran <> 4 THEN 'SPOS'
				WHEN D.linea IN ('0050', '0053', '0000') AND A.codcom = '000000000000001' THEN 'TIENDA'
				WHEN D.linea IS NULL AND A.codcom <> '000000000000001' THEN 'SPOS'
				WHEN D.linea IS NULL AND A.tipfran = 4 THEN 'TIENDA'
				WHEN D.linea IS NULL AND A.tipfran IN (6, 7, 1007) THEN 'SPOS'
				ELSE 'OTRO'
			END AS lugar
		FROM schm_workspace.spos_aut_mpdt004 A 
		,br_dm_prod_bigdata_reporitf_db.mpdt026 B
		,br_dm_prod_bigdata_reporitf_db.mpdt131 C
		,br_dm_prod_bigdata_reporitf_db.mpdt044 D
		,br_dm_prod_bigdata_reporitf_db.mpdt042 E
		,br_dm_prod_bigdata_reporitf_db.mpdt205 F
		,br_dm_prod_bigdata_reporitf_db.mpdt039 G
	WHERE ((A.codrespu = '000' AND A.indanul = 0) 
			OR (A.codrespu = '900' AND A.indanul = 0) 
			OR (A.codrespu = '182') 
			OR (A.indcruce = '1' AND A.indanul = 1))
		AND A.inddebcre = 1
		AND D.linea IN ('0050', '0053', '0000') 
		AND A.codcom <>'000000000000001'
		AND ((A.tipomsgon = '1200' AND A.codproon = 0) 
			OR (A.tipomsgon = '1200' AND A.codproon = 10000) 
			OR (A.tipomsgon = '1200' AND A.codproon = 40000) 
			OR (A.tipomsgon = '1200' AND A.codproon = 340000) 
			OR (A.tipomsgon = '1420' AND A.codproon = 0) 
			OR (A.tipomsgon = '1420' AND A.codproon = 10000) 
			OR (A.tipomsgon = '1420' AND A.codproon = 40000) 
			OR (A.tipomsgon = '1420' AND A.codproon = 340000) 
			OR (A.tipomsgon = '1220' AND A.codproon = 0) 
			OR (A.tipomsgon = '1220' AND A.codproon = 10000) 
			OR (A.tipomsgon = '1220' AND A.codproon = 40000) 
			OR (A.tipomsgon = '1220' AND A.codproon = 340000))
		AND A.codent = B.codent 
		AND A.codmar = B.codmar  
		AND A.indtipt = B.indtipt 
		AND A.tipfran = C.tipfran 
		AND C.codidioma = 1 
		AND A.codent = D.codent 
		AND A.indnorcor = d.indnorcor  
		AND A.tipofac = D.tipofac 
		AND D.codent = E.codent(+) 
		AND D.linea = E.linea(+)
		AND A.codent = F.codent(+)
		AND A.centalta = F.centalta(+)
		AND A.cuenta = F.cuenta(+)
		AND A.siaidcd = F.siaidcd(+)
		AND A.codent = G.codent 
		AND A.codact = G.codact) T;


	CREATE TABLE schm_workspace.spos_compras_aut AS
	SELECT
		A.fecha
		,A.fecha_num
		,A.hora
		,A.periodo
		,A.codigo_comercio_mpdt
		,A.codigo_comercio
		,A.nombre_comercio
		,A.actividad_comercio
		,C.pemid_gls_nro_dct_ide_k AS rut
		,A.venta_tarjeta
		,A.codpais
		,A.totcuotas
		,A.pan
		,A.codact
		,A.porint
		,A.codent
		,A.centalta
		,A.cuenta
		,A.tipo_tarjeta
		,A.pan2
		,A.contrato_pan
		,CASE
			WHEN A.presencial IN ('PRESENCIAL','SIN INFORMACION') THEN 0
			WHEN A.presencial IN ('NO PRESENCIAL','PAT') THEN 1
		END AS si_digital
		,A.ind_pan
		,A.financiamiento
		,A.tasa
		,A.presencial
		,A.franquicia
		,A.tipofac
		,A.codrespu
		,C.pemid_dvr_nro_dct_ide AS dv
		,A.numaut
		,A.siaidcd
		,A.nacional
		,A.transaccion
		,A.codmar
		,A.indtipt
		,A.destipt AS tipo_tarjeta_rsat
		,CASE
			WHEN F.numbencta = 1 THEN 'TI'
			ELSE 'BE'
		END AS cliente
		,A.linea
		,A.deslinea
		,A.desc_franquicia
		,A.destipfac
		,A.signo
		,CASE
			WHEN porint <> 0 THEN (A.bruto - A.venta_tarjeta)
			ELSE 0
		END AS mg_fin
		,A.valor_cuota
		,A.bruto
		,A.tasa_carencia
		,A.meses_carencia
		,A.interes_carencia
		,A.modentdat
		,A.idterm
	FROM schm_workspace.spos_aut_tc_spos A
	INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 B
		ON a.cuenta = b.cuenta
		AND a.centalta = b.centalta
		AND a.codent = b.codent
	INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide C
		ON CAST(B.identcli AS INTEGER) = CAST(C.pemid_nro_inn_ide AS INTEGER)
	INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt009 F
		ON A.codent = F.codent
		AND A.centalta = F.centalta
		AND A.cuenta = F.cuenta
		AND A.pan = F.pan;


	CREATE TABLE schm_workspace.spos_aut_mpdt012 AS
	SELECT
		A.codent
		,A.centalta
		,A.cuenta
		,A.codpais
		,A.totcuotas
		,A.fecfac
		,A.pan
		,A.numaut
		,A.siaidcd
		,A.codcom
		,A.nomcomred
		,A.codact
		,A.linea
		,A.tipfran
		,A.tipofac
		,A.impfac
		,A.entrada
		,A.indnorcor
		,A.clamon
		,A.numextcta
		,A.nummovext
		,A.indmovanu
	FROM br_dm_prod_bigdata_reporitf_db.mpdt012 A
	WHERE A.fecfac BETWEEN v_fecha_inicio AND v_fecha_fin;


	CREATE TABLE schm_workspace.spos_nc_spos AS
	SELECT
		T.fecfac AS	fecha
		,CAST(TO_CHAR(T.fecfac,'yyyyMMdd') AS INTEGER) AS fecha_num
		,'00:00:00' AS hora
		,v_periodo AS periodo
		,CASE
			WHEN regexp_replace(T.codcom,'([^0-9])','') SIMILAR TO '[0-9]+(.[0-9][0-9])?' then regexp_replace(T.codcom,'([^0-9])','')::BIGINT
			ELSE NULL
		END AS codigo_comercio_mpdt
		,CASE
			WHEN regexp_replace(T.codcom,'([^0-9])','') SIMILAR TO '[0-9]+(.[0-9][0-9])?' then regexp_replace(T.codcom,'([^0-9])','')::BIGINT
			ELSE NULL
		END AS codigo_comercio
		,nomcomred AS nombre_comercio
		,desact AS actividad_comercio
		,rut
		,CASE
			WHEN signo = '-' THEN impfac * -1
			ELSE impfac
		END AS venta_tarjeta
		,codpais
		,totcuotas
		,pan
		,codact
		,0 AS porint
		,codent
		,centalta
		,cuenta
		,tipo_tarjeta
		,SUBSTRING(pan, 13, 4) AS pan2
		,(codent||centalta||cuenta||SUBSTRING(pan, 13, 4)) AS contrato_pan
		,SUBSTRING(modentdat, 1, 2) as ind_pan
		,CASE
			WHEN totcuotas = 0 THEN 'REVOLVING'
			WHEN totcuotas = 1 THEN 'NO FINANCIABLE (1 CUOTA)'
			WHEN totcuotas >= 2 THEN 'FINANCIABLE (2 O MAS CUOTAS)'
			ELSE 'SIN INFO'
		END AS financiamiento
		,'' AS tasa
		,CASE
			WHEN SUBSTRING(modentdat, 10, 1) = '0' THEN 'PRESENCIAL'
	 		WHEN modentdat IS NULL THEN 'PRESENCIAL'
			WHEN SUBSTRING(modentdat, 10, 1) <> '0' AND idterm LIKE '%ORACLE%' THEN 'PAT'
			ELSE  'NO PRESENCIAL'
		END AS presencial
		,tipfran AS franquicia
		,tipofac
		,' ' AS codrespu
		,dv
		,numaut
		,siaidcd
		,CASE
			WHEN codpais = 152 THEN 'NACIONAL'
			ELSE 'INTERNACIONAL'
		END AS nacional
		,CASE
			WHEN signo = '-' THEN 'NOTA CREDITO'
			ELSE 'COMPRA'
		END AS transaccion
		,codmar
		,indtipt
		,destipt AS tipo_tarjeta_rsat
		,linea
		,deslinea
		,desfra AS desc_franquicia
		,destipfac
		,signo
		,CASE
			WHEN signo = '-' THEN impfac * -1
		END AS valor_cuota
		,0 AS mg_fin
		,0 AS tasa_carencia
		,0 AS meses_carencia
		,0 AS interes_carencia
		,CASE
			WHEN signo = '-' THEN impfac * -1
		END	AS bruto
		,modentdat
		,idterm
		,lugar
		,CASE
			WHEN numbencta = 1 THEN 'TI'
			ELSE 'BE'
		END AS cliente
	FROM (
		SELECT
			G.pemid_gls_nro_dct_ide_k AS rut
			,G.pemid_dvr_nro_dct_ide AS dv
			,A.codent
			,A.centalta
			,A.cuenta
			,A.codpais
			,A.totcuotas
			,A.fecfac
			,A.pan
			,A.numaut
			,A.siaidcd
			,A.codcom
			,A.nomcomred
			,A.codact
			,D.desact
			,F.codmar
			,F.indtipt
			,J.destipt
			,CASE
				WHEN F.codmar = 1 AND F.indtipt IN (1, 3, 9, 11) THEN 'TR'
				WHEN F.codmar = 2 AND F.indtipt	IN (1, 6, 7, 10, 14) THEN 'TAM'
				WHEN F.codmar = 2 AND F.indtipt	= 8 THEN 'MASTERCARD DEBITO'
				WHEN F.codmar = 2 AND F.indtipt	= 13 THEN 'DEBITO CTACTE'
				WHEN F.codmar = 2 AND F.indtipt	= 12 THEN 'MASTERCARD CHEK'
				WHEN F.codmar = 4 AND F.indtipt	= 1 THEN 'MAESTRO DEBITO'
			END AS tipo_tarjeta
			,A.linea
			,H.deslinea
			,A.tipfran
			,I.desfra
			,A.tipofac
			,E.destipfac
			,E.indnorcor
			,E.signo
			,A.impfac
			,A.entrada
			,X.modentdat
			,X.idterm
			,CASE
				WHEN A.codcom <> '000000000000001' THEN 'SPOS'
				ELSE 'TIENDA'
			END AS lugar
			,F.numbencta
		FROM schm_workspace.spos_aut_mpdt012 A
		LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt004 X
			ON A.siaidcd = X.siaidcd
		LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 B
			ON A.codent = B.codent
			AND A.centalta = B.centalta
			AND A.cuenta = B.cuenta
		LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt039 D
			ON A.codent = D.codent
			AND A.codact = D.codact
		LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt009 F
			ON A.codent = F.codent
			AND A.centalta = F.centalta
			AND A.cuenta = F.cuenta
			AND A.pan = F.pan
		LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide G
			ON CAST(G.pemid_nro_inn_ide as INTEGER) = CAST(B.identcli as INTEGER)
		LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt044 E
			ON A.tipofac = E.tipofac
			AND A.indnorcor = E.indnorcor
		LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt131 I
			ON A.tipfran = I.tipfran
			AND I.codidioma = 1
		LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt151 C
			ON A.codent = C.codent
			AND A.centalta = C.centalta
			AND A.cuenta = C.cuenta
			AND A.clamon = C.clamon
			AND A.numextcta = C.numextcta
			AND A.nummovext = C.nummovext
			AND C.tipimp = 2
			AND C.codconeco = 200
		LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt026 J
			ON J.codent = F.codent
			AND J.codmar = F.codmar
			AND J.indtipt = F.indtipt
		LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt042 H
			ON A.codent = H.codent
			AND A.linea = H.linea
		WHERE A.tipofac NOT IN (210, 115, 117, 4050)
			AND A.codcom <> '000000000000001'
			AND A.linea IN ('0050', '0053', '0000')
			AND A.indnorcor = 0
			AND ((E.tipofacsist = 1500 AND A.indmovanu = 0) OR (a.tipofac = 1515 AND A.indmovanu = 2))) T;


	CREATE TABLE schm_workspace.spos_nc_aprob AS
	SELECT
		fecha
		,fecha_num
		,hora
		,periodo
		,codigo_comercio_mpdt
		,codigo_comercio
		,nombre_comercio
		,actividad_comercio
		,rut
		,venta_tarjeta
		,codpais
		,totcuotas
		,pan
		,codact
		,porint
		,codent
		,centalta
		,cuenta
		,tipo_tarjeta
		,pan2
		,contrato_pan
		,CASE
			WHEN presencial IN ('PRESENCIAL','SIN INFORMACION') THEN 0
			WHEN presencial IN ('NO PRESENCIAL','PAT') THEN 1
		END AS si_digital
		,ind_pan
		,financiamiento
		,tasa
		,presencial
		,franquicia
		,tipofac
		,codrespu
		,dv
		,numaut
		,siaidcd
		,nacional
		,transaccion
		,codmar
		,indtipt
		,tipo_tarjeta_rsat
		,cliente
		,linea
		,deslinea
		,desc_franquicia
		,destipfac
		,signo
		,mg_fin
		,valor_cuota
		,bruto
		,tasa_carencia
		,meses_carencia
		,interes_carencia
		,modentdat
		,idterm
	FROM schm_workspace.spos_nc_spos;


	CREATE TABLE schm_workspace.spos_aut_temp(
		fecha DATE   ENCODE az64
		,fecha_num INTEGER   ENCODE az64
		,hora VARCHAR(8)   ENCODE lzo
		,periodo	INTEGER   ENCODE az64
		,codigo_comercio_mpdt BIGINT   ENCODE az64
		,codigo_comercio BIGINT   ENCODE az64
		,nombre_comercio	VARCHAR(50)   ENCODE lzo
		,actividad_comercio VARCHAR(50)   ENCODE lzo
		,rut INTEGER   ENCODE az64
		,venta_tarjeta NUMERIC(20,2)   ENCODE az64
		,codpais INTEGER   ENCODE az64
		,totcuotas INTEGER   ENCODE az64
		,pan	VARCHAR(22)   ENCODE lzo
		,codact INTEGER   ENCODE az64
		,porint DECIMAL(8,4)   ENCODE az64
		,codent VARCHAR(4)   ENCODE lzo
		,centalta VARCHAR(4)   ENCODE lzo
		,cuenta	VARCHAR(15)   ENCODE lzo
		,tipo_tarjeta VARCHAR(17)   ENCODE lzo
		,pan2 VARCHAR(22)   ENCODE lzo
		,contrato_pan VARCHAR(200)   ENCODE lzo
		,si_digital INTEGER   ENCODE az64
		,ind_pan	VARCHAR(8)   ENCODE lzo
		,financiamiento VARCHAR(30)   ENCODE lzo
		,tasa VARCHAR(11)   ENCODE lzo
		,presencial VARCHAR(30)   ENCODE lzo
		,franquicia INTEGER   ENCODE az64
		,tipofac INTEGER   ENCODE az64
		,codrespu VARCHAR(3)   ENCODE lzo
		,dv VARCHAR(1)   ENCODE lzo
		,numaut VARCHAR(10)   ENCODE lzo
		,siaidcd	VARCHAR(20)   ENCODE lzo
		,nacional VARCHAR(20)   ENCODE lzo
		,transaccion	VARCHAR(20)   ENCODE lzo
		,codmar INTEGER   ENCODE az64
		,indtipt	INTEGER   ENCODE az64
		,tipo_tarjeta_rsat VARCHAR(30)   ENCODE lzo
		,cliente VARCHAR(10)   ENCODE lzo
		,linea VARCHAR(4)   ENCODE lzo
		,deslinea VARCHAR(30)   ENCODE lzo
		,desc_franquicia	VARCHAR(30)   ENCODE lzo
		,destipfac VARCHAR(30)   ENCODE lzo
		,signo VARCHAR(1)   ENCODE lzo
		,mg_fin INTEGER   ENCODE az64
		,valor_cuota	NUMERIC(20,2)   ENCODE az64
		,bruto NUMERIC(20,2)   ENCODE az64
		,tasa_carencia NUMERIC(20,2)   ENCODE az64
		,meses_carencia INTEGER   ENCODE az64
		,interes_carencia NUMERIC(20,2)   ENCODE az64
		,modentdat VARCHAR(15)   ENCODE lzo
		,idterm VARCHAR(15)   ENCODE lzo
	);


	INSERT INTO schm_workspace.spos_aut_temp
	SELECT * FROM schm_workspace.spos_compras_aut;


	INSERT INTO schm_workspace.spos_aut_temp
	SELECT * FROM schm_workspace.spos_nc_aprob;


	CREATE TABLE schm_workspace.spos_comercios_pat AS
	SELECT
		T1.tgdtg_gls_ccn_k
		,CAST(T1.tgdtg_gls_ccn_k AS INTEGER) AS cod_tg300
		,T1.tgdtg_gls_coo_uno
		,T1.tgdtg_gls_lar_uno
		,T1.tgdtg_fch_acl_reg
		,T1.tgetg_cor_tbl_k
		,T2.tgmdo_gls_dom
	FROM br_dm_prod_bigdata_reporitf_db.botgen_det_tbl_gra T1
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.botgen_mov_dom T2
		ON CAST(T1.tgdtg_cod_coo_cin AS INTEGER) = T2.tgmdo_cod_dom_k
	WHERE T1.tgetg_cor_tbl_k IN (300, 320)
		AND T2.tgmmd_cod_mac_dom_k = 1925;


	DELETE FROM schm_data_analytics.spos_aut
	WHERE periodo = v_periodo;


	INSERT INTO schm_data_analytics.spos_aut
	SELECT
		A.fecha
		,A.fecha_num
		,A.hora
		,A.periodo
		,A.codigo_comercio_mpdt
		,A.codigo_comercio
		,A.nombre_comercio
		,A.actividad_comercio
		,A.rut
		,A.venta_tarjeta
		,A.codpais
		,A.totcuotas
		,A.pan
		,A.codact
		,A.porint
		,A.codent
		,A.centalta
		,A.cuenta
		,A.tipo_tarjeta
		,A.pan2
		,A.contrato_pan
		,A.si_digital
		,A.ind_pan
		,A.financiamiento
		,A.tasa
		,A.presencial
		,A.franquicia
		,A.tipofac
		,A.codrespu
		,B.tgdtg_gls_coo_uno
		,B.tgdtg_gls_lar_uno
		,B.tgmdo_gls_dom
		,B.tgdtg_fch_acl_reg
		,A.dv
		,A.numaut
		,A.siaidcd
		,A.nacional
		,A.transaccion
		,A.codmar
		,A.indtipt
		,A.tipo_tarjeta_rsat
		,A.cliente
		,A.linea
		,A.deslinea
		,A.desc_franquicia
		,A.destipfac
		,A.signo
		,A.mg_fin
		,A.valor_cuota
		,A.bruto
		,A.tasa_carencia
		,A.meses_carencia
		,A.interes_carencia
		,A.modentdat
		,A.idterm
	FROM schm_workspace.spos_aut_temp A
	LEFT JOIN schm_workspace.spos_comercios_pat B
		ON A.codigo_comercio = B.cod_tg300
	ORDER BY A.fecha ASC, rut ASC;


	DROP TABLE IF EXISTS schm_workspace.spos_aut_mpdt004;
	DROP TABLE IF EXISTS schm_workspace.spos_aut_tc_spos;
	DROP TABLE IF EXISTS schm_workspace.spos_compras_aut;
	DROP TABLE IF EXISTS schm_workspace.spos_aut_mpdt012;
	DROP TABLE IF EXISTS schm_workspace.spos_nc_spos;
	DROP TABLE IF EXISTS schm_workspace.spos_nc_aprob;
	DROP TABLE IF EXISTS schm_workspace.spos_aut_temp;
	DROP TABLE IF EXISTS schm_workspace.spos_comercios_pat;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-12-12	-- v01	--	David Vásquez		--	Actualización, se excluye factura 4050.

	=== Información adicional:
	
	===========================================================================================================
*/

END



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_spos_cliente_unico_3m(periodo_paso int4)
	LANGUAGE plpgsql
AS $$
	
	

BEGIN 

	DROP TABLE IF EXISTS schm_workspace.SPOS_rutero_contratos_CU;
	DROP TABLE IF EXISTS schm_workspace.SPOS_MPDT499_cu;
	DROP TABLE IF EXISTS schm_workspace.SPOS_rutero_contratos2_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_TC_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_CTACTE_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_CTAVTA_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_seg_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_TC_CHEK_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_TD_CHEK_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_BASE1_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_base2_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_TC_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.spos_CTACTE_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.spos_CTAVTA_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.spos_seg_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.spos_TC_CHEK_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.spos_TD_CHEK_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.spos_base3_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_USO_3m_cu;
	DROP TABLE IF EXISTS schm_workspace.spos_captados_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_base4_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_F_BANCO;
	DROP TABLE IF EXISTS schm_workspace.spos_F_GLOBAL;
	DROP TABLE IF EXISTS schm_workspace.spos_base5_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_base6_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_plastico_rsat;
	DROP TABLE IF EXISTS schm_workspace.spos_plastico_rsat2;
	DROP TABLE IF EXISTS schm_workspace.spos_plastico_rsat_SEG;
	DROP TABLE IF EXISTS schm_workspace.spos_plastico_rsat_SEG2;
	DROP TABLE IF EXISTS schm_workspace.spos_base7_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_base8_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_MPDT043_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_base9_CU;
	DROP TABLE IF EXISTS schm_workspace.colapso_SPOS_CU;

	--borrado de tablas tnda
	DROP TABLE IF EXISTS schm_workspace.tnda_TC_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_CTACTE_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_CTAVTA_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_TC_CHEK_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_TD_CHEK_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_BASE1_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_base2_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_TC_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.tnda_CTACTE_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.tnda_CTAVTA_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.tnda_seg_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.tnda_TC_CHEK_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.tnda_TD_CHEK_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.tnda_base3_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_USO_3m_cu;
	DROP TABLE IF EXISTS schm_workspace.tnda_captados_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_base4_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_F_BANCO;
	DROP TABLE IF EXISTS schm_workspace.tnda_F_GLOBAL;
	DROP TABLE IF EXISTS schm_workspace.tnda_base5_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_base6_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_plastico_rsat;
	DROP TABLE IF EXISTS schm_workspace.tnda_plastico_rsat2;
	DROP TABLE IF EXISTS schm_workspace.tnda_base7_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_base8_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_base9_CU;
	DROP TABLE IF EXISTS schm_workspace.colapso_tnda_CU;


	--Contratos asociados al periodo
	CREATE TABLE schm_workspace.SPOS_rutero_contratos_CU AS 
	SELECT
		CAST(PEMID_GLS_NRO_DCT_IDE_K AS INT) RUT,
		a.codent,
		a.centalta,
		a.cuenta,
		a.FECALTA,
		a.FECBAJA,
		a.producto
	FROM
		br_dm_prod_bigdata_reporitf_db.MPDT007 a
	INNER JOIN br_dm_prod_bigdata_reporitf_db.BOPERS_MAE_IDE B 
	ON
		(CAST(A.IDENTCLI AS int)= PEMID_NRO_INN_IDE)
	WHERE
		date_part(YEAR, a.FECALTA)* 100 + date_part(MONTH, a.FECALTA) <= periodo_paso
		AND (CAST(a.fecbaja AS varchar(10)) = '0001-12-30'
			OR 
	date_part(YEAR, a.FECBAJA)* 100 + date_part(MONTH, a.FECBAJA) >= periodo_paso)
	;


	CREATE TABLE schm_workspace.SPOS_MPDT499_cu AS 
	SELECT
		codent,
		centalta,
		CUENTA,
		min(PRODORIG) AS PRODORIG
	FROM
		br_dm_prod_bigdata_reporitf_db.MPDT499
	WHERE
		date_part(YEAR, fecalta)* 100 + date_part(MONTH, fecalta) >periodo_paso
	GROUP BY
		codent,
		centalta,
		CUENTA
	;


	CREATE TABLE schm_workspace.SPOS_rutero_contratos2_CU AS
	SELECT
		a.RUT,
		a.centalta,
		a.cuenta,
		a.FECALTA,
		a.FECBAJA,
		COALESCE(PRODORIG, a.producto) AS producto
	FROM
		schm_workspace.SPOS_rutero_contratos_CU AS a
	LEFT JOIN schm_workspace.SPOS_MPDT499_cu AS b
	ON
		(a.cuenta = b.cuenta)
		AND (a.codent = b.codent)
		AND (a.centalta = b.centalta)
	;


	--INFORMACION DE USO COMPRA
	CREATE TABLE schm_workspace.spos_TC_CU AS 
	SELECT
		rut,
		sum(CASE WHEN venta_TARJETA>0 THEN venta_tarjeta ELSE 0 END ) AS monto_positivo,
		sum(CASE WHEN venta_TARJETA<0 THEN venta_tarjeta ELSE 0 END ) AS monto_negativo,
		count(CASE WHEN venta_TARJETA>0 THEN rut END ) AS trx_positivo,
		count(CASE WHEN venta_TARJETA<0 THEN rut END ) AS trx_negativo
	FROM
		schm_data_analytics.spos_aut
	WHERE
		periodo = periodo_paso
		AND centalta <> '0105'
	GROUP BY
		rut
	;



	--debito cuenta vista y cuenta corrien (por separado)
	CREATE TABLE schm_workspace.spos_CTACTE_CU AS 
	SELECT
		rut,
		sum(venta_tarjeta) AS monto_positivo,
		count(rut) AS trx_positivo
	FROM
		schm_data_analytics.mpdg_movimientos_debito
	WHERE
		periodo = periodo_paso
		AND tipo_compra = 'SPOS'
		AND tipo = 'CTA CTE'
	GROUP BY
		rut
	;

	CREATE TABLE schm_workspace.spos_CTAVTA_CU AS 
	SELECT
		rut,
		sum(venta_tarjeta) AS monto_positivo,
		count(rut) AS trx_positivo
	FROM
		schm_data_analytics.mpdg_movimientos_debito
	WHERE
		periodo = periodo_paso
		AND tipo_compra = 'SPOS'
		AND tipo <> 'CTA CTE'
	GROUP BY
		rut
	;


	--movimientos de seguros
	CREATE TABLE schm_workspace.spos_seg_CU AS 
	SELECT
		rut,
		count(rut) AS trx
	FROM
		schm_data_analytics.spos_trx_seguros
	WHERE
		CODCONREC NOT IN ('S201', 'S083', 'S170')
		AND TIPO_SEGURO <> 'SEGUROS TARJETA'
		AND periodo = periodo_paso
	GROUP BY
		rut
	;


	--CHEK credito
	CREATE TABLE schm_workspace.spos_TC_CHEK_CU AS 
	SELECT
		rut,
		sum(CASE WHEN venta_TARJETA>0 THEN venta_tarjeta ELSE 0 END ) AS monto_positivo,
		sum(CASE WHEN venta_TARJETA<0 THEN venta_tarjeta ELSE 0 END ) AS monto_negativo,
		count(CASE WHEN venta_TARJETA>0 THEN rut END ) AS trx_positivo,
		count(CASE WHEN venta_TARJETA<0 THEN rut END ) AS trx_negativo
	FROM
		schm_data_analytics.spos_aut
	WHERE
		periodo = periodo_paso
		AND centalta = '0105'
	GROUP BY
		rut
	;


	--CHEK DEBITO
	CREATE TABLE schm_workspace.spos_TD_CHEK_CU AS 
	SELECT
		rut,
		sum(CASE WHEN venta_TARJETA>0 THEN venta_tarjeta ELSE 0 END ) AS monto_positivo,
		sum(CASE WHEN venta_TARJETA<0 THEN venta_tarjeta ELSE 0 END ) AS monto_negativo,
		count(CASE WHEN venta_TARJETA>0 THEN rut END ) AS trx_positivo,
		count(CASE WHEN venta_TARJETA<0 THEN rut END ) AS trx_negativo
	FROM
		schm_data_analytics.mdpg_trx_mcchek
	WHERE
		periodo = periodo_paso
		AND tipo_movimiento = 'SPOS'
	GROUP BY
		rut
	;


	--UNIFICACION DE LA BASE

	CREATE TABLE schm_workspace.spos_BASE1_CU AS 
	SELECT
		DISTINCT
	a.rut,
		CASE
			WHEN b1.rut IS NOT NULL THEN 1
			ELSE 0
		END AS tc,
		CASE
			WHEN b2.rut IS NOT NULL THEN 1
			ELSE 0
		END AS CTACTE,
		CASE
			WHEN b3.rut IS NOT NULL THEN 1
			ELSE 0
		END AS CTAVTA,
		CASE
			WHEN b4.rut IS NOT NULL THEN 1
			ELSE 0
		END AS SEG,
		CASE
			WHEN b5.rut IS NOT NULL THEN 1
			ELSE 0
		END AS TC_CHEK,
		CASE
			WHEN b6.rut IS NOT NULL THEN 1
			ELSE 0
		END AS TD_CHEK,
		CASE
			WHEN b1.rut IS NOT NULL
			AND b1.trx_positivo-b1.trx_negativo <= 0 THEN 1
			ELSE COALESCE(b1.trx_positivo-b1.trx_negativo, 0)
		END AS trx_tc,
		CASE
			WHEN b2.rut IS NOT NULL THEN b2.trx_positivo
			ELSE 0
		END AS trx_CTACTE,
		CASE
			WHEN b3.rut IS NOT NULL THEN b3.trx_positivo
			ELSE 0
		END AS trx_CTAVTA,
		CASE
			WHEN b4.rut IS NOT NULL THEN b4.trx
			ELSE 0
		END AS trx_SEG,
		CASE
			WHEN b5.rut IS NOT NULL
			AND b5.trx_positivo-b5.trx_negativo <= 0 THEN 1
			ELSE COALESCE(b5.trx_positivo-b5.trx_negativo, 0)
		END AS trx_TC_CHEK,
		CASE
			WHEN b6.rut IS NOT NULL
			AND b6.trx_positivo-b6.trx_negativo <= 0 THEN 1
			ELSE COALESCE(b6.trx_positivo-b6.trx_negativo, 0)
		END AS trx_TD_CHEK
	FROM
		(
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.spos_TC_CU
		WHERE
			monto_positivo + monto_negativo>0
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.spos_CTACTE_CU
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.spos_CTAVTA_CU
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.spos_seg_CU
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.spos_TC_CHEK_CU
		WHERE
			monto_positivo + monto_negativo>0
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.spos_TD_CHEK_CU
		WHERE
			monto_positivo + monto_negativo>0 
	) AS a
	LEFT JOIN schm_workspace.spos_TC_CU AS b1
	ON
		(a.rut = b1.rut)
	LEFT JOIN schm_workspace.spos_CTACTE_CU AS b2
	ON
		(a.rut = b2.rut)
	LEFT JOIN schm_workspace.spos_CTAVTA_CU AS b3
	ON
		(a.rut = b3.rut)
	LEFT JOIN schm_workspace.spos_seg_CU AS b4
	ON
		(a.rut = b4.rut)
	LEFT JOIN schm_workspace.spos_TC_CHEK_CU AS b5 
	ON
		(a.rut = b5.rut)
	LEFT JOIN schm_workspace.spos_TD_CHEK_CU AS b6 
	ON
		(a.rut = b6.rut)
	;

	--primer marcaje, combinatoria y cantidad de transacciones

	CREATE TABLE schm_workspace.spos_base2_CU AS 
	SELECT
		DISTINCT 
	*,
		CASE
			WHEN tc + SEG>0 THEN 'TC'
			ELSE ''
		END || '+' ||
	CASE
			WHEN CTACTE>0 THEN 'CTA CTE'
			ELSE ''
		END || '+' ||
	CASE
			WHEN CTAVTA>0 THEN 'CTA VTA'
			ELSE ''
		END || '+' ||
	CASE
			WHEN TC_CHEK>0 THEN 'TC CHEK'
			ELSE ''
		END || '+' ||
	CASE
			WHEN TD_CHEK>0 THEN 'TD CHEK'
			ELSE ''
		END AS COMBINATORIA_global,
		CASE
			WHEN tc + SEG>0 THEN 'TC'
			ELSE ''
		END || '+' ||
	CASE
			WHEN CTACTE + CTAVTA>0 THEN 'TD'
			ELSE ''
		END || '+' ||
	CASE
			WHEN TC_CHEK + TD_CHEK THEN 'CHEK'
			ELSE ''
		END AS COMBINATORIA_agrupado,
		CASE
			WHEN tc + SEG>0 THEN 'TC'
			ELSE ''
		END || '+' ||
	CASE
			WHEN CTACTE + CTAVTA>0 THEN 'TD'
			ELSE ''
		END AS COMBINATORIA_BANCO,
		CASE
			WHEN trx_tc + trx_SEG + trx_CTACTE + trx_CTAVTA + trx_TC_CHEK + trx_TD_CHEK = 1 THEN '01.1 compra'
			WHEN trx_tc + trx_SEG + trx_CTACTE + trx_CTAVTA + trx_TC_CHEK + trx_TD_CHEK BETWEEN 2 AND 4 THEN '02.2-4 compras'
			WHEN trx_tc + trx_SEG + trx_CTACTE + trx_CTAVTA + trx_TC_CHEK + trx_TD_CHEK BETWEEN 5 AND 19 THEN '03.5-19 compras'
			WHEN trx_tc + trx_SEG + trx_CTACTE + trx_CTAVTA + trx_TC_CHEK + trx_TD_CHEK >= 20 THEN '04.>=20 compras'
		END AS cant_compras_global,
		CASE
			WHEN trx_tc + trx_SEG + trx_CTACTE + trx_CTAVTA = 1 THEN '01.1 compra'
			WHEN trx_tc + trx_SEG + trx_CTACTE + trx_CTAVTA BETWEEN 2 AND 4 THEN '02.2-4 compras'
			WHEN trx_tc + trx_SEG + trx_CTACTE + trx_CTAVTA BETWEEN 5 AND 19 THEN '03.5-19 compras'
			WHEN trx_tc + trx_SEG + trx_CTACTE + trx_CTAVTA >= 20 THEN '04.>=20 compras'
			ELSE '05.No Aplica'
		END AS cant_compras_Banco
	FROM
		schm_workspace.spos_base1_CU
	;

	-- USO EN LOS ULTIMOS 12 meses 


	CREATE TABLE schm_workspace.spos_TC_CU_U12M AS 
	SELECT
		periodo,
		rut,
		sum(venta_tarjeta) AS monto_positivo
	FROM
		schm_data_analytics.spos_aut
	WHERE
		periodo BETWEEN date_part(YEAR, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
		AND centalta <> '0105'
	GROUP BY
		rut,
		periodo
	HAVING
		sum(venta_tarjeta)>0
	;

	CREATE TABLE schm_workspace.spos_CTACTE_CU_U12M AS 
	SELECT
		DISTINCT periodo,
		rut
	FROM
		schm_data_analytics.mpdg_movimientos_debito
	WHERE
		periodo BETWEEN date_part(YEAR, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
		AND tipo_compra = 'SPOS'
		AND tipo = 'CTA CTE'
	;

	CREATE TABLE schm_workspace.spos_CTAVTA_CU_U12M AS 
	SELECT
		DISTINCT periodo,
		rut
	FROM
		schm_data_analytics.mpdg_movimientos_debito
	WHERE
		periodo BETWEEN date_part(YEAR, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
		AND tipo_compra = 'SPOS'
		AND tipo <> 'CTA CTE'
	;

	CREATE TABLE schm_workspace.spos_seg_CU_U12M AS 
	SELECT
		DISTINCT periodo,
		rut
	FROM
		schm_data_analytics.spos_trx_seguros
	WHERE
		CODCONREC NOT IN ('S201', 'S083', 'S170')
		AND TIPO_SEGURO <> 'SEGUROS TARJETA'
		AND periodo BETWEEN date_part(YEAR, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	;

	CREATE TABLE schm_workspace.spos_TC_CHEK_CU_U12M AS 
	SELECT
		periodo,
		rut,
		sum(venta_tarjeta) AS monto
	FROM
		schm_data_analytics.spos_aut
	WHERE
		periodo BETWEEN date_part(YEAR, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
		AND centalta = '0105'
	GROUP BY
		rut,
		periodo
	HAVING
		sum(venta_tarjeta)>0

	;

	CREATE TABLE schm_workspace.spos_TD_CHEK_CU_U12M AS 
	SELECT
		periodo,
		rut,
		sum(venta_tarjeta) AS monto
	FROM
		schm_data_analytics.mdpg_trx_mcchek
	WHERE
		periodo BETWEEN date_part(YEAR, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
		AND tipo_movimiento = 'SPOS'
	GROUP BY
		rut,
		periodo
	HAVING
		sum(venta_tarjeta)>0
	;


	-- marcaje de uso ultimos 3 meses 

	CREATE TABLE schm_workspace.spos_USO_3m_cu AS 
	SELECT
		a.rut,
		max(CASE WHEN c.periodo = date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD'))) AND c.rut IS NOT NULL THEN 1 ELSE 0 END) AS USO_ANT1_GLOBAL,
		max(CASE WHEN c.periodo = date_part(YEAR, dateadd(MONTH,-2, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-2, to_date(periodo_paso, 'YYYYMMDD'))) AND c.rut IS NOT NULL THEN 1 ELSE 0 END) AS USO_ANT2_GLOBAL,
		max(CASE WHEN c.periodo = date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD'))) AND c.rut IS NOT NULL THEN 1 ELSE 0 END) AS USO_ANT3_GLOBAL,
		max(CASE WHEN b.rut IS NOT NULL THEN 1 ELSE 0 END) AS USO_ANT_BANCO,
		max(CASE WHEN d.periodo = date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD'))) AND d.rut IS NOT NULL THEN 1 ELSE 0 END) AS USO_ANT1_BANCO,
		max(CASE WHEN d.periodo = date_part(YEAR, dateadd(MONTH,-2, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-2, to_date(periodo_paso, 'YYYYMMDD'))) AND d.rut IS NOT NULL THEN 1 ELSE 0 END) AS USO_ANT2_BANCO,
		max(CASE WHEN d.periodo = date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD'))) AND d.rut IS NOT NULL THEN 1 ELSE 0 END) AS USO_ANT3_BANCO
	FROM
		(
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.spos_TC_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.spos_CTACTE_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.spos_CTAVTA_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.spos_seg_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.spos_TC_CHEK_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.spos_TD_CHEK_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	) AS a
	LEFT JOIN (
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.spos_TC_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.spos_CTACTE_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.spos_CTAVTA_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.spos_seg_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD'))) ) AS b
	ON
		(a.rut = b.rut)
	LEFT JOIN (
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_TC_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_CTACTE_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_CTAVTA_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_seg_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_TC_CHEK_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_TD_CHEK_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD'))) 
	) AS c
	ON
		(a.rut = c.rut)
	LEFT JOIN (
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_TC_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_CTACTE_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_CTAVTA_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_seg_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD'))) ) AS d
	ON
		(a.rut = d.rut)
	GROUP BY
		a.rut
	;


	CREATE TABLE schm_workspace.spos_base3_CU AS  
	SELECT
		a.*,
		CASE
			WHEN b.rut IS NOT NULL THEN 1
			ELSE 0
		END AS USO_ANT_GLOBAL,
		COALESCE(b.USO_ANT1_GLOBAL, 0) AS USO_ANT1_GLOBAL,
		COALESCE(b.USO_ANT2_GLOBAL, 0) AS USO_ANT2_GLOBAL,
		COALESCE(b.USO_ANT3_GLOBAL, 0) AS USO_ANT3_GLOBAL,
		COALESCE(b.USO_ANT_BANCO, 0) AS USO_ANT_BANCO,
		COALESCE( b.USO_ANT1_BANCO, 0) AS USO_ANT1_BANCO,
		COALESCE( b.USO_ANT2_BANCO, 0) AS USO_ANT2_BANCO,
		COALESCE( b.USO_ANT3_BANCO, 0) AS USO_ANT3_BANCO
	FROM
		schm_workspace.spos_base2_CU AS a
	LEFT JOIN schm_workspace.spos_USO_3m_cu AS b
	ON
		(a.rut = b.rut)
	;



	--captados con tarjeta de credito tam ultimos 3 meses 

	CREATE TABLE schm_workspace.spos_captados_CU AS 
	SELECT
		DISTINCT 
	rut_cliente AS rut
	FROM
		(
		SELECT
			rut_cliente,
			periodo,
			producto
		FROM
			schm_data_analytics.ppff_capta_salida
		)
	WHERE
		periodo BETWEEN date_part(YEAR, dateadd(MONTH,-2, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-2, to_date(periodo_paso, 'YYYYMMDD'))) AND periodo_paso
		AND producto NOT IN ('TR', 'CUENTA VISTA', 'CUENTA CORRIENTE')
	;

	-- marcaje captacion


	 CREATE TABLE schm_workspace.spos_base4_CU AS 
	SELECT
		a.*,
		CASE
			WHEN b.rut IS NOT NULL THEN 1
			ELSE 0
		END AS capta_tc
	FROM
		schm_workspace.spos_base3_CU AS a
	LEFT JOIN schm_workspace.spos_captados_CU AS b
	ON
		(a.rut = b.rut)
	;

	--FRECUENCIA DE USO ULTIMOS 12 MESES


	CREATE TABLE schm_workspace.spos_F_BANCO AS 
	SELECT
		rut,
		count(DISTINCT periodo) AS frecuencia
	FROM
		(
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_TC_CU_U12M
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_CTACTE_CU_U12M
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_CTAVTA_CU_U12M
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_seg_CU_U12M
	)
	GROUP BY
		rut;


	CREATE TABLE schm_workspace.spos_F_GLOBAL AS 
	SELECT
		rut,
		count(DISTINCT periodo) AS frecuencia
	FROM
		(
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_TC_CU_U12M
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_CTACTE_CU_U12M
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_CTAVTA_CU_U12M
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_seg_CU_U12M
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_TC_CHEK_CU_U12M
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.spos_TD_CHEK_CU_U12M
	)
	GROUP BY
		rut;


	-- marcaje de frecuencia 

	CREATE TABLE schm_workspace.spos_base5_CU AS 
	SELECT
		a.*,
		CASE
			WHEN b.rut IS NOT NULL THEN b.frecuencia
			ELSE 0
		END AS frecuencia_BANCO,
		CASE
			WHEN c.rut IS NOT NULL THEN c.frecuencia
			ELSE 0
		END AS frecuencia_GLOBAL
	FROM
		schm_workspace.spos_base4_CU AS a
	LEFT JOIN schm_workspace.spos_F_BANCO AS b
	ON
		(a.rut = b.rut)
	LEFT JOIN schm_workspace.spos_F_GLOBAL AS c
	ON
		(a.rut = c.rut)
	;

	-- marcaje de combinatoria de uso ultimos 3 meses 

	CREATE TABLE 
	schm_workspace.spos_base6_CU AS 
	SELECT
		*,
		CASE
			WHEN USO_ANT1_GLOBAL = 1 THEN 'ANT1'
			ELSE ''
		END || '+' ||
	CASE
			WHEN USO_ANT2_GLOBAL = 1 THEN 'ANT2'
			ELSE ''
		END || '+' ||
	CASE
			WHEN USO_ANT3_GLOBAL = 1 THEN 'ANT3'
			ELSE ''
		END AS combinatoria_U3M_globa,
		CASE
			WHEN USO_ANT1_BANCO = 1 THEN 'ANT1'
			ELSE ''
		END || '+' ||
	CASE
			WHEN USO_ANT2_BANCO = 1 THEN 'ANT2'
			ELSE ''
		END || '+' ||
	CASE
			WHEN USO_ANT3_BANCO = 1 THEN 'ANT3'
			ELSE ''
		END AS combinatoria_U3M_BANCO
	FROM
		schm_workspace.spos_base5_CU 
	;


	--DESDE AQUI ES EL MARCAJE DEL ULTIMO PLASTICO OBSERVADO PARA CARACTERIZAR EL USO

	CREATE TABLE schm_workspace.spos_plastico_rsat AS 
	SELECT
		a.rut,
		a.venta_tarjeta,
		b.producto
	FROM
		(
		SELECT
			rut,
			venta_tarjeta,
			periodo,
			fecha,
			cuenta,
			centalta
		FROM
			schm_data_analytics.spos_aut
		WHERE
			periodo = periodo_paso
			AND centalta <> '0105') AS a
	LEFT JOIN schm_workspace.SPOS_rutero_contratos2_CU AS b
	ON
		(a.cuenta = b.cuenta)
		AND (a.centalta = b.centalta)
	INNER JOIN (
		SELECT
			rut,
			centalta,
			cuenta,
			max(fecha) AS max
		FROM
			schm_data_analytics.spos_aut
		WHERE
			periodo = periodo_paso
			AND centalta <> '0105'
		GROUP BY
			rut,
			centalta,
			cuenta) AS c
	ON
		(a.rut = c.rut)
		AND (a.fecha = c.max)
		AND a.cuenta = c.cuenta
		AND (a.centalta = c.centalta)
	;

	CREATE TABLE schm_workspace.spos_plastico_rsat2 AS 
	SELECT
		rut,
		max(producto) AS producto
	FROM
		schm_workspace.spos_plastico_rsat
	GROUP BY
		rut;


	--maximo producto en seg


	CREATE TABLE schm_workspace.spos_plastico_rsat_SEG AS 
	SELECT
		a.rut,
		b.producto
	FROM
		(
		SELECT
			rut,
			periodo,
			fecmov,
			cuenta,
			centalta
		FROM
			schm_data_analytics.spos_trx_seguros
		WHERE
			periodo = periodo_paso
			AND CODCONREC NOT IN ('S201', 'S083', 'S170')
			AND TIPO_SEGURO <> 'SEGUROS TARJETA') AS a
	LEFT JOIN schm_workspace.SPOS_rutero_contratos2_CU AS b
	ON
		(a.cuenta = b.cuenta)
		AND (a.centalta = b.centalta)
	INNER JOIN (
		SELECT
			rut,
			centalta,
			cuenta,
			max(fecmov) AS max
		FROM
			schm_data_analytics.spos_trx_seguros
		WHERE
			periodo = periodo_paso
			AND CODCONREC NOT IN ('S201', 'S083', 'S170')
				AND TIPO_SEGURO <> 'SEGUROS TARJETA'
			GROUP BY
				rut,
				centalta,
				cuenta) AS c
	ON
		(a.rut = c.rut)
		AND (a.fecmov = c.max)
		AND a.cuenta = c.cuenta
		AND (a.centalta = c.centalta)
	;

	CREATE TABLE schm_workspace.spos_plastico_rsat_SEG2 AS 
	SELECT
		rut,
		max(producto) AS producto
	FROM
		schm_workspace.spos_plastico_rsat_Seg
	GROUP BY
		rut;

	-- marcaje de gse y ultimo producto

	CREATE TABLE schm_workspace.spos_base7_CU AS 
	SELECT
		a.*,
		b.producto AS producto1,
		b1.producto AS producto2,
		CASE
			WHEN c.categoria_gse IN ('C1a', 'C1b', 'C2') THEN 'C1C2'
			ELSE COALESCE(c.categoria_gse, 'SIN GSE')
		END AS GSE
	FROM
		schm_workspace.spos_base6_CU AS a
	LEFT JOIN schm_workspace.spos_plastico_rsat2 AS b
	ON
		(a.rut = b.rut)
	LEFT JOIN schm_workspace.spos_plastico_rsat_SEG2 AS b1
	ON
		(a.rut = b1.rut)
	LEFT JOIN schm_data_analytics.adan_gse_corp AS c
	ON
		(a.rut = c.rut)
	;


	--unificacion del producto en el cual se ve el uso 


	CREATE TABLE schm_workspace.spos_base8_CU AS 
	SELECT
		rut ,
		tc ,
		ctacte ,
		ctavta,
		seg ,
		tc_chek,
		td_chek,
		trx_tc ,
		trx_ctacte,
		trx_ctavta,
		trx_seg ,
		trx_tc_chek ,
		trx_td_chek,
		combinatoria_global,
		combinatoria_agrupado,
		combinatoria_banco,
		cant_compras_global ,
		cant_compras_banco ,
		uso_ant_global ,
		uso_ant1_global ,
		uso_ant2_global ,
		uso_ant3_global ,
		uso_ant_banco ,
		uso_ant1_banco ,
		uso_ant2_banco ,
		uso_ant3_banco,
		capta_tc ,
		frecuencia_banco,
		frecuencia_global,
		combinatoria_u3m_globa ,
		combinatoria_u3m_banco,
		producto1 ,
		producto2 ,
		gse,
		CASE
			WHEN CAST(COALESCE(producto1, '00') AS int)> CAST(COALESCE(producto2, '00')AS int)
	THEN CAST(COALESCE(producto1, '00') AS int)
			WHEN CAST(COALESCE(producto1, '00') AS int)< CAST(COALESCE(producto2, '00') AS int)
	THEN CAST(COALESCE(producto2, '00') AS int)
			ELSE CAST(COALESCE(producto1, '00') AS int)
		END AS producto_fin_TC
	FROM
		schm_workspace.spos_base7_CU
	;


	CREATE TABLE schm_workspace.spos_MPDT043_CU AS 

	SELECT
		*
	FROM
		br_dm_prod_bigdata_reporitf_db.MPDT043
	;

	CREATE TABLE schm_workspace.spos_base9_CU AS 
	SELECT
		a.*,
		b.DESPROD
	FROM
		schm_workspace.spos_base8_CU AS a
	LEFT JOIN schm_workspace.spos_MPDT043_CU AS b
	ON
		(a.producto_fin_TC = CAST(b.producto AS int ))
	;

	-- AQUI SE GENERA EL COLAPSO EN EL CUAL SE GUARDARA LA INFORMACION FINAL


	CREATE TABLE schm_workspace.colapso_SPOS_CU AS 
	SELECT
		periodo_paso AS periodo,
		combinatoria_global,
		combinatoria_agrupado,
		combinatoria_banco,
		cant_compras_global,
		cant_compras_banco,
		CASE
			WHEN capta_tc>0 THEN 'CAPTADO'
			WHEN capta_tc = 0
			AND uso_ant_global = 1 THEN 'Recencia <=3'
			WHEN capta_tc = 0
			AND uso_ant_global = 0 THEN 'Recencia >3'
		END AS MARCAJE_GLOBAL,
		CASE
			WHEN capta_tc>0 THEN 'CAPTADO'
			WHEN capta_tc = 0
			AND uso_ant_banco = 1 THEN 'Recencia <=3'
			WHEN capta_tc = 0
			AND uso_ant_banco = 0 THEN 'Recencia >3'
		END AS marcaje_banco,
		frecuencia_banco,
		frecuencia_global,
		combinatoria_u3m_globa ,
		combinatoria_u3m_banco,
		CASE
			WHEN combinatoria_global LIKE '%TC%' THEN DESPROD
		END AS TIPO_TARJETA_RSAT,
		GSE,
		count(rut) AS clientes
	FROM
		schm_workspace.spos_base9_CU
	GROUP BY
		combinatoria_global,
		combinatoria_agrupado,
		combinatoria_banco,
		cant_compras_global,
		cant_compras_banco,
		CASE
			WHEN capta_tc>0 THEN 'CAPTADO'
			WHEN capta_tc = 0
			AND uso_ant_global = 1 THEN 'Recencia <=3'
			WHEN capta_tc = 0
			AND uso_ant_global = 0 THEN 'Recencia >3'
		END ,
		CASE
			WHEN capta_tc>0 THEN 'CAPTADO'
			WHEN capta_tc = 0
			AND uso_ant_banco = 1 THEN 'Recencia <=3'
			WHEN capta_tc = 0
			AND uso_ant_banco = 0 THEN 'Recencia >3'
		END ,
		frecuencia_banco,
		frecuencia_global,
		combinatoria_u3m_globa ,
		combinatoria_u3m_banco,
		CASE
			WHEN combinatoria_global LIKE '%TC%' THEN DESPROD
		END ,
		GSE

	;

	-------------------------------------------------------------
	-------------------------------------------------------------

	--Desde aqui se replica el mismo proceso pero aplicado a lo que es tda


	--INFORMACION DE USO COMPRA

	CREATE TABLE schm_workspace.tnda_TC_CU AS 
	SELECT
		rut,
		sum(CASE WHEN capital>0 THEN capital ELSE 0 END ) AS monto_positivo,
		sum(CASE WHEN capital<0 THEN capital ELSE 0 END ) AS monto_negativo,
		count(CASE WHEN capital>0 THEN rut END ) AS trx_positivo,
		count(CASE WHEN capital<0 THEN rut END ) AS trx_negativo
	FROM
		schm_data_analytics.tnda_tda_itf
	WHERE
		periodo = periodo_paso
		AND centalta <> '0105'
	GROUP BY
		rut
	;
	--debito cuenta vista y cuenta corrien (por separado)

	CREATE TABLE schm_workspace.tnda_CTACTE_CU AS 
	SELECT
		rut,
		sum(venta_tarjeta) AS monto_positivo,
		count(rut) AS trx_positivo
	FROM
		schm_data_analytics.mpdg_movimientos_debito
	WHERE
		periodo = periodo_paso
		AND tipo_compra <> 'SPOS'
		AND tipo = 'CTA CTE'
	GROUP BY
		rut
	;

	CREATE TABLE schm_workspace.tnda_CTAVTA_CU AS 
	SELECT
		rut,
		sum(venta_tarjeta) AS monto_positivo,
		count(rut) AS trx_positivo
	FROM
		schm_data_analytics.mpdg_movimientos_debito
	WHERE
		periodo = periodo_paso
		AND tipo_compra <> 'SPOS'
		AND tipo <> 'CTA CTE'
	GROUP BY
		rut
	;
	--CHEK credito

	CREATE TABLE schm_workspace.tnda_TC_CHEK_CU AS 
	SELECT
		rut,
		sum(CASE WHEN capital>0 THEN capital ELSE 0 END ) AS monto_positivo,
		sum(CASE WHEN capital<0 THEN capital ELSE 0 END ) AS monto_negativo,
		count(CASE WHEN capital>0 THEN rut END ) AS trx_positivo,
		count(CASE WHEN capital<0 THEN rut END ) AS trx_negativo
	FROM
		schm_data_analytics.tnda_tda_itf
	WHERE
		periodo = periodo_paso
		AND centalta = '0105'
	GROUP BY
		rut
	;
	--CHEK DEBITO

	CREATE TABLE schm_workspace.tnda_TD_CHEK_CU AS 
	SELECT
		rut,
		sum(CASE WHEN venta_TARJETA>0 THEN venta_tarjeta ELSE 0 END ) AS monto_positivo,
		sum(CASE WHEN venta_TARJETA<0 THEN venta_tarjeta ELSE 0 END ) AS monto_negativo,
		count(CASE WHEN venta_TARJETA>0 THEN rut END ) AS trx_positivo,
		count(CASE WHEN venta_TARJETA<0 THEN rut END ) AS trx_negativo
	FROM
		schm_data_analytics.mdpg_trx_mcchek
	WHERE
		periodo = periodo_paso
		AND tipo_movimiento <> 'SPOS'
	GROUP BY
		rut
	;

	CREATE TABLE schm_workspace.tnda_BASE1_CU AS 
	SELECT
		DISTINCT
	a.rut,
		CASE
			WHEN b1.rut IS NOT NULL THEN 1
			ELSE 0
		END AS tc,
		CASE
			WHEN b2.rut IS NOT NULL THEN 1
			ELSE 0
		END AS CTACTE,
		CASE
			WHEN b3.rut IS NOT NULL THEN 1
			ELSE 0
		END AS CTAVTA,
		CASE
			WHEN b5.rut IS NOT NULL THEN 1
			ELSE 0
		END AS TC_CHEK,
		CASE
			WHEN b6.rut IS NOT NULL THEN 1
			ELSE 0
		END AS TD_CHEK,
		CASE
			WHEN b1.rut IS NOT NULL
			AND b1.trx_positivo-b1.trx_negativo <= 0 THEN 1
			ELSE COALESCE(b1.trx_positivo-b1.trx_negativo, 0)
		END AS trx_tc,
		CASE
			WHEN b2.rut IS NOT NULL THEN b2.trx_positivo
			ELSE 0
		END AS trx_CTACTE,
		CASE
			WHEN b3.rut IS NOT NULL THEN b3.trx_positivo
			ELSE 0
		END AS trx_CTAVTA,
		CASE
			WHEN b5.rut IS NOT NULL
			AND b5.trx_positivo-b5.trx_negativo <= 0 THEN 1
			ELSE COALESCE(b5.trx_positivo-b5.trx_negativo, 0)
		END AS trx_TC_CHEK,
		CASE
			WHEN b6.rut IS NOT NULL
			AND b6.trx_positivo-b6.trx_negativo <= 0 THEN 1
			ELSE COALESCE(b6.trx_positivo-b6.trx_negativo, 0)
		END AS trx_TD_CHEK
	FROM
		(
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.tnda_TC_CU
		WHERE
			monto_positivo + monto_negativo>0
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.tnda_CTACTE_CU
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.tnda_CTAVTA_CU
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.tnda_TC_CHEK_CU
		WHERE
			monto_positivo + monto_negativo>0
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.tnda_TD_CHEK_CU
		WHERE
			monto_positivo + monto_negativo>0 
	) AS a
	LEFT JOIN schm_workspace.tnda_TC_CU AS b1
	ON
		(a.rut = b1.rut)
	LEFT JOIN schm_workspace.tnda_CTACTE_CU AS b2
	ON
		(a.rut = b2.rut)
	LEFT JOIN schm_workspace.tnda_CTAVTA_CU AS b3
	ON
		(a.rut = b3.rut)
	LEFT JOIN schm_workspace.tnda_TC_CHEK_CU AS b5 
	ON
		(a.rut = b5.rut)
	LEFT JOIN schm_workspace.tnda_TD_CHEK_CU AS b6 
	ON
		(a.rut = b6.rut)
	;
	--primer marcaje, combinatoria y cantidad de transacciones


	CREATE TABLE schm_workspace.tnda_base2_CU AS 
	SELECT
		DISTINCT 
	*,
		CASE
			WHEN tc>0 THEN 'TC'
			ELSE ''
		END || '+' ||
	CASE
			WHEN CTACTE>0 THEN 'CTA CTE'
			ELSE ''
		END || '+' ||
	CASE
			WHEN CTAVTA>0 THEN 'CTA VTA'
			ELSE ''
		END || '+' ||
	CASE
			WHEN TC_CHEK>0 THEN 'TC CHEK'
			ELSE ''
		END || '+' ||
	CASE
			WHEN TD_CHEK>0 THEN 'TD CHEK'
			ELSE ''
		END AS COMBINATORIA_global,
		CASE
			WHEN tc>0 THEN 'TC'
			ELSE ''
		END || '+' ||
	CASE
			WHEN CTACTE + CTAVTA>0 THEN 'TD'
			ELSE ''
		END || '+' ||
	CASE
			WHEN TC_CHEK + TD_CHEK THEN 'CHEK'
			ELSE ''
		END AS COMBINATORIA_agrupado,
		CASE
			WHEN tc>0 THEN 'TC'
			ELSE ''
		END || '+' ||
	CASE
			WHEN CTACTE + CTAVTA>0 THEN 'TD'
			ELSE ''
		END AS COMBINATORIA_BANCO,
		CASE
			WHEN trx_tc + trx_CTACTE + trx_CTAVTA + trx_TC_CHEK + trx_TD_CHEK = 1 THEN '01.1 compra'
			WHEN trx_tc + trx_CTACTE + trx_CTAVTA + trx_TC_CHEK + trx_TD_CHEK BETWEEN 2 AND 4 THEN '02.2-4 compras'
			WHEN trx_tc + trx_CTACTE + trx_CTAVTA + trx_TC_CHEK + trx_TD_CHEK BETWEEN 5 AND 19 THEN '03.5-19 compras'
			WHEN trx_tc + trx_CTACTE + trx_CTAVTA + trx_TC_CHEK + trx_TD_CHEK >= 20 THEN '04.>=20 compras'
		END AS cant_compras_global,
		CASE
			WHEN trx_tc + trx_CTACTE + trx_CTAVTA = 1 THEN '01.1 compra'
			WHEN trx_tc + trx_CTACTE + trx_CTAVTA BETWEEN 2 AND 4 THEN '02.2-4 compras'
			WHEN trx_tc + trx_CTACTE + trx_CTAVTA BETWEEN 5 AND 19 THEN '03.5-19 compras'
			WHEN trx_tc + trx_CTACTE + trx_CTAVTA >= 20 THEN '04.>=20 compras'
			ELSE '05.No Aplica'
		END AS cant_compras_Banco
	FROM
		schm_workspace.tnda_base1_CU
	;
	

	-- USO EN LOS ULTIMOS 12 meses 
	CREATE TABLE schm_workspace.tnda_TC_CU_U12M AS 
	SELECT
		periodo,
		rut,
		sum(capital) AS monto_positivo
	FROM
		schm_data_analytics.tnda_tda_itf
	WHERE
		periodo BETWEEN date_part(YEAR, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
		AND centalta <> '0105'
	GROUP BY
		rut,
		periodo
	HAVING
		sum(capital)>0
	;


	CREATE TABLE schm_workspace.tnda_CTACTE_CU_U12M AS 
	SELECT
		DISTINCT periodo,
		rut
	FROM
		schm_data_analytics.mpdg_movimientos_debito
	WHERE
		periodo BETWEEN date_part(YEAR, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
		AND tipo_compra <> 'SPOS'
		AND tipo = 'CTA CTE'
	;


	CREATE TABLE schm_workspace.tnda_CTAVTA_CU_U12M AS 
	SELECT
		DISTINCT periodo,
		rut
	FROM
		schm_data_analytics.mpdg_movimientos_debito
	WHERE
		periodo BETWEEN date_part(YEAR, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
		AND tipo_compra <> 'SPOS'
		AND tipo <> 'CTA CTE'
	;



	CREATE TABLE schm_workspace.tnda_TC_CHEK_CU_U12M AS 
	SELECT
		periodo,
		rut,
		sum(capital) AS monto
	FROM
		schm_data_analytics.tnda_tda_itf
	WHERE
		periodo BETWEEN date_part(YEAR, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
		AND centalta = '0105'
	GROUP BY
		rut,
		periodo
	HAVING
		sum(capital)>0

	;


	CREATE TABLE schm_workspace.tnda_TD_CHEK_CU_U12M AS 
	SELECT
		periodo,
		rut,
		sum(venta_tarjeta) AS monto
	FROM
		schm_data_analytics.mdpg_trx_mcchek
	WHERE
		periodo BETWEEN date_part(YEAR, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-12, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
		AND tipo_movimiento <> 'SPOS'
	GROUP BY
		rut,
		periodo
	HAVING
		sum(venta_tarjeta)>0
	;
	

	-- marcaje de uso ultimos 3 meses
	CREATE TABLE schm_workspace.tnda_USO_3m_cu AS 
	SELECT
		a.rut,
		max(CASE WHEN c.periodo = date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD'))) AND c.rut IS NOT NULL THEN 1 ELSE 0 END) AS USO_ANT1_GLOBAL,
		max(CASE WHEN c.periodo = date_part(YEAR, dateadd(MONTH,-2, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-2, to_date(periodo_paso, 'YYYYMMDD'))) AND c.rut IS NOT NULL THEN 1 ELSE 0 END) AS USO_ANT2_GLOBAL,
		max(CASE WHEN c.periodo = date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD'))) AND c.rut IS NOT NULL THEN 1 ELSE 0 END) AS USO_ANT3_GLOBAL,
		max(CASE WHEN b.rut IS NOT NULL THEN 1 ELSE 0 END) AS USO_ANT_BANCO,
		max(CASE WHEN d.periodo = date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD'))) AND d.rut IS NOT NULL THEN 1 ELSE 0 END) AS USO_ANT1_BANCO,
		max(CASE WHEN d.periodo = date_part(YEAR, dateadd(MONTH,-2, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-2, to_date(periodo_paso, 'YYYYMMDD'))) AND d.rut IS NOT NULL THEN 1 ELSE 0 END) AS USO_ANT2_BANCO,
		max(CASE WHEN d.periodo = date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD'))) AND d.rut IS NOT NULL THEN 1 ELSE 0 END) AS USO_ANT3_BANCO
	FROM
		(
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.tnda_TC_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.tnda_CTACTE_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.tnda_CTAVTA_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.tnda_TC_CHEK_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.tnda_TD_CHEK_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD'))) 
	) AS a
	LEFT JOIN (
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.tnda_TC_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.tnda_CTACTE_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT rut
		FROM
			schm_workspace.tnda_CTAVTA_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD'))) ) AS b
	ON
		(a.rut = b.rut)
	LEFT JOIN (
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.tnda_TC_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.tnda_CTACTE_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.tnda_CTAVTA_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.tnda_TC_CHEK_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.tnda_TD_CHEK_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	) AS c
	ON
		(a.rut = c.rut)
	LEFT JOIN (
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.tnda_TC_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.tnda_CTACTE_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.tnda_CTAVTA_CU_U12M
		WHERE
			periodo BETWEEN date_part(YEAR, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-3, to_date(periodo_paso, 'YYYYMMDD')))
	AND
	date_part(YEAR, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD')))* 100 +
	date_part(MONTH, dateadd(MONTH,-1, to_date(periodo_paso, 'YYYYMMDD'))) ) AS d
	ON
		(a.rut = d.rut)
	GROUP BY
		a.rut
	;

	CREATE TABLE schm_workspace.tnda_base3_CU AS  
	SELECT
		a.*,
		CASE
			WHEN b.rut IS NOT NULL THEN 1
			ELSE 0
		END AS USO_ANT_GLOBAL,
		COALESCE(b.USO_ANT1_GLOBAL, 0) AS USO_ANT1_GLOBAL,
		COALESCE(b.USO_ANT2_GLOBAL, 0) AS USO_ANT2_GLOBAL,
		COALESCE(b.USO_ANT3_GLOBAL, 0) AS USO_ANT3_GLOBAL,
		COALESCE(b.USO_ANT_BANCO, 0) AS USO_ANT_BANCO,
		COALESCE( b.USO_ANT1_BANCO, 0) AS USO_ANT1_BANCO,
		COALESCE( b.USO_ANT2_BANCO, 0) AS USO_ANT2_BANCO,
		COALESCE( b.USO_ANT3_BANCO, 0) AS USO_ANT3_BANCO
	FROM
		schm_workspace.tnda_base2_CU AS a
	LEFT JOIN schm_workspace.tnda_USO_3m_cu AS b
	ON
		(a.rut = b.rut)
	;
	-- marcaje captacion


	 CREATE TABLE schm_workspace.tnda_base4_CU AS 
	SELECT
		a.*,
		CASE
			WHEN b.rut IS NOT NULL THEN 1
			ELSE 0
		END AS capta_tc
	FROM
		schm_workspace.tnda_base3_CU AS a
	LEFT JOIN schm_workspace.spos_captados_CU AS b
	ON
		(a.rut = b.rut)
	;
	--FRECUENCIA DE USO ULTIMOS 12 MESES


	CREATE TABLE schm_workspace.tnda_F_BANCO AS 
	SELECT
		rut,
		count(DISTINCT periodo) AS frecuencia
	FROM
		(
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.tnda_TC_CU_U12M
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.tnda_CTACTE_CU_U12M
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.tnda_CTAVTA_CU_U12M
	)
	GROUP BY
		rut;

	CREATE TABLE schm_workspace.tnda_F_GLOBAL AS 
	SELECT
		rut,
		count(DISTINCT periodo) AS frecuencia
	FROM
		(
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.tnda_TC_CU_U12M
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.tnda_CTACTE_CU_U12M
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.tnda_CTAVTA_CU_U12M
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.tnda_TC_CHEK_CU_U12M
	UNION
		SELECT
			DISTINCT periodo,
			rut
		FROM
			schm_workspace.tnda_TD_CHEK_CU_U12M
	)
	GROUP BY
		rut;
	-- marcaje de frecuencia 

	CREATE TABLE schm_workspace.tnda_base5_CU AS 
	SELECT
		a.*,
		CASE
			WHEN b.rut IS NOT NULL THEN b.frecuencia
			ELSE 0
		END AS frecuencia_BANCO,
		CASE
			WHEN c.rut IS NOT NULL THEN c.frecuencia
			ELSE 0
		END AS frecuencia_GLOBAL
	FROM
		schm_workspace.tnda_base4_CU AS a
	LEFT JOIN schm_workspace.tnda_F_BANCO AS b
	ON
		(a.rut = b.rut)
	LEFT JOIN schm_workspace.tnda_F_GLOBAL AS c
	ON
		(a.rut = c.rut)
	;
	-- marcaje de combinatoria de uso ultimos 3 meses 

	CREATE TABLE 
	schm_workspace.tnda_base6_CU AS 
	SELECT
		*,
		CASE
			WHEN USO_ANT1_GLOBAL = 1 THEN 'ANT1'
			ELSE ''
		END || '+' ||
	CASE
			WHEN USO_ANT2_GLOBAL = 1 THEN 'ANT2'
			ELSE ''
		END || '+' ||
	CASE
			WHEN USO_ANT3_GLOBAL = 1 THEN 'ANT3'
			ELSE ''
		END AS combinatoria_U3M_globa,
		CASE
			WHEN USO_ANT1_BANCO = 1 THEN 'ANT1'
			ELSE ''
		END || '+' ||
	CASE
			WHEN USO_ANT2_BANCO = 1 THEN 'ANT2'
			ELSE ''
		END || '+' ||
	CASE
			WHEN USO_ANT3_BANCO = 1 THEN 'ANT3'
			ELSE ''
		END AS combinatoria_U3M_BANCO
	FROM
		schm_workspace.tnda_base5_CU 
	;
	--DESDE AQUI ES EL MARCAJE DEL ULTIMO PLASTICO OBSERVADO PARA CARACTERIZAR EL USO

	CREATE TABLE schm_workspace.tnda_plastico_rsat AS 
	SELECT
		a.rut,
		a.capital,
		b.producto
	FROM
		(
		SELECT
			rut,
			capital,
			periodo,
			fecha,
			cuenta,
			centalta
		FROM
			schm_data_analytics.tnda_tda_itf
		WHERE
			periodo = periodo_paso
			AND centalta <> '0105') AS a
	LEFT JOIN schm_workspace.SPOS_rutero_contratos2_CU AS b
	ON
		(a.cuenta = b.cuenta)
		AND (a.centalta = b.centalta)
	INNER JOIN (
		SELECT
			rut,
			centalta,
			cuenta,
			max(fecha) AS max
		FROM
			schm_data_analytics.tnda_tda_itf
		WHERE
			periodo = periodo_paso
			AND centalta <> '0105'
		GROUP BY
			rut,
			centalta,
			cuenta) AS c
	ON
		(a.rut = c.rut)
		AND (a.fecha = c.max)
		AND a.cuenta = c.cuenta
		AND (a.centalta = c.centalta)
	;

	CREATE TABLE schm_workspace.tnda_plastico_rsat2 AS 
	SELECT
		rut,
		max(producto) AS producto
	FROM
		schm_workspace.tnda_plastico_rsat
	GROUP BY
		rut;
	-- marcaje de gse y ultimo producto

	CREATE TABLE schm_workspace.tnda_base7_CU AS 
	SELECT
		a.*,
		b.producto AS producto1,
		CASE
			WHEN c.categoria_gse IN ('C1a', 'C1b', 'C2') THEN 'C1C2'
			ELSE COALESCE(c.categoria_gse, 'SIN GSE')
		END AS GSE
	FROM
		schm_workspace.tnda_base6_CU AS a
	LEFT JOIN schm_workspace.tnda_plastico_rsat2 AS b
	ON
		(a.rut = b.rut)
	LEFT JOIN schm_data_analytics.adan_gse_corp AS c
	ON
		(a.rut = c.rut)
	;
	--unificacion del producto en el cual se ve el uso 


	CREATE TABLE schm_workspace.tnda_base8_CU AS 
	SELECT
		rut ,
		tc ,
		ctacte ,
		ctavta,
		tc_chek,
		td_chek,
		trx_tc ,
		trx_ctacte,
		trx_ctavta,
		trx_tc_chek ,
		trx_td_chek,
		combinatoria_global,
		combinatoria_agrupado,
		combinatoria_banco,
		cant_compras_global ,
		cant_compras_banco ,
		uso_ant_global ,
		uso_ant1_global ,
		uso_ant2_global ,
		uso_ant3_global ,
		uso_ant_banco ,
		uso_ant1_banco ,
		uso_ant2_banco ,
		uso_ant3_banco,
		capta_tc ,
		frecuencia_banco,
		frecuencia_global,
		combinatoria_u3m_globa ,
		combinatoria_u3m_banco,
		producto1 ,
		gse,
		CAST(COALESCE(producto1, '00') AS int) AS producto_fin_TC
	FROM
		schm_workspace.tnda_base7_CU
	;

	CREATE TABLE schm_workspace.tnda_base9_CU AS 
	SELECT
		a.*,
		b.DESPROD
	FROM
		schm_workspace.tnda_base8_CU AS a
	LEFT JOIN schm_workspace.spos_MPDT043_CU AS b
	ON
		(a.producto_fin_TC = CAST(b.producto AS int ))
	;
	-- AQUI SE GENERA EL COLAPSO EN EL CUAL SE GUARDARA LA INFORMACION FINAL


	CREATE TABLE schm_workspace.colapso_tnda_CU AS 
	SELECT
		periodo_paso AS periodo,
		combinatoria_global,
		combinatoria_agrupado,
		combinatoria_banco,
		cant_compras_global,
		cant_compras_banco,
		CASE
			WHEN capta_tc>0 THEN 'CAPTADO'
			WHEN capta_tc = 0
			AND uso_ant_global = 1 THEN 'Recencia <=3'
			WHEN capta_tc = 0
			AND uso_ant_global = 0 THEN 'Recencia >3'
		END AS MARCAJE_GLOBAL,
		CASE
			WHEN capta_tc>0 THEN 'CAPTADO'
			WHEN capta_tc = 0
			AND uso_ant_banco = 1 THEN 'Recencia <=3'
			WHEN capta_tc = 0
			AND uso_ant_banco = 0 THEN 'Recencia >3'
		END AS marcaje_banco,
		frecuencia_banco,
		frecuencia_global,
		combinatoria_u3m_globa ,
		combinatoria_u3m_banco,
		CASE
			WHEN combinatoria_global LIKE '%TC%' THEN DESPROD
		END AS TIPO_TARJETA_RSAT,
		GSE,
		count(rut) AS clientes
	FROM
		schm_workspace.tnda_base9_CU
	GROUP BY
		combinatoria_global,
		combinatoria_agrupado,
		combinatoria_banco,
		cant_compras_global,
		cant_compras_banco,
		CASE
			WHEN capta_tc>0 THEN 'CAPTADO'
			WHEN capta_tc = 0
			AND uso_ant_global = 1 THEN 'Recencia <=3'
			WHEN capta_tc = 0
			AND uso_ant_global = 0 THEN 'Recencia >3'
		END ,
		CASE
			WHEN capta_tc>0 THEN 'CAPTADO'
			WHEN capta_tc = 0
			AND uso_ant_banco = 1 THEN 'Recencia <=3'
			WHEN capta_tc = 0
			AND uso_ant_banco = 0 THEN 'Recencia >3'
		END ,
		frecuencia_banco,
		frecuencia_global,
		combinatoria_u3m_globa ,
		combinatoria_u3m_banco,
		CASE
			WHEN combinatoria_global LIKE '%TC%' THEN DESPROD
		END ,
		GSE

	;
	--guardado en duro 

	CREATE TABLE IF NOT EXISTS schm_data_analytics.spos_cliente_unico_3m 
	(
	TIPO_USO varchar(99),
	periodo int,
	combinatoria_global varchar(99),
	combinatoria_agrupado varchar(99),
	combinatoria_banco varchar(99),
	cant_compras_global varchar(99),
	cant_compras_banco varchar(99),
	MARCAJE_GLOBAL varchar(99),
	marcaje_banco varchar(99),
	frecuencia_banco int,
	frecuencia_global int ,
	combinatoria_u3m_globa varchar(99),
	combinatoria_u3m_banco varchar(99),
	TIPO_TARJETA_RSAT varchar(99),
	GSE varchar(99),
	clientes bigint
	)
	;

	DELETE
	FROM
		schm_data_analytics.spos_cliente_unico_3m
	WHERE
		periodo = periodo_paso;

	INSERT
		INTO
		schm_data_analytics.spos_cliente_unico_3m 
	SELECT
		'TNDA' AS TIPO_USO,
		*
	FROM
		schm_workspace.colapso_tnda_CU
	;

	INSERT
		INTO
		schm_data_analytics.spos_cliente_unico_3m 
	SELECT
		'SPOS' AS TIPO_USO,
		*
	FROM
		schm_workspace.colapso_SPOS_CU
	;



	DROP TABLE IF EXISTS schm_workspace.SPOS_rutero_contratos_CU;
	DROP TABLE IF EXISTS schm_workspace.SPOS_MPDT499_cu;
	DROP TABLE IF EXISTS schm_workspace.SPOS_rutero_contratos2_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_TC_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_CTACTE_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_CTAVTA_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_seg_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_TC_CHEK_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_TD_CHEK_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_BASE1_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_base2_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_TC_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.spos_CTACTE_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.spos_CTAVTA_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.spos_seg_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.spos_TC_CHEK_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.spos_TD_CHEK_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.spos_base3_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_USO_3m_cu;
	DROP TABLE IF EXISTS schm_workspace.spos_captados_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_base4_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_F_BANCO;
	DROP TABLE IF EXISTS schm_workspace.spos_F_GLOBAL;
	DROP TABLE IF EXISTS schm_workspace.spos_base5_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_base6_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_plastico_rsat;
	DROP TABLE IF EXISTS schm_workspace.spos_plastico_rsat2;
	DROP TABLE IF EXISTS schm_workspace.spos_plastico_rsat_SEG;
	DROP TABLE IF EXISTS schm_workspace.spos_plastico_rsat_SEG2;
	DROP TABLE IF EXISTS schm_workspace.spos_base7_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_base8_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_MPDT043_CU;
	DROP TABLE IF EXISTS schm_workspace.spos_base9_CU;
	DROP TABLE IF EXISTS schm_workspace.colapso_SPOS_CU;

	--borrado de tablas tnda
	DROP TABLE IF EXISTS schm_workspace.tnda_TC_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_CTACTE_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_CTAVTA_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_TC_CHEK_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_TD_CHEK_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_BASE1_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_base2_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_TC_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.tnda_CTACTE_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.tnda_CTAVTA_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.tnda_seg_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.tnda_TC_CHEK_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.tnda_TD_CHEK_CU_U12M;
	DROP TABLE IF EXISTS schm_workspace.tnda_base3_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_USO_3m_cu;
	DROP TABLE IF EXISTS schm_workspace.tnda_captados_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_base4_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_F_BANCO;
	DROP TABLE IF EXISTS schm_workspace.tnda_F_GLOBAL;
	DROP TABLE IF EXISTS schm_workspace.tnda_base5_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_base6_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_plastico_rsat;
	DROP TABLE IF EXISTS schm_workspace.tnda_plastico_rsat2;
	DROP TABLE IF EXISTS schm_workspace.tnda_base7_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_base8_CU;
	DROP TABLE IF EXISTS schm_workspace.tnda_base9_CU;
	DROP TABLE IF EXISTS schm_workspace.colapso_tnda_CU;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-10-31 -- v01 -- Pedro Muñoz		-- Versión original.

	=== Información adicional:
	Proceso que genera caracterización del cliente en base a su comportamiento de compra de los útlimos 3 meses, TC, TD y Chek.
	===========================================================================================================
*/

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_spos_credito(v_period int4)
	LANGUAGE plpgsql
AS $$
	
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.spos_credito_periodo;

    DROP TABLE IF EXISTS schm_workspace.spos_credito_periodo_2;

/*insertar la nueva data que llega desde cc*/
    CREATE TABLE schm_workspace.spos_credito_periodo as
    SELECT
	*
    FROM
	br_dm_prod_bigdata_sftp_db.spos_credito
    WHERE
	periodo = v_period
    ;

/*le doy la estructura necesaria*/
    CREATE TABLE schm_workspace.spos_credito_periodo_2 AS
    SELECT
	rut_cliente,
	tipo_producto,
	cod_factura,
	tipo_factura,
	cod_compra,
	tipo_compra,
	CASE
		WHEN regexp_replace(cod_comercio,
		'([^0-9])',
		'') SIMILAR TO '[0-9]+(.[0-9][0-9])?' THEN regexp_replace(cod_comercio,
		'([^0-9])',
		'')::bigint
		ELSE NULL
	END AS cod_comercio,
	monto AS venta_tarjeta,
	fecha AS cod_fecha,
	fecha AS fecha_trunc,
	cuotas AS plazo,
	interes,
	margen_financiero,
	venta_financiada,
	cod_pais AS pais,
	cod_producto,
	1 AS cantidad_trx,
	CASE
		WHEN cod_producto = 7 THEN 'TAM_CHIP'
		WHEN cod_producto IN(5, 6) THEN 'TAM'
		WHEN cod_producto IN(1, 3) THEN 'ITF'
	END AS marca_base,
	periodo
	FROM
	schm_workspace.spos_credito_periodo
    ;
   
   	DELETE FROM schm_data_analytics.spos_autom
   	WHERE periodo = v_period;

/*la insertamos en nuestra tabla final*/
    INSERT
	INTO
	schm_data_analytics.spos_autom
    SELECT
	*
    FROM
	schm_workspace.spos_credito_periodo_2;

    DROP TABLE IF EXISTS schm_workspace.spos_credito_periodo;

    DROP TABLE IF EXISTS schm_workspace.spos_credito_periodo_2;

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_spos_dau_mau_wau(periodo_paso int4)
	LANGUAGE plpgsql
AS $$
	

	BEGIN 

	DROP TABLE IF EXISTS schm_workspace.DMW_spos;
	DROP TABLE IF EXISTS schm_workspace.DMW_CTACTE;
	DROP TABLE IF EXISTS schm_workspace.DMW_CTAVTA;
	DROP TABLE IF EXISTS schm_workspace.DMW_seg;
	DROP TABLE IF EXISTS schm_workspace.DMW_TC_CHEK;
	DROP TABLE IF EXISTS schm_workspace.DMW_TD_CHEK;
	DROP TABLE IF EXISTS schm_workspace.DMW_BASE_PASO2 ;

	DROP TABLE IF EXISTS schm_workspace.DMW_BASE_PASO_cierre;
	DROP TABLE IF EXISTS schm_workspace.DMW_BASE_PASO_cierre2;

	DROP TABLE IF EXISTS schm_workspace.DMW_BASE_PASO_semana;
	DROP TABLE IF EXISTS schm_workspace.DMW_BASE_PASO_semana2;

	DROP TABLE IF EXISTS schm_workspace.DMW_BASE_dia;
	DROP TABLE IF EXISTS schm_workspace.DMW_BASE_dia2;

	DROP TABLE IF EXISTS schm_workspace.DMW_colapso_SPOS;

	--borrado de tablas tda 

	DROP TABLE IF EXISTS schm_workspace.DMW_tnda;
	DROP TABLE IF EXISTS schm_workspace.DMW_CTACTE_tnda;
	DROP TABLE IF EXISTS schm_workspace.DMW_CTAVTA_tnda;
	DROP TABLE IF EXISTS schm_workspace.DMW_TC_CHEK_tnda;
	DROP TABLE IF EXISTS schm_workspace.DMW_TD_CHEK_tnda;
	DROP TABLE IF EXISTS schm_workspace.DMW_BASE_PASO_tnda2 ;

	DROP TABLE IF EXISTS schm_workspace.DMW_BASE_PASO_cierre_tnda;
	DROP TABLE IF EXISTS schm_workspace.DMW_BASE_PASO_cierre_tnda2;

	DROP TABLE IF EXISTS schm_workspace.DMW_BASE_PASO_semana_tnda;
	DROP TABLE IF EXISTS schm_workspace.DMW_BASE_PASO_semana_tnda2;

	DROP TABLE IF EXISTS schm_workspace.DMW_BASE_dia_tnda;
	DROP TABLE IF EXISTS schm_workspace.DMW_BASE_dia_tnda2;

	DROP TABLE IF EXISTS schm_workspace.DMW_colapso_tnda;
	CREATE TABLE schm_workspace.DMW_spos AS 
	SELECT
		rut,
		fecha,
		sum(venta_tarjeta) AS monto
	FROM
		schm_data_analytics.spos_aut
	WHERE
		periodo = periodo_paso
		AND centalta <> '0105'
	GROUP BY
		rut,
		fecha
	;

	CREATE TABLE schm_workspace.DMW_CTACTE AS 
	SELECT
		rut,
		fecha
	FROM
		schm_data_analytics.mpdg_movimientos_debito
	WHERE
		periodo = periodo_paso
		AND tipo_compra = 'SPOS'
		AND tipo = 'CTA CTE'
	GROUP BY
		rut,
		fecha
	;

	CREATE TABLE schm_workspace.DMW_CTAVTA AS 
	SELECT
		rut,
		fecha
	FROM
		schm_data_analytics.mpdg_movimientos_debito
	WHERE
		periodo = periodo_paso
		AND tipo_compra = 'SPOS'
		AND tipo <> 'CTA CTE'
	GROUP BY
		rut,
		fecha
	;
	--movimientos de seguros

	CREATE TABLE schm_workspace.DMW_seg AS 
	SELECT
		rut,
		fecmov AS fecha
	FROM
		schm_data_analytics.spos_trx_seguros
	WHERE
		CODCONREC NOT IN ('S201', 'S083', 'S170')
		AND TIPO_SEGURO <> 'SEGUROS TARJETA'
		AND periodo = periodo_paso
	GROUP BY
		rut,
		fecmov
	;
	--CHEK credito

	CREATE TABLE schm_workspace.DMW_TC_CHEK AS 
	SELECT
		rut,
		fecha,
		sum(venta_tarjeta) AS monto
	FROM
		schm_data_analytics.spos_aut
	WHERE
		periodo = periodo_paso
		AND centalta = '0105'
	GROUP BY
		rut,
		fecha
	;
	--CHEK DEBITO

	CREATE TABLE schm_workspace.DMW_TD_CHEK AS 
	SELECT
		rut,
		fecha,
		sum(venta_tarjeta) AS monto
	FROM
		schm_data_analytics.mdpg_trx_mcchek
	WHERE
		periodo = periodo_paso
		AND tipo_movimiento = 'SPOS'
	GROUP BY
		rut,
		fecha
	;
	-- vista por dia, aqui se hara 29-30 ciclos

	CREATE TABLE IF NOT EXISTS schm_workspace.DMW_BASE_PASO2 (
	dia int,
	 GLOBAL bigint,
	 BANCO bigint,
	 TC bigint,
	 TD bigint,
	CTAVTA bigint,
	 CTACTE bigint,
	 CHEK bigint,
	 TC_CHEK bigint,
	 TD_CHEK bigint
	);

	CALL schm_artifacts.sp_spos_dmw_ciclo(date_part(DAY, last_day(to_date(periodo_paso, 'YYYYMMDD')))::INT);
	--esta es la foto al cierre del periodo

	CREATE TABLE schm_workspace.DMW_BASE_PASO_cierre AS 
	SELECT
		'TC' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_spos
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL

	SELECT
		DISTINCT
	'CTACTE' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTACTE
	UNION ALL

	SELECT
		DISTINCT
	'CTAVTA' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTAVTA
	UNION ALL

	SELECT
		DISTINCT
	'SEG' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_seg
	UNION ALL

	SELECT
		'TC CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TC_CHEK
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL

	SELECT
		'TD CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TD_CHEK
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	;

	CREATE TABLE schm_workspace.DMW_BASE_PASO_cierre2 AS 
	SELECT
		count(DISTINCT rut) AS GLOBAL,
		count(DISTINCT CASE WHEN tipo IN ('TC', 'SEG', 'CTAVTA', 'CTACTE') THEN rut END ) AS BANCO,
		count(DISTINCT CASE WHEN tipo IN ('TC', 'SEG') THEN rut END ) AS TC,
		count(DISTINCT CASE WHEN tipo IN ('CTAVTA', 'CTACTE') THEN rut END ) AS TD,
		count(DISTINCT CASE WHEN tipo IN ('CTAVTA') THEN rut END ) AS CTAVTA,
		count(DISTINCT CASE WHEN tipo IN ('CTACTE') THEN rut END ) AS CTACTE,
		count(DISTINCT CASE WHEN tipo IN ('TC CHEK', 'TD CHEK') THEN rut END ) AS CHEK,
		count(DISTINCT CASE WHEN tipo IN ('TC CHEK') THEN rut END ) AS TC_CHEK,
		count(DISTINCT CASE WHEN tipo IN ('TD CHEK') THEN rut END ) AS TD_CHEK
	FROM
		schm_workspace.DMW_BASE_PASO_cierre
	;
	-- esta es la foto por semana


	CREATE TABLE schm_workspace.DMW_BASE_PASO_semana AS 
	SELECT
		'SEMANA 1' AS semana,
		'TC' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_spos
	WHERE
		date_part(DAY, fecha) BETWEEN 1 AND 7
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL

	SELECT
		DISTINCT 
	'SEMANA 1' AS semana,
		'CTACTE' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTACTE
	WHERE
		date_part(DAY, fecha) BETWEEN 1 AND 7
	UNION ALL

	SELECT
		DISTINCT
	'SEMANA 1' AS semana,
		'CTAVTA' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTAVTA
	WHERE
		date_part(DAY, fecha) BETWEEN 1 AND 7
	UNION ALL

	SELECT
		DISTINCT
	'SEMANA 1' AS semana,
		'SEG' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_seg
	WHERE
		date_part(DAY, fecha) BETWEEN 1 AND 7
	UNION ALL

	SELECT
		'SEMANA 1' AS semana,
		'TC CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TC_CHEK
	WHERE
		date_part(DAY, fecha) BETWEEN 1 AND 7
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL

	SELECT
		'SEMANA 1' AS semana,
		'TD CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TD_CHEK
	WHERE
		date_part(DAY, fecha) BETWEEN 1 AND 7
	GROUP BY
		rut
	HAVING
		sum(monto)>0
		--semana 2
	UNION ALL 
	SELECT
		'SEMANA 2' AS semana,
		'TC' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_spos
	WHERE
		date_part(DAY, fecha) BETWEEN 8 AND 14
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL

	SELECT
		DISTINCT 
	'SEMANA 2' AS semana,
		'CTACTE' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTACTE
	WHERE
		date_part(DAY, fecha) BETWEEN 8 AND 14
	UNION ALL
	SELECT
		DISTINCT
	'SEMANA 2' AS semana,
		'CTAVTA' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTAVTA
	WHERE
		date_part(DAY, fecha) BETWEEN 8 AND 14
	UNION ALL
	SELECT
		DISTINCT
	'SEMANA 2' AS semana,
		'SEG' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_seg
	WHERE
		date_part(DAY, fecha) BETWEEN 8 AND 14
	UNION ALL
	SELECT
		'SEMANA 2' AS semana,
		'TC CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TC_CHEK
	WHERE
		date_part(DAY, fecha) BETWEEN 8 AND 14
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL
	SELECT
		'SEMANA 2' AS semana,
		'TD CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TD_CHEK
	WHERE
		date_part(DAY, fecha) BETWEEN 8 AND 14
	GROUP BY
		rut
	HAVING
		sum(monto)>0
		--semana 3
	UNION ALL 
	SELECT
		'SEMANA 3' AS semana,
		'TC' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_spos
	WHERE
		date_part(DAY, fecha) BETWEEN 15 AND 21
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL
	SELECT
		DISTINCT 
	'SEMANA 3' AS semana,
		'CTACTE' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTACTE
	WHERE
		date_part(DAY, fecha) BETWEEN 15 AND 21
	UNION ALL
	SELECT
		DISTINCT
	'SEMANA 3' AS semana,
		'CTAVTA' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTAVTA
	WHERE
		date_part(DAY, fecha) BETWEEN 15 AND 21
	UNION ALL
	SELECT
		DISTINCT
	'SEMANA 3' AS semana,
		'SEG' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_seg
	WHERE
		date_part(DAY, fecha) BETWEEN 15 AND 21
	UNION ALL
	SELECT
		'SEMANA 3' AS semana,
		'TC CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TC_CHEK
	WHERE
		date_part(DAY, fecha) BETWEEN 15 AND 21
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL
	SELECT
		'SEMANA 3' AS semana,
		'TD CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TD_CHEK
	WHERE
		date_part(DAY, fecha) BETWEEN 15 AND 21
	GROUP BY
		rut
	HAVING
		sum(monto)>0
		--semana 4
	UNION ALL 
	SELECT
		'SEMANA 4' AS semana,
		'TC' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_spos
	WHERE
		date_part(DAY, fecha)>21
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL
	SELECT
		DISTINCT 
	'SEMANA 4' AS semana,
		'CTACTE' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTACTE
	WHERE
		date_part(DAY, fecha) >21
	UNION ALL
	SELECT
		DISTINCT
	'SEMANA 4' AS semana,
		'CTAVTA' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTAVTA
	WHERE
		date_part(DAY, fecha)>21
	UNION ALL
	SELECT
		DISTINCT
	'SEMANA 4' AS semana,
		'SEG' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_seg
	WHERE
		date_part(DAY, fecha) >21
	UNION ALL
	SELECT
		'SEMANA 4' AS semana,
		'TC CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TC_CHEK
	WHERE
		date_part(DAY, fecha)>21
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL
	SELECT
		'SEMANA 4' AS semana,
		'TD CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TD_CHEK
	WHERE
		date_part(DAY, fecha) >21
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	;


	CREATE TABLE schm_workspace.DMW_BASE_PASO_semana2 AS 
	SELECT
		semana,
		count(DISTINCT rut) AS GLOBAL,
		count(DISTINCT CASE WHEN tipo IN ('TC', 'SEG', 'CTAVTA', 'CTACTE') THEN rut END ) AS BANCO,
		count(DISTINCT CASE WHEN tipo IN ('TC', 'SEG') THEN rut END ) AS TC,
		count(DISTINCT CASE WHEN tipo IN ('CTAVTA', 'CTACTE') THEN rut END ) AS TD,
		count(DISTINCT CASE WHEN tipo IN ('CTAVTA') THEN rut END ) AS CTAVTA,
		count(DISTINCT CASE WHEN tipo IN ('CTACTE') THEN rut END ) AS CTACTE,
		count(DISTINCT CASE WHEN tipo IN ('TC CHEK', 'TD CHEK') THEN rut END ) AS CHEK,
		count(DISTINCT CASE WHEN tipo IN ('TC CHEK') THEN rut END ) AS TC_CHEK,
		count(DISTINCT CASE WHEN tipo IN ('TD CHEK') THEN rut END ) AS TD_CHEK
	FROM
		schm_workspace.DMW_BASE_PASO_semana
	GROUP BY
		semana
	;
	--vista por dia


	CREATE TABLE schm_workspace.DMW_BASE_dia AS 
	SELECT
		'TC' AS tipo,
		fecha,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_spos
	GROUP BY
		rut,
		fecha
	HAVING
		sum(monto)>0
	UNION ALL
	SELECT
		DISTINCT
	'CTACTE' AS tipo,
		fecha,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTACTE
	UNION ALL
	SELECT
		DISTINCT
	'CTAVTA' AS tipo,
		fecha,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTAVTA
	UNION ALL

	SELECT
		DISTINCT
	'SEG' AS tipo,
		fecha,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_seg
	UNION ALL
	SELECT
		'TC CHEK' AS tipo,
		fecha,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TC_CHEK
	GROUP BY
		rut,
		fecha
	HAVING
		sum(monto)>0
	UNION ALL
	SELECT
		'TD CHEK' AS tipo,
		fecha,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TD_CHEK
	GROUP BY
		rut,
		fecha
	HAVING
		sum(monto)>0
	;


	CREATE TABLE schm_workspace.DMW_BASE_dia2 AS 
	SELECT
		fecha,
		count(DISTINCT rut) AS GLOBAL,
		count(DISTINCT CASE WHEN tipo IN ('TC', 'SEG', 'CTAVTA', 'CTACTE') THEN rut END ) AS BANCO,
		count(DISTINCT CASE WHEN tipo IN ('TC', 'SEG') THEN rut END ) AS TC,
		count(DISTINCT CASE WHEN tipo IN ('CTAVTA', 'CTACTE') THEN rut END ) AS TD,
		count(DISTINCT CASE WHEN tipo IN ('CTAVTA') THEN rut END ) AS CTAVTA,
		count(DISTINCT CASE WHEN tipo IN ('CTACTE') THEN rut END ) AS CTACTE,
		count(DISTINCT CASE WHEN tipo IN ('TC CHEK', 'TD CHEK') THEN rut END ) AS CHEK,
		count(DISTINCT CASE WHEN tipo IN ('TC CHEK') THEN rut END ) AS TC_CHEK,
		count(DISTINCT CASE WHEN tipo IN ('TD CHEK') THEN rut END ) AS TD_CHEK
	FROM
		schm_workspace.DMW_BASE_dia
	GROUP BY
		fecha
	;


	CREATE TABLE IF NOT EXISTS schm_workspace.DMW_colapso_SPOS
	(
	parametro varchar(99),
	dia int,
	 GLOBAL bigint,
	 BANCO bigint,
	 TC bigint,
	 TD bigint,
	CTAVTA bigint,
	 CTACTE bigint,
	 CHEK bigint,
	 TC_CHEK bigint,
	 TD_CHEK bigint
	);


	INSERT
		INTO
		schm_workspace.DMW_colapso_SPOS 
	SELECT
		'VISTA DIA' AS parametro,
		dia ,
		GLOBAL ,
		BANCO ,
		TC ,
		TD ,
		CTAVTA ,
		CTACTE ,
		CHEK ,
		TC_CHEK ,
		TD_CHEK
	FROM
		schm_workspace.DMW_BASE_PASO2
	;


	INSERT
		INTO
		schm_workspace.DMW_colapso_SPOS 
	SELECT
		'DAU' AS parametro,
		0 AS dia ,
		round(avg(GLOBAL)) AS GLOBAL,
		round(avg(BANCO)) AS BANCO,
		round(avg(TC)) AS TC,
		round(avg(TD)) AS TD,
		round(avg(CTAVTA)) AS CTAVTA,
		round(avg(CTACTE) ) AS CTACTE ,
		round(avg(CHEK) ) AS CHEK,
		round(avg(TC_CHEK)) AS TC_CHEK,
		round(avg(TD_CHEK)) AS TD_CHEK
	FROM
		schm_workspace.DMW_BASE_dia2
	;


	INSERT
		INTO
		schm_workspace.DMW_colapso_SPOS 
	SELECT
		'MAU' AS parametro,
		0 AS dia ,
		GLOBAL ,
		BANCO ,
		TC ,
		TD ,
		CTAVTA ,
		CTACTE ,
		CHEK ,
		TC_CHEK ,
		TD_CHEK
	FROM
		schm_workspace.DMW_BASE_PASO_cierre2
	;

	INSERT
		INTO
		schm_workspace.DMW_colapso_SPOS 
	SELECT
		'WAU' AS parametro,
		0 AS dia ,
		round(avg(GLOBAL)) AS GLOBAL,
		round(avg(BANCO)) AS BANCO,
		round(avg(TC)) AS TC,
		round(avg(TD)) AS TD,
		round(avg(CTAVTA)) AS CTAVTA,
		round(avg(CTACTE) ) AS CTACTE ,
		round(avg(CHEK) ) AS CHEK,
		round(avg(TC_CHEK)) AS TC_CHEK,
		round(avg(TD_CHEK)) AS TD_CHEK
	FROM
		schm_workspace.DMW_BASE_PASO_semana2
	;
	-----------------------------------------------------------------------
	-----------------------------------------------------------------------


	-- desde aqui se repite la misma vista pero en tda
	CREATE TABLE schm_workspace.DMW_tnda AS 
	SELECT
		rut,
		fecha,
		sum(capital) AS monto
	FROM
		schm_data_analytics.tnda_tda_itf
	WHERE
		periodo = periodo_paso
		AND centalta <> '0105'
	GROUP BY
		rut,
		fecha
	;

	CREATE TABLE schm_workspace.DMW_CTACTE_tnda AS 
	SELECT
		rut,
		fecha
	FROM
		schm_data_analytics.mpdg_movimientos_debito
	WHERE
		periodo = periodo_paso
		AND tipo_compra <> 'SPOS'
		AND tipo = 'CTA CTE'
	GROUP BY
		rut,
		fecha
	;

	CREATE TABLE schm_workspace.DMW_CTAVTA_tnda AS 
	SELECT
		rut,
		fecha
	FROM
		schm_data_analytics.mpdg_movimientos_debito
	WHERE
		periodo = periodo_paso
		AND tipo_compra <> 'SPOS'
		AND tipo <> 'CTA CTE'
	GROUP BY
		rut,
		fecha
	;
	--CHEK credito

	CREATE TABLE schm_workspace.DMW_TC_CHEK_tnda AS 
	SELECT
		rut,
		fecha,
		sum(capital) AS monto
	FROM
		schm_data_analytics.tnda_tda_itf
	WHERE
		periodo = periodo_paso
		AND centalta = '0105'
	GROUP BY
		rut,
		fecha
	;
	--CHEK DEBITO

	CREATE TABLE schm_workspace.DMW_TD_CHEK_tnda AS 
	SELECT
		rut,
		fecha,
		sum(venta_tarjeta) AS monto
	FROM
		schm_data_analytics.mdpg_trx_mcchek
	WHERE
		periodo = periodo_paso
		AND tipo_movimiento <> 'SPOS'
	GROUP BY
		rut,
		fecha
	;
	-- vista por dia, aqui se hara 29-30 ciclos

	CREATE TABLE IF NOT EXISTS schm_workspace.DMW_BASE_PASO_tnda2 (
	dia int,
	 GLOBAL bigint,
	 BANCO bigint,
	 TC bigint,
	 TD bigint,
	CTAVTA bigint,
	 CTACTE bigint,
	 CHEK bigint,
	 TC_CHEK bigint,
	 TD_CHEK bigint
	);

	CALL schm_artifacts.sp_tnda_dmw_ciclo(date_part(DAY, last_day(to_date(periodo_paso, 'YYYYMMDD')))::INT);
	--esta es la foto al cierre del periodo

	CREATE TABLE schm_workspace.DMW_BASE_PASO_cierre_tnda AS 
	SELECT
		'TC' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_tnda
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL
	SELECT
		DISTINCT
	'CTACTE' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTACTE_tnda
	UNION ALL
	SELECT
		DISTINCT
	'CTAVTA' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTAVTA_tnda
	UNION ALL
	SELECT
		'TC CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TC_CHEK_tnda
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL
	SELECT
		'TD CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TD_CHEK_tnda
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	;

	CREATE TABLE schm_workspace.DMW_BASE_PASO_cierre_tnda2 AS 
	SELECT
		count(DISTINCT rut) AS GLOBAL,
		count(DISTINCT CASE WHEN tipo IN ('TC', 'SEG', 'CTAVTA', 'CTACTE') THEN rut END ) AS BANCO,
		count(DISTINCT CASE WHEN tipo IN ('TC', 'SEG') THEN rut END ) AS TC,
		count(DISTINCT CASE WHEN tipo IN ('CTAVTA', 'CTACTE') THEN rut END ) AS TD,
		count(DISTINCT CASE WHEN tipo IN ('CTAVTA') THEN rut END ) AS CTAVTA,
		count(DISTINCT CASE WHEN tipo IN ('CTACTE') THEN rut END ) AS CTACTE,
		count(DISTINCT CASE WHEN tipo IN ('TC CHEK', 'TD CHEK') THEN rut END ) AS CHEK,
		count(DISTINCT CASE WHEN tipo IN ('TC CHEK') THEN rut END ) AS TC_CHEK,
		count(DISTINCT CASE WHEN tipo IN ('TD CHEK') THEN rut END ) AS TD_CHEK
	FROM
		schm_workspace.DMW_BASE_PASO_cierre_tnda
	;
	-- esta es la foto por semana


	CREATE TABLE schm_workspace.DMW_BASE_PASO_semana_tnda AS 
	SELECT
		'SEMANA 1' AS semana,
		'TC' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_tnda
	WHERE
		date_part(DAY, fecha) BETWEEN 1 AND 7
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL
	SELECT
		DISTINCT 
	'SEMANA 1' AS semana,
		'CTACTE' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTACTE_tnda
	WHERE
		date_part(DAY, fecha) BETWEEN 1 AND 7
	UNION ALL
	SELECT
		DISTINCT
	'SEMANA 1' AS semana,
		'CTAVTA' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTAVTA_tnda
	WHERE
		date_part(DAY, fecha) BETWEEN 1 AND 7
	UNION ALL
	SELECT
		'SEMANA 1' AS semana,
		'TC CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TC_CHEK_tnda
	WHERE
		date_part(DAY, fecha) BETWEEN 1 AND 7
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL
	SELECT
		'SEMANA 1' AS semana,
		'TD CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TD_CHEK_tnda
	WHERE
		date_part(DAY, fecha) BETWEEN 1 AND 7
	GROUP BY
		rut
	HAVING
		sum(monto)>0
		--semana 2
	UNION ALL 
	SELECT
		'SEMANA 2' AS semana,
		'TC' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_tnda
	WHERE
		date_part(DAY, fecha) BETWEEN 8 AND 14
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL
	SELECT
		DISTINCT 
	'SEMANA 2' AS semana,
		'CTACTE' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTACTE_tnda
	WHERE
		date_part(DAY, fecha) BETWEEN 8 AND 14
	UNION ALL
	SELECT
		DISTINCT
	'SEMANA 2' AS semana,
		'CTAVTA' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTAVTA_tnda
	WHERE
		date_part(DAY, fecha) BETWEEN 8 AND 14
	UNION ALL
	SELECT
		'SEMANA 2' AS semana,
		'TC CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TC_CHEK_tnda
	WHERE
		date_part(DAY, fecha) BETWEEN 8 AND 14
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL
	SELECT
		'SEMANA 2' AS semana,
		'TD CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TD_CHEK_tnda
	WHERE
		date_part(DAY, fecha) BETWEEN 8 AND 14
	GROUP BY
		rut
	HAVING
		sum(monto)>0
		--semana 3
	UNION ALL 
	SELECT
		'SEMANA 3' AS semana,
		'TC' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_tnda
	WHERE
		date_part(DAY, fecha) BETWEEN 15 AND 21
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL
	SELECT
		DISTINCT 
	'SEMANA 3' AS semana,
		'CTACTE' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTACTE_tnda
	WHERE
		date_part(DAY, fecha) BETWEEN 15 AND 21
	UNION ALL

	SELECT
		DISTINCT
	'SEMANA 3' AS semana,
		'CTAVTA' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTAVTA_tnda
	WHERE
		date_part(DAY, fecha) BETWEEN 15 AND 21
	UNION ALL
	SELECT
		'SEMANA 3' AS semana,
		'TC CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TC_CHEK_tnda
	WHERE
		date_part(DAY, fecha) BETWEEN 15 AND 21
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL
	SELECT
		'SEMANA 3' AS semana,
		'TD CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TD_CHEK_tnda
	WHERE
		date_part(DAY, fecha) BETWEEN 15 AND 21
	GROUP BY
		rut
	HAVING
		sum(monto)>0
		--semana 4
	UNION ALL 
	SELECT
		'SEMANA 4' AS semana,
		'TC' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_tnda
	WHERE
		date_part(DAY, fecha)>21
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL

	SELECT
		DISTINCT 
	'SEMANA 4' AS semana,
		'CTACTE' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTACTE_tnda
	WHERE
		date_part(DAY, fecha) >21
	UNION ALL

	SELECT
		DISTINCT
	'SEMANA 4' AS semana,
		'CTAVTA' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTAVTA_tnda
	WHERE
		date_part(DAY, fecha)>21
	UNION ALL
	SELECT
		'SEMANA 4' AS semana,
		'TC CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TC_CHEK_tnda
	WHERE
		date_part(DAY, fecha)>21
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL

	SELECT
		'SEMANA 4' AS semana,
		'TD CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TD_CHEK_tnda
	WHERE
		date_part(DAY, fecha) >21
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	;

	CREATE TABLE schm_workspace.DMW_BASE_PASO_semana_tnda2 AS 
	SELECT
		semana,
		count(DISTINCT rut) AS GLOBAL,
		count(DISTINCT CASE WHEN tipo IN ('TC', 'SEG', 'CTAVTA', 'CTACTE') THEN rut END ) AS BANCO,
		count(DISTINCT CASE WHEN tipo IN ('TC', 'SEG') THEN rut END ) AS TC,
		count(DISTINCT CASE WHEN tipo IN ('CTAVTA', 'CTACTE') THEN rut END ) AS TD,
		count(DISTINCT CASE WHEN tipo IN ('CTAVTA') THEN rut END ) AS CTAVTA,
		count(DISTINCT CASE WHEN tipo IN ('CTACTE') THEN rut END ) AS CTACTE,
		count(DISTINCT CASE WHEN tipo IN ('TC CHEK', 'TD CHEK') THEN rut END ) AS CHEK,
		count(DISTINCT CASE WHEN tipo IN ('TC CHEK') THEN rut END ) AS TC_CHEK,
		count(DISTINCT CASE WHEN tipo IN ('TD CHEK') THEN rut END ) AS TD_CHEK
	FROM
		schm_workspace.DMW_BASE_PASO_semana_tnda
	GROUP BY
		semana
	;
	--vista por dia


	CREATE TABLE schm_workspace.DMW_BASE_dia_tnda AS 
	SELECT
		'TC' AS tipo,
		fecha,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_tnda
	GROUP BY
		rut,
		fecha
	HAVING
		sum(monto)>0
	UNION ALL

	SELECT
		DISTINCT
	'CTACTE' AS tipo,
		fecha,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTACTE_tnda
	UNION ALL

	SELECT
		DISTINCT
	'CTAVTA' AS tipo,
		fecha,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTAVTA_tnda
	UNION ALL


	SELECT
		'TC CHEK' AS tipo,
		fecha,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TC_CHEK_tnda
	GROUP BY
		rut,
		fecha
	HAVING
		sum(monto)>0
	UNION ALL

	SELECT
		'TD CHEK' AS tipo,
		fecha,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TD_CHEK_tnda
	GROUP BY
		rut,
		fecha
	HAVING
		sum(monto)>0
	;

	CREATE TABLE schm_workspace.DMW_BASE_dia_tnda2 AS 
	SELECT
		fecha,
		count(DISTINCT rut) AS GLOBAL,
		count(DISTINCT CASE WHEN tipo IN ('TC', 'SEG', 'CTAVTA', 'CTACTE') THEN rut END ) AS BANCO,
		count(DISTINCT CASE WHEN tipo IN ('TC', 'SEG') THEN rut END ) AS TC,
		count(DISTINCT CASE WHEN tipo IN ('CTAVTA', 'CTACTE') THEN rut END ) AS TD,
		count(DISTINCT CASE WHEN tipo IN ('CTAVTA') THEN rut END ) AS CTAVTA,
		count(DISTINCT CASE WHEN tipo IN ('CTACTE') THEN rut END ) AS CTACTE,
		count(DISTINCT CASE WHEN tipo IN ('TC CHEK', 'TD CHEK') THEN rut END ) AS CHEK,
		count(DISTINCT CASE WHEN tipo IN ('TC CHEK') THEN rut END ) AS TC_CHEK,
		count(DISTINCT CASE WHEN tipo IN ('TD CHEK') THEN rut END ) AS TD_CHEK
	FROM
		schm_workspace.DMW_BASE_dia_tnda
	GROUP BY
		fecha
	;

	CREATE TABLE IF NOT EXISTS schm_workspace.DMW_colapso_tnda
	(
	parametro varchar(99),
	dia int,
	 GLOBAL bigint,
	 BANCO bigint,
	 TC bigint,
	 TD bigint,
	CTAVTA bigint,
	 CTACTE bigint,
	 CHEK bigint,
	 TC_CHEK bigint,
	 TD_CHEK bigint
	);

	INSERT
		INTO
		schm_workspace.DMW_colapso_tnda 
	SELECT
		'VISTA DIA' AS parametro,
		dia ,
		GLOBAL ,
		BANCO ,
		TC ,
		TD ,
		CTAVTA ,
		CTACTE ,
		CHEK ,
		TC_CHEK ,
		TD_CHEK
	FROM
		schm_workspace.DMW_BASE_PASO_tnda2
	;

	INSERT
		INTO
		schm_workspace.DMW_colapso_tnda
	SELECT
		'DAU' AS parametro,
		0 AS dia ,
		round(avg(GLOBAL)) AS GLOBAL,
		round(avg(BANCO)) AS BANCO,
		round(avg(TC)) AS TC,
		round(avg(TD)) AS TD,
		round(avg(CTAVTA)) AS CTAVTA,
		round(avg(CTACTE) ) AS CTACTE ,
		round(avg(CHEK) ) AS CHEK,
		round(avg(TC_CHEK)) AS TC_CHEK,
		round(avg(TD_CHEK)) AS TD_CHEK
	FROM
		schm_workspace.DMW_BASE_dia_tnda2
	;

	INSERT
		INTO
		schm_workspace.DMW_colapso_tnda 
	SELECT
		'MAU' AS parametro,
		0 AS dia ,
		GLOBAL ,
		BANCO ,
		TC ,
		TD ,
		CTAVTA ,
		CTACTE ,
		CHEK ,
		TC_CHEK ,
		TD_CHEK
	FROM
		schm_workspace.DMW_BASE_PASO_cierre_tnda2
	;

	INSERT
		INTO
		schm_workspace.DMW_colapso_tnda 
	SELECT
		'WAU' AS parametro,
		0 AS dia ,
		round(avg(GLOBAL)) AS GLOBAL,
		round(avg(BANCO)) AS BANCO,
		round(avg(TC)) AS TC,
		round(avg(TD)) AS TD,
		round(avg(CTAVTA)) AS CTAVTA,
		round(avg(CTACTE) ) AS CTACTE ,
		round(avg(CHEK) ) AS CHEK,
		round(avg(TC_CHEK)) AS TC_CHEK,
		round(avg(TD_CHEK)) AS TD_CHEK
	FROM
		schm_workspace.DMW_BASE_PASO_semana_tnda2
	;
	--llenado final 



	CREATE TABLE IF NOT EXISTS schm_data_analytics.spos_dau_mau_wau
	(
	periodo int,
	tipo_uso varchar(99),
	parametro varchar(99),
	dia int,
	 GLOBAL bigint,
	 BANCO bigint,
	 TC bigint,
	 TD bigint,
	CTAVTA bigint,
	 CTACTE bigint,
	 CHEK bigint,
	 TC_CHEK bigint,
	 TD_CHEK bigint
	);

	DELETE
	FROM
		schm_data_analytics.spos_dau_mau_wau
	WHERE
		periodo = periodo_paso;

	INSERT
		INTO
		schm_data_analytics.spos_dau_mau_wau
	SELECT
		periodo_paso AS periodo,
		'SPOS',
		*
	FROM
		schm_workspace.DMW_colapso_SPOS
	;

	INSERT
		INTO
		schm_data_analytics.spos_dau_mau_wau
	SELECT
		periodo_paso AS periodo,
		'TNDA',
		*
	FROM
		schm_workspace.DMW_colapso_tnda
	;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-10-31 -- v01 -- Pedro Muñoz		-- Versión original.

	=== Información adicional:
	Proceso que genera clientes únicos por día, por mes, por semana, de TC, TD y MC Chek.
	===========================================================================================================
*/

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_spos_dmw_ciclo(stop int4)
	LANGUAGE plpgsql
AS $$
	

DECLARE
contador INTEGER := 1;

BEGIN
	WHILE contador <= stop
	LOOP
		
	DROP TABLE IF EXISTS schm_workspace.DMW_BASE_PASO;

	CREATE TABLE schm_workspace.DMW_BASE_PASO AS 
	SELECT
		'TC' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_spos
	WHERE
		date_part(DAY, fecha)<= contador
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL

	SELECT
		DISTINCT
	'CTACTE' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTACTE
	WHERE
		date_part(DAY, fecha)<= contador
	UNION ALL

	SELECT
		DISTINCT
	'CTAVTA' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTAVTA
	WHERE
		date_part(DAY, fecha)<= contador
	UNION ALL

	SELECT
		DISTINCT
	'SEG' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_seg
	WHERE
		date_part(DAY, fecha)<= contador
	UNION ALL

	SELECT
		'TC CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TC_CHEK
	WHERE
		date_part(DAY, fecha)<= contador
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL

	SELECT
		'TD CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TD_CHEK
	WHERE
		date_part(DAY, fecha)<= contador
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	;

	INSERT
		INTO
		schm_workspace.DMW_BASE_PASO2 
	SELECT
		contador AS dia,
		count(DISTINCT rut) AS GLOBAL,
		count(DISTINCT CASE WHEN tipo IN ('TC', 'SEG', 'CTAVTA', 'CTACTE') THEN rut END ) AS BANCO,
		count(DISTINCT CASE WHEN tipo IN ('TC', 'SEG') THEN rut END ) AS TC,
		count(DISTINCT CASE WHEN tipo IN ('CTAVTA', 'CTACTE') THEN rut END ) AS TD,
		count(DISTINCT CASE WHEN tipo IN ('CTAVTA') THEN rut END ) AS CTAVTA,
		count(DISTINCT CASE WHEN tipo IN ('CTACTE') THEN rut END ) AS CTACTE,
		count(DISTINCT CASE WHEN tipo IN ('TC CHEK', 'TD CHEK') THEN rut END ) AS CHEK,
		count(DISTINCT CASE WHEN tipo IN ('TC CHEK') THEN rut END ) AS TC_CHEK,
		count(DISTINCT CASE WHEN tipo IN ('TD CHEK') THEN rut END ) AS TD_CHEK
	FROM
		schm_workspace.DMW_BASE_PASO
	;

	contador = contador + 1;
	END LOOP;
		END;
	
$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_spos_foto_rubro(periodo_paso int4, stop int4)
	LANGUAGE plpgsql
AS $$
	

DECLARE 
	contador INTEGER;

BEGIN
	DROP TABLE IF EXISTS schm_workspace.venta_spos;
	DROP TABLE IF EXISTS schm_workspace.venta_spos_llenado;
	DROP TABLE IF EXISTS schm_workspace.paso_Iteracion_rubro_1;
	DROP TABLE IF EXISTS schm_workspace.credito_rubros ;
	DROP TABLE IF EXISTS schm_workspace.foto_iteracion_variables_rubro_1;


	CREATE TABLE schm_workspace.venta_spos AS 
	SELECT 
	a.rut,
	a.periodo,
	a.fecha,
	a.venta_tarjeta,
	a.totcuotas,
	a.codact,
	a.porint,
	a.mg_fin,
	coalesce(b.rubro_gestion_spos,'OTROS RUBROS SPOS') AS rubro_spos,
	coalesce(b.familia_gestion,'OTROS') AS familia_gestion
	FROM schm_data_analytics.spos_aut  AS a 
	LEFT JOIN (SELECT 
	DISTINCT 
	cod_act,
	rubro_gestion_spos,
	familia_gestion
	FROM schm_data_analytics.spos_tabla_arbol ) AS b
	on(a.codact=b.cod_act)
	WHERE a.periodo=periodo_paso
	;	



	CREATE TABLE schm_workspace.venta_spos_llenado
	(
	dia int,
	rut bigint,
	venta_tarjeta NUMERIC(34,8),
	totcuotas  NUMERIC(34,8),
	porint NUMERIC(34,8),
	mg_fin NUMERIC(34,8),
	rubro_spos varchar,
	familia_gestion varchar
	);

	BEGIN 
		contador=1;
	WHILE contador<=stop
	LOOP 
		INSERT INTO schm_workspace.venta_spos_llenado
		SELECT 
		contador ,
	    rut ,
	    venta_tarjeta ,
	    totcuotas  ,
	    porint ,
	    mg_fin ,
	    rubro_spos,
	    familia_gestion
	    FROM schm_workspace.venta_spos
	    WHERE date_part(DAY,fecha)<=contador
	    ;
	contador=contador+1;
	END LOOP;
	END;

	CREATE TABLE schm_workspace.paso_Iteracion_rubro_1 AS
	SELECT
	rut,
	dia,
	rubro_spos,
	familia_gestion,
	count(case when venta_tarjeta>0 then rut end)-count(case when venta_tarjeta<0 then rut end) as trx,
	sum(venta_tarjeta) as monto
	from schm_workspace.venta_spos_llenado
	group by rut ,dia,rubro_spos,familia_gestion
	;	

	CREATE TABLE schm_workspace.foto_iteracion_variables_rubro_1 AS 
	SELECT
	dia,
	rubro_spos,
	familia_gestion
	,count(case when trx>=5 and monto>0 then rut end) as clientes_unico_5_trx
	,count(distinct rut ) as clientes_unicos
	from schm_workspace.paso_Iteracion_rubro_1
	GROUP BY rubro_spos,dia,familia_gestion
	;



	CREATE TABLE schm_workspace.credito_rubros  AS 
	SELECT
	a.dia,
	periodo_paso as periodo,
	a.rubro_spos AS rubro,
	a.familia_gestion,
	sum(venta_tarjeta)::numeric(34,8) as monto_total,
	(count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) ) as Trx,
	CASE WHEN count(distinct rut)<>0 THEN 
	(count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) )/count(distinct rut)::numeric(34,8)
	ELSE 0 END as trx_prom_por_cliente,
	CASE WHEN (count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) )<>0 THEN 
	sum(venta_tarjeta)::numeric(34,8) /(count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) ) 
	ELSE 0 END as ticket_prom,
	b.clientes_unicos::numeric(34,8) ,
	b.clientes_unico_5_trx::numeric(34,8) ,
	CASE WHEN count(distinct rut)<>0 
	THEN sum(venta_tarjeta)::numeric(34,8) /count(distinct rut)::numeric(34,8) 
	ELSE 0 END as gasto_prom,
	sum(case when TOTCUOTAS>=2  then venta_tarjeta else 0 end)::numeric(34,8)  as vta_coutas,
	CASE WHEN sum(venta_tarjeta  )<>0 
	THEN sum(case when TOTCUOTAS>=2  then venta_tarjeta else 0 end)::numeric(34,8) /sum(venta_tarjeta  )::numeric(34,8)
	ELSE 0 END as  porcentaje_vta_coutas,
	CASE WHEN sum(case when  TOTCUOTAS>=2  then venta_tarjeta else 0 end)<>0 then
	sum(case when TOTCUOTAS>=2  then venta_tarjeta*PORINT else 0 end )::numeric(34,8) /sum(case when  TOTCUOTAS>=2  then venta_tarjeta else 0 end)::numeric(34,8)
	ELSE 0 END as tasa_vta_coutas,
	CASE WHEN sum(case when  TOTCUOTAS>=2  then venta_tarjeta else 0 end )<>0 THEN 
	sum(case when TOTCUOTAS>=2  then venta_tarjeta*TOTCUOTAS else 0 end  )::numeric(34,8) /sum(case when  TOTCUOTAS>=2  then venta_tarjeta else 0 end )::numeric(34,8)
	ELSE 0 END as plazo_vta_coutas,

	sum(case when TOTCUOTAS>=2 and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8)  as vta_fin,
	CASE WHEN sum(venta_tarjeta)<>0 THEN 
	sum(case when TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8) /sum(venta_tarjeta)::numeric(34,8)
	ELSE 0 END as porcentaje_vta_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta*PORINT else 0 end )::numeric(34,8) /sum(case when  TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8) 
	ELSE 0 END as tasa_vta_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta*TOTCUOTAS else 0 end  )::numeric(34,8) /sum(case when  TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8)
	ELSE 0 END as plazo_vta_fin,
	sum(case when TOTCUOTAS>=2  and PORINT>0 THEN mg_fin ELSE 0 END )::numeric(34,8) AS mg_fin, 

	sum(case when TOTCUOTAS>=2 and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8)  as vta_SIN_INTERES,
	CASE WHEN sum(venta_tarjeta)<>0 THEN 
	sum(case when TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8) /sum(venta_tarjeta)::numeric(34,8) 
	ELSE 0 END as porcentaje_vta_SIN_INTERES,
	CASE WHEN sum(case when  TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta*PORINT else 0 end )::numeric(34,8) /sum(case when  TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8) 
	ELSE 0 END as tasa_vta_SIN_INTERES,
	CASE WHEN sum(case when  TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta*TOTCUOTAS else 0 end  )::numeric(34,8) /sum(case when  TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8)
	ELSE 0 END as plazo_vta_SIN_INTERES,
	sum(case when TOTCUOTAS>=2  and PORINT=0 THEN mg_fin ELSE 0 END )::numeric(34,8) AS mg_SIN_INTERES 

	from schm_workspace.venta_spos_llenado AS a 
	LEFT JOIN schm_workspace.foto_iteracion_variables_rubro_1  AS b 
		ON a.dia=b.dia		 AND a.rubro_spos=b.rubro_spos	AND a.familia_gestion=b.familia_gestion
	GROUP BY b.clientes_unicos,
		     b.clientes_unico_5_trx,
		     a.dia,
		     a.rubro_spos,
		     a.familia_gestion
	;

	CREATE TABLE IF NOT EXISTS schm_data_analytics.SPOS_FOTOS_RUBRO_DIARIO 
	(
	tipo varchar,
	dia int,
	periodo int,
	rubro varchar,
	familia_gestion varchar,
	monto_total NUMERIC(34,8),
	 Trx NUMERIC(34,8),
	trx_prom_por_cliente NUMERIC(34,8),
	 ticket_prom NUMERIC(34,8),
	clientes_unicos NUMERIC(34,8),
	clientes_unico_5_trx NUMERIC(34,8),
	gasto_prom NUMERIC(34,8),
	vta_coutas NUMERIC(34,8),
	porcentaje_vta_coutas NUMERIC(34,8),
	tasa_vta_coutas NUMERIC(34,8),
	plazo_vta_coutas NUMERIC(34,8),

	vta_fin NUMERIC(34,8),
	porcentaje_vta_fin NUMERIC(34,8),
	tasa_vta_fin NUMERIC(34,8),
	 plazo_vta_fin NUMERIC(34,8),
	 mg_fin NUMERIC(34,8), 
	 
	 vta_SIN_INTERES NUMERIC(34,8),
	 porcentaje_vta_SIN_INTERES NUMERIC(34,8),
	 tasa_vta_SIN_INTERES NUMERIC(34,8),
	 plazo_vta_SIN_INTERES NUMERIC(34,8),
	 mg_SIN_INTERES  NUMERIC(34,8)
	)
	;

	DELETE FROM schm_data_analytics.SPOS_FOTOS_RUBRO_DIARIO 
	WHERE periodo=periodo_paso;

	INSERT INTO schm_data_analytics.SPOS_FOTOS_RUBRO_DIARIO 
	SELECT 
	'Daily' AS tipo,
	*
	FROM schm_workspace.credito_rubros
	UNION 
	SELECT 
	'Cierre' AS tipo,
	*
	FROM schm_workspace.credito_rubros
	WHERE dia=stop
	;

	DROP TABLE IF EXISTS schm_workspace.venta_spos;
	DROP TABLE IF EXISTS schm_workspace.venta_spos_llenado;
	DROP TABLE IF EXISTS schm_workspace.paso_Iteracion_rubro_1;
	DROP TABLE IF EXISTS schm_workspace.credito_rubros ;
	DROP TABLE IF EXISTS schm_workspace.foto_iteracion_variables_rubro_1;

	/*  ===========================================================================================================
	    === Control de versiones visual ===
	    2024-01-19 -- v01 -- Pedro Muñoz      	-- Se agrega campo vta_SIN_INTERES
	    2024-01-18 -- v00 -- Pedro Muñoz      	-- Versión original refactorizada.

	    === Información adicional:
	    Proceso que..
	    ===========================================================================================================
	*/

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_spos_nacional_internacional(periodo_paso int4)
	LANGUAGE plpgsql
AS $$
	

BEGIN 

	DROP TABLE IF EXISTS schm_workspace.spos_nacional_internacional;
	DROP TABLE IF EXISTS schm_workspace.seg_nacional_internacional;
	DROP TABLE IF EXISTS schm_workspace.td_nacional_internacional;
	DROP TABLE IF EXISTS schm_workspace.nacional_internacional_kpis;
	DROP TABLE IF EXISTS schm_workspace.plasticos_black_ni;

	CREATE TABLE schm_workspace.plasticos_black_ni AS  
	SELECT DISTINCT 
	pan,
	codent,
	centalta,
	cuenta
	FROM schm_data_analytics.clts_universo_panes
	WHERE tipo_tarjeta_rsat='MASTERCARD BLACK'
	 AND fecalta_tr<=last_day(to_date(periodo_paso,'YYYYMM'))
	  AND fecalta_ctto<=last_day(to_date(periodo_paso,'YYYYMM'))
	;
	 
	CREATE TABLE schm_workspace.spos_nacional_internacional AS 
	SELECT 
	a.*,
	CASE WHEN b.pan IS NOT NULL THEN 1 ELSE 0 END AS pan_black
	 FROM schm_data_analytics.spos_aut AS a 
	 LEFT JOIN schm_workspace.plasticos_black_NI AS b
	 on(a.pan=b.pan)
	 WHERE a.periodo=periodo_paso AND a.centalta<>'0105'
	;

	CREATE TABLE schm_workspace.seg_nacional_internacional  AS 
	SELECT a.*,
	CASE WHEN b.cuenta IS NOT NULL THEN 1 ELSE 0 END AS pan_black
	FROM schm_data_analytics.spos_trx_seguros AS a 
	LEFT JOIN (SELECT DISTINCT codent,
	centalta,
	cuenta FROM schm_workspace.plasticos_black_ni) AS b
	on(a.centalta=b.centalta) AND a.cuenta=b.cuenta
	WHERE a.periodo=periodo_paso AND
	a.CODCONREC not in ('S201','S083','S170')
	and a.TIPO_SEGURO<>'SEGUROS TARJETA'
	;

	 
	CREATE TABLE schm_workspace.td_NACIONAL_INTERNACIONAL AS 
	SELECT 
	*
	FROM schm_data_analytics.mpdg_movimientos_debito
	WHERE periodo=periodo_paso AND tipo_compra='SPOS'
	;


	---------------------------------------------------------------
	-- desde aqui se iran llenando los kpis 
	---------------------------------------------------------------

	CREATE TABLE schm_workspace.nacional_internacional_kpis 
	(
	grupo varchar,
	subgrupo varchar,
	KPI varchar,
	monto numeric(34,8)
	)
	;

	------------- venta tc 
	INSERT INTO schm_workspace.nacional_internacional_kpis 
	SELECT 
	'01.TC' AS grupo,
	'01.Venta' AS subgrupo,
	'01.TAM Nacional Presencial' AS KPI,
	sum(CASE WHEN tipo_tarjeta='TAM' 
	AND codpais=152 
	AND si_digital=0 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'01.Venta' AS subgrupo,
	'02.TAM Nacional Online' AS KPI,
	sum(CASE WHEN tipo_tarjeta='TAM' 
	AND codpais=152 
	AND si_digital=1 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'01.Venta' AS subgrupo,
	'03.TAM Internacional Presencial' AS KPI,
	sum(CASE WHEN tipo_tarjeta='TAM' 
	AND codpais<>152 
	AND si_digital=0 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'01.Venta' AS subgrupo,
	'04.TAM Internacional Online' AS KPI,
	sum(CASE WHEN tipo_tarjeta='TAM' 
	AND codpais<>152 
	AND si_digital=1 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'01.Venta' AS subgrupo,
	'05.TAM Seguros OM' AS KPI,
	sum(COALESCE(monto_recaudado,0)) AS monto
	FROM schm_workspace.seg_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'01.Venta' AS subgrupo,
	'06.TR' AS KPI,
	sum(CASE WHEN tipo_tarjeta<>'TAM' 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'01.Venta' AS subgrupo,
	'07.Total TC' AS KPI,
	sum(venta_tarjeta)+(SELECT sum(monto_recaudado) 
	FROM schm_workspace.seg_NACIONAL_INTERNACIONAL) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'01.Venta' AS subgrupo,
	'08.Total TAM Nacional' AS KPI,
	sum(CASE WHEN tipo_tarjeta='TAM' 
	AND codpais=152  
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'01.Venta' AS subgrupo,
	'09.% TAM Nacional' AS KPI,
	sum(CASE WHEN tipo_tarjeta='TAM' 
	AND codpais=152  
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'01.Venta' AS subgrupo,
	'10.Total TAM Internacional' AS KPI,
	sum(CASE WHEN tipo_tarjeta='TAM' 
	AND codpais<>152  
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'01.Venta' AS subgrupo,
	'11.% TAM Internacional' AS KPI,
	sum(CASE WHEN tipo_tarjeta='TAM' 
	AND codpais<>152  
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'01.TC' AS grupo,
	'01.Venta' AS subgrupo,
	'12.Total TAM Presencial' AS KPI,
	sum(CASE WHEN tipo_tarjeta='TAM'  
	AND si_digital=0 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'01.TC' AS grupo,
	'01.Venta' AS subgrupo,
	'13.% TAM Presencial' AS KPI,
	sum(CASE WHEN tipo_tarjeta='TAM'  
	AND si_digital=0 
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'01.TC' AS grupo,
	'01.Venta' AS subgrupo,
	'14.Total TAM Online' AS KPI,
	sum(CASE WHEN tipo_tarjeta='TAM'  
	AND si_digital=1 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'01.TC' AS grupo,
	'01.Venta' AS subgrupo,
	'15.% TAM Online' AS KPI,
	sum(CASE WHEN tipo_tarjeta='TAM'  
	AND si_digital=1 
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	;

	----------- transacciones tc

	INSERT INTO schm_workspace.nacional_internacional_kpis 
	SELECT 
	'01.TC' AS grupo,
	'02.Trx' AS subgrupo,
	'01.TAM Nacional Presencial' AS KPI,
	count(CASE WHEN tipo_tarjeta='TAM' 
	AND codpais=152 AND si_digital=0 AND venta_tarjeta>0
	THEN rut END )
	-count(CASE WHEN tipo_tarjeta='TAM' 
	AND codpais=152 AND si_digital=0 AND venta_tarjeta<0
	THEN rut END )
	AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'02.Trx' AS subgrupo,
	'02.TAM Nacional Online' AS KPI,
	count(CASE WHEN tipo_tarjeta='TAM' 
	AND codpais=152 AND si_digital=1  AND venta_tarjeta>0
	THEN rut END )- 
	count(CASE WHEN tipo_tarjeta='TAM' 
	AND codpais=152 AND si_digital=1  AND venta_tarjeta<0
	THEN rut END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'02.Trx' AS subgrupo,
	'03.TAM Internacional Presencial' AS KPI,
	count(CASE WHEN tipo_tarjeta='TAM' 
	AND codpais<>152 AND si_digital=0 AND venta_tarjeta>0
	THEN rut END )-count(CASE WHEN tipo_tarjeta='TAM' 
	AND codpais<>152 AND si_digital=0 AND venta_tarjeta<0
	THEN rut END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'02.Trx' AS subgrupo,
	'04.TAM Internacional Online' AS KPI,
	count(CASE WHEN tipo_tarjeta='TAM' 
	AND codpais<>152 AND si_digital=1 AND venta_tarjeta>0 THEN rut  END ) 
	- 
	count(CASE WHEN tipo_tarjeta='TAM' 
	AND codpais<>152 AND si_digital=1 AND venta_tarjeta<0 THEN rut  END ) 
	AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'02.Trx' AS subgrupo,
	'05.TAM Seguros OM' AS KPI,
	count(rut) AS monto
	FROM schm_workspace.seg_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'02.Trx' AS subgrupo,
	'06.TR' AS KPI,
	count(CASE WHEN tipo_tarjeta<>'TAM' AND venta_tarjeta>0 THEN rut END )
	-
	count(CASE WHEN tipo_tarjeta<>'TAM' AND venta_tarjeta<0 THEN rut END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'02.Trx' AS subgrupo,
	'07.Total TC' AS KPI,
	count(CASE WHEN venta_tarjeta>0 THEN rut END )
	-
	count(CASE WHEN venta_tarjeta<0 THEN rut END )
	+(SELECT count(rut) 
	FROM schm_workspace.seg_NACIONAL_INTERNACIONAL) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'02.Trx' AS subgrupo,
	'08.Total TAM Nacional' AS KPI,
	count(CASE WHEN tipo_tarjeta='TAM' AND codpais=152 AND venta_tarjeta>0 THEN rut END ) 
	-
	count(CASE WHEN tipo_tarjeta='TAM' AND codpais=152 AND venta_tarjeta<0 THEN rut END )
	AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'02.Trx' AS subgrupo,
	'09.% TAM Nacional' AS KPI,
	(count(CASE WHEN tipo_tarjeta='TAM' AND codpais=152 AND venta_tarjeta>0 THEN rut END ) 
	-
	count(CASE WHEN tipo_tarjeta='TAM' AND codpais=152 AND venta_tarjeta<0 THEN rut END ))*1.0
	/(count(CASE WHEN venta_tarjeta>0 THEN rut end)
	-
	count(CASE WHEN venta_tarjeta<0 THEN rut end))
	AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'02.Trx' AS subgrupo,
	'10.Total TAM Internacional' AS KPI,
	(count(CASE WHEN tipo_tarjeta='TAM' AND codpais<>152 AND venta_tarjeta>0 THEN rut END ) 
	-
	count(CASE WHEN tipo_tarjeta='TAM' AND codpais<>152 AND venta_tarjeta<0 THEN rut END )) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'01.TC' AS grupo,
	'02.Trx' AS subgrupo,
	'11.% TAM Internacional' AS KPI,
	(count(CASE WHEN tipo_tarjeta='TAM' AND codpais<>152 AND venta_tarjeta>0 THEN rut END ) 
	-
	count(CASE WHEN tipo_tarjeta='TAM' AND codpais<>152 AND venta_tarjeta<0 THEN rut END ))*1.0
	/ (count(CASE WHEN venta_tarjeta>0 THEN rut end)
	-
	count(CASE WHEN venta_tarjeta<0 THEN rut end))
	AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'01.TC' AS grupo,
	'02.Trx' AS subgrupo,
	'12.Total TAM Presencial' AS KPI,
	(count(CASE WHEN tipo_tarjeta='TAM' AND si_digital=0 AND venta_tarjeta>0 THEN rut END ) 
	-
	count(CASE WHEN tipo_tarjeta='TAM' AND si_digital=0 AND venta_tarjeta<0 THEN rut END )) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'01.TC' AS grupo,
	'02.Trx' AS subgrupo,
	'13.% TAM Presencial' AS KPI,
	(count(CASE WHEN tipo_tarjeta='TAM' AND si_digital=0 AND venta_tarjeta>0 THEN rut END ) 
	-
	count(CASE WHEN tipo_tarjeta='TAM' AND si_digital=0 AND venta_tarjeta<0 THEN rut END ))*1.0
	/ (count(CASE WHEN venta_tarjeta>0 THEN rut end)
	-
	count(CASE WHEN venta_tarjeta<0 THEN rut end))
	AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'01.TC' AS grupo,
	'02.Trx' AS subgrupo,
	'14.Total TAM Online' AS KPI,
	(count(CASE WHEN tipo_tarjeta='TAM' AND si_digital=1 AND venta_tarjeta>0 THEN rut END ) 
	-
	count(CASE WHEN tipo_tarjeta='TAM' AND si_digital=1 AND venta_tarjeta<0 THEN rut END )) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'01.TC' AS grupo,
	'02.Trx' AS subgrupo,
	'15.% TAM Online' AS KPI,
	(count(CASE WHEN tipo_tarjeta='TAM' AND si_digital=1 AND venta_tarjeta>0 THEN rut END ) 
	-
	count(CASE WHEN tipo_tarjeta='TAM' AND si_digital=1 AND venta_tarjeta<0 THEN rut END ))*1.0
	/ (count(CASE WHEN venta_tarjeta>0 THEN rut end)
	-
	count(CASE WHEN venta_tarjeta<0 THEN rut end)) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	;

	-------------------- ticket promedio t
	---------------------




	INSERT INTO schm_workspace.nacional_internacional_kpis
	SELECT 
	a.grupo,
	'03.Ticket Promedio' AS subgrupo,
	a.KPI,
	CASE WHEN COALESCE(c.monto)<>0 
	THEN b.monto/c.monto ELSE 0 END AS monto

	FROM (SELECT DISTINCT grupo, kpi FROM 
	schm_workspace.nacional_internacional_kpis ) AS a 
	LEFT JOIN schm_workspace.nacional_internacional_kpis AS b
	on(a.grupo=b.grupo) AND a.kpi=b.kpi AND b.subgrupo='01.Venta'
	LEFT JOIN schm_workspace.nacional_internacional_kpis AS c
	on(a.grupo=c.grupo) AND a.kpi=c.kpi AND c.subgrupo='02.Trx'
	;




	------------- venta tc black
	INSERT INTO schm_workspace.nacional_internacional_kpis 
	SELECT 
	'02.MC BLACK' AS grupo,
	'01.Venta' AS subgrupo,
	'01.TAM Nacional Presencial' AS KPI,
	sum(CASE WHEN  codpais=152 
	AND si_digital=0 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'01.Venta' AS subgrupo,
	'02.TAM Nacional Online' AS KPI,
	sum(CASE WHEN  codpais=152 
	AND si_digital=1 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'01.Venta' AS subgrupo,
	'03.TAM Internacional Presencial' AS KPI,
	sum(CASE WHEN  codpais<>152 
	AND si_digital=0 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'01.Venta' AS subgrupo,
	'04.TAM Internacional Online' AS KPI,
	sum(CASE WHEN  codpais<>152 
	AND si_digital=1 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'01.Venta' AS subgrupo,
	'05.TAM Seguros OM' AS KPI,
	sum(COALESCE(monto_recaudado,0)) AS monto
	FROM schm_workspace.seg_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'01.Venta' AS subgrupo,
	'06.TR' AS KPI,
	0 AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'01.Venta' AS subgrupo,
	'07.Total TC' AS KPI,
	sum(venta_tarjeta)+(SELECT sum(monto_recaudado) 
	FROM schm_workspace.seg_NACIONAL_INTERNACIONAL WHERE pan_black=1) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'01.Venta' AS subgrupo,
	'08.Total TAM Nacional' AS KPI,
	sum(CASE WHEN  codpais=152  
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'01.Venta' AS subgrupo,
	'09.% TAM Nacional' AS KPI,
	sum(CASE WHEN  codpais=152  
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'01.Venta' AS subgrupo,
	'10.Total TAM Internacional' AS KPI,
	sum(CASE WHEN  codpais<>152  
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'01.Venta' AS subgrupo,
	'11.% TAM Internacional' AS KPI,
	CASE WHEN sum(venta_tarjeta)<>0 THEN sum(CASE WHEN  codpais<>152  
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) END AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	union
	SELECT 
	'02.MC BLACK' AS grupo,
	'01.Venta' AS subgrupo,
	'12.Total TAM Presencial' AS KPI,
	sum(CASE WHEN  si_digital=0 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	union
	SELECT 
	'02.MC BLACK' AS grupo,
	'01.Venta' AS subgrupo,
	'13.% TAM Presencial' AS KPI,
	CASE WHEN sum(venta_tarjeta)<>0 THEN  sum(CASE WHEN  si_digital=0 
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) END  AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	union
	SELECT 
	'02.MC BLACK' AS grupo,
	'01.Venta' AS subgrupo,
	'14.Total TAM Online' AS KPI,
	sum(CASE WHEN  si_digital=1 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	union
	SELECT 
	'02.MC BLACK' AS grupo,
	'01.Venta' AS subgrupo,
	'15.% TAM Online' AS KPI,
	CASE WHEN sum(venta_tarjeta)<>0 THEN  sum(CASE WHEN  si_digital=1 
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) END  AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	;

	----------- transacciones tc black

	INSERT INTO schm_workspace.nacional_internacional_kpis 
	SELECT 
	'02.MC BLACK' AS grupo,
	'02.Trx' AS subgrupo,
	'01.TAM Nacional Presencial' AS KPI,
	count(CASE WHEN  codpais=152 AND si_digital=0 AND venta_tarjeta>0
	THEN rut END )
	-count(CASE WHEN  codpais=152 AND si_digital=0 AND venta_tarjeta<0
	THEN rut END )
	AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'02.Trx' AS subgrupo,
	'02.TAM Nacional Online' AS KPI,
	count(CASE WHEN  codpais=152 AND si_digital=1  AND venta_tarjeta>0
	THEN rut END )- 
	count(CASE WHEN  codpais=152 AND si_digital=1  AND venta_tarjeta<0
	THEN rut END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'02.Trx' AS subgrupo,
	'03.TAM Internacional Presencial' AS KPI,
	count(CASE WHEN  codpais<>152 AND si_digital=0 AND venta_tarjeta>0
	THEN rut END )-count(CASE WHEN  codpais<>152 AND si_digital=0 AND venta_tarjeta<0
	THEN rut END ) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'02.Trx' AS subgrupo,
	'04.TAM Internacional Online' AS KPI,
	count(CASE WHEN  codpais<>152 AND si_digital=1 AND venta_tarjeta>0 THEN rut  END ) 
	- 
	count(CASE WHEN  codpais<>152 AND si_digital=1 AND venta_tarjeta<0 THEN rut  END ) 
	AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'02.Trx' AS subgrupo,
	'05.TAM Seguros OM' AS KPI,
	count(rut) AS monto
	FROM schm_workspace.seg_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'02.Trx' AS subgrupo,
	'06.TR' AS KPI,
	0 AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'02.Trx' AS subgrupo,
	'07.Total TC' AS KPI,
	count(CASE WHEN venta_tarjeta>0 THEN rut END )
	-
	count(CASE WHEN venta_tarjeta<0 THEN rut END )
	+(SELECT count(rut) 
	FROM schm_workspace.seg_NACIONAL_INTERNACIONAL
	WHERE pan_black=1) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'02.Trx' AS subgrupo,
	'08.Total TAM Nacional' AS KPI,
	count(CASE WHEN  codpais=152 AND venta_tarjeta>0 THEN rut END ) 
	-
	count(CASE WHEN  codpais=152 AND venta_tarjeta<0 THEN rut END )
	AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'02.Trx' AS subgrupo,
	'09.% TAM Nacional' AS KPI,
	CASE WHEN (count(CASE WHEN venta_tarjeta>0 THEN rut end)
	-
	count(CASE WHEN venta_tarjeta<0 THEN rut end)) <>0 THEN (count(CASE WHEN  codpais=152 AND venta_tarjeta>0 THEN rut END ) 
	-
	count(CASE WHEN  codpais=152 AND venta_tarjeta<0 THEN rut END ))*1.0
	/(count(CASE WHEN venta_tarjeta>0 THEN rut end)
	-
	count(CASE WHEN venta_tarjeta<0 THEN rut end)) END 
	AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'02.Trx' AS subgrupo,
	'10.Total TAM Internacional' AS KPI,
	(count(CASE WHEN  codpais<>152 AND venta_tarjeta>0 THEN rut END ) 
	-
	count(CASE WHEN  codpais<>152 AND venta_tarjeta<0 THEN rut END )) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	UNION 
	SELECT 
	'02.MC BLACK' AS grupo,
	'02.Trx' AS subgrupo,
	'11.% TAM Internacional' AS KPI,
	CASE WHEN (count(CASE WHEN venta_tarjeta>0 THEN rut end)
	-
	count(CASE WHEN venta_tarjeta<0 THEN rut end)) <>0 THEN (count(CASE WHEN  codpais<>152 AND venta_tarjeta>0 THEN rut END ) 
	-
	count(CASE WHEN  codpais<>152 AND venta_tarjeta<0 THEN rut END ))*1.0
	/ (count(CASE WHEN venta_tarjeta>0 THEN rut end)
	-
	count(CASE WHEN venta_tarjeta<0 THEN rut end)) END 
	AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	union
	SELECT 
	'02.MC BLACK' AS grupo,
	'02.Trx' AS subgrupo,
	'12.Total TAM Presencial' AS KPI,
	(count(CASE WHEN  si_digital=0 AND venta_tarjeta>0 THEN rut END ) 
	-
	count(CASE WHEN  si_digital=0 AND venta_tarjeta<0 THEN rut END )) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	union
	SELECT 
	'02.MC BLACK' AS grupo,
	'02.Trx' AS subgrupo,
	'13.% TAM Presencial' AS KPI,
	CASE WHEN (count(CASE WHEN venta_tarjeta>0 THEN rut end)
	-
	count(CASE WHEN venta_tarjeta<0 THEN rut end)) <>0 THEN (count(CASE WHEN  si_digital=0 AND venta_tarjeta>0 THEN rut END ) 
	-
	count(CASE WHEN  si_digital=0 AND venta_tarjeta<0 THEN rut END ))*1.0
	/ (count(CASE WHEN venta_tarjeta>0 THEN rut end)
	-
	count(CASE WHEN venta_tarjeta<0 THEN rut end)) END 
	AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	union
	SELECT 
	'02.MC BLACK' AS grupo,
	'02.Trx' AS subgrupo,
	'14.Total TAM Online' AS KPI,
	(count(CASE WHEN  si_digital=1 AND venta_tarjeta>0 THEN rut END ) 
	-
	count(CASE WHEN  si_digital=1 AND venta_tarjeta<0 THEN rut END )) AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	union
	SELECT 
	'02.MC BLACK' AS grupo,
	'02.Trx' AS subgrupo,
	'15.% TAM Online' AS KPI,
	CASE WHEN (count(CASE WHEN venta_tarjeta>0 THEN rut end)
	-
	count(CASE WHEN venta_tarjeta<0 THEN rut end)) <>0 THEN (count(CASE WHEN  si_digital=1 AND venta_tarjeta>0 THEN rut END ) 
	-
	count(CASE WHEN  si_digital=1 AND venta_tarjeta<0 THEN rut END ))*1.0
	/ (count(CASE WHEN venta_tarjeta>0 THEN rut end)
	-
	count(CASE WHEN venta_tarjeta<0 THEN rut end)) END AS monto
	FROM schm_workspace.spos_NACIONAL_INTERNACIONAL
	WHERE pan_black=1
	;

	-------------------- ticket promedio black
	---------------------




	INSERT INTO schm_workspace.nacional_internacional_kpis
	SELECT 
	a.grupo,
	'03.Ticket Promedio' AS subgrupo,
	a.KPI,
	CASE WHEN COALESCE(c.monto)<>0 
	THEN b.monto/c.monto ELSE 0 END AS monto

	FROM (SELECT DISTINCT grupo, kpi FROM 
	schm_workspace.nacional_internacional_kpis
	WHERE grupo='02.MC BLACK') AS a 
	LEFT JOIN schm_workspace.nacional_internacional_kpis AS b
	on(a.grupo=b.grupo) AND a.kpi=b.kpi AND b.subgrupo='01.Venta' AND b.grupo='02.MC BLACK'
	LEFT JOIN schm_workspace.nacional_internacional_kpis AS c
	on(a.grupo=c.grupo) AND a.kpi=c.kpi AND c.subgrupo='02.Trx' AND c.grupo='02.MC BLACK'
	;



	----- venta_td
	INSERT INTO schm_workspace.nacional_internacional_kpis 
	SELECT 
	'03.TD' AS grupo,
	'01.Venta' AS subgrupo,
	'01.Nacional Presencial' AS KPI,
	sum(CASE WHEN 
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')
	AND coalesce(si_digital,0)=0 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'03.TD' AS grupo,
	'01.Venta' AS subgrupo,
	'02.Nacional Online' AS KPI,
	sum(CASE WHEN  
	 descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	AND coalesce(si_digital,0)=1 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'03.TD' AS grupo,
	'01.Venta' AS subgrupo,
	'03.Internacional Presencial' AS KPI,
	sum(CASE WHEN  
	 descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	AND coalesce(si_digital,0)=0 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'03.TD' AS grupo,
	'01.Venta' AS subgrupo,
	'04.Internacional Online' AS KPI,
	sum(CASE WHEN  
	 descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')
	AND coalesce(si_digital,0)=1 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'03.TD' AS grupo,
	'01.Venta' AS subgrupo,
	'05.Total TD' AS KPI,
	sum(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'03.TD' AS grupo,
	'01.Venta' AS subgrupo,
	'06.Total Nacional' AS KPI,
	sum(CASE WHEN  
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'03.TD' AS grupo,
	'01.Venta' AS subgrupo,
	'07.%Nacional' AS KPI,
	sum(CASE WHEN  
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'03.TD' AS grupo,
	'01.Venta' AS subgrupo,
	'08.Total Internacional' AS KPI,
	sum(CASE WHEN  
	descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'03.TD' AS grupo,
	'01.Venta' AS subgrupo,
	'09.%Internacional' AS KPI,
	sum(CASE WHEN  
	descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'03.TD' AS grupo,
	'01.Venta' AS subgrupo,
	'10.Total Presencial' AS KPI,
	sum(CASE WHEN   
	 coalesce(si_digital,0)=0 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'03.TD' AS grupo,
	'01.Venta' AS subgrupo,
	'11.%Presencial' AS KPI,
	sum(CASE WHEN   
	 coalesce(si_digital,0)=0 
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'03.TD' AS grupo,
	'01.Venta' AS subgrupo,
	'12.Total Online' AS KPI,
	sum(CASE WHEN   
	 coalesce(si_digital,0)=1 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'03.TD' AS grupo,
	'01.Venta' AS subgrupo,
	'13.%Online' AS KPI,
	sum(CASE WHEN   
	 coalesce(si_digital,0)=1 
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	;


	--- trx td 


	INSERT INTO schm_workspace.nacional_internacional_kpis 
	SELECT 
	'03.TD' AS grupo,
	'02.Trx' AS subgrupo,
	'01.Nacional Presencial' AS KPI,
	count(CASE WHEN 
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')
	AND coalesce(si_digital,0)=0 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'03.TD' AS grupo,
	'02.Trx' AS subgrupo,
	'02.Nacional Online' AS KPI,
	count(CASE WHEN  
	 descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	AND coalesce(si_digital,0)=1 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'03.TD' AS grupo,
	'02.Trx' AS subgrupo,
	'03.Internacional Presencial' AS KPI,
	count(CASE WHEN  
	 descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	AND coalesce(si_digital,0)=0 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'03.TD' AS grupo,
	'02.Trx' AS subgrupo,
	'04.Internacional Online' AS KPI,
	count(CASE WHEN  
	 descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')
	AND coalesce(si_digital,0)=1 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'03.TD' AS grupo,
	'02.Trx' AS subgrupo,
	'05.Total TD' AS KPI,
	count(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'03.TD' AS grupo,
	'02.Trx' AS subgrupo,
	'06.Total Nacional' AS KPI,
	count(CASE WHEN  
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'03.TD' AS grupo,
	'02.Trx' AS subgrupo,
	'07.%Nacional' AS KPI,
	count(CASE WHEN  
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta  END )*1.0/count(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'03.TD' AS grupo,
	'02.Trx' AS subgrupo,
	'08.Total Internacional' AS KPI,
	count(CASE WHEN  
	descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	UNION 
	SELECT 
	'03.TD' AS grupo,
	'02.Trx' AS subgrupo,
	'09.%Internacional' AS KPI,
	count(CASE WHEN  
	descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	THEN venta_tarjeta  END )*1.0/count(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'03.TD' AS grupo,
	'02.Trx' AS subgrupo,
	'10.Total Presencial' AS KPI,
	count(CASE WHEN   
	 coalesce(si_digital,0)=0 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'03.TD' AS grupo,
	'02.Trx' AS subgrupo,
	'11.%Presencial' AS KPI,
	count(CASE WHEN   
	 coalesce(si_digital,0)=0 
	THEN venta_tarjeta  END )*1.0/count(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'03.TD' AS grupo,
	'02.Trx' AS subgrupo,
	'12.Total Online' AS KPI,
	count(CASE WHEN   
	 coalesce(si_digital,0)=1 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	union
	SELECT 
	'03.TD' AS grupo,
	'02.Trx' AS subgrupo,
	'13.%Online' AS KPI,
	count(CASE WHEN   
	 coalesce(si_digital,0)=1 
	THEN venta_tarjeta  END )*1.0/count(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL
	;



	INSERT INTO schm_workspace.nacional_internacional_kpis
	SELECT 
	a.grupo,
	'03.Ticket Promedio' AS subgrupo,
	a.KPI,
	CASE WHEN COALESCE(c.monto)<>0 
	THEN b.monto/c.monto ELSE 0 END AS monto

	FROM (SELECT DISTINCT grupo, kpi FROM 
	schm_workspace.nacional_internacional_kpis
	WHERE grupo='03.TD') AS a 
	LEFT JOIN schm_workspace.nacional_internacional_kpis AS b
	on(a.grupo=b.grupo) AND a.kpi=b.kpi AND b.subgrupo='01.Venta' AND b.grupo='03.TD'
	LEFT JOIN schm_workspace.nacional_internacional_kpis AS c
	on(a.grupo=c.grupo) AND a.kpi=c.kpi AND c.subgrupo='02.Trx' AND c.grupo='03.TD'
	;

	----- venta_ ctavta
	INSERT INTO schm_workspace.nacional_internacional_kpis 
	SELECT 
	'04.CTA VTA' AS grupo,
	'01.Venta' AS subgrupo,
	'01.Nacional Presencial' AS KPI,
	sum(CASE WHEN 
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')
	AND coalesce(si_digital,0)=0 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE  tipo='CTA VISTA'
	UNION 
	SELECT 
	'04.CTA VTA' AS grupo,
	'01.Venta' AS subgrupo,
	'02.Nacional Online' AS KPI,
	sum(CASE WHEN  
	 descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	AND coalesce(si_digital,0)=1 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	UNION 
	SELECT 
	'04.CTA VTA' AS grupo,
	'01.Venta' AS subgrupo,
	'03.Internacional Presencial' AS KPI,
	sum(CASE WHEN  
	 descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	AND coalesce(si_digital,0)=0 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	UNION 
	SELECT 
	'04.CTA VTA' AS grupo,
	'01.Venta' AS subgrupo,
	'04.Internacional Online' AS KPI,
	sum(CASE WHEN  
	 descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')
	AND coalesce(si_digital,0)=1 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	union
	SELECT 
	'04.CTA VTA' AS grupo,
	'01.Venta' AS subgrupo,
	'05.Total TD' AS KPI,
	sum(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	UNION 
	SELECT 
	'04.CTA VTA' AS grupo,
	'01.Venta' AS subgrupo,
	'06.Total Nacional' AS KPI,
	sum(CASE WHEN  
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	UNION 
	SELECT 
	'04.CTA VTA' AS grupo,
	'01.Venta' AS subgrupo,
	'07.%Nacional' AS KPI,
	sum(CASE WHEN  
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	UNION 
	SELECT 
	'04.CTA VTA' AS grupo,
	'01.Venta' AS subgrupo,
	'08.Total Internacional' AS KPI,
	sum(CASE WHEN  
	descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	UNION 
	SELECT 
	'04.CTA VTA' AS grupo,
	'01.Venta' AS subgrupo,
	'09.%Internacional' AS KPI,
	sum(CASE WHEN  
	descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	union
	SELECT 
	'04.CTA VTA' AS grupo,
	'01.Venta' AS subgrupo,
	'10.Total Presencial' AS KPI,
	sum(CASE WHEN   
	 coalesce(si_digital,0)=0 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	union
	SELECT 
	'04.CTA VTA' AS grupo,
	'01.Venta' AS subgrupo,
	'11.%Presencial' AS KPI,
	sum(CASE WHEN   
	 coalesce(si_digital,0)=0 
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	union
	SELECT 
	'04.CTA VTA' AS grupo,
	'01.Venta' AS subgrupo,
	'12.Total Online' AS KPI,
	sum(CASE WHEN   
	 coalesce(si_digital,0)=1 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	union
	SELECT 
	'04.CTA VTA' AS grupo,
	'01.Venta' AS subgrupo,
	'13.%Online' AS KPI,
	sum(CASE WHEN   
	 coalesce(si_digital,0)=1 
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	;


	--- trx ctavta 


	INSERT INTO schm_workspace.nacional_internacional_kpis 
	SELECT 
	'04.CTA VTA' AS grupo,
	'02.Trx' AS subgrupo,
	'01.Nacional Presencial' AS KPI,
	count(CASE WHEN 
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')
	AND coalesce(si_digital,0)=0 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	UNION 
	SELECT 
	'04.CTA VTA' AS grupo,
	'02.Trx' AS subgrupo,
	'02.Nacional Online' AS KPI,
	count(CASE WHEN  
	 descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	AND coalesce(si_digital,0)=1 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	UNION 
	SELECT 
	'04.CTA VTA' AS grupo,
	'02.Trx' AS subgrupo,
	'03.Internacional Presencial' AS KPI,
	count(CASE WHEN  
	 descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	AND coalesce(si_digital,0)=0 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	UNION 
	SELECT 
	'04.CTA VTA' AS grupo,
	'02.Trx' AS subgrupo,
	'04.Internacional Online' AS KPI,
	count(CASE WHEN  
	 descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')
	AND coalesce(si_digital,0)=1 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	union
	SELECT 
	'04.CTA VTA' AS grupo,
	'02.Trx' AS subgrupo,
	'05.Total TD' AS KPI,
	count(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	UNION 
	SELECT 
	'04.CTA VTA' AS grupo,
	'02.Trx' AS subgrupo,
	'06.Total Nacional' AS KPI,
	count(CASE WHEN  
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	UNION 
	SELECT 
	'04.CTA VTA' AS grupo,
	'02.Trx' AS subgrupo,
	'07.%Nacional' AS KPI,
	count(CASE WHEN  
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta  END )*1.0/count(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	UNION 
	SELECT 
	'04.CTA VTA' AS grupo,
	'02.Trx' AS subgrupo,
	'08.Total Internacional' AS KPI,
	count(CASE WHEN  
	descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	UNION 
	SELECT 
	'04.CTA VTA' AS grupo,
	'02.Trx' AS subgrupo,
	'09.%Internacional' AS KPI,
	count(CASE WHEN  
	descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	THEN venta_tarjeta  END )*1.0/count(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	union
	SELECT 
	'04.CTA VTA' AS grupo,
	'02.Trx' AS subgrupo,
	'10.Total Presencial' AS KPI,
	count(CASE WHEN   
	 coalesce(si_digital,0)=0 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	union
	SELECT 
	'04.CTA VTA' AS grupo,
	'02.Trx' AS subgrupo,
	'11.%Presencial' AS KPI,
	count(CASE WHEN   
	 coalesce(si_digital,0)=0 
	THEN venta_tarjeta  END )*1.0/count(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	union
	SELECT 
	'04.CTA VTA' AS grupo,
	'02.Trx' AS subgrupo,
	'12.Total Online' AS KPI,
	count(CASE WHEN   
	 coalesce(si_digital,0)=1 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	union
	SELECT 
	'04.CTA VTA' AS grupo,
	'02.Trx' AS subgrupo,
	'13.%Online' AS KPI,
	count(CASE WHEN   
	 coalesce(si_digital,0)=1 
	THEN venta_tarjeta  END )*1.0/count(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo='CTA VISTA'
	;



	INSERT INTO schm_workspace.nacional_internacional_kpis
	SELECT 
	a.grupo,
	'03.Ticket Promedio' AS subgrupo,
	a.KPI,
	CASE WHEN COALESCE(c.monto)<>0 
	THEN b.monto/c.monto ELSE 0 END AS monto

	FROM (SELECT DISTINCT grupo, kpi FROM 
	schm_workspace.nacional_internacional_kpis
	WHERE grupo='04.CTA VTA') AS a 
	LEFT JOIN schm_workspace.nacional_internacional_kpis AS b
	on(a.grupo=b.grupo) AND a.kpi=b.kpi AND b.subgrupo='01.Venta' AND b.grupo='04.CTA VTA'
	LEFT JOIN schm_workspace.nacional_internacional_kpis AS c
	on(a.grupo=c.grupo) AND a.kpi=c.kpi AND c.subgrupo='02.Trx' AND c.grupo='04.CTA VTA'
	;

	----- venta_ ctavta
	INSERT INTO schm_workspace.nacional_internacional_kpis 
	SELECT 
	'05.CTA CTE' AS grupo,
	'01.Venta' AS subgrupo,
	'01.Nacional Presencial' AS KPI,
	sum(CASE WHEN 
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')
	AND coalesce(si_digital,0)=0 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE  tipo<>'CTA VISTA'
	UNION 
	SELECT 
	'05.CTA CTE' AS grupo,
	'01.Venta' AS subgrupo,
	'02.Nacional Online' AS KPI,
	sum(CASE WHEN  
	 descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	AND coalesce(si_digital,0)=1 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	UNION 
	SELECT 
	'05.CTA CTE' AS grupo,
	'01.Venta' AS subgrupo,
	'03.Internacional Presencial' AS KPI,
	sum(CASE WHEN  
	 descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	AND coalesce(si_digital,0)=0 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	UNION 
	SELECT 
	'05.CTA CTE' AS grupo,
	'01.Venta' AS subgrupo,
	'04.Internacional Online' AS KPI,
	sum(CASE WHEN  
	 descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')
	AND coalesce(si_digital,0)=1 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	union
	SELECT 
	'05.CTA CTE' AS grupo,
	'01.Venta' AS subgrupo,
	'05.Total TD' AS KPI,
	sum(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	UNION 
	SELECT 
	'05.CTA CTE' AS grupo,
	'01.Venta' AS subgrupo,
	'06.Total Nacional' AS KPI,
	sum(CASE WHEN  
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	UNION 
	SELECT 
	'05.CTA CTE' AS grupo,
	'01.Venta' AS subgrupo,
	'07.%Nacional' AS KPI,
	CASE WHEN sum(venta_tarjeta)<>0 THEN sum(CASE WHEN  
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) END AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	UNION 
	SELECT 
	'05.CTA CTE' AS grupo,
	'01.Venta' AS subgrupo,
	'08.Total Internacional' AS KPI,
	sum(CASE WHEN  
	descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	UNION 
	SELECT 
	'05.CTA CTE' AS grupo,
	'01.Venta' AS subgrupo,
	'09.%Internacional' AS KPI,
	CASE WHEN sum(venta_tarjeta)<>0 THEN sum(CASE WHEN  
	descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) END  AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	union
	SELECT 
	'05.CTA CTE' AS grupo,
	'01.Venta' AS subgrupo,
	'10.Total Presencial' AS KPI,
	sum(CASE WHEN   
	 coalesce(si_digital,0)=0 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	union
	SELECT 
	'05.CTA CTE' AS grupo,
	'01.Venta' AS subgrupo,
	'11.%Presencial' AS KPI,
	CASE WHEN sum(venta_tarjeta)<>0 THEN sum(CASE WHEN   
	 coalesce(si_digital,0)=0 
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) end AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	union
	SELECT 
	'05.CTA CTE' AS grupo,
	'01.Venta' AS subgrupo,
	'12.Total Online' AS KPI,
	sum(CASE WHEN   
	 coalesce(si_digital,0)=1 
	THEN venta_tarjeta ELSE 0 END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	union
	SELECT 
	'05.CTA CTE' AS grupo,
	'01.Venta' AS subgrupo,
	'13.%Online' AS KPI,
	CASE WHEN sum(venta_tarjeta)<>0 THEN sum(CASE WHEN   
	 coalesce(si_digital,0)=1 
	THEN venta_tarjeta ELSE 0 END )*1.0/sum(venta_tarjeta) END AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	;


	--- trx ctavta 


	INSERT INTO schm_workspace.nacional_internacional_kpis 
	SELECT 
	'05.CTA CTE' AS grupo,
	'02.Trx' AS subgrupo,
	'01.Nacional Presencial' AS KPI,
	count(CASE WHEN 
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')
	AND coalesce(si_digital,0)=0 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	UNION 
	SELECT 
	'05.CTA CTE' AS grupo,
	'02.Trx' AS subgrupo,
	'02.Nacional Online' AS KPI,
	count(CASE WHEN  
	 descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	AND coalesce(si_digital,0)=1 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	UNION 
	SELECT 
	'05.CTA CTE' AS grupo,
	'02.Trx' AS subgrupo,
	'03.Internacional Presencial' AS KPI,
	count(CASE WHEN  
	 descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	AND coalesce(si_digital,0)=0 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	UNION 
	SELECT 
	'05.CTA CTE' AS grupo,
	'02.Trx' AS subgrupo,
	'04.Internacional Online' AS KPI,
	count(CASE WHEN  
	 descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')
	AND coalesce(si_digital,0)=1 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	union
	SELECT 
	'05.CTA CTE' AS grupo,
	'02.Trx' AS subgrupo,
	'05.Total TD' AS KPI,
	count(venta_tarjeta) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	UNION 
	SELECT 
	'05.CTA CTE' AS grupo,
	'02.Trx' AS subgrupo,
	'06.Total Nacional' AS KPI,
	count(CASE WHEN  
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	UNION 
	SELECT 
	'05.CTA CTE' AS grupo,
	'02.Trx' AS subgrupo,
	'07.%Nacional' AS KPI,
	CASE WHEN count(venta_tarjeta)<>0 THEN count(CASE WHEN  
	descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta  END )*1.0/count(venta_tarjeta) END  AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	UNION 
	SELECT 
	'05.CTA CTE' AS grupo,
	'02.Trx' AS subgrupo,
	'08.Total Internacional' AS KPI,
	count(CASE WHEN  
	descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL')  
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	UNION 
	SELECT 
	'05.CTA CTE' AS grupo,
	'02.Trx' AS subgrupo,
	'09.%Internacional' AS KPI,
	CASE WHEN count(venta_tarjeta)<>0 THEN count(CASE WHEN  
	descripcion_fisa NOT IN ('COMPRA NACIONAL MCD','COMPRA NACIONAL CTA CTE','COMPRA NACIONAL') 
	THEN venta_tarjeta  END )*1.0/count(venta_tarjeta) END AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	union
	SELECT 
	'05.CTA CTE' AS grupo,
	'02.Trx' AS subgrupo,
	'10.Total Presencial' AS KPI,
	count(CASE WHEN   
	 coalesce(si_digital,0)=0 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	union
	SELECT 
	'05.CTA CTE' AS grupo,
	'02.Trx' AS subgrupo,
	'11.%Presencial' AS KPI,
	CASE WHEN count(venta_tarjeta)<>0 THEN count(CASE WHEN   
	 coalesce(si_digital,0)=0 
	THEN venta_tarjeta  END )*1.0/count(venta_tarjeta) END AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	union
	SELECT 
	'05.CTA CTE' AS grupo,
	'02.Trx' AS subgrupo,
	'12.Total Online' AS KPI,
	count(CASE WHEN   
	 coalesce(si_digital,0)=1 
	THEN venta_tarjeta  END ) AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	union
	SELECT 
	'05.CTA CTE' AS grupo,
	'02.Trx' AS subgrupo,
	'13.%Online' AS KPI,
	CASE WHEN count(venta_tarjeta)<>0 THEN count(CASE WHEN   
	 coalesce(si_digital,0)=1 
	THEN venta_tarjeta  END )*1.0/count(venta_tarjeta) END AS monto
	FROM schm_workspace.td_NACIONAL_INTERNACIONAL WHERE tipo<>'CTA VISTA'
	;


	INSERT INTO schm_workspace.nacional_internacional_kpis
	SELECT 
	a.grupo,
	'03.Ticket Promedio' AS subgrupo,
	a.KPI,
	CASE WHEN COALESCE(c.monto)<>0 
	THEN b.monto/c.monto ELSE 0 END AS monto

	FROM (SELECT DISTINCT grupo, kpi FROM 
	schm_workspace.nacional_internacional_kpis
	WHERE grupo='05.CTA CTE') AS a 
	LEFT JOIN schm_workspace.nacional_internacional_kpis AS b
	on(a.grupo=b.grupo) AND a.kpi=b.kpi AND b.subgrupo='01.Venta' AND b.grupo='05.CTA CTE'
	LEFT JOIN schm_workspace.nacional_internacional_kpis AS c
	on(a.grupo=c.grupo) AND a.kpi=c.kpi AND c.subgrupo='02.Trx' AND c.grupo='05.CTA CTE'
	;

	DELETE FROM schm_data_analytics.spos_nacional_internacional
	WHERE periodo=periodo_paso;

	INSERT INTO  schm_data_analytics.spos_nacional_internacional  
	SELECT 
	current_date AS fecha_actualizacion,
	periodo_paso AS periodo,
	*
	FROM schm_workspace.nacional_internacional_kpis
	;

	DROP TABLE IF EXISTS schm_workspace.spos_NACIONAL_INTERNACIONAL;
	DROP TABLE IF EXISTS schm_workspace.seg_NACIONAL_INTERNACIONAL;
	DROP TABLE IF EXISTS schm_workspace.td_NACIONAL_INTERNACIONAL;
	DROP TABLE IF EXISTS schm_workspace.nacional_internacional_kpis;
	DROP TABLE IF EXISTS schm_workspace.plasticos_black_NI;

	/*  ===========================================================================================================
         === Control de versiones visual ===
         2024-02-19 -- v00 -- Pedro Muñoz         -- Versión original

         === Información adicional:
         Proceso que cataloga la venta nacional y internacional tc y td.
         ===========================================================================================================
    */

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_spos_rubro_preferente(periodo_paso int4)
	LANGUAGE plpgsql
AS $$
	

BEGIN
-------------------------- proceso que calcula el rfm de un cliente en spos y por rubro
    DROP TABLE IF EXISTS schm_workspace.universo_compra_tc;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_td;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_union;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_resumen;
    DROP TABLE IF EXISTS schm_workspace.ultima_captacion;
    DROP TABLE IF EXISTS schm_workspace.ultima_captacion2;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL2;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL3;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL4;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL5;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_resumen_rubro;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL_rubro2;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL_rubro3;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL_rubro4;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL_rubro5;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL_rubro6;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL6;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL6_1;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL6_2;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL6_3;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL6_4;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL6_5;
    --extraccion de información

    CREATE TABLE schm_workspace.universo_compra_tc AS
    SELECT
    a.periodo,
    a.rut,
    a.fecha,
    a.venta_tarjeta AS monto,
    COALESCE(b.rubro_gestion_spos,'Otros Rubros SPOS') AS rubro_TBK
    FROM schm_data_analytics.spos_aut AS a
    LEFT JOIN (SELECT DISTINCT cod_act,rubro_gestion_spos
    FROM schm_data_analytics.spos_tabla_arbol) AS b
    on(COALESCE(a.codact,9999)=b.cod_act)
    WHERE a.periodo BETWEEN  schm_artifacts.f_period_add_n_months(periodo_paso,-11) AND periodo_paso
    ;


    CREATE TABLE schm_workspace.universo_compra_td AS
    SELECT
    a.periodo,
    a.tipo,
    a.rut,
    a.fecha,
    a.venta_tarjeta AS monto,
    COALESCE(b.rubro_gestion_spos,'Otros Rubros SPOS') AS rubro_TBK
    FROM schm_data_analytics.mpdg_movimientos_debito AS a
    LEFT JOIN (SELECT DISTINCT cod_act,rubro_gestion_spos
    FROM schm_data_analytics.spos_tabla_arbol) AS b
    on(COALESCE(a.codact,9999)=b.cod_act)
    WHERE a.periodo BETWEEN  schm_artifacts.f_period_add_n_months(periodo_paso,-11) AND periodo_paso
    AND a.tipo_compra='SPOS'
    ;

    CREATE TABLE schm_workspace.universo_compra_union AS
    SELECT
    periodo,
    'TC' AS tipo,
    rut,
    fecha,
    monto,
    rubro_tbk
    FROM schm_workspace.universo_compra_tc
    UNION ALL
    SELECT * FROM schm_workspace.universo_compra_td
    ;

    --dejar data a nivel de rut unico totales
    CREATE TABLE schm_workspace.universo_compra_resumen AS
    SELECT
    rut,
    sum(monto) AS monto_total,
    count(DISTINCT periodo) AS F_TOTAL,
    datediff(MONTH,to_date(max(periodo),'YYYYMMDD'),to_date(periodo_paso,'YYYYMMDD')) AS R_TOTAL,
    sum(CASE WHEN tipo='TC' THEN monto ELSE 0 END ) AS monto_tc,
    count(DISTINCT CASE WHEN tipo='TC' THEN periodo END ) AS F_Tc,
    CASE WHEN max(CASE WHEN tipo='TC' THEN periodo ELSE 0 END )>0 THEN
    datediff(MONTH,to_date(max(CASE WHEN tipo='TC' THEN periodo ELSE 0 END ),'YYYYMMDD'),to_date(periodo_paso,'YYYYMMDD'))
    ELSE -999 END AS R_Tc,
    sum(CASE WHEN tipo IN ('CTA VISTA','CTA CTE') THEN monto ELSE 0 END ) AS monto_td,
    count(DISTINCT CASE WHEN tipo IN ('CTA VISTA','CTA CTE')  THEN periodo END ) AS F_Td,
    CASE WHEN max(CASE WHEN tipo IN ('CTA VISTA','CTA CTE')  THEN periodo ELSE 0 END )>0 THEN
    datediff(MONTH,to_date(max(CASE WHEN tipo IN ('CTA VISTA','CTA CTE')  THEN periodo ELSE 0 END ),'YYYYMMDD'),to_date(periodo_paso,'YYYYMMDD'))
    ELSE -999 END AS R_Td,
    sum(CASE WHEN tipo='CTA VISTA' THEN monto ELSE 0 END ) AS monto_cv,
    count(DISTINCT CASE WHEN tipo='CTA VISTA' THEN periodo END ) AS F_cv,
    CASE WHEN max(CASE WHEN tipo='CTA VISTA' THEN periodo ELSE 0 END )>0 THEN
    datediff(MONTH,to_date(max(CASE WHEN tipo='CTA VISTA' THEN periodo ELSE 0 END ),'YYYYMMDD'),to_date(periodo_paso,'YYYYMMDD'))
    ELSE -999 END AS R_cv,
    sum(CASE WHEN tipo='CTA CTE' THEN monto ELSE 0 END ) AS monto_cc,
    count(DISTINCT CASE WHEN tipo='CTA CTE' THEN periodo END ) AS F_cc,
    CASE WHEN max(CASE WHEN tipo='CTA CTE' THEN periodo ELSE 0 END )>0 THEN
    datediff(MONTH,to_date(max(CASE WHEN tipo='CTA CTE' THEN periodo ELSE 0 END ),'YYYYMMDD'),to_date(periodo_paso,'YYYYMMDD'))
    ELSE -999 END AS R_cc
    FROM schm_workspace.universo_compra_union
    GROUP BY rut
    ;


    -- antiguedad del clientes según su ultima captacion
    CREATE TABLE schm_workspace.ultima_captacion AS
    SELECT
    rut_cliente AS rut,
    max(CASE WHEN producto='CUENTA VISTA' THEN periodo ELSE 0 end) AS PERIODO_CV,
    max(CASE WHEN producto='CUENTA CORRIENTE' THEN periodo ELSE 0 end) AS PERIODO_CC,
    max(CASE WHEN producto NOT IN ('CUENTA CORRIENTE','CUENTA VISTA') THEN periodo ELSE 0 end) AS PERIODO_TC
    FROM schm_data_analytics.ppff_capta_salida
    WHERE periodo<=periodo_paso
    GROUP BY rut_cliente
    ;

    CREATE TABLE schm_workspace.ultima_captacion2 AS
    SELECT
    *,
    CASE WHEN periodo_tc>0
    THEN datediff(MONTH,to_date(periodo_tc,'YYYYMMDD'),to_date(periodo_paso,'YYYYMMDD'))
    ELSE -999 END AS periodo_tc2,
    CASE WHEN periodo_cv>0 AND periodo_cc>0
    THEN
    datediff(MONTH,to_date(LEAST(periodo_cv,periodo_cc),'YYYYMMDD'),to_date(periodo_paso,'YYYYMMDD'))
    WHEN periodo_cv>0 AND periodo_cc=0
    THEN
    datediff(MONTH,to_date(periodo_cv,'YYYYMMDD'),to_date(periodo_paso,'YYYYMMDD'))
    WHEN periodo_cv=0 AND periodo_cc>0
    THEN
    datediff(MONTH,to_date(periodo_cc,'YYYYMMDD'),to_date(periodo_paso,'YYYYMMDD'))
    ELSE -999 END AS periodo_td,
    CASE WHEN periodo_cv>0
    THEN datediff(MONTH,to_date(periodo_cv,'YYYYMMDD'),to_date(periodo_paso,'YYYYMMDD'))
    ELSE -999 END AS periodo_cv2,
    CASE WHEN periodo_cc>0
    THEN datediff(MONTH,to_date(periodo_cc,'YYYYMMDD'),to_date(periodo_paso,'YYYYMMDD'))
    ELSE -999 END AS periodo_cc2
    FROM schm_workspace.ultima_captacion
    ;


    CREATE TABLE schm_workspace.universo_compra_TOTAL2 AS
    SELECT
    a.*,
    monto_total/F_total  AS monto_total2,
    CASE WHEN F_tc=0 THEN 0 ELSE monto_tc/F_tc end AS monto_tc2,
    CASE WHEN F_td=0 THEN 0 ELSE monto_td/F_td end AS monto_td2,
    CASE WHEN F_cv=0 THEN 0 ELSE monto_cv/F_cv END  AS monto_cv2,
    CASE WHEN F_cc=0 THEN 0 ELSE monto_cc/F_cc END  AS monto_cc2,
    CASE
    WHEN b.rut IS NOT NULL AND PERIODO_TC2<>-999 AND periodo_tc2 BETWEEN 0 AND 11
    THEN  b.PERIODO_TC2
    WHEN b.rut IS NOT NULL  AND PERIODO_TC2<>-999 AND periodo_tc2>=12
    THEN  12
    WHEN coalesce(PERIODO_TC2,-999)=-999 AND a.monto_TC<>0 THEN 12
    WHEN b.rut IS NULL AND a.monto_TC=0 THEN -999 ELSE -999 END AS antiguedad_tc,
    CASE
    WHEN b.rut IS NOT NULL AND PERIODO_Td<>-999 AND periodo_td BETWEEN 0 AND 11
    THEN  b.PERIODO_Td
    WHEN b.rut IS NOT NULL  AND PERIODO_Td<>-999 AND periodo_td>=12
    THEN  12
    WHEN coalesce(PERIODO_Td,-999)=-999 AND a.monto_Td<>0 THEN 12
    WHEN b.rut IS NULL AND a.monto_Td=0 THEN -999 ELSE -999 END AS antiguedad_td,
    CASE
    WHEN b.rut IS NOT NULL AND PERIODO_cv2<>-999 AND periodo_cv2 BETWEEN 0 AND 11
    THEN  b.PERIODO_cv2
    WHEN b.rut IS NOT NULL  AND PERIODO_cv2<>-999 AND periodo_cv2>=12
    THEN  12
    WHEN coalesce(PERIODO_cv2,-999)=-999  AND a.monto_cv<>0 THEN 12
    WHEN b.rut IS NULL AND a.monto_cv=0 THEN -999 ELSE -999 END AS antiguedad_cv,
    CASE
    WHEN b.rut IS NOT NULL AND PERIODO_cc2<>-999 AND periodo_cc2 BETWEEN 0 AND 11
    THEN  b.PERIODO_cc2
    WHEN b.rut IS NOT NULL  AND PERIODO_cc2<>-999 AND periodo_cv2>=12
    THEN  12
    WHEN coalesce(PERIODO_cc2,-999)=-999 AND a.monto_cc<>0 THEN 12
    WHEN b.rut IS NULL AND a.monto_cc=0 THEN -999 ELSE -999 END AS antiguedad_cc,
    GREATEST(
    CASE
    WHEN b.rut IS NOT NULL AND PERIODO_TC2<>-999 AND periodo_tc2 BETWEEN 0 AND 11
    THEN  b.PERIODO_TC2
    WHEN b.rut IS NOT NULL  AND PERIODO_TC2<>-999 AND periodo_tc2>=12
    THEN  12
    WHEN coalesce(PERIODO_TC2,-999)=-999  AND a.monto_TC<>0 THEN 12
    WHEN b.rut IS NULL AND a.monto_TC=0 THEN -999 ELSE -999 END,
    CASE
    WHEN b.rut IS NOT NULL AND PERIODO_cv2<>-999 AND periodo_cv2 BETWEEN 0 AND 11
    THEN  b.PERIODO_cv2
    WHEN b.rut IS NOT NULL  AND PERIODO_cv2<>-999 AND periodo_cv2>=12
    THEN  12
    WHEN coalesce(PERIODO_cv2,-999)=-999  AND a.monto_cv<>0 THEN 12
    WHEN b.rut IS NULL AND a.monto_cv=0 THEN -999 ELSE -999 END,
    CASE
    WHEN b.rut IS NOT NULL AND PERIODO_cc2<>-999 AND periodo_cc2 BETWEEN 0 AND 11
    THEN  b.PERIODO_cc2
    WHEN b.rut IS NOT NULL  AND PERIODO_cc2<>-999 AND periodo_cv2>=12
    THEN  12
    WHEN coalesce(PERIODO_cc2,-999)=-999  AND a.monto_cc<>0 THEN 12
    WHEN b.rut IS NULL AND a.monto_cc=0 THEN -999 ELSE -999 END
    ) AS antiguedad_total
    FROM schm_workspace.universo_compra_resumen AS a
    LEFT JOIN schm_workspace.ultima_captacion2 AS b
    on(a.rut=b.rut)
    ;


    -- generar percentiles 10 y 90 para generar los topes
    CREATE TABLE schm_workspace.universo_compra_TOTAL3 AS
    SELECT
    *,
    percentile_cont(0.1) within group (order by monto_total2 asc) over (partition by antiguedad_total) as p_MTotal_10,
    percentile_cont(0.9) within group (order by monto_total2 asc) over (partition by antiguedad_total) as p_MTotal_90,
    percentile_cont(0.1) within group (order by monto_TC2 asc) over (partition by antiguedad_tc) as p_MTc_10,
    percentile_cont(0.9) within group (order by monto_TC2 asc) over (partition by antiguedad_tc) as p_MTc_90,
    percentile_cont(0.1) within group (order by monto_Td2 asc) over (partition by antiguedad_td) as p_MTd_10,
    percentile_cont(0.9) within group (order by monto_Td2 asc) over (partition by antiguedad_td) as p_MTd_90,
    percentile_cont(0.1) within group (order by monto_cv2 asc) over (partition by antiguedad_cv) as p_MCV_10,
    percentile_cont(0.9) within group (order by monto_cv2 asc) over (partition by antiguedad_cv) as p_MCV_90,
    percentile_cont(0.1) within group (order by monto_cc2 asc) over (partition by antiguedad_cc) as p_MCc_10,
    percentile_cont(0.9) within group (order by monto_cc2 asc) over (partition by antiguedad_cc) as p_MCc_90
    FROM schm_workspace.universo_compra_TOTAL2
    ;

    CREATE TABLE schm_workspace.universo_compra_TOTAL4 AS
    SELECT * ,
    CASE WHEN  p_MTotal_90=0 THEN 0
    WHEN (POW(p_MTotal_90, 1) -POW(p_MTotal_10, 1))=0 THEN 0
    ELSE
    schm_artifacts.f_valor_interpolado(monto_total2, 1, p_MTotal_10, p_MTotal_90, 0, 1) END  AS MT2,
    CASE WHEN  p_MTc_90=0 THEN 0
    WHEN (POW(p_MTc_90, 1) -POW(p_MTc_10, 1))=0 THEN 0
    ELSE
    schm_artifacts.f_valor_interpolado(monto_tc2, 1, p_MTc_10, p_MTc_90, 0, 1) END AS MTC2,
    CASE WHEN  p_MTd_90=0 THEN 0
    WHEN (POW(p_MTd_90, 1) -POW(p_MTd_10, 1))=0 THEN 0
    ELSE
    schm_artifacts.f_valor_interpolado(monto_td2, 1, p_MTd_10, p_MTd_90, 0, 1) END AS MTd2,
    CASE WHEN  p_Mcv_90=0 THEN 0
    WHEN (POW(p_Mcv_90, 1) -POW(p_Mcv_10, 1))=0 THEN 0
    ELSE
    schm_artifacts.f_valor_interpolado(monto_cv2, 1, p_Mcv_10, p_Mcv_90, 0, 1) END AS MCV2,
    CASE WHEN  p_Mcc_90=0 THEN 0
    WHEN (POW(p_Mcc_90, 1) -POW(p_Mcc_10, 1))=0 THEN 0
    ELSE
    schm_artifacts.f_valor_interpolado(monto_cc2, 1, p_Mcc_10, p_Mcc_90, 0, 1) END AS MCC2,
    CASE WHEN R_total=-999 THEN 0 ELSE
    schm_artifacts.f_valor_interpolado(r_total, 1, 12, 0, 0, 1) END AS r_total2,
    CASE WHEN R_tc=-999 THEN 0 ELSE
    schm_artifacts.f_valor_interpolado(r_tc, 1, 12, 0, 0, 1) END AS r_tc2,
    CASE WHEN R_td=-999 THEN 0 ELSE
    schm_artifacts.f_valor_interpolado(r_td, 1, 12, 0, 0, 1) END AS r_td2,
    CASE WHEN R_cv=-999 THEN 0 ELSE
    schm_artifacts.f_valor_interpolado(r_cv, 1, 12, 0, 0, 1) END AS r_cv2,
    CASE WHEN R_cc=-999 THEN 0 ELSE
    schm_artifacts.f_valor_interpolado(r_cc, 1, 12, 0, 0, 1) end AS r_cc2,
    CASE WHEN f_total=0 THEN 0
    ELSE schm_artifacts.f_valor_interpolado(f_total, 1, 12, 0, 0, 1) END AS f_total2,
    CASE WHEN f_tc=0 THEN 0 ELSE schm_artifacts.f_valor_interpolado(f_tc, 1, 12, 0, 0, 1) END AS f_tc2,
    CASE WHEN f_td=0 THEN 0 ELSE schm_artifacts.f_valor_interpolado(f_td, 1, 12, 0, 0, 1) END AS f_td2,
    CASE WHEN f_cv=0 THEN 0 ELSE schm_artifacts.f_valor_interpolado(f_cv, 1, 12, 0, 0, 1) END AS f_cv2,
    CASE WHEN f_cc=0 THEN 0 ELSE schm_artifacts.f_valor_interpolado(f_cc, 1, 12, 0, 0, 1) END AS f_cc2
    FROM schm_workspace.universo_compra_TOTAL3
    ;

    CREATE TABLE schm_workspace.universo_compra_TOTAL5 AS
    SELECT
    rut,
    antiguedad_total,
    antiguedad_tc,
    antiguedad_td,
    antiguedad_cv,
    antiguedad_cc,
    r_total AS r_tmp_spos,
    f_total AS f_tmp_spos,
    monto_total2 AS m_tmp_spos,
    r_tc AS r_tc,
    f_tc AS f_tc,
    monto_tc2 AS m_tc,
    r_td AS r_td,
    f_td AS f_td,
    monto_td2 AS m_td,
    r_cv AS r_cv,
    f_cv AS f_cv,
    monto_cv AS m_cv,
    r_cc AS r_cc,
    f_cc AS f_cc,
    monto_cc AS m_cc,
     MT2*0.15+  r_total2*0.35+ f_total2*0.5 AS  rfm_tmp_spos,
     MTc2*0.15+  r_tc2*0.35+ f_tc2*0.5 AS rfm_tc,
     MTd2*0.15+  r_td2*0.35+ f_td2*0.5 AS rfm_td,
     Mcv2*0.15+  r_cv2*0.35+ f_cv2*0.5 AS rfm_cv,
     Mcc2*0.15+  r_cc2*0.35+ f_cc2*0.5 AS rfm_cc
    FROM  schm_workspace.universo_compra_TOTAL4
    ;


    ----- desde aqui es replicar las vistas pero asociado a los rubros
    CREATE TABLE schm_workspace.universo_compra_resumen_rubro AS
    SELECT
    rubro_tbk,
    rut,
    sum(monto) AS monto_total,
    count(DISTINCT periodo) AS F_TOTAL,
    datediff(MONTH,to_date(max(periodo),'YYYYMMDD'),to_date(periodo_paso,'YYYYMMDD')) AS R_TOTAL,
    sum(CASE WHEN tipo='TC' THEN monto ELSE 0 END ) AS monto_tc,
    count(DISTINCT CASE WHEN tipo='TC' THEN periodo END ) AS F_Tc,
    CASE WHEN max(CASE WHEN tipo='TC' THEN periodo ELSE 0 END )>0 THEN
    datediff(MONTH,to_date(max(CASE WHEN tipo='TC' THEN periodo ELSE 0 END ),'YYYYMMDD'),to_date(periodo_paso,'YYYYMMDD'))
    ELSE -999 END AS R_Tc,
    sum(CASE WHEN tipo in ('CTA VISTA','CTA CTE') THEN monto ELSE 0 END ) AS monto_td,
    count(DISTINCT CASE WHEN tipo in ('CTA VISTA','CTA CTE') THEN periodo END ) AS F_Td,
    CASE WHEN max(CASE WHEN tipo in ('CTA VISTA','CTA CTE') THEN periodo ELSE 0 END )>0 THEN
    datediff(MONTH,to_date(max(CASE WHEN tipo in ('CTA VISTA','CTA CTE') THEN periodo ELSE 0 END ),'YYYYMMDD'),to_date(periodo_paso,'YYYYMMDD'))
    ELSE -999 END AS R_Td,
    sum(CASE WHEN tipo='CTA VISTA' THEN monto ELSE 0 END ) AS monto_cv,
    count(DISTINCT CASE WHEN tipo='CTA VISTA' THEN periodo END ) AS F_cv,
    CASE WHEN max(CASE WHEN tipo='CTA VISTA' THEN periodo ELSE 0 END )>0 THEN
    datediff(MONTH,to_date(max(CASE WHEN tipo='CTA VISTA' THEN periodo ELSE 0 END ),'YYYYMMDD'),to_date(periodo_paso,'YYYYMMDD'))
    ELSE -999 END AS R_cv,
    sum(CASE WHEN tipo='CTA CTE' THEN monto ELSE 0 END ) AS monto_cc,
    count(DISTINCT CASE WHEN tipo='CTA CTE' THEN periodo END ) AS F_cc,
    CASE WHEN max(CASE WHEN tipo='CTA CTE' THEN periodo ELSE 0 END )>0 THEN
    datediff(MONTH,to_date(max(CASE WHEN tipo='CTA CTE' THEN periodo ELSE 0 END ),'YYYYMMDD'),to_date(periodo_paso,'YYYYMMDD'))
    ELSE -999 END AS R_cc
    FROM schm_workspace.universo_compra_union
    GROUP BY rut,
    rubro_tbk
    ;


    CREATE TABLE schm_workspace.universo_compra_TOTAL_rubro2 AS
    SELECT
    a.*,
    monto_total/F_total  AS monto_total2,
    CASE WHEN F_tc=0 THEN 0 ELSE monto_tc/F_tc end AS monto_tc2,
    CASE WHEN F_td=0 THEN 0 ELSE monto_td/F_td end AS monto_td2,
    CASE WHEN F_cv=0 THEN 0 ELSE monto_cv/F_cv END  AS monto_cv2,
    CASE WHEN F_cc=0 THEN 0 ELSE monto_cc/F_cc END  AS monto_cc2,
    CASE
    WHEN b.rut IS NOT NULL AND PERIODO_TC2<>-999 AND periodo_tc2 BETWEEN 0 AND 11
    THEN  b.PERIODO_TC2
    WHEN b.rut IS NOT NULL  AND PERIODO_TC2<>-999 AND periodo_tc2>=12
    THEN  12
    WHEN coalesce(PERIODO_TC2,-999)=-999 AND a.monto_TC<>0 THEN 12
    WHEN b.rut IS NULL AND a.monto_TC=0 THEN -999 ELSE -999 END AS antiguedad_tc,
    CASE
    WHEN b.rut IS NOT NULL AND PERIODO_Td<>-999 AND periodo_td BETWEEN 0 AND 11
    THEN  b.PERIODO_Td
    WHEN b.rut IS NOT NULL  AND PERIODO_Td<>-999 AND periodo_td>=12
    THEN  12
    WHEN coalesce(PERIODO_Td,-999)=-999 AND a.monto_Td<>0 THEN 12
    WHEN b.rut IS NULL AND a.monto_Td=0 THEN -999 ELSE -999 END AS antiguedad_td,
    CASE
    WHEN b.rut IS NOT NULL AND PERIODO_cv2<>-999 AND periodo_cv2 BETWEEN 0 AND 11
    THEN  b.PERIODO_cv2
    WHEN b.rut IS NOT NULL  AND PERIODO_cv2<>-999 AND periodo_cv2>=12
    THEN  12
    WHEN coalesce(PERIODO_cv2,-999)=-999  AND a.monto_cv<>0 THEN 12
    WHEN b.rut IS NULL AND a.monto_cv=0 THEN -999 ELSE -999 END AS antiguedad_cv,
    CASE
    WHEN b.rut IS NOT NULL AND PERIODO_cc2<>-999 AND periodo_cc2 BETWEEN 0 AND 11
    THEN  b.PERIODO_cc2
    WHEN b.rut IS NOT NULL  AND PERIODO_cc2<>-999 AND periodo_cv2>=12
    THEN  12
    WHEN coalesce(PERIODO_cc2,-999)=-999 AND a.monto_cc<>0 THEN 12
    WHEN b.rut IS NULL AND a.monto_cc=0 THEN -999 ELSE -999 END AS antiguedad_cc,
    GREATEST(
    CASE
    WHEN b.rut IS NOT NULL AND PERIODO_TC2<>-999 AND periodo_tc2 BETWEEN 0 AND 11
    THEN  b.PERIODO_TC2
    WHEN b.rut IS NOT NULL  AND PERIODO_TC2<>-999 AND periodo_tc2>=12
    THEN  12
    WHEN coalesce(PERIODO_TC2,-999)=-999  AND a.monto_TC<>0 THEN 12
    WHEN b.rut IS NULL AND a.monto_TC=0 THEN -999 ELSE -999 END,
    CASE
    WHEN b.rut IS NOT NULL AND PERIODO_cv2<>-999 AND periodo_cv2 BETWEEN 0 AND 11
    THEN  b.PERIODO_cv2
    WHEN b.rut IS NOT NULL  AND PERIODO_cv2<>-999 AND periodo_cv2>=12
    THEN  12
    WHEN coalesce(PERIODO_cv2,-999)=-999  AND a.monto_cv<>0 THEN 12
    WHEN b.rut IS NULL AND a.monto_cv=0 THEN -999 ELSE -999 END,
    CASE
    WHEN b.rut IS NOT NULL AND PERIODO_cc2<>-999 AND periodo_cc2 BETWEEN 0 AND 11
    THEN  b.PERIODO_cc2
    WHEN b.rut IS NOT NULL  AND PERIODO_cc2<>-999 AND periodo_cv2>=12
    THEN  12
    WHEN coalesce(PERIODO_cc2,-999)=-999  AND a.monto_cc<>0 THEN 12
    WHEN b.rut IS NULL AND a.monto_cc=0 THEN -999 ELSE -999 END
    ) AS antiguedad_total
    FROM schm_workspace.universo_compra_resumen_rubro AS a
    LEFT JOIN schm_workspace.ultima_captacion2 AS b
    on(a.rut=b.rut)
    ;


    -- generar percentiles 10 y 90 para generar los topes
    CREATE TABLE schm_workspace.universo_compra_TOTAL_rubro3 AS
    SELECT
    *,
    percentile_cont(0.1) within group (order by monto_total2 asc) over (partition by antiguedad_total,rubro_tbk) as p_MTotal_10,
    percentile_cont(0.9) within group (order by monto_total2 asc) over (partition by antiguedad_total,rubro_tbk) as p_MTotal_90,
    percentile_cont(0.1) within group (order by monto_TC2 asc) over (partition by antiguedad_tc,rubro_tbk) as p_MTc_10,
    percentile_cont(0.9) within group (order by monto_TC2 asc) over (partition by antiguedad_tc,rubro_tbk) as p_MTc_90,
    percentile_cont(0.1) within group (order by monto_Td2 asc) over (partition by antiguedad_td,rubro_tbk) as p_MTd_10,
    percentile_cont(0.9) within group (order by monto_Td2 asc) over (partition by antiguedad_td,rubro_tbk) as p_MTd_90,
    percentile_cont(0.1) within group (order by monto_cv2 asc) over (partition by antiguedad_cv,rubro_tbk) as p_MCV_10,
    percentile_cont(0.9) within group (order by monto_cv2 asc) over (partition by antiguedad_cv,rubro_tbk) as p_MCV_90,
    percentile_cont(0.1) within group (order by monto_cc2 asc) over (partition by antiguedad_cc,rubro_tbk) as p_MCc_10,
    percentile_cont(0.9) within group (order by monto_cc2 asc) over (partition by antiguedad_cc,rubro_tbk) as p_MCc_90
    FROM schm_workspace.universo_compra_TOTAL_rubro2
    ;


    CREATE TABLE schm_workspace.universo_compra_TOTAL_rubro4 AS
    SELECT * ,
    CASE WHEN  (POW(p_MTotal_90, 1) -POW(p_MTotal_10, 1))=0 THEN 0
    ELSE
    schm_artifacts.f_valor_interpolado(monto_total2, 1, p_MTotal_10, p_MTotal_90, 0, 1) END  AS MT2,
    CASE WHEN  (POW(p_MTc_90, 1) -POW(p_MTc_10, 1))=0 THEN 0
    ELSE
    schm_artifacts.f_valor_interpolado(monto_tc2, 1, p_MTc_10, p_MTc_90, 0, 1) END AS MTC2,
    CASE WHEN  (POW(p_MTd_90, 1) -POW(p_MTd_10, 1))=0 THEN 0
    ELSE
    schm_artifacts.f_valor_interpolado(monto_td2, 1, p_MTd_10, p_MTd_90, 0, 1) END AS MTd2,
    CASE WHEN  (POW(p_Mcv_90, 1) -POW(p_Mcv_10, 1))=0 THEN 0
    ELSE
    schm_artifacts.f_valor_interpolado(monto_cv2, 1, p_Mcv_10, p_Mcv_90, 0, 1) END AS MCV2,
    CASE WHEN  (POW(p_Mcc_90, 1) -POW(p_Mcc_10, 1))=0 THEN 0
    ELSE
    schm_artifacts.f_valor_interpolado(monto_cc2, 1, p_Mcc_10, p_Mcc_90, 0, 1) END AS MCC2,
    CASE WHEN R_total=-999 THEN 0 ELSE
    schm_artifacts.f_valor_interpolado(r_total, 1, 12, 0, 0, 1) END AS r_total2,
    CASE WHEN R_tc=-999 THEN 0 ELSE
    schm_artifacts.f_valor_interpolado(r_tc, 1, 12, 0, 0, 1) END AS r_tc2,
    CASE WHEN R_td=-999 THEN 0 ELSE
    schm_artifacts.f_valor_interpolado(r_td, 1, 12, 0, 0, 1) END AS r_td2,
    CASE WHEN R_cv=-999 THEN 0 ELSE
    schm_artifacts.f_valor_interpolado(r_cv, 1, 12, 0, 0, 1) END AS r_cv2,
    CASE WHEN R_cc=-999 THEN 0 ELSE
    schm_artifacts.f_valor_interpolado(r_cc, 1, 12, 0, 0, 1) end AS r_cc2,
    CASE WHEN f_total=0 THEN 0
    ELSE schm_artifacts.f_valor_interpolado(f_total, 1, 12, 0, 0, 1) END AS f_total2,
    CASE WHEN f_tc=0 THEN 0 ELSE schm_artifacts.f_valor_interpolado(f_tc, 1, 12, 0, 0, 1) END AS f_tc2,
    CASE WHEN f_td=0 THEN 0 ELSE schm_artifacts.f_valor_interpolado(f_td, 1, 12, 0, 0, 1) END AS f_td2,
    CASE WHEN f_cv=0 THEN 0 ELSE schm_artifacts.f_valor_interpolado(f_cv, 1, 12, 0, 0, 1) END AS f_cv2,
    CASE WHEN f_cc=0 THEN 0 ELSE schm_artifacts.f_valor_interpolado(f_cc, 1, 12, 0, 0, 1) END AS f_cc2
    FROM schm_workspace.universo_compra_TOTAL_rubro3
    ;


    CREATE TABLE schm_workspace.universo_compra_TOTAL_rubro5 AS
    SELECT
    rut,
    rubro_tbk,
    antiguedad_total,
    antiguedad_tc,
    antiguedad_td,
    antiguedad_cv,
    antiguedad_cc,
    r_total AS r_tmp_spos,
    f_total AS f_tmp_spos,
    monto_total2 AS m_tmp_spos,
    r_tc AS r_tc,
    f_tc AS f_tc,
    monto_tc2 AS m_tc,
    r_td AS r_td,
    f_td AS f_td,
    monto_td2 AS m_td,
    r_cv AS r_cv,
    f_cv AS f_cv,
    monto_cv AS m_cv,
    r_cc AS r_cc,
    f_cc AS f_cc,
    monto_cc AS m_cc,
     MT2*0.15+  r_total2*0.35+ f_total2*0.5 AS  rfm_tmp_spos,
     MTc2*0.15+  r_tc2*0.35+ f_tc2*0.5 AS rfm_tc,
     MTd2*0.15+  r_td2*0.35+ f_td2*0.5 AS rfm_td,
     Mcv2*0.15+  r_cv2*0.35+ f_cv2*0.5 AS rfm_cv,
     Mcc2*0.15+  r_cc2*0.35+ f_cc2*0.5 AS rfm_cc
    FROM  schm_workspace.universo_compra_TOTAL_rubro4
    ;

    ---- desde aqui se selecciona los 3 mejores de los clientes segun medio de pago
    CREATE TABLE schm_workspace.universo_compra_TOTAL_rubro6 AS
    SELECT
    *,
    ROW_NUMBER() OVER( PARTITION BY rut ORDER BY rfm_tmp_spos desc) AS ind1,
    ROW_NUMBER() OVER( PARTITION BY rut ORDER BY rfm_tc desc) AS ind2,
    ROW_NUMBER() OVER( PARTITION BY rut ORDER BY rfm_td desc) AS ind3,
    ROW_NUMBER() OVER( PARTITION BY rut ORDER BY rfm_cv desc) AS ind4,
    ROW_NUMBER() OVER( PARTITION BY rut ORDER BY rfm_cc desc) AS ind5
    FROM schm_workspace.universo_compra_TOTAL_rubro5
    ;


    CREATE TABLE schm_workspace.universo_compra_TOTAL6_1 AS
    SELECT
    a.*,
    CASE WHEN b.rut IS NOT NULL AND b.rfm_tmp_spos>0 THEN b.rubro_tbk ELSE 'No Aplica' END AS RF_TMP1,
    CASE WHEN b1.rut IS NOT NULL AND b1.rfm_tmp_spos>0 THEN b1.rubro_tbk ELSE 'No Aplica' END AS RF_TMP2,
    CASE WHEN b2.rut IS NOT NULL AND b2.rfm_tmp_spos>0 THEN b2.rubro_tbk ELSE 'No Aplica' END AS RF_TMP3
    FROM schm_workspace.universo_compra_TOTAL5 AS a
    LEFT JOIN schm_workspace.universo_compra_TOTAL_rubro6 AS b
    on(a.rut=b.rut) AND b.ind1=1
    LEFT JOIN schm_workspace.universo_compra_TOTAL_rubro6 AS b1
    on(a.rut=b1.rut) AND b1.ind1=2
    LEFT JOIN schm_workspace.universo_compra_TOTAL_rubro6 AS b2
    on(a.rut=b2.rut) AND b2.ind1=3
    ;


    CREATE TABLE schm_workspace.universo_compra_TOTAL6_2 AS
    SELECT
    a.*,
    CASE WHEN b.rut IS NOT NULL AND b.rfm_tc>0 THEN b.rubro_tbk ELSE 'No Aplica' END AS RF_TC1,
    CASE WHEN b1.rut IS NOT NULL AND b1.rfm_tc>0 THEN b1.rubro_tbk ELSE 'No Aplica' END AS RF_TC2,
    CASE WHEN b2.rut IS NOT NULL AND b2.rfm_tc>0 THEN b2.rubro_tbk ELSE 'No Aplica' END AS RF_TC3
    FROM schm_workspace.universo_compra_TOTAL6_1 AS a
    LEFT JOIN schm_workspace.universo_compra_TOTAL_rubro6 AS b
    on(a.rut=b.rut) AND b.ind2=1
    LEFT JOIN schm_workspace.universo_compra_TOTAL_rubro6 AS b1
    on(a.rut=b1.rut) AND b1.ind2=2
    LEFT JOIN schm_workspace.universo_compra_TOTAL_rubro6 AS b2
    on(a.rut=b2.rut) AND b2.ind2=3
    ;


    CREATE TABLE schm_workspace.universo_compra_TOTAL6_3 AS
    SELECT
    a.*,
    CASE WHEN b.rut IS NOT NULL AND b.rfm_td>0 THEN b.rubro_tbk ELSE 'No Aplica' END AS RF_Td1,
    CASE WHEN b1.rut IS NOT NULL AND b1.rfm_td>0 THEN b1.rubro_tbk ELSE 'No Aplica' END AS RF_Td2,
    CASE WHEN b2.rut IS NOT NULL AND b2.rfm_td>0 THEN b2.rubro_tbk ELSE 'No Aplica' END AS RF_Td3
    FROM schm_workspace.universo_compra_TOTAL6_2 AS a
    LEFT JOIN schm_workspace.universo_compra_TOTAL_rubro6 AS b
    on(a.rut=b.rut) AND b.ind3=1
    LEFT JOIN schm_workspace.universo_compra_TOTAL_rubro6 AS b1
    on(a.rut=b1.rut) AND b1.ind3=2
    LEFT JOIN schm_workspace.universo_compra_TOTAL_rubro6 AS b2
    on(a.rut=b2.rut) AND b2.ind3=3
    ;


    CREATE TABLE schm_workspace.universo_compra_TOTAL6_4 AS
    SELECT
    a.*,
    CASE WHEN b.rut IS NOT NULL AND b.rfm_cv>0 THEN b.rubro_tbk ELSE 'No Aplica' END AS RF_cv1,
    CASE WHEN b1.rut IS NOT NULL AND b1.rfm_cv>0 THEN b1.rubro_tbk ELSE 'No Aplica' END AS RF_cv2,
    CASE WHEN b2.rut IS NOT NULL AND b2.rfm_cv>0 THEN b2.rubro_tbk ELSE 'No Aplica' END AS RF_cv3
    FROM schm_workspace.universo_compra_TOTAL6_3 AS a
    LEFT JOIN schm_workspace.universo_compra_TOTAL_rubro6 AS b
    on(a.rut=b.rut) AND b.ind4=1
    LEFT JOIN schm_workspace.universo_compra_TOTAL_rubro6 AS b1
    on(a.rut=b1.rut) AND b1.ind4=2
    LEFT JOIN schm_workspace.universo_compra_TOTAL_rubro6 AS b2
    on(a.rut=b2.rut) AND b2.ind4=3
    ;


    CREATE TABLE schm_workspace.universo_compra_TOTAL6_5 AS
    SELECT
    a.*,
    CASE WHEN b.rut IS NOT NULL AND b.rfm_cc>0 THEN b.rubro_tbk ELSE 'No Aplica' END AS RF_cc1,
    CASE WHEN b1.rut IS NOT NULL AND b1.rfm_cc>0 THEN b1.rubro_tbk ELSE 'No Aplica' END AS RF_cc2,
    CASE WHEN b2.rut IS NOT NULL AND b2.rfm_cc>0 THEN b2.rubro_tbk ELSE 'No Aplica' END AS RF_cc3
    FROM schm_workspace.universo_compra_TOTAL6_4 AS a
    LEFT JOIN schm_workspace.universo_compra_TOTAL_rubro6 AS b
    on(a.rut=b.rut) AND b.ind5=1
    LEFT JOIN schm_workspace.universo_compra_TOTAL_rubro6 AS b1
    on(a.rut=b1.rut) AND b1.ind5=2
    LEFT JOIN schm_workspace.universo_compra_TOTAL_rubro6 AS b2
    on(a.rut=b2.rut) AND b2.ind5=3
    ;


    --- guardado en duro
    DELETE FROM schm_data_analytics.spos_rubro_preferente
    WHERE periodo=periodo_paso;


    INSERT INTO  schm_data_analytics.spos_rubro_preferente
    SELECT
    periodo_paso AS periodo,
    *
    FROM schm_workspace.universo_compra_TOTAL6_5
    ;


    DELETE FROM schm_data_analytics.spos_rubro_preferente_detalle
    WHERE periodo=periodo_paso;


    insert into  schm_data_analytics.spos_rubro_preferente_detalle
    SELECT
    periodo_paso AS periodo,
    *
    FROM schm_workspace.universo_compra_TOTAL_rubro5
    ;


    DROP TABLE IF EXISTS schm_workspace.universo_compra_tc;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_td;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_union;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_resumen;
    DROP TABLE IF EXISTS schm_workspace.ultima_captacion;
    DROP TABLE IF EXISTS schm_workspace.ultima_captacion2;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL2;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL3;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL4;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL5;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_resumen_rubro;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL_rubro2;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL_rubro3;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL_rubro4;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL_rubro5;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL_rubro6;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL6;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL6_1;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL6_2;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL6_3;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL6_4;
    DROP TABLE IF EXISTS schm_workspace.universo_compra_TOTAL6_5;

    /*	===========================================================================================================
		=== Control de versiones visual ===
		2023-12-04 -- v01 -- Pedro Muñoz		--	Versión actualizada

		=== Información adicional:
		Proceso que genera un RFM global de clientes que compran en SPOS, y un RFM que compran en rubros Transbank.
		===========================================================================================================
	*/

END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_spos_transacciones_maestro(v_year int4, v_month int4)
	LANGUAGE plpgsql
AS $$
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.spos_tda_maestro;
    CREATE TABLE schm_workspace.spos_tda_maestro AS
    SELECT fechora_transac as fecha,
    periodo,
    CAST(cod_comercio_pos as int) as codigo_comercio,
    nombre_fan_comercio as nombre_comercio,
    desc_rubro as actividad_comercio,
    b.rut AS rut,
    CAST(ctacte_titular as bigint) as cuenta,
    monto_1 as venta_tarjeta,
    152 as codpais,
    0 as totcuotas,
    nro_terjeta_deb as pan,
    CAST(cod_rubro_nac as int) as codact,
    0 as porint,
    'maestro' as tipo_tarjeta,
    ind_comercio,
    cod_autoriz as numaut,
    "year",
    "month"
    /* case when cod_comercio_deb <> 83382700 then 'spos' else 'tda' end as tipo */
    from br_dm_prod_bigdata_borlg_db.tabla_dem as a
    left join schm_workspace.spos_trxmaestro_cuentas as b
    on CAST(ctacte_titular as bigint) = b.cuenta
    WHERE "year" = v_year and "month" = v_month
    and cod_comercio_deb = '83382700';

    DROP TABLE IF EXISTS schm_workspace.spos_spos_maestro;
    CREATE TABLE schm_workspace.spos_spos_maestro AS
    SELECT fechora_transac as fecha,
    periodo,
    CAST(cod_comercio_pos as int) as codigo_comercio,
    nombre_fan_comercio as nombre_comercio,
    desc_rubro as actividad_comercio,
    b.rut AS rut,
    CAST(ctacte_titular as bigint) as cuenta,
    monto_1 as venta_tarjeta,
    152 as codpais,
    0 as totcuotas,
    nro_terjeta_deb as pan,
    CAST(cod_rubro_nac as int) as codact,
    0 as porint,
    'maestro' as tipo_tarjeta,
    ind_comercio,
    cod_autoriz as numaut,
    "year",
    "month"
    /* case when cod_comercio_deb <> 83382700 then 'spos' else 'tda' end as tipo */
    from br_dm_prod_bigdata_borlg_db.tabla_dem as a
    left join schm_workspace.spos_trxmaestro_cuentas as b
    on CAST(ctacte_titular as bigint) = b.cuenta
    WHERE "year" = v_year and "month" = v_month
    and cod_comercio_deb <> '83382700';

    DELETE
    FROM schm_data_analytics.spos_tda_maestro
    WHERE "year" = v_year and "month" = v_month
    ;

    INSERT INTO schm_data_analytics.spos_tda_maestro
        (fecha, periodo, codigo_comercio, nombre_comercio, actividad_comercio, rut, cuenta, venta_tarjeta, codpais, totcuotas, pan, codact, porint, tipo_tarjeta, ind_comercio, numaut, "year", "month")
    SELECT fecha, periodo, codigo_comercio, nombre_comercio, actividad_comercio, rut, cuenta, venta_tarjeta, codpais, totcuotas, pan, codact, porint, tipo_tarjeta, ind_comercio, numaut, "year", "month"
    FROM schm_workspace.spos_tda_maestro;

    DELETE
    FROM schm_data_analytics.spos_spos_maestro
    WHERE "year" = v_year and "month" = v_month
    ;

    INSERT INTO schm_data_analytics.spos_spos_maestro
        (fecha, periodo, codigo_comercio, nombre_comercio, actividad_comercio, rut, cuenta, venta_tarjeta, codpais, totcuotas, pan, codact, porint, tipo_tarjeta, ind_comercio, numaut, "year", "month")
    SELECT fecha, periodo, codigo_comercio, nombre_comercio, actividad_comercio, rut, cuenta, venta_tarjeta, codpais, totcuotas, pan, codact, porint, tipo_tarjeta, ind_comercio, numaut, "year", "month"
    FROM schm_workspace.spos_spos_maestro;


END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_spos_transacciones_pasivos(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
BEGIN

	DROP TABLE IF EXISTS schm_workspace.spos_cuentas;
	DROP TABLE IF EXISTS schm_workspace.spos_data_imp_data;
	DROP TABLE IF EXISTS schm_workspace.spos_data_imp_data2;
	DROP TABLE IF EXISTS schm_workspace.spos_cruce;
	DROP TABLE IF EXISTS schm_workspace.spos_base_total_fin;

	DROP TABLE IF EXISTS schm_workspace.spos_mcd;
	DROP TABLE IF EXISTS schm_workspace.spos_mcchek;
	DROP TABLE IF EXISTS schm_workspace.spos_ctacte;

	DROP TABLE IF EXISTS schm_workspace.spos_tda_mcd;
	DROP TABLE IF EXISTS schm_workspace.spos_tda_mcchek;
	DROP TABLE IF EXISTS schm_workspace.spos_tda_ctacte;

    CREATE TABLE schm_workspace.spos_cuentas  AS
        SELECT
         a2.pemid_gls_nro_dct_ide_k as rut
        ,a.codent
        ,a.centalta
        ,a.cuenta
        ,a1.producto
        ,a.codpais
        ,a.localidad
        ,a.fectrn
        ,a.hortrn
        ,a.fectrn as cod_fecha
        ,a.codact
        ,a.codcom
        ,a.codcom as codigo_comercio_ant
        ,a.nomcom
        ,sum(a.imptrn) as venta_tarjeta
        ,a.tipfran
        ,a.totcuotas
        ,a.porint
        ,a.PAN
        ,substring(a.pan,13,4) pan2
        ,a.tipofac
        ,a.impcca
        ,a.clamoncca
        ,a.impdiv
        ,substring(a.modentdat,1,2) as ind_online
        ,a.numaut
        ,a3.desact as rubro
    FROM br_dm_prod_bigdata_reporitf_db.mpdt004 a
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 a1
        ON (a.codent=a1.codent)
       AND (a.centalta=a1.centalta)
       AND (a.cuenta=a1.cuenta)
    INNER JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide a2
        ON a1.identcli=a2.pemid_nro_inn_ide
    INNER JOIN br_dm_prod_bigdata_reporitf_db.mpdt039 a3
        ON a.codact = a3.codact
    WHERE  a.codrespu = '000'
        AND a.tipfran <> 1004
        AND a.fectrn >= v_fecha_inicio -- fecha inicio
        AND a.fectrn <= v_fecha_fin -- fecha fin
        AND substring(a.pan::varchar ,1,6) = '525384'
    group by
        a.codent
        ,a.centalta
        ,a.cuenta
        ,a.codpais
        ,a.localidad
        ,a.fectrn
        ,a.hortrn
        ,a.codact
        ,a.codcom
        ,a.nomcom
        ,a.tipfran
        ,a.totcuotas
        ,a.porint
        ,a.pan
        ,a.tipofac
        ,a.impcca
        ,a.clamoncca
        ,a.impdiv
        ,substring(a.modentdat,1,2)
        ,a.numaut
        ,a2.pemid_gls_nro_dct_ide_k
        ,a3.desact
        ,substring(a.pan,13,4)
        ,a1.producto;

     CREATE TABLE schm_workspace.spos_data_imp_data AS
     SELECT
        fecha
        ,end_point
        ,de42_card_acceptor_id_code
        ,de38_codigo_de_aprobacion
        ,de12_fecha_hora_transaccion
        ,de2_numero_de_tarjeta
     FROM br_dm_prod_bigdata_segcom_db.ipm_data
     WHERE
        to_date(20*1000000 + floor(de12_fecha_hora_transaccion/1000000), 'YYYYMMDD')
            between v_fecha_inicio and v_fecha_fin;

	CREATE TABLE schm_workspace.spos_data_imp_data2 AS
    SELECT
        *
        ,substring(de2_numero_de_tarjeta,length(de2_numero_de_tarjeta)-3,4) as auto
        ,'20'||substring(de12_fecha_hora_transaccion,1,6) as fec_num
        ,substring(de12_fecha_hora_transaccion,7,2)
             ||':'||substring(de12_fecha_hora_transaccion,9,2)
             ||':'||substring(de12_fecha_hora_transaccion,11,2) as hora
    FROM schm_workspace.spos_data_imp_data;

	CREATE TABLE schm_workspace.spos_cruce AS
    SELECT
        a.*
        ,b.de42_card_acceptor_id_code as codigo_comercio
    FROM schm_workspace.spos_cuentas as a
    LEFT JOIN schm_workspace.spos_data_imp_data2 as b
        ON (a.cod_fecha=b.fec_num)
        AND (a.numaut=b.de38_codigo_de_aprobacion) AND (a.pan2=b.auto);

-- ==================================================================================================;
-- TIPO DE Actividad;
-- ==================================================================================================;
    CREATE TABLE schm_workspace.spos_base_total_fin as
    SELECT
        *
        ,CASE
            WHEN upper(nomcom) like 'RIPLEY %' then 'TIENDA'
            ELSE 'SPOS'
        END as lugar
        ,CASE
            when producto='13' then 'CTACTE'
            WHEN producto='08' THEN 'MCD'
            WHEN producto='12' THEN 'MC CHECK'
        END as tipo_tarjeta
    FROM schm_workspace.spos_cruce;

-- ==================================================================================================;
-- TABLA SPOS resumida;
-- ==================================================================================================;
    CREATE TABLE schm_workspace.spos_mcd AS
    SELECT
        x.cod_fecha as fecha
        ,x.hortrn as hora
        ,schm_artifacts.f_period(x.cod_fecha) as periodo
        ,x.codigo_comercio_ant as codigo_comercio_ant
        ,x.codigo_comercio
        ,x.nomcom as nombre_comercio
        ,x.rubro as actividad_comercio
        ,x.rut
        ,x.venta_tarjeta
        ,x.codpais
        ,x.totcuotas
        ,x.pan
        ,x.codact
        ,x.porint
        ,x.codent
        ,x.centalta
        ,x.cuenta
        ,x.tipo_tarjeta
        ,substring(x.pan,13,4) as pan2
        ,concat(concat(concat(x.codent, x.centalta), x.cuenta), substring(x.pan,13,4)) as contrato_pan
        ,CASE
            WHEN x.ind_online in ('81','10') THEN 1
            ELSE 0
         END as si_digital
        ,ind_online as ind_pan
        ,x.producto
        ,x.tipofac
        ,x.numaut
    FROM schm_workspace.spos_base_total_fin as x
    WHERE
        lugar = 'SPOS'
    AND tipo_tarjeta = 'MCD';

	DELETE
        FROM schm_data_analytics.spos_mcd
    WHERE
        periodo = v_periodo;

	INSERT INTO schm_data_analytics.spos_mcd
	    (fecha, hora, periodo, codigo_comercio_ant, codigo_comercio, nombre_comercio, actividad_comercio, rut, venta_tarjeta, codpais, totcuotas, pan, codact, porint, codent, centalta, cuenta, tipo_tarjeta, pan2, contrato_pan, si_digital, ind_pan, producto, tipofac, numaut)
	SELECT fecha, hora, periodo, codigo_comercio_ant, codigo_comercio, nombre_comercio, actividad_comercio, rut, venta_tarjeta, codpais, totcuotas, pan, codact, porint, codent, centalta, cuenta, tipo_tarjeta, pan2, contrato_pan, si_digital, ind_pan, producto, tipofac, numaut
	FROM schm_workspace.spos_mcd;

-- ==================================================================================================;

	CREATE TABLE schm_workspace.spos_mcchek AS
    SELECT
        x.cod_fecha as fecha
        ,x.hortrn as hora
        ,schm_artifacts.f_period(x.cod_fecha) as periodo
        ,x.codigo_comercio_ant as codigo_comercio_ant
        ,x.codigo_comercio
        ,x.nomcom as nombre_comercio
        ,x.rubro as actividad_comercio
        ,x.rut
        ,x.venta_tarjeta
        ,x.codpais
        ,x.totcuotas
        ,x.pan
        ,x.codact
        ,x.porint
        ,x.codent
        ,x.centalta
        ,x.cuenta
        ,x.tipo_tarjeta
        ,substring(x.pan,13,4) as pan2
        ,concat(concat(concat(x.codent, x.centalta), x.cuenta), substring(x.pan,13,4)) as contrato_pan
        ,CASE
            WHEN x.ind_online in ('81','10') THEN 1
            ELSE 0
         END as si_digital
        ,ind_online as ind_pan
        ,x.producto
        ,x.tipofac
        ,x.numaut
    FROM schm_workspace.spos_base_total_fin as x
    WHERE
        lugar='SPOS'
    AND TIPO_TARJETA='MC CHECK';

	DELETE
        FROM schm_data_analytics.spos_mcchek
    WHERE
        periodo = v_periodo;

	INSERT INTO schm_data_analytics.spos_mcchek
	    (fecha, hora, periodo, codigo_comercio_ant, codigo_comercio, nombre_comercio, actividad_comercio, rut, venta_tarjeta, codpais, totcuotas, pan, codact, porint, codent, centalta, cuenta, tipo_tarjeta, pan2, contrato_pan, si_digital, ind_pan, producto, tipofac, numaut)
	SELECT fecha, hora, periodo, codigo_comercio_ant, codigo_comercio, nombre_comercio, actividad_comercio, rut, venta_tarjeta, codpais, totcuotas, pan, codact, porint, codent, centalta, cuenta, tipo_tarjeta, pan2, contrato_pan, si_digital, ind_pan, producto, tipofac, numaut
	FROM schm_workspace.spos_mcchek;

	-- ==================================================================================================;

	CREATE TABLE schm_workspace.spos_ctacte AS
    SELECT
        x.cod_fecha as fecha
        ,x.hortrn as hora
        ,schm_artifacts.f_period(x.cod_fecha) as periodo
        ,x.codigo_comercio_ant as codigo_comercio_ant
        ,x.codigo_comercio
        ,x.nomcom as nombre_comercio
        ,x.rubro as actividad_comercio
        ,x.rut
        ,x.venta_tarjeta
        ,x.codpais
        ,x.totcuotas
        ,x.pan
        ,x.codact
        ,x.porint
        ,x.codent
        ,x.centalta
        ,x.cuenta
        ,x.tipo_tarjeta
        ,substring(x.pan,13,4) as pan2
        ,concat(concat(concat(x.codent, x.centalta), x.cuenta), substring(x.pan,13,4)) as contrato_pan
        ,CASE
            WHEN x.ind_online in ('81','10') THEN 1
            ELSE 0
         END as si_digital
        ,ind_online as ind_pan
        ,x.producto
        ,x.tipofac
        ,x.numaut
    FROM schm_workspace.spos_base_total_fin as x
    WHERE
        lugar='SPOS'
    AND TIPO_TARJETA='CTACTE';

	DELETE
        FROM schm_data_analytics.spos_ctacte
    WHERE
        periodo = v_periodo;

	INSERT INTO schm_data_analytics.spos_ctacte
	    (fecha, hora, periodo, codigo_comercio_ant, codigo_comercio, nombre_comercio, actividad_comercio, rut, venta_tarjeta, codpais, totcuotas, pan, codact, porint, codent, centalta, cuenta, tipo_tarjeta, pan2, contrato_pan, si_digital, ind_pan, producto, tipofac, numaut)
	SELECT fecha, hora, periodo, codigo_comercio_ant, codigo_comercio, nombre_comercio, actividad_comercio, rut, venta_tarjeta, codpais, totcuotas, pan, codact, porint, codent, centalta, cuenta, tipo_tarjeta, pan2, contrato_pan, si_digital, ind_pan, producto, tipofac, numaut
	FROM schm_workspace.spos_ctacte;

-- ==================================================================================================;
-- TABLA SPOS resumida;
-- ==================================================================================================;

	CREATE TABLE schm_workspace.spos_tda_mcd AS
    SELECT
        x.cod_fecha as fecha
        ,x.hortrn as hora
        ,schm_artifacts.f_period(x.cod_fecha) as periodo
        ,x.codigo_comercio_ant as codigo_comercio_ant
        ,x.codigo_comercio
        ,x.nomcom as nombre_comercio
        ,x.rubro as actividad_comercio
        ,x.rut
        ,x.venta_tarjeta
        ,x.codpais
        ,x.totcuotas
        ,x.pan
        ,x.codact
        ,x.porint
        ,x.codent
        ,x.centalta
        ,x.cuenta
        ,x.tipo_tarjeta
        ,substring(x.pan,13,4) as pan2
        ,concat(concat(concat(x.codent, x.centalta), x.cuenta), substring(x.pan,13,4)) as contrato_pan
        ,CASE
            WHEN x.ind_online in ('81','10') THEN 1
            ELSE 0
         END as si_digital
        ,ind_online as ind_pan
        ,x.producto
        ,x.tipofac
        ,x.numaut
    FROM schm_workspace.spos_base_total_fin as x
    WHERE
        lugar='TIENDA'
    AND TIPO_TARJETA='MCD';

	DELETE
        FROM schm_data_analytics.spos_tda_mcd
    WHERE
        periodo = v_periodo;

	INSERT INTO schm_data_analytics.spos_tda_mcd
	    (fecha, hora, periodo, codigo_comercio_ant, codigo_comercio, nombre_comercio, actividad_comercio, rut, venta_tarjeta, codpais, totcuotas, pan, codact, porint, codent, centalta, cuenta, tipo_tarjeta, pan2, contrato_pan, si_digital, ind_pan, producto, tipofac, numaut)
	SELECT fecha, hora, periodo, codigo_comercio_ant, codigo_comercio, nombre_comercio, actividad_comercio, rut, venta_tarjeta, codpais, totcuotas, pan, codact, porint, codent, centalta, cuenta, tipo_tarjeta, pan2, contrato_pan, si_digital, ind_pan, producto, tipofac, numaut
	FROM schm_workspace.spos_tda_mcd;

-- ==================================================================================================;

	CREATE TABLE schm_workspace.spos_tda_mcchek AS
    SELECT
        x.cod_fecha as fecha
        ,x.hortrn as hora
        ,schm_artifacts.f_period(x.cod_fecha) as periodo
        ,x.codigo_comercio_ant as codigo_comercio_ant
        ,x.codigo_comercio
        ,x.nomcom as nombre_comercio
        ,x.rubro as actividad_comercio
        ,x.rut
        ,x.venta_tarjeta
        ,x.codpais
        ,x.totcuotas
        ,x.pan
        ,x.codact
        ,x.porint
        ,x.codent
        ,x.centalta
        ,x.cuenta
        ,x.tipo_tarjeta
        ,substring(x.pan,13,4) as pan2
        ,concat(concat(concat(x.codent, x.centalta), x.cuenta), substring(x.pan,13,4)) as contrato_pan
        ,CASE
            WHEN x.ind_online in ('81','10') THEN 1
            ELSE 0
         END as si_digital
        ,ind_online as ind_pan
        ,x.producto
        ,x.tipofac
        ,x.numaut
    FROM schm_workspace.spos_base_total_fin as x
    WHERE
        lugar='TIENDA'
    AND TIPO_TARJETA='MC CHEK';

	DELETE
        FROM schm_data_analytics.spos_tda_mcchek
    WHERE
        periodo = v_periodo;

	INSERT INTO schm_data_analytics.spos_tda_mcchek
	    (fecha, hora, periodo, codigo_comercio_ant, codigo_comercio, nombre_comercio, actividad_comercio, rut, venta_tarjeta, codpais, totcuotas, pan, codact, porint, codent, centalta, cuenta, tipo_tarjeta, pan2, contrato_pan, si_digital, ind_pan, producto, tipofac, numaut)
	SELECT fecha, hora, periodo, codigo_comercio_ant, codigo_comercio, nombre_comercio, actividad_comercio, rut, venta_tarjeta, codpais, totcuotas, pan, codact, porint, codent, centalta, cuenta, tipo_tarjeta, pan2, contrato_pan, si_digital, ind_pan, producto, tipofac, numaut
	FROM schm_workspace.spos_tda_mcchek;

-- ==================================================================================================;

	CREATE TABLE schm_workspace.spos_tda_ctacte AS
    SELECT
        x.cod_fecha as fecha
        ,x.hortrn as hora
        ,schm_artifacts.f_period(x.cod_fecha) as periodo
        ,x.codigo_comercio_ant as codigo_comercio_ant
        ,x.codigo_comercio
        ,x.nomcom as nombre_comercio
        ,x.rubro as actividad_comercio
        ,x.rut
        ,x.venta_tarjeta
        ,x.codpais
        ,x.totcuotas
        ,x.pan
        ,x.codact
        ,x.porint
        ,x.codent
        ,x.centalta
        ,x.cuenta
        ,x.tipo_tarjeta
        ,substring(x.pan,13,4) as pan2
        ,concat(concat(concat(x.codent, x.centalta), x.cuenta), substring(x.pan,13,4)) as contrato_pan
        ,CASE
            WHEN x.ind_online in ('81','10') THEN 1
            ELSE 0
         END as si_digital
        ,ind_online as ind_pan
        ,x.producto
        ,x.tipofac
        ,x.numaut
    FROM schm_workspace.spos_base_total_fin as x
    WHERE
        lugar='TIENDA'
    AND TIPO_TARJETA='CTACTE';

	DELETE
        FROM schm_data_analytics.spos_tda_ctacte
    WHERE
        periodo = v_periodo;

	INSERT INTO schm_data_analytics.spos_tda_ctacte
	    (fecha, hora, periodo, codigo_comercio_ant, codigo_comercio, nombre_comercio, actividad_comercio, rut, venta_tarjeta, codpais, totcuotas, pan, codact, porint, codent, centalta, cuenta, tipo_tarjeta, pan2, contrato_pan, si_digital, ind_pan, producto, tipofac, numaut)
	SELECT fecha, hora, periodo, codigo_comercio_ant, codigo_comercio, nombre_comercio, actividad_comercio, rut, venta_tarjeta, codpais, totcuotas, pan, codact, porint, codent, centalta, cuenta, tipo_tarjeta, pan2, contrato_pan, si_digital, ind_pan, producto, tipofac, numaut
	FROM schm_workspace.spos_tda_ctacte;

-- ==================================================================================================;

	DROP TABLE IF EXISTS schm_workspace.spos_cuentas;
	DROP TABLE IF EXISTS schm_workspace.spos_data_imp_data;
	DROP TABLE IF EXISTS schm_workspace.spos_data_imp_data2;
	DROP TABLE IF EXISTS schm_workspace.spos_cruce;
	DROP TABLE IF EXISTS schm_workspace.spos_base_total_fin;

	DROP TABLE IF EXISTS schm_workspace.spos_mcd;
	DROP TABLE IF EXISTS schm_workspace.spos_mcchek;
	DROP TABLE IF EXISTS schm_workspace.spos_ctacte;

	DROP TABLE IF EXISTS schm_workspace.spos_tda_mcd;
	DROP TABLE IF EXISTS schm_workspace.spos_tda_mcchek;
	DROP TABLE IF EXISTS schm_workspace.spos_tda_ctacte;
END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_spos_trx_seguros(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
	
begin
	
	
DROP TABLE IF EXISTS schm_workspace.spos_trx_seguros_mpdt512;


CREATE TABLE schm_workspace.spos_trx_seguros_mpdt512 AS
SELECT
     A.codconper AS contrato
     ,SUBSTRING(A.codconper,1,4) AS codent
     ,SUBSTRING(A.codconper,5,4) AS centalta
     ,SUBSTRING(A.codconper,9,12) AS cuenta
     ,A.tipofac
     ,schm_artifacts.f_period(A.fecproces) AS periodo
     ,A.fecmov
     ,A.fecproces
     ,A.imprec * 1 AS monto_recaudado
     ,A.pan
     ,A.idrefext AS glosa_propuesta_cuota
     ,CASE 
          WHEN A.tipofac = 5056 THEN 'SEGUROS TARJETA'
          WHEN A.tipofac = 5054 THEN 'SEGUROS OPEN MARKET' 
     END AS tipo_seguro
     ,A.codconrec
FROM br_dm_prod_bigdata_reporitf_db.mpdt512 A
WHERE A.tipofac IN (5056,5054) 
AND A.fecproces BETWEEN v_fecha_inicio AND v_fecha_fin;


/* Eliminar periodo a procesar en */ 
DELETE FROM schm_data_analytics.spos_trx_seguros
WHERE periodo = v_periodo;


INSERT INTO schm_data_analytics.spos_trx_seguros
SELECT
     A.contrato
     ,A.codent
     ,A.centalta
     ,A.cuenta
     ,A.tipofac
     ,A.periodo
     ,A.fecmov
     ,A.fecproces
     ,A.monto_recaudado
     ,A.pan
     ,A.glosa_propuesta_cuota
     ,A.tipo_seguro
     ,A.codconrec
     ,C.desconrec
     ,cast(E.pemid_gls_nro_dct_ide_k AS INT) AS rut
FROM schm_workspace.spos_trx_seguros_mpdt512  A
LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt510 C
     ON A.codconrec = C.codconrec
LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 D 
     ON A.cuenta = D.cuenta
     AND A.centalta = D.centalta
     AND A.codent = D.codent
LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide E
     ON D.identcli::BIGINT = E.pemid_nro_inn_ide;


DROP TABLE IF EXISTS schm_workspace.spos_trx_seguros_mpdt512;


END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_spos_vta_comercios(periodo_paso int4)
	LANGUAGE plpgsql
AS $$
	
	

BEGIN 
	--==========================================================================================;
	-- [00] borrado de tablas de paso;
	--==========================================================================================;

	DROP TABLE IF EXISTS schm_workspace.spos_vta_codcom;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_tc;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_td;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_chek;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_tc2;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_td2;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_chek2;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_tc3;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_td3;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_chek3;

	--==========================================================================================;
	-- [01] Codigos de comercio del periodo;
	--==========================================================================================;
	CREATE TABLE schm_workspace.SPOS_VTA_CODCOM AS 
	SELECT
		DISTINCT periodo_campana,
		codigo_comercio,
		marca_campana
	FROM
        br_dm_prod_bigdata_sftp_db.cod_com
	WHERE
		periodo_campana = 202310
	;


	--==========================================================================================;
	-- [02] Rescatar TRXs de comercios en Alianzas;
	--==========================================================================================;
	--------------------------------------------------------------------------------------------;
	-- [02.1] TRXs de Tarjeta de Credito;
	--------------------------------------------------------------------------------------------;

	CREATE TABLE schm_workspace.SPOS_VTA_TC AS 
	SELECT
		a.periodo,
		a.fecha,
		a.Tipo_Tarjeta,
		a.rut,
		a.codent,
		a.centalta,
		a.cuenta,
		a.CODACT,
		a.Venta_Tarjeta AS Monto,
		a.Codigo_Comercio,
		a.nombre_comercio,
		a.Actividad_Comercio,
		a.totcuotas,
		a.porint,
		CASE
			WHEN c.codigos_online IS NOT NULL
			AND a.periodo <= 202006 THEN 1
			ELSE COALESCE(a.si_digital, 0)
		END AS si_online,
		b.Marca_Campana,
		date_part(DAY, a.fecha) AS dia_nro,
		to_char(a.fecha, 'Day') AS dia_glosa
	FROM
		schm_data_analytics.spos_aut AS a
	INNER JOIN schm_workspace.SPOS_VTA_CODCOM AS b
	ON
		(a.codigo_comercio = b.codigo_comercio)
	LEFT JOIN schm_data_analytics.spos_codigos_online_spos AS c  
	ON
		a.codigo_comercio = c.codigos_online
	WHERE
		a.periodo = periodo_paso
	;
	--------------------------------------------------------------------------------------------;
	-- [02.2] TRXs de Tarjeta de debito;
	--------------------------------------------------------------------------------------------;

	CREATE TABLE schm_workspace.SPOS_VTA_TD AS 
	SELECT
		a.periodo,
		a.fecha,
		a.tipo AS Tipo_Tarjeta,
		a.rut,
		a.codent,
		a.centalta,
		a.cuenta,
		a.CODACT,
		a.Venta_Tarjeta AS Monto,
		a.Codigo_Comercio,
		a.nombre_comercio,
		a.Actividad_Comercio,
		0 AS totcuotas,
		0 AS porint,
		COALESCE(a.si_digital, 0) AS si_online,
		b.Marca_Campana,
		date_part(DAY, a.fecha) AS dia_nro,
		to_char(a.fecha, 'Day') AS dia_glosa
	FROM
		schm_data_analytics.mpdg_movimientos_debito AS a
	INNER JOIN schm_workspace.SPOS_VTA_CODCOM AS b
	ON
		(a.codigo_comercio = b.codigo_comercio)
	WHERE
		a.periodo = periodo_paso
		AND a.tipo_compra = 'SPOS'
	;
	--------------------------------------------------------------------------------------------;
	-- [02.3] TRXs de Tarjeta de MC  CHEK DEBITO;
	--------------------------------------------------------------------------------------------;


	CREATE TABLE schm_workspace.SPOS_VTA_CHEK AS 
	SELECT
		a.periodo,
		a.fecha,
		'MCCHEK DEBITO' AS Tipo_Tarjeta,
		a.rut,
		a.codent,
		a.centalta,
		a.cuenta,
		a.CODACT,
		a.Venta_Tarjeta AS Monto,
		a.Codigo_Comercio,
		a.nombre_comercio,
		a.Actividad_Comercio,
		0 AS totcuotas,
		0 AS porint,
		COALESCE(a.si_digital, 0) AS si_online,
		b.Marca_Campana,
		date_part(DAY, a.fecha) AS dia_nro,
		to_char(a.fecha, 'Day') AS dia_glosa
	FROM
		schm_data_analytics.mdpg_trx_mcchek AS a
	INNER JOIN schm_workspace.SPOS_VTA_CODCOM AS b
	ON
		(a.codigo_comercio = b.codigo_comercio)
	WHERE
		a.periodo = periodo_paso
		AND a.tipo_movimiento = 'SPOS'
	;
	------------------------------------------------------------------------------------------;
	--[03.] Marcar detalle del cliente;
	------------------------------------------------------------------------------------------;

	CREATE TABLE schm_workspace.SPOS_VTA_TC2 AS
	SELECT
		a.*,
		CASE
			WHEN 
	    (
			SELECT
				count(*)
			FROM
                schm_clientes.sas_clts_segm_gest_todas_part
			WHERE
				periodo = periodo_paso)>0 THEN COALESCE(d.segmento, 'SIN INFO')
			ELSE COALESCE(d1.segmento, 'SIN INFO')
		END AS SEGMENTO,
		COALESCE(c.categoria_gse, 'SIN INFO') AS GSE,
		COALESCE(b.SEXO, 'SIN INFO') AS SEXO,
		b.fecha_nacimiento
	FROM
		schm_workspace.SPOS_VTA_TC AS a
	LEFT JOIN (
		SELECT
			rut,
			fecha_nacimiento,
			sexo
		FROM
			schm_data_analytics.ctbl_demo_basket
		WHERE
			periodo =(
			SELECT
				max(periodo)
			FROM
				schm_data_analytics.ctbl_demo_basket)) AS b 
	ON
		(a.rut = b.rut)
	LEFT JOIN schm_data_analytics.adan_gse_corp AS c
	ON
		(a.rut = c.rut)
	LEFT JOIN schm_clientes.sas_clts_segm_gest_todas_part AS d
	ON
		(a.rut = d.rut)
		AND d.periodo = periodo_paso
	LEFT JOIN schm_clientes.sas_clts_segm_gest_todas_part AS d1
	ON
		(a.rut = d1.rut)
		AND d1.periodo =(
		SELECT
			max(periodo)
		FROM
        schm_clientes.sas_clts_segm_gest_todas_part
        )
	;

	CREATE TABLE schm_workspace.SPOS_VTA_Td2 AS
	SELECT
		a.*,
		CASE
			WHEN 
	(
			SELECT
				count(*)
			FROM
                schm_clientes.sas_clts_segm_gest_todas_part
			WHERE
				periodo = periodo_paso)>0 THEN COALESCE(d.segmento, 'SIN INFO')
			ELSE COALESCE(d1.segmento, 'SIN INFO')
		END AS SEGMENTO,
		COALESCE(c.categoria_gse, 'SIN INFO') AS GSE,
		COALESCE(b.SEXO, 'SIN INFO') AS SEXO,
		b.fecha_nacimiento
	FROM
		schm_workspace.SPOS_VTA_Td AS a
	LEFT JOIN (
		SELECT
			rut,
			fecha_nacimiento,
			sexo
		FROM
			schm_data_analytics.ctbl_demo_basket
		WHERE
			periodo =(
			SELECT
				max(periodo)
			FROM
				schm_data_analytics.ctbl_demo_basket)) AS b 
	ON
		(a.rut = b.rut)
	LEFT JOIN schm_data_analytics.adan_gse_corp AS c
	ON
		(a.rut = c.rut)
	LEFT JOIN schm_clientes.sas_clts_segm_gest_todas_part AS d
	ON
		(a.rut = d.rut)
		AND d.periodo = periodo_paso
	LEFT JOIN schm_clientes.sas_clts_segm_gest_todas_part AS d1
	ON
		(a.rut = d1.rut)
		AND d1.periodo =(
		SELECT
			max(periodo)
		FROM
			schm_clientes.sas_clts_segm_gest_todas_part)
	;

	CREATE TABLE schm_workspace.SPOS_VTA_CHEK2 AS
	SELECT
		a.*,
		CASE
			WHEN 
	(
			SELECT
				count(*)
			FROM
				schm_clientes.sas_clts_segm_gest_todas_part
			WHERE
				periodo = periodo_paso)>0 THEN COALESCE(d.segmento, 'SIN INFO')
			ELSE COALESCE(d1.segmento, 'SIN INFO')
		END AS SEGMENTO,
		COALESCE(c.categoria_gse, 'SIN INFO') AS GSE,
		COALESCE(b.SEXO, 'SIN INFO') AS SEXO,
		b.fecha_nacimiento
	FROM
		schm_workspace.SPOS_VTA_CHEK AS a
	LEFT JOIN (
		SELECT
			rut,
			fecha_nacimiento,
			sexo
		FROM
			schm_data_analytics.ctbl_demo_basket
		WHERE
			periodo =(
			SELECT
				max(periodo)
			FROM
				schm_data_analytics.ctbl_demo_basket)) AS b 
	ON
		(a.rut = b.rut)
	LEFT JOIN schm_data_analytics.adan_gse_corp AS c
	ON
		(a.rut = c.rut)
	LEFT JOIN schm_clientes.sas_clts_segm_gest_todas_part AS d
	ON
		(a.rut = d.rut)
		AND d.periodo = periodo_paso
	LEFT JOIN schm_clientes.sas_clts_segm_gest_todas_part AS d1
	ON
		(a.rut = d1.rut)
		AND d1.periodo =(
		SELECT
			max(periodo)
		FROM
			schm_clientes.sas_clts_segm_gest_todas_part)
	;


	--==========================================================================================;
	-- [04] Agrupar tabla de cara a un entregable;
	--==========================================================================================;
	CREATE TABLE schm_workspace.SPOS_VTA_TC3 AS 
	SELECT
		si_online,
		Periodo,
		CASE
			WHEN centalta = '0105' THEN 'MCCHEK TC'
			ELSE Tipo_Tarjeta
		END AS tipo_tarjeta,
		Marca_Campana,
		codigo_comercio,
		Dia_Glosa,
		Dia_Nro,
		CASE
			WHEN GSE IN ('C1a', 'C1b', 'C2') THEN 'C1C2'
			ELSE GSE
		END AS GSE,
		CASE
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 1 AND 10 THEN '01.[1,10]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 11 AND 20 THEN '02.]10,20]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 21 AND 30 THEN '03.]20,30]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 31 AND 40 THEN '04.]30,40]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 41 AND 50 THEN '05.]40,50]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 51 AND 50 THEN '06.]50,60]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 61 AND 50 THEN '07.]60,70]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 71 AND 50 THEN '08.]70,80]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 81 AND 50 THEN '09.]80,90]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 91 AND 50 THEN '10.]90,100]'
			ELSE '11. SIN INFO'
		END AS tramo_edad,
		sexo,
		count(rut) AS Nro_TRXs,
		count(DISTINCT rut) AS Nro_Clientes,
		sum(MONTO) AS Mto_TRXs
	FROM
		schm_workspace.SPOS_VTA_TC2
	GROUP BY
		si_online,
		Periodo,
		CASE
			WHEN centalta = '0105' THEN 'MCCHEK TC'
			ELSE Tipo_Tarjeta
		END,
		Marca_Campana,
		codigo_comercio,
		Dia_Glosa,
		Dia_Nro,
		CASE
			WHEN GSE IN ('C1a', 'C1b', 'C2') THEN 'C1C2'
			ELSE GSE
		END ,
		CASE
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 1 AND 10 THEN '01.[1,10]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 11 AND 20 THEN '02.]10,20]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 21 AND 30 THEN '03.]20,30]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 31 AND 40 THEN '04.]30,40]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 41 AND 50 THEN '05.]40,50]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 51 AND 50 THEN '06.]50,60]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 61 AND 50 THEN '07.]60,70]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 71 AND 50 THEN '08.]70,80]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 81 AND 50 THEN '09.]80,90]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 91 AND 50 THEN '10.]90,100]'
			ELSE '11. SIN INFO'
		END ,
		sexo,
		fecha_nacimiento
	;


	CREATE TABLE schm_workspace.SPOS_VTA_Td3 AS 
	SELECT
		si_online,
		Periodo,
		tipo_tarjeta,
		Marca_Campana,
		codigo_comercio,
		Dia_Glosa,
		Dia_Nro,
		CASE
			WHEN GSE IN ('C1a', 'C1b', 'C2') THEN 'C1C2'
			ELSE GSE
		END AS GSE,
		CASE
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 1 AND 10 THEN '01.[1,10]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 11 AND 20 THEN '02.]10,20]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 21 AND 30 THEN '03.]20,30]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 31 AND 40 THEN '04.]30,40]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 41 AND 50 THEN '05.]40,50]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 51 AND 50 THEN '06.]50,60]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 61 AND 50 THEN '07.]60,70]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 71 AND 50 THEN '08.]70,80]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 81 AND 50 THEN '09.]80,90]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 91 AND 50 THEN '10.]90,100]'
			ELSE '11. SIN INFO'
		END AS tramo_edad,
		sexo,
		count(rut) AS Nro_TRXs,
		count(DISTINCT rut) AS Nro_Clientes,
		sum(MONTO) AS Mto_TRXs
	FROM
		schm_workspace.SPOS_VTA_Td2
	GROUP BY
		si_online,
		Periodo,
		tipo_tarjeta,
		Marca_Campana,
		codigo_comercio,
		Dia_Glosa,
		Dia_Nro,
		CASE
			WHEN GSE IN ('C1a', 'C1b', 'C2') THEN 'C1C2'
			ELSE GSE
		END ,
		CASE
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 1 AND 10 THEN '01.[1,10]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 11 AND 20 THEN '02.]10,20]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 21 AND 30 THEN '03.]20,30]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 31 AND 40 THEN '04.]30,40]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 41 AND 50 THEN '05.]40,50]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 51 AND 50 THEN '06.]50,60]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 61 AND 50 THEN '07.]60,70]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 71 AND 50 THEN '08.]70,80]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 81 AND 50 THEN '09.]80,90]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 91 AND 50 THEN '10.]90,100]'
			ELSE '11. SIN INFO'
		END ,
		sexo,
		fecha_nacimiento
	;


	CREATE TABLE schm_workspace.SPOS_VTA_CHEK3 AS 
	SELECT
		si_online,
		Periodo,
		tipo_tarjeta,
		Marca_Campana,
		codigo_comercio,
		Dia_Glosa,
		Dia_Nro,
		CASE
			WHEN GSE IN ('C1a', 'C1b', 'C2') THEN 'C1C2'
			ELSE GSE
		END AS GSE,
		CASE
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 1 AND 10 THEN '01.[1,10]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 11 AND 20 THEN '02.]10,20]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 21 AND 30 THEN '03.]20,30]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 31 AND 40 THEN '04.]30,40]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 41 AND 50 THEN '05.]40,50]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 51 AND 50 THEN '06.]50,60]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 61 AND 50 THEN '07.]60,70]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 71 AND 50 THEN '08.]70,80]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 81 AND 50 THEN '09.]80,90]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 91 AND 50 THEN '10.]90,100]'
			ELSE '11. SIN INFO'
		END AS tramo_edad,
		sexo,
		count(rut) AS Nro_TRXs,
		count(DISTINCT rut) AS Nro_Clientes,
		sum(MONTO) AS Mto_TRXs
	FROM
		schm_workspace.SPOS_VTA_CHEK2
	GROUP BY
		si_online,
		Periodo,
		Tipo_Tarjeta ,
		Marca_Campana,
		codigo_comercio,
		Dia_Glosa,
		Dia_Nro,
		CASE
			WHEN GSE IN ('C1a', 'C1b', 'C2') THEN 'C1C2'
			ELSE GSE
		END ,
		CASE
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 1 AND 10 THEN '01.[1,10]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 11 AND 20 THEN '02.]10,20]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 21 AND 30 THEN '03.]20,30]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 31 AND 40 THEN '04.]30,40]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 41 AND 50 THEN '05.]40,50]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 51 AND 50 THEN '06.]50,60]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 61 AND 50 THEN '07.]60,70]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 71 AND 50 THEN '08.]70,80]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 81 AND 50 THEN '09.]80,90]'
			WHEN datediff(YEAR,
			fecha_nacimiento,
			to_date(periodo_paso, 'YYYYMMDD')) BETWEEN 91 AND 50 THEN '10.]90,100]'
			ELSE '11. SIN INFO'
		END ,
		sexo,
		fecha_nacimiento
	;


	--==========================================================================================;
	-- [05] Guardado en DURO;
	--==========================================================================================;
	CREATE TABLE IF NOT EXISTS schm_data_analytics.spos_vta_comercios
	(si_online int,
	Periodo int ,
	tipo_tarjeta varchar(30),
	Marca_Campana varchar(30),
	codigo_comercio bigint,
	Dia_Glosa varchar(30),
	Dia_Nro int,
	GSE varchar(30),
	tramo_edad varchar(30),
	sexo varchar(30),
	Nro_TRXs bigint,
	 Nro_Clientes bigint,
	Mto_TRXs bigint
	)
	;


	DELETE
		schm_data_analytics.spos_vta_comercios
	WHERE
		periodo = periodo_paso;

	INSERT
		INTO
		schm_data_analytics.spos_vta_comercios
	SELECT
		*
	FROM
		schm_workspace.SPOS_VTA_TC3
	;


	INSERT
		INTO
		schm_data_analytics.spos_vta_comercios
	SELECT
		*
	FROM
		schm_workspace.SPOS_VTA_Td3
	;


	INSERT
		INTO
		schm_data_analytics.spos_vta_comercios
	SELECT
		*
	FROM
		schm_workspace.SPOS_VTA_CHEK3
	;


	DROP TABLE IF EXISTS schm_workspace.spos_vta_codcom;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_tc;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_td;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_chek;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_tc2;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_td2;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_chek2;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_tc3;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_td3;
	DROP TABLE IF EXISTS schm_workspace.spos_vta_chek3;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-10-31 -- v01 -- Pedro Muñoz		-- Versión original.

	=== Información adicional:
	Proceso que mira la venta a nivel de código comercial de la promoción del mes.
	===========================================================================================================
*/

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_spos_vta_rubros(periodo_paso int4)
	LANGUAGE plpgsql
AS $$
	


BEGIN

	DROP TABLE IF EXISTS schm_workspace.spos_Panes_rubro ;
	DROP TABLE IF EXISTS schm_workspace.spos_TC_rubro;
	DROP TABLE IF EXISTS schm_workspace.spos_TD_rubro;
	DROP TABLE IF EXISTS schm_workspace.spos_MCCHEK_rubro;
	DROP TABLE IF EXISTS schm_workspace.spos_seg_rubro;
	DROP TABLE IF EXISTS schm_workspace.spos_TC_rubro2;
	DROP TABLE IF EXISTS schm_workspace.spos_TD_rubro2;
	DROP TABLE IF EXISTS schm_workspace.spos_MCCHEK_rubro2;
	DROP TABLE IF EXISTS schm_workspace.spos_TC_rubro3;
	DROP TABLE IF EXISTS schm_workspace.spos_TD_rubro3;
	DROP TABLE IF EXISTS schm_workspace.spos_MCCHEK_rubro3;
	DROP TABLE IF EXISTS schm_workspace.spos_seg_rubro2;
	DROP TABLE IF EXISTS schm_workspace.spos_TC_rubro4;
	DROP TABLE IF EXISTS schm_workspace.spos_primer_agrupamiento;
	DROP TABLE IF EXISTS schm_workspace.spos_primer_agrupamiento2;
	DROP TABLE IF EXISTS schm_workspace.spos_primer_agrupamiento3;
	DROP TABLE IF EXISTS schm_workspace.spos_primer_agrupamiento4;

	--universo de plasticos para caracterizar el producto
	create table schm_workspace.spos_Panes_rubro as
	select
	G.PAN,
	J.DESTIPT  TIPO_TARJETA_RSAT
	FROM br_dm_prod_bigdata_reporitf_db.MPDT009 G
	left join br_dm_prod_bigdata_reporitf_db.MPDT026 J
	on(j.CODMAR=G.codmar) and (J.INDTIPT=G.INDTIPT)
	;

	--venta en spos

	CREATE TABLE schm_workspace.spos_TC_rubro AS
	select
	periodo,
	fecha,
	Tipo_Tarjeta,
	rut,
	codent,
	centalta,
	cuenta,
	CODACT,
	Venta_Tarjeta as Monto,
	Codigo_Comercio,
	case when CODPAIS=152 then 1 else 0 end as SI_Nacional,
	case when totcuotas<=12  and totcuotas<=9 then '0'||totcuotas||'.'||totcuotas
	when totcuotas<=12  and totcuotas>9 then totcuotas||'.'||totcuotas
	else '13.>12' end as totcuotas ,
	case when porint>0 then 1 else 0 end as porint,
	si_digital AS si_online,
	pan
	from schm_data_analytics.spos_aut
	WHERE periodo=periodo_paso
	;

	--recaudacion de seguros

	CREATE TABLE schm_workspace.spos_seg_rubro AS
	select
	periodo,
	fecmov AS fecha,
	'TAM' AS Tipo_Tarjeta,
	rut,
	codent,
	centalta,
	cuenta,
	0 AS CODACT,
	monto_recaudado as Monto,
	0 AS Codigo_Comercio,
	1 as SI_Nacional,
	'00.0' as totcuotas ,
	0 as porint,
	1 AS si_online,
	pan,
	'SEGUROS RIPLEY OM' AS RUBRO_TBK,
	date_part(DAY,fecmov) as dia_nro,
	to_char(fecmov,'Day') as dia_glosa,
	'SEGUROS RIPLEY OM' AS FAMILIA_GESTION
	from schm_data_analytics.spos_trx_seguros
	WHERE periodo=periodo_paso
	AND CODCONREC not in ('S201','S083','S170')
	and TIPO_SEGURO<>'SEGUROS TARJETA'
	and monto_recaudado<>476454338
	;


	-- venta debito

	CREATE TABLE schm_workspace.spos_TD_rubro AS
	SELECT
	periodo,
	fecha,
	descripcion_fisa,
	tipo AS tipo_tarjeta,
	rut,
	codact,
	venta_tarjeta,
	codigo_comercio,
	case when CODPAIS=152 then 1 else 0 end as SI_Nacional,
	'00.0' AS totcuotas,
	0 AS porint,
	si_digital AS si_online,
	pan
	FROM schm_data_analytics.mpdg_movimientos_debito
	WHERE periodo=periodo_paso AND tipo_compra='SPOS'
	;

	--informacion de mcchek

	CREATE TABLE schm_workspace.spos_MCCHEK_rubro AS
	select
	periodo,
	fecha,
	'MCCHEK DEBITO' AS Tipo_Tarjeta,
	rut,
	codent,
	centalta,
	cuenta,
	CODACT,
	Venta_Tarjeta as Monto,
	Codigo_Comercio,
	case when CODPAIS=152 then 1 else 0 end as SI_Nacional,
	'00.0' as totcuotas ,
	0 as porint,
	si_digital AS si_online,
	pan
	from schm_data_analytics.mdpg_trx_mcchek
	WHERE periodo=periodo_paso AND tipo_movimiento='SPOS';


	--agregar informacion de rubro transbank

	CREATE TABLE schm_workspace.spos_TC_rubro2 AS
	SELECT
	a.*,
	COALESCE(b.rubro_gestion_spos,'Otros Rubros SPOS') AS RUBRO_TBK,
	date_part(DAY,fecha) as dia_nro,
	to_char(fecha,'Day') as dia_glosa,
	coalesce(b.FAMILIA_GESTION,'Otros Rubros SPOS') as FAMILIA_GESTION
	FROM schm_workspace.spos_TC_rubro AS a
	LEFT JOIN schm_data_analytics.spos_tabla_arbol AS b
	ON a.codact=b.cod_act
	;

	CREATE TABLE schm_workspace.spos_TD_rubro2 AS
	SELECT
	a.*,
	COALESCE(CASE WHEN a.descripcion_fisa IN ('COMPRA NACIONAL',
	'COMPRA INTERNACIONAL') THEN c.rubro_gestion_spos ELSE b.rubro_gestion_spos END,
	'Otros Rubros SPOS') AS RUBRO_TBK,
	date_part(DAY,fecha) as dia_nro,
	to_char(fecha,'Day') as dia_glosa,
	COALESCE(CASE WHEN a.descripcion_fisa IN ('COMPRA NACIONAL',
	'COMPRA INTERNACIONAL') THEN c.FAMILIA_GESTION ELSE b.FAMILIA_GESTION END,
	'Otros Rubros SPOS') as FAMILIA_GESTION
	FROM schm_workspace.spos_TD_rubro AS a
	LEFT JOIN schm_data_analytics.spos_tabla_arbol AS b
	ON a.codact=b.cod_act
	LEFT JOIN schm_data_analytics.spos_tabla_arbol AS c
	ON a.codact=c.cod_rubro
	;

	CREATE TABLE schm_workspace.spos_MCCHEK_rubro2 AS
	SELECT
	a.*,
	COALESCE(b.rubro_gestion_spos,'Otros Rubros SPOS') AS RUBRO_TBK,
	date_part(DAY,fecha) as dia_nro,
	to_char(fecha,'Day') as dia_glosa,
	coalesce(b.FAMILIA_GESTION,'Otros Rubros SPOS') as FAMILIA_GESTION
	FROM schm_workspace.spos_MCCHEK_rubro AS a
	LEFT JOIN schm_data_analytics.spos_tabla_arbol AS b
	ON a.codact=b.cod_act
	;

	-- agregar GSE

	CREATE TABLE schm_workspace.spos_TC_rubro3 AS
	SELECT
	a.*,
	b.categoria_gse,
	c.TIPO_TARJETA_RSAT
	FROM  schm_workspace.spos_TC_rubro2 AS a
	LEFT JOIN schm_data_analytics.adan_gse_corp AS b
	on(a.rut=b.rut)
	LEFT JOIN schm_workspace.spos_Panes_rubro AS c
	on(a.pan=c.pan)
	;


	CREATE TABLE schm_workspace.spos_TD_rubro3 AS
	SELECT
	a.*,
	b.categoria_gse,
	c.TIPO_TARJETA_RSAT
	FROM  schm_workspace.spos_TD_rubro2 AS a
	LEFT JOIN schm_data_analytics.adan_gse_corp AS b
	on(a.rut=b.rut)
	LEFT JOIN schm_workspace.spos_Panes_rubro AS c
	on(a.pan=c.pan)
	;

	CREATE TABLE schm_workspace.spos_MCCHEK_rubro3 AS
	SELECT
	a.*,
	b.categoria_gse,
	c.TIPO_TARJETA_RSAT
	FROM  schm_workspace.spos_MCCHEK_rubro2 AS a
	LEFT JOIN schm_data_analytics.adan_gse_corp AS b
	on(a.rut=b.rut)
	LEFT JOIN schm_workspace.spos_Panes_rubro AS c
	on(a.pan=c.pan)
	;

	CREATE TABLE schm_workspace.spos_seg_rubro2 AS
	SELECT
	a.*,
	b.categoria_gse,
	c.TIPO_TARJETA_RSAT
	FROM  schm_workspace.spos_seg_rubro AS a
	LEFT JOIN schm_data_analytics.adan_gse_corp AS b
	on(a.rut=b.rut)
	LEFT JOIN schm_workspace.spos_Panes_rubro AS c
	on(a.pan=c.pan)
	;


	--codigos online spos antiguo
	CREATE TABLE schm_workspace.spos_TC_rubro4 AS
	SELECT
	periodo,
	fecha,
	Tipo_Tarjeta,
	rut,
	codent,
	centalta,
	cuenta,
	CODACT,
	Monto,
	Codigo_Comercio,
	SI_Nacional,
	 totcuotas ,
	 porint,
	CASE WHEN b.codigos_online IS NOT NULL AND a.periodo<=202006   THEN 1 ELSE COALESCE(si_online,0) END AS si_online,
	pan,
	RUBRO_TBK,
	dia_nro,
	dia_glosa,
	categoria_gse,
	TIPO_TARJETA_RSAT,
	FAMILIA_GESTION
	FROM  schm_workspace.spos_TC_rubro3 AS a
	LEFT JOIN schm_data_analytics.spos_codigos_online_spos AS b
	ON a.codigo_comercio=b.codigos_online;


	--generacion de colapso de informacion
	create table schm_workspace.spos_primer_agrupamiento as
	select
	Periodo,
	CASE WHEN centalta='0105' THEN 'MCCHEK TC' ELSE Tipo_Tarjeta END AS tipo_tarjeta,
	SI_Nacional,
	RUBRO_TBK,
	FAMILIA_GESTION,
	SI_online,
	dia_nro,
	totcuotas,
	porint,
	dia_glosa,
	CASE WHEN centalta='0105' THEN 'MCCHEK TC' ELSE TIPO_TARJETA_RSAT END AS TIPO_TARJETA_RSAT,
	count(rut) as Nro_TRXs,
	count(distinct rut) as Nro_Clientes,
	sum(Monto) as Mto_TRXs,
	COALESCE(case when categoria_gse in ('C1a', 'C1b', 'C2') then 'C1C2' else categoria_gse END,'SIN GSE') as GSE
	from schm_workspace.spos_TC_rubro4
	group by
	Periodo,
	CASE WHEN centalta='0105' THEN 'MCCHEK TC' ELSE Tipo_Tarjeta END ,
	SI_Nacional,
	RUBRO_TBK,
	FAMILIA_GESTION,
	SI_online,
	dia_nro,
	totcuotas,
	porint,
	dia_glosa,
	CASE WHEN centalta='0105' THEN 'MCCHEK TC' ELSE TIPO_TARJETA_RSAT END,
	COALESCE(case when categoria_gse in ('C1a', 'C1b', 'C2') then 'C1C2' else categoria_gse END,'SIN GSE')
	;


	create table schm_workspace.spos_primer_agrupamiento2 as
	select
	Periodo,
	tipo_tarjeta,
	COALESCE(SI_Nacional,1) AS SI_Nacional,
	RUBRO_TBK,
	FAMILIA_GESTION,
	COALESCE(SI_online,0) AS SI_online,
	dia_nro,
	totcuotas,
	porint,
	dia_glosa,
	CASE WHEN descripcion_fisa IN ('COMPRA NACIONAL','COMPRA INTERNACIONAL') THEN 'CUENTA VISTA'
	WHEN descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA INTERNACIONAL MCD') THEN 'MASTERCARD DEBIT'
	WHEN descripcion_fisa IN ('COMPRA NACIONAL CTA CTE','COMPRA INTERNACIONAL CTA CTE') THEN 'TARJETA DEBITO CTA CTE'
	END  AS TIPO_TARJETA_RSAT,
	count(rut) as Nro_TRXs,
	count(distinct rut) as Nro_Clientes,
	sum(venta_tarjeta) as Mto_TRXs,
	COALESCE(case when categoria_gse in ('C1a', 'C1b', 'C2') then 'C1C2' else categoria_gse END,'SIN GSE') as GSE
	from schm_workspace.spos_TD_rubro3
	group by
	Periodo,
	tipo_tarjeta,
	COALESCE(SI_Nacional,1) ,
	RUBRO_TBK,
	FAMILIA_GESTION,
	COALESCE(SI_online,0) ,
	dia_nro,
	totcuotas,
	porint,
	dia_glosa,
	CASE WHEN descripcion_fisa IN ('COMPRA NACIONAL','COMPRA INTERNACIONAL') THEN 'CUENTA VISTA'
	WHEN descripcion_fisa IN ('COMPRA NACIONAL MCD','COMPRA INTERNACIONAL MCD') THEN 'MASTERCARD DEBIT'
	WHEN descripcion_fisa IN ('COMPRA NACIONAL CTA CTE','COMPRA INTERNACIONAL CTA CTE') THEN 'TARJETA DEBITO CTA CTE' END,
	COALESCE(case when categoria_gse in ('C1a', 'C1b', 'C2') then 'C1C2' else categoria_gse END,'SIN GSE')
	;


	create table schm_workspace.spos_primer_agrupamiento3 as
	select
	Periodo,
	tipo_tarjeta,
	SI_Nacional,
	RUBRO_TBK,
	FAMILIA_GESTION,
	SI_online,
	dia_nro,
	totcuotas,
	porint,
	dia_glosa,
	TIPO_TARJETA_RSAT,
	count(rut) as Nro_TRXs,
	count(distinct rut) as Nro_Clientes,
	sum(Monto) as Mto_TRXs,
	COALESCE(case when categoria_gse in ('C1a', 'C1b', 'C2') then 'C1C2' else categoria_gse END,'SIN GSE') as GSE
	from schm_workspace.spos_MCCHEK_rubro3
	group by
	Periodo,
	tipo_tarjeta,
	SI_Nacional,
	RUBRO_TBK,
	FAMILIA_GESTION,
	SI_online,
	dia_nro,
	totcuotas,
	porint,
	dia_glosa,
	TIPO_TARJETA_RSAT,
	COALESCE(case when categoria_gse in ('C1a', 'C1b', 'C2') then 'C1C2' else categoria_gse END,'SIN GSE')
	;


	create table schm_workspace.spos_primer_agrupamiento4 as
	select
	Periodo,
	tipo_tarjeta,
	SI_Nacional,
	RUBRO_TBK,
	FAMILIA_GESTION,
	SI_online,
	dia_nro,
	totcuotas,
	porint,
	dia_glosa,
	TIPO_TARJETA_RSAT,
	count(rut) as Nro_TRXs,
	count(distinct rut) as Nro_Clientes,
	sum(Monto) as Mto_TRXs,
	COALESCE(case when categoria_gse in ('C1a', 'C1b', 'C2') then 'C1C2' else categoria_gse END,'SIN GSE') as GSE
	from schm_workspace.spos_seg_rubro2
	group by
	Periodo,
	tipo_tarjeta,
	SI_Nacional,
	RUBRO_TBK,
	FAMILIA_GESTION,
	SI_online,
	dia_nro,
	totcuotas,
	porint,
	dia_glosa,
	TIPO_TARJETA_RSAT,
	COALESCE(case when categoria_gse in ('C1a', 'C1b', 'C2') then 'C1C2' else categoria_gse END,'SIN GSE')
	;


	CREATE TABLE IF NOT EXISTS schm_data_analytics.spos_vta_rubros
	(Periodo int,
	tipo_tarjeta varchar(99),
	SI_Nacional int,
	RUBRO_TBK varchar(99),
	FAMILIA_GESTION varchar(99),
	SI_online int,
	dia_nro int,
	totcuotas varchar(99),
	porint int ,
	dia_glosa varchar(99),
	TIPO_TARJETA_RSAT varchar(99),
	Nro_TRXs bigint,
	Nro_Clientes bigint,
	Mto_TRXs bigint,
	 GSE varchar(99)
	);

	DELETE FROM schm_data_analytics.spos_vta_rubros
	WHERE periodo=periodo_paso;

	INSERT INTO schm_data_analytics.spos_vta_rubros
	SELECT * FROM schm_workspace.spos_primer_agrupamiento;

	INSERT INTO schm_data_analytics.spos_vta_rubros
	SELECT * FROM schm_workspace.spos_primer_agrupamiento2;

	INSERT INTO schm_facturacion.spos_vta_rubros
	SELECT * FROM schm_workspace.spos_primer_agrupamiento3;

	INSERT INTO schm_data_analytics.spos_vta_rubros
	SELECT * FROM schm_workspace.spos_primer_agrupamiento4;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2023-10-31 -- v01 -- Pedro Muñoz		-- Versión original.

	=== Información adicional:
	Proceso que genera agrupamiento de venta por rubro, de TC, TD y chek.
	===========================================================================================================
*/

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_test_envio(v_nombre_campaing varchar, v_user varchar, v_fecha varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	 BEGIN
EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-raw/bigdata/campaign/CAMPAIGN_INPUT_DATAMASTER_USER_TC/' || v_nombre_campaing || '_' || v_fecha || '_0-' || v_user || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';'
;
RETURN;
END;

$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_test_nico_funnel(v_periodo int4, v_periodo_ant int4, v_periodo_3 int4, v_periodo_6 int4, v_first_day date, v_last_day date)
	LANGUAGE plpgsql
AS $$
	

BEGIN

drop table if exists schm_workspace.transacciones_capta;--01
drop table if exists schm_workspace.vta_bol;--02
drop table if exists schm_workspace.resumen_oferta; --03
drop table if exists schm_workspace.cod_fin; --04
drop table if exists schm_workspace.resumen_oferta2; --05
drop table if exists schm_workspace.resumen_oferta3;--06
drop table if exists schm_workspace.act_tr;--07
drop table if exists schm_workspace.casti;--08
drop table if exists schm_workspace.casti2;--09
drop table if exists schm_workspace.castigo_final;--10
drop table if exists schm_workspace.castigo;--11
drop table if exists schm_workspace.act_tr_bi;--12
drop table if exists schm_workspace.captado6m;--13
drop table if exists schm_workspace.captado6m2;--14
drop table if exists schm_workspace.tv1;--15
drop table if exists schm_workspace.oferta_visible;--16
drop table if exists schm_workspace.tv2_v1;--17
drop table if exists schm_workspace.tv2_v2;--18
drop table if exists schm_workspace.lnegro;--19
drop table if exists schm_workspace.cruce;--20
drop table if exists schm_workspace.colapso_cruce;--21
drop table if exists schm_workspace.tv3;--22
drop table if exists schm_workspace.admision;--23
drop table if exists schm_workspace.admision_movil;--24
drop table if exists schm_workspace.admision_caa;--25
drop table if exists schm_workspace.tv4;--26
drop table if exists schm_workspace.captado_total;--27
drop table if exists schm_workspace.cod_camp;--28
drop table if exists schm_workspace.llenado_fin;--29
drop table if exists schm_workspace.captado_total2;--30
drop table if exists schm_workspace.TV5;--31
drop table if exists schm_workspace.propension;--32
drop table if exists schm_workspace.funnel_capta_tv;--33
drop table if exists schm_workspace.movil1;--34
drop table if exists schm_workspace.movil2;--35
drop table if exists schm_workspace.movil3_v1;--36
drop table if exists schm_workspace.movil3_v2;--37
drop table if exists schm_workspace.movil4;--40
drop table if exists schm_workspace.movil5;--41
drop table if exists schm_workspace.movil6;--42
drop table if exists schm_workspace.funnel_capta_movil;--43
drop table if exists schm_workspace.ccss1;--44
drop table if exists schm_workspace.ccss2;--45
drop table if exists schm_workspace.banco4;
drop table if exists schm_workspace.banco5;
drop table if exists schm_workspace.banco6;
drop table if exists schm_workspace.rpos1;
drop table if exists schm_workspace.rpos2;
drop table if exists schm_workspace.rpos3_v1;
drop table if exists schm_workspace.rpos3_v2;
drop table if exists schm_workspace.rpos4;
drop table if exists schm_workspace.rpos5;
drop table if exists schm_workspace.rpos6;
drop table if exists schm_workspace.colapso_cruce;
drop table if exists schm_workspace.cruce;
drop table if exists schm_workspace.ccss3_v1;
drop table if exists schm_workspace.ccss3_v2;
drop table if exists schm_workspace.cruce;
drop table if exists schm_workspace.ccss4;
drop table if exists schm_workspace.ccss5;
drop table if exists schm_workspace.ccss6;
drop table if exists schm_workspace.banco1;
drop table if exists schm_workspace.banco2;
drop table if exists schm_workspace.banco3_v1;
drop table if exists schm_workspace.banco3_v2;
drop table if exists schm_productos_financieros.colapso_funnel_tc_202306;

--01 fechas preg si es necesario guardar esta lib cambiar la lib y comenzar a guardar
CREATE TABLE schm_workspace.transacciones_capta AS 
SELECT 
    A.camp_mov_id_k AS identificador
    , A.camp_mov_rut_cli AS rut
    , A.camp_mov_est_act AS est_oferta
    , A.camp_mov_cod_canal AS canal
    , A.camp_mov_cod_suc AS sucursal
    , A.camp_mov_fch_hor AS fecha
    , B.producto
    , B.con_producto
    , B.mensaje
    , B.cod_camp
    , A.camp_mov_nro_bol
    , A.camp_mov_mnt_bol
    , A.camp_mov_mnt_deu_mcc
    , A.camp_mov_mto_deu_bic
    , A.camp_mov_det_sbif_3090
    , A.camp_mov_det_sbif_90180
    , A.camp_mov_det_sbif_180mas
    , A.camp_mov_dias_mora_car
    , A.camp_mov_dias_mora_bco
    , A.camp_mov_mrc_pep
    , A.camp_mov_mrc_lne
    , A.camp_mov_det_sbif_3amas
FROM br_dm_prod_bigdata_camreport_db.cbcamp_mov_trx_ofe AS A 
LEFT JOIN (
    SELECT 
        camp_mov_id_fk
        , camd_cod_camp AS cod_camp
        , camd_tip_prod AS producto
        , camd_cod_cnd_prod AS con_producto
        , camd_cod_est_ofe AS cod_estado
        , CASE 
            WHEN camd_msj_popupa IS NOT NULL THEN 1 
            ELSE 0 
        END AS mensaje 
    FROM br_dm_prod_bigdata_camreport_db.cbcamp_mov_det_trx_ofe
    WHERE
    camd_tip_prod IN ('8', '9')) AS B
	ON(A.camp_mov_id_k = B.camp_mov_id_fk)
WHERE 
    A.camp_mov_fch_hor BETWEEN v_first_day AND v_last_day 
    AND A.camp_mov_cod_canal IN (1, 4, 9, 3, 11)
ORDER BY A.camp_mov_id_k;
--select count(*) from  schm_workspace.transacciones_capta;


--02
CREATE TABLE schm_workspace.vta_bol AS
SELECT
    T1.ddmct_rut_cli AS rut
    , T1.ddmfp_cod_for_pag AS forma_pago
    , T1.dcmct_mnt_trn AS monto_boleta
    , T1.ddmtd_fch_dia AS fecha
FROM br_dm_prod_bigdata_gedcre_db.gedcre_dcrm_cos_mov_trn_vta_bol AS T1
WHERE 
    ddmsu_cod_neg = 1
    AND dcmct_cod_prd = 1
    AND dcmct_cod_trn NOT IN (39, 401, 402, 89, 90, 93)
    AND ddmsu_cod_suc NOT IN (10993, 10990, 10039)
    AND periodo =v_periodo--esta fecha esta como int
    AND dcmct_cod_tip_trn = 1; 
----select count(*) from schm_workspace.vta_bol;  

   


--03 ATENTO A UN POSIBLE CAMBIO DE LIB cambiar lib
CREATE TABLE schm_workspace.resumen_oferta AS 
SELECT 
    rut
    , prod_comerc AS producto
    , camp_cod_camp_fk AS camp
    , cupo
    , tipo_cliente 
FROM br_dm_prod_bigdata_sasdata_db.sas_ppff_capta_cdp
WHERE periodo = v_periodo;
--select count(*) from  schm_workspace.resumen_oferta;


--04
CREATE TABLE schm_workspace.cod_fin AS 
SELECT 
    camp_cod_camp_k
    , camp_tip_prod
    , camp_cond_prod
    , camp_origen_base
FROM br_dm_prod_bigdata_camreport_db.cbcamp_mae_campana;
--select count(*) from schm_workspace.cod_fin;  


--05
CREATE TABLE schm_workspace.resumen_oferta2 AS 
SELECT 
    A.*
    , B.*
FROM schm_workspace.resumen_oferta AS A 
LEFT JOIN schm_workspace.cod_fin AS B
	ON(A.camp = B.camp_cod_camp_k);
--select count(*) from schm_workspace.resumen_oferta2;


--06
CREATE TABLE schm_workspace.resumen_oferta3 AS 
SELECT 
    rut
    , producto
    , camp_tip_prod
    , camp_cond_prod
    , CASE 
        WHEN camp_tip_prod = '8' AND camp_cond_prod NOT IN ('812', '815', '814', '803', '804', '813', '816') THEN 'CDP'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('914', '915')) OR (camp_tip_prod = '8' AND camp_cond_prod IN ('814', '815')) THEN 'MCCERRADA'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('900', '901', '902', '903', '999')) THEN 'TR'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod NOT IN ('900', '901', '902', '903', '999', '908', '917', '918')) OR (camp_tip_prod = '8' AND camp_cond_prod = '812') THEN 'TAM'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod = '908') OR (camp_tip_prod = '8' AND camp_cond_prod IN ('803', '804')) THEN 'TAMCUOTAS'
        WHEN (camp_tip_prod = '9' AND camp_cond_prod IN ('917', '918')) OR (camp_tip_prod = '8' AND camp_cond_prod IN ('813', '816')) THEN 'MCBLACK'
    END AS producto2
    , tipo_cliente
FROM schm_workspace.resumen_oferta2;
--select count(*) from  schm_workspace.resumen_oferta3;


--07
CREATE TABLE schm_workspace.act_tr AS 
SELECT 
    rut
    , actividad_tr
    , vu_riesgo
    , CASE 
        WHEN marca_base IN ('ITF', 'CREDITO_2000') THEN 'TR' 
        ELSE 'TAM' 
    END AS marca_base
FROM br_dm_prod_bigdata_sasdata_db.sas_bitr_act_tr
WHERE periodo = v_periodo;
--select count(*) from schm_workspace.act_tr; 


--08 1periodo atras
CREATE TABLE schm_workspace.casti AS
SELECT 
	CASE 
		WHEN (SELECT COUNT(1) FROM br_dm_prod_bigdata_sasdata_db.sas_clts_castigos_historicos
				WHERE periodo_campana = v_periodo_ant) IS NULL  THEN 0
		ELSE COUNT(1) 
	END AS pivote
	, v_periodo_ant AS periodo 
FROM br_dm_prod_bigdata_sasdata_db.sas_clts_castigos_historicos
	WHERE periodo_campana = v_periodo_ant;


-- 09 periodo actual  
CREATE TABLE schm_workspace.casti2 AS
SELECT 
	CASE WHEN (SELECT COUNT(1) FROM br_dm_prod_bigdata_sasdata_db.sas_clts_castigos_historicos
		WHERE periodo_campana = v_periodo) IS NULL THEN 0
		ELSE COUNT(1) 
	END AS pivote
	, v_periodo AS periodo
FROM br_dm_prod_bigdata_sasdata_db.sas_clts_castigos_historicos
	WHERE periodo_campana = v_periodo;


--10
CREATE TABLE schm_workspace.castigo_final AS
SELECT 
	*
FROM schm_workspace.casti 
UNION ALL 
SELECT 
	* 
FROM schm_workspace.casti2;



--11 PERIODO Y PERIODO-1
CREATE TABLE schm_workspace.castigo AS
SELECT 
	rut 
FROM br_dm_prod_bigdata_sasdata_db.sas_clts_castigos_historicos
WHERE periodo_campana = (SELECT DISTINCT 
	CASE 
		WHEN (SELECT pivote FROM schm_workspace.castigo_final WHERE periodo = v_periodo) > 0 THEN v_periodo
		ELSE v_periodo_ant
	END AS periodo
FROM schm_workspace.castigo_final);
--select count(*) from  schm_workspace.castigo;


--12 fecha
CREATE TABLE schm_workspace.act_tr_bi as 
SELECT DISTINCT 
    rut 
FROM br_dm_prod_bigdata_sasdata_db.sas_ctbl_contrato_rut
WHERE 
	fecalta < v_first_day;--1ER DIA DEL MES...v_periodo
--select count(*) from  schm_workspace.act_tr_bi;
	


--13 Usa 2 periodos periodo -6 -1
CREATE TABLE schm_workspace.captado6m AS 
SELECT 
    rut_cliente AS rut
FROM schm_data_analytics.ppff_capta_salida--buscar esta tabla
WHERE
    periodo BETWEEN v_periodo_6 AND v_periodo_ant--ver que son estos periodos
    AND producto NOT IN ('CUENTA VISTA', 'CUENTA CORRIENTE');
--select count(*) from schm_workspace.captado6m;   
--select periodo,count(*)  FROM schm_data_analytics.ppff_capta_salida group by periodo;

--14   
CREATE TABLE schm_workspace.captado6m2 AS --ver la posibilidad de dejar esto en una sola consulta 
SELECT DISTINCT 
    rut
FROM schm_workspace.captado6m;	
--select count(*) from  schm_workspace.captado6m2;


--15
CREATE TABLE schm_workspace.tv1 AS--ojo con esta tabla lo mas probable es q me de distinto el sas  a aws 
SELECT DISTINCT 
    rut
    , count(rut) AS cantidad
    , count(CASE 
                WHEN monto_boleta = 1 THEN rut 
                END) 
            AS compra_1p
    , CASE 
        WHEN (rut BETWEEN 1000000 AND 50000000) 
            AND rut NOT IN (1111111, 2222222, 3333333, 4444444, 5555555, 6666666, 7777777, 8888888, 9999999, 11111111, 22222222, 33333333, 44444444) THEN 1 
        ELSE 0 
    END AS humano
FROM schm_workspace.vta_bol
GROUP BY rut;
--select count(*) from schm_workspace.tv1;  


--16
CREATE TABLE schm_workspace.oferta_visible AS 
SELECT DISTINCT 
    rut
    , cod_camp
    , producto
    , con_producto
    , CASE 
        WHEN producto = '8' AND con_producto NOT IN ('812','813','816','815','814','803','804') THEN 'CDP'
        WHEN (producto = '9' AND con_producto IN ('914', '915')) OR (producto = '8' AND con_producto IN ('814', '815')) THEN 'MCCERRADA'
        WHEN (producto = '9' AND con_producto IN ('900', '901', '902', '903', '999')) THEN 'TR'
        WHEN (producto = '9' AND con_producto NOT IN ('900', '901', '902', '903', '999', '908', '917', '918')) OR (producto = '8' AND con_producto = '812') THEN 'TAM'
        WHEN (producto = '9' AND con_producto = '908') OR (producto = '8' AND con_producto IN ('803', '804')) THEN 'TAMCUOTAS' 
        WHEN (producto = '9' AND con_producto IN ('917', '918')) OR (producto = '8' AND con_producto IN ('813', '816')) THEN 'MCBLACK'
    END AS oferta
    , b.camp_origen_base
FROM schm_workspace.transacciones_capta AS A 
LEFT JOIN schm_workspace.cod_fin AS B
    ON(A.cod_camp = B.camp_cod_camp_k)
WHERE cod_camp IS NOT NULL;
--select count(*) from schm_workspace.oferta_visible;


--17
CREATE TABLE schm_workspace.tv2_v1 AS 
SELECT DISTINCT
    A.*
    , CASE 
        WHEN B1.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS vu
    , B1.actividad_tr
    , B1.vu_riesgo
    , B1.marca_base
    , CASE 
        WHEN B2.rut IS NOT NULL THEN B2.producto2 
        WHEN B2.rut IS NULL AND D.rut IS NOT NULL THEN D.oferta
        ELSE 'SIN OFERTA' 
    END AS con_oferta
    , CASE 
        WHEN B2.rut IS NOT NULL THEN B2.tipo_cliente::integer
        WHEN B2.rut IS NULL AND D.rut IS NOT NULL THEN D.camp_origen_base
    END AS tipo_cliente
    , CASE 
        WHEN C.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS ya_captado
FROM schm_workspace.tv1 AS A
LEFT JOIN schm_workspace.act_tr AS B1
    ON(A.rut = B1.rut)
LEFT JOIN schm_workspace.resumen_oferta3 AS B2
    ON(A.rut = B2.rut)
LEFT JOIN schm_workspace.captado6m2 AS C
    ON(A.rut = C.rut)
LEFT JOIN (SELECT * FROM schm_workspace.oferta_visible WHERE rut NOT IN (SELECT rut FROM schm_workspace.resumen_oferta3) AND oferta NOT IN ('CV', 'CC')) AS D
    ON(A.rut = D.rut);
--select count(*)  from  schm_workspace.tv2_v1;


--18 3 meses atras 
CREATE TABLE schm_workspace.tv2_v2 AS
SELECT 
    A.*
    , CASE 
        WHEN (con_oferta NOT IN ('SIN OFERTA', 'CDP') AND tipo_cliente IN('102', '108', '201', '207')) OR ((vu = 0 OR (D.rut IS NOT NULL)) AND ya_captado = 0 AND A.humano = 1) THEN 1 
        ELSE 0 
    END AS uof_nuevos
    , CASE 
        WHEN (con_oferta NOT IN ('SIN OFERTA', 'CDP') AND tipo_cliente IS NOT NULL AND tipo_cliente NOT IN('102', '108', '201', '207')  AND uof_nuevos=0)
            OR (vu = 1 AND actividad_tr IN ('DORMIDO BLANDO', 'DORMIDO DURO', 'ANTIGUO SIN USO') AND uof_nuevos = 0 AND ya_captado=0 AND A.humano = 1) THEN 1 
        ELSE 0 
    END AS uof_dormidos
    , CASE 
        WHEN uof_nuevos = 1 OR uof_dormidos = 1 THEN 1 
        ELSE 0 
    END AS uof_capta
    , CASE 
        WHEN uof_capta = 0 AND vu_riesgo = 1 AND actividad_tr = 'ACTIVO' AND A.humano = 1 THEN 1 
        ELSE 0 
    END AS no_uof_capta_vu_activo
    , CASE 
        WHEN uof_capta = 0 AND vu_riesgo = 1 AND actividad_tr = 'SEMIACTIVO' AND A.humano = 1 THEN 1 
        ELSE 0 
    END AS no_uof_capta_vu_semi
    , CASE 
        WHEN uof_capta = 0 AND no_uof_capta_vu_activo = 0 AND no_uof_capta_vu_semi = 0 AND A.humano = 1 THEN 1
        ELSE 0 
    END AS no_uof_capta_no_dormido
    , CASE 
        WHEN (con_oferta = 'CDP') OR (E.RUT IS NOT NULL AND marca_base = 'TR' AND vu_riesgo = 1 AND actividad_tr = 'ACTIVO' AND A.humano = 1 AND ya_captado = 0) THEN 1 
        ELSE 0 
    END AS uof_cdp
    , CASE 
        WHEN vu_riesgo = 0 AND A.humano = 1 AND marca_base = 'TR' AND uof_cdp = 0 THEN 1 
        ELSE 0 
    END AS no_uof_cdp1
    , CASE 
        WHEN vu_riesgo > 0 AND A.humano = 1 AND marca_base = 'TAM' AND uof_cdp = 0 THEN 1 
        ELSE 0 
    END AS no_uof_cdp2
    , CASE 
        WHEN uof_cdp = 0 AND no_uof_cdp1 = 0 AND no_uof_cdp2 = 0 THEN 1 
        ELSE 0 
    END AS no_uof_cdp3
    , COALESCE(C.deuda_morosa_30_90, 0) AS r04_morosa_30_90
    , COALESCE(C.deuda_directa_vencida, 0) AS r04_directa_vencida
    , COALESCE(C.deuda_inversiones_financieras, 0) AS r04_inversiones_financieras
    , COALESCE(C.saldo_deuda_castigada_directa, 0) AS r04_castigada_directa
    , COALESCE(C.saldo_deuda_castigada_indirect, 0) AS r04_castigada_indirect
    , CASE 
        WHEN C1.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS lnegro
    , CASE 
        WHEN C2.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS mora_sinacofi
FROM schm_workspace.tv2_v1 AS A--CAMBIAR TABLA DE ORIGEN(R04 EN MULTIPLES ESQUEMAS)
LEFT JOIN schm_data_analytics.r04_sde AS C
    ON(A.rut = C.rut)
LEFT JOIN (SELECT DISTINCT rut FROM schm_data_analytics.ctbl_lnegro_car WHERE tipo_inhibicion <> 'PEP') AS C1
    ON(A.rut = C1.rut)
LEFT JOIN (SELECT DISTINCT rut FROM schm_data_analytics.mdpg_mora_sinacofi WHERE mora_consolidada >= 10000) AS C2
    ON(A.rut = C2.rut)
LEFT JOIN schm_workspace.castigo AS D
    ON(A.rut = D.rut)
LEFT JOIN schm_workspace.act_tr_bi AS E 
    ON(A.rut = E.rut)
where c.periodo = v_periodo_3;
--select count(*) from schm_workspace.tv2_v2;


--19
CREATE TABLE schm_workspace.lnegro AS 
SELECT DISTINCT 
    rut 
FROM schm_data_analytics.ctbl_lnegro_car
WHERE 
    tipo_inhibicion IN ('COMPLIANCE', 'FALLECIDO', 'FALLECIDOS', 'LRI', 'SIR');
--select count(*) from schm_workspace.lnegro;  


--20
CREATE TABLE schm_workspace.cruce AS 
SELECT 
    *
    , CASE 
        WHEN producto = '8' AND con_producto NOT IN ('813', '816', '812', '815', '814', '803', '804') AND mensaje IS NOT NULL THEN 1 
        ELSE 0 
    END AS cdp
    , CASE 
        WHEN (producto = '9' AND con_producto IN ('914', '915')) OR (producto = '8' AND con_producto IN ('814', '815')) AND mensaje IS NOT NULL THEN 1 
        ELSE 0 
    END AS mccerrada
    , CASE 
        WHEN (producto = '9' AND con_producto IN ('900', '901', '902', '903', '999')) AND mensaje IS NOT NULL THEN 1 
        ELSE 0 
    END AS tr
    , CASE 
        WHEN (producto = '9' AND con_producto NOT IN ('900', '901', '902', '903', '999', '908', '917', '918')) OR (producto = '8' AND con_producto ='812') AND mensaje IS NOT NULL THEN 1 
        ELSE 0 
    END AS tam
    , CASE 
        WHEN (producto = '9' AND con_producto = '908') OR (producto = '8' AND con_producto IN ('803', '804')) AND mensaje IS NOT NULL THEN 1 
        ELSE 0 
    END AS tamcuotas
    , CASE 
        WHEN (producto = '9' AND con_producto IN ('917', '918')) OR (producto = '8' AND con_producto IN ('813', '816')) AND mensaje IS NOT NULL THEN 1 
        ELSE 0 
    END AS mcblack
    , CASE 
        WHEN camp_mov_mnt_deu_mcc > 10000 THEN 1 
        ELSE 0 
    END AS deu_mcc
    , CASE 
        WHEN camp_mov_mto_deu_bic > 10000 THEN 1 
        ELSE 0 
    END AS deu_bic
    , CASE 
        WHEN camp_mov_mnt_deu_mcc + camp_mov_mnt_deu_mcc > 10000 THEN 1 
        ELSE 0 
    END AS monto_mora
    , CASE 
        WHEN camp_mov_det_sbif_3090 > 0 THEN 1 
        ELSE 0 
    END AS det_sbif_3090
    , CASE 
        WHEN camp_mov_det_sbif_90180 > 0 THEN 1 
        ELSE 0 
    END AS det_sbif_90180
    , CASE 
        WHEN camp_mov_det_sbif_180mas > 0 THEN 1 
        ELSE 0 
    END AS det_sbif_180mas
    , CASE 
        WHEN camp_mov_det_sbif_3amas > 0 THEN 1 
        ELSE 0 
    END AS det_sbif_3amas
    , CASE 
        WHEN camp_mov_dias_mora_car > 0 THEN 1 
        ELSE 0 
    END AS dias_mora_car
    , CASE 
        WHEN camp_mov_dias_mora_bco > 0 THEN 1 
        ELSE 0 
    END AS dias_mora_bco
FROM schm_workspace.transacciones_capta 
WHERE 
    CANAL IN (1, 11)
    AND rut NOT IN (1111111, 2222222, 3333333, 4444444, 5555555, 6666666, 7777777, 8888888, 9999999, 11111111, 22222222, 33333333, 44444444);
--select count(*) from schm_workspace.cruce;    


--21
   drop table if exists schm_workspace.colapso_cruce;
CREATE TABLE schm_workspace.colapso_cruce AS 
SELECT  
    RUT
    , MAX(CASE 
            WHEN cdp = 1 THEN 1 
            ELSE 0 
        END) AS salta_tarjeta_cdp
    , MAX(CASE 
            WHEN est_oferta IN (15, 6000) AND cdp = 1 THEN 1 
            ELSE 0 
        END) AS acepta_tarjeta_cdp
    , MAX(CASE 
            WHEN est_oferta IN (15, 6000) AND tam = 1 THEN 1 
            ELSE 0 
        END) AS acepta_tarjeta_tam
    , MAX(CASE 
            WHEN tam = 1 THEN 1 
            ELSE 0 
        END) AS salta_tarjeta_tam
    , MAX(CASE 
            WHEN est_oferta IN (15, 6000) AND tr = 1 THEN 1 
            ELSE 0 
        END) AS acepta_tarjeta_tr
    , MAX(CASE 
            WHEN tr = 1 THEN 1 
            ELSE 0 
        END) AS salta_tarjeta_tr
    , MAX(CASE 
            WHEN est_oferta IN (15, 6000) AND mccerrada = 1 THEN 1 
            ELSE 0 
        END) AS acepta_tarjeta_mccerrada
    , MAX(CASE 
            WHEN mccerrada = 1 THEN 1 
            ELSE 0 
        END) AS salta_tarjeta_mccerrada
    , MAX(CASE 
            WHEN tamcuotas = 1 THEN 1 
            ELSE 0 
        END) AS salta_tamcuotas
    , MAX(CASE 
            WHEN est_oferta IN (15, 6000) AND tamcuotas = 1 THEN 1 
            ELSE 0 
        END) AS acepta_tamcuotas
    , MAX(CASE 
            WHEN mcblack = 1 THEN 1 
            ELSE 0 
        END) AS salta_mcblack
    , MAX(CASE 
            WHEN est_oferta IN (15, 6000) AND mcblack = 1 THEN 1 
            ELSE 0 
        END) AS acepta_mcblack
    , MAX(CASE 
            WHEN deu_mcc = 1 THEN 1 
            ELSE 0 
        END) AS deu_mcc
    , MAX(CASE 
            WHEN deu_bic = 1 THEN 1 
            ELSE 0 
        END) AS deu_bic
    , MAX(CASE 
            WHEN monto_mora = 1 THEN 1 
            ELSE 0 
        END) AS monto_mora
    , MAX(CASE 
            WHEN det_sbif_3090 = 1 THEN 1 
            ELSE 0 
        END) AS det_sbif_3090
    , MAX(CASE 
            WHEN det_sbif_90180 = 1 THEN 1 
            ELSE 0 
        END) AS det_sbif_90180
    , MAX(CASE 
            WHEN det_sbif_180mas = 1 THEN 1 
            ELSE 0 
        END) AS det_sbif_180mas
    , MAX(CASE 
            WHEN det_sbif_3amas = 1 THEN 1 
            ELSE 0 
        END) AS det_sbif_3amas
    , MAX(CASE 
            WHEN dias_mora_car = 1 THEN 1 
            ELSE 0 
        END) AS dias_mora_car
    , MAX(CASE 
            WHEN dias_mora_bco = 1 THEN 1 
            ELSE 0 
        END) AS dias_mora_bco
FROM schm_workspace.cruce
WHERE rut IS NOT NULL
GROUP BY rut;
--select count(*) from schm_workspace.colapso_cruce; 


--22
CREATE TABLE schm_workspace.tv3 AS 
SELECT  
    A.*
    , COALESCE(salta_tarjeta_cdp, 0) AS salta_tarjeta_cdp
    , COALESCE(acepta_tarjeta_cdp, 0) AS acepta_tarjeta_cdp
    , COALESCE(acepta_tarjeta_tam, 0) AS acepta_tarjeta_tam
    , COALESCE(salta_tarjeta_tam, 0) AS salta_tarjeta_tam
    , COALESCE(acepta_tarjeta_tr, 0) AS acepta_tarjeta_tr
    , COALESCE(salta_tarjeta_tr, 0) AS salta_tarjeta_tr
    , COALESCE(acepta_tarjeta_mccerrada, 0) AS acepta_tarjeta_mccerrada
    , COALESCE(salta_tarjeta_mccerrada, 0) AS salta_tarjeta_mccerrada
    , COALESCE(salta_tamcuotas, 0) AS salta_tamcuotas
    , COALESCE(acepta_tamcuotas, 0) AS acepta_tamcuotas
    , COALESCE(salta_mcblack, 0) AS salta_mcblack
    , COALESCE(acepta_mcblack, 0) AS acepta_mcblack
    , COALESCE(B2.deu_mcc, 0) AS deu_mcc
    , COALESCE(B2.deu_bic, 0) AS deu_bic
    , COALESCE(B2.monto_mora, 0) AS monto_mora
    , COALESCE(B2.det_sbif_3090, 0) AS det_sbif_3090
    , COALESCE(B2.det_sbif_90180, 0) AS det_sbif_90180
    , COALESCE(B2.det_sbif_180mas, 0) AS det_sbif_180mas
    , COALESCE(B2.det_sbif_3amas, 0) AS det_sbif_3amas
    , COALESCE(B2.dias_mora_car, 0) AS dias_mora_car
    , COALESCE(B2.dias_mora_bco, 0) AS dias_mora_bco
FROM schm_workspace.tv2_v2 AS A 
LEFT JOIN schm_workspace.colapso_cruce AS B2
    ON(A.rut=B2.rut);
--select count(*) from  schm_workspace.tv3;


--23
CREATE TABLE schm_workspace.admision AS 
SELECT DISTINCT 
    rut 
FROM schm_workspace.transacciones_capta AS A--bUSCAR TABLA EN REDSHIFT
WHERE 
    canal = 4;
--select count(*)    from schm_workspace.admision;


--24
CREATE TABLE schm_workspace.admision_movil AS 
SELECT DISTINCT 
    rut 
FROM schm_workspace.TRANSACCIONES_CAPTA AS A--bUSCAR TABLA EN REDSHIFT
WHERE 
    canal = 9 
    AND est_oferta = 822;
--select count(*) from    schm_workspace.admision_movil;


--25
CREATE TABLE schm_workspace.admision_caa AS 
SELECT DISTINCT 
    rut 
FROM schm_workspace.TRANSACCIONES_CAPTA AS A
where 
    canal = 11
    AND rut NOT IN(1111111, 2222222, 3333333, 4444444, 5555555, 6666666, 7777777, 8888888, 9999999, 11111111, 22222222, 33333333, 44444444);
    --select count(*) from schm_workspace.admision_caa; 
    
   
--26
CREATE TABLE schm_workspace.tv4 AS 
SELECT 
    A.*
    , CASE 
        WHEN b.rut IS NOT NULL OR C.rut IS NOT NULL OR D.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS admision
FROM schm_workspace.tv3 AS A
LEFT JOIN schm_workspace.admision AS B
    ON(A.rut = B.rut)
LEFT JOIN schm_workspace.admision_movil AS C
    ON(A.rut = C.rut)
LEFT JOIN schm_workspace.admision_caa AS D
    ON(A.rut = D.rut);
--select count(*) from  schm_workspace.tv4;


--27 PERIODOS ACA VOY A TENER QUE HACER UN IF PARA EL CIERRE homebanking
CREATE TABLE schm_workspace.captado_total AS 
SELECT 
    rut_cliente AS RUT
    , producto
    , origen
    , canal
    , fecha
    , cod_sucursal
    , via
    , id_oferta
FROM schm_data_analytics.ppff_capta_salida --buscar esta lib 
WHERE
    fecha >= v_first_day 
    AND fecha <= v_last_day
    AND origen = 'CORE'
    AND cod_sucursal <> 39
    AND via NOT IN ('HOMEBAN', 'HOMEBANKING');
   --select count(*) from schm_workspace.captado_total;
   
  
--28  
CREATE TABLE schm_workspace.cod_camp AS   
SELECT  
	camp_id_ofe_k
	, camp_cod_camp_fk
	, camp_rut_cli
	, camp_dv_cli
	, camp_cod_tip_prod
	, camp_cod_cnd_prod
	, camp_cod_ori_base 
FROM br_dm_prod_bigdata_camreport_db.cbcamp_mae_ofertas;
--select count(*) from schm_workspace.cod_camp; 


--29
CREATE TABLE schm_workspace.llenado_fin AS 
SELECT 
	*
	, CASE  
		WHEN camp_cod_tip_prod = '8' AND camp_cod_cnd_prod NOT IN ('813', '816', '812', '815', '814', '803', '804') THEN 'CDP'
		WHEN (camp_cod_tip_prod = '9' AND camp_cod_cnd_prod IN ('914', '915')) 
			OR (camp_cod_tip_prod = '8' AND camp_cod_cnd_prod IN ('814', '815')) THEN 'MCCERRADA'
		WHEN (camp_cod_tip_prod = '9' AND camp_cod_cnd_prod IN ('900', '901', '902', '903', '999')) THEN  'TR'
		WHEN (camp_cod_tip_prod = '9' AND camp_cod_cnd_prod NOT IN ('917', '918', '900', '901', '902', '903', '999', '908'))
			OR (camp_cod_tip_prod = '8' AND camp_cod_cnd_prod = '812') THEN  'TAM'
		WHEN (camp_cod_tip_prod = '9' AND camp_cod_cnd_prod = '908')
			OR (camp_cod_tip_prod = '8' AND camp_cod_cnd_prod IN ('803', '804')) THEN 'TAMCUOTAS'
		WHEN (camp_cod_tip_prod = '9' AND camp_cod_cnd_prod IN ('917', '918'))
			OR (camp_cod_tip_prod = '8' AND camp_cod_cnd_prod IN ('813', '816')) THEN 'MCBLACK'
	END AS producto_camp
from schm_workspace.cod_camp;
--select count(*) from  schm_workspace.llenado_fin;


--30
CREATE TABLE schm_workspace.captado_total2 AS 
SELECT 
	A.*
	, B.*
FROM schm_workspace.captado_total AS A 
LEFT JOIN schm_workspace.llenado_fin AS B
	on(B.camp_id_ofe_k = A.id_oferta);
--select count(*) from  schm_workspace.captado_total2;
	

--31
CREATE TABLE schm_workspace.TV5 AS 
SELECT  distinct 
	A.*,
	max(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='TAM'  THEN 1 ELSE 0 END) AS CAPTADO_TAM,
	max(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='CDP'  THEN 1 ELSE 0 END) AS CAPTADO_CDP,
	max(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='MCCERRADA'  THEN 1 ELSE 0 END) AS CAPTADO_MCCERRADA,
	max(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='TR'  THEN 1 ELSE 0 END) AS CAPTADO_TR,
	max(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='TAMCUOTAS'  THEN 1 ELSE 0 END) AS CAPTADO_TAMCUOTAS,
	max(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='MCBLACK'  THEN 1 ELSE 0 END) AS CAPTADO_MCBLACK
FROM schm_workspace.TV4 AS A
LEFT JOIN (select * from schm_workspace.captado_total2 where CANAL IN ('TERMINAL DE VENTAS','RPOS')) AS B
	ON(A.RUT=B.RUT)
group by 
	a.rut
	, a.cantidad
	, a.compra_1p
	, a.humano
	, a.vu
	, a.actividad_tr
	, a.vu_riesgo
	, a.marca_base
	, a.con_oferta
	, a.tipo_cliente
	, a.ya_captado
	, a.uof_nuevos
	, a.uof_dormidos
	, a.uof_capta
	, a.no_uof_capta_vu_activo
	, a.no_uof_capta_vu_semi
	, a.no_uof_capta_no_dormido
	, a.uof_cdp
	, a.no_uof_cdp1
	, a.no_uof_cdp2
	, a.no_uof_cdp3
	, a.r04_morosa_30_90
	, a.r04_directa_vencida
	, a.r04_inversiones_financieras
	, a.r04_castigada_directa
	, a.r04_castigada_indirect
	, a.lnegro
	, a.mora_sinacofi
	, a.salta_tarjeta_cdp
	, a.acepta_tarjeta_cdp
	, a.acepta_tarjeta_tam
	, a.salta_tarjeta_tam
	, a.acepta_tarjeta_tr
	, a.salta_tarjeta_tr
	, a.acepta_tarjeta_mccerrada
	, a.salta_tarjeta_mccerrada
	, a.salta_tamcuotas
	, a.acepta_tamcuotas
	, a.salta_mcblack
	, a.acepta_mcblack
	, a.deu_mcc
	, a.deu_bic
	, a.monto_mora
	, a.det_sbif_3090
	, a.det_sbif_90180
	, a.det_sbif_180mas
	, a.det_sbif_3amas
	, a.dias_mora_car
	, a.dias_mora_bco
	, a.admision;
--select count(*) from schm_workspace.TV5;


--32
CREATE TABLE schm_workspace.propension AS 
SELECT 
	A.RUT,
	COUNT(CASE WHEN B.FORMA_PAGO=3 AND B.FECHA >= A.FECHA THEN B.RUT END) AS COMPRA_MES,
	COUNT(CASE WHEN B.FORMA_PAGO=3 AND B.FECHA = A.FECHA THEN B.RUT END) AS COMPRA_DIA
FROM schm_workspace.captado_TOTAL2 AS A
LEFT JOIN schm_workspace.vta_bol AS B
	ON(A.RUT=B.RUT)
WHERE A.PRODUCTO IN ('TAM','CDP','MCCERRADA','TR','TAMCUOTAS','MCBLACK')
GROUP BY
A.RUT;
--select count(*) from  schm_workspace.PROPENSION;

--33 dejar en alguna lib con periodo ver tema de group by rut

EXECUTE
'CREATE TABLE schm_productos_financieros.funnel_capta_tv_'||v_periodo||' AS --aca poner periodo
SELECT  
    A.*
    , MAX(CASE 
            WHEN B.rut IS NOT NULL AND B.compra_mes > 0 THEN 1 
            ELSE 0 
        END) AS concreta_mes
    , MAX(CASE 
            WHEN B.rut IS NOT NULL AND B.compra_dia > 0 THEN 1 
            ELSE 0 
        END) AS concreta_dia
    , MAX(CASE 
            WHEN humano = 1 
                AND con_oferta = ''SIN OFERTA''
                AND uof_capta = 1 
                AND (r04_morosa_30_90 + r04_directa_vencida + r04_inversiones_financieras + r04_castigada_directa + r04_castigada_indirect > 0 OR mora_sinacofi > 0) THEN 1 
            ELSE 0 
        END) AS no_oferta_mora_protesto_capta
    , MAX(CASE 
            WHEN humano = 1 AND con_oferta =''SIN OFERTA''
                AND (CASE 
                        WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
                            AND (uof_capta = 1 ) 
                            AND (r04_morosa_30_90 
                                + r04_directa_vencida 
                                + r04_inversiones_financieras 
                                + r04_castigada_directa 
                                + r04_castigada_indirect > 0 
                                OR mora_sinacofi > 0) THEN 1 
                        ELSE 0 
                    END) = 0
                AND (uof_capta = 1) 
                AND r04_morosa_30_90
                    + r04_directa_vencida
                    + r04_inversiones_financieras
                    + r04_castigada_directa
                    + r04_castigada_indirect = 0 
                AND lnegro = 1 
                AND mora_sinacofi = 0 THEN 1 
            ELSE 0 
        END) AS no_oferta_lnegro_capta
    , MAX(CASE 
            WHEN humano = 1 
                AND con_oferta = ''SIN OFERTA''
                AND (uof_capta = 1)
                AND (CASE 
                        WHEN humano = 1 
                            AND con_oferta = ''SIN OFERTA''
                            AND (uof_capta = 1 ) 
                            AND (r04_morosa_30_90
                            + r04_directa_vencida
                            + r04_inversiones_financieras
                            + r04_castigada_directa
                            + r04_castigada_indirect > 0 OR	mora_sinacofi>0) THEN 1 
                        ELSE 0 
                    END) = 0
                AND (CASE 
                        WHEN humano = 1 
                            AND con_oferta = ''SIN OFERTA''
                            AND (CASE 
                                    WHEN humano = 1 
                                        AND con_oferta =''SIN OFERTA''
                                        AND (uof_capta=1 ) 
                                        AND (r04_morosa_30_90
                                            + r04_directa_vencida
                                            + r04_inversiones_financieras
                                            + r04_castigada_directa
                                            + r04_castigada_indirect > 0 OR	mora_sinacofi > 0) THEN 1 
                                    ELSE 0 
                                END) = 0
                            AND (uof_capta = 1) 
                            AND r04_morosa_30_90
                                + r04_directa_vencida
                                + r04_inversiones_financieras
                                + r04_castigada_directa
                                + r04_castigada_indirect = 0 
                            AND lnegro = 1 
                            AND mora_sinacofi = 0 THEN 1 
                        ELSE 0 
                    END) = 0 THEN 1 
            ELSE 0 
        END) AS no_oferta_riesgo_capta
    , MAX(CASE 
            WHEN humano = 1 
                AND con_oferta = ''SIN OFERTA''
                AND uof_cdp = 1 
                AND (r04_morosa_30_90
                    + r04_directa_vencida
                    + r04_inversiones_financieras
                    + r04_castigada_directa
                    + r04_castigada_indirect > 0 OR	mora_sinacofi > 0) THEN 1 
            ELSE 0 
        END) AS no_oferta_mora_protesto_cdp
    , MAX(CASE 
            WHEN humano = 1 
                AND con_oferta = ''SIN OFERTA''
                AND (CASE 
                        WHEN humano = 1 
                            AND con_oferta = ''SIN OFERTA''
                            AND uof_cdp = 1 
                            AND (r04_morosa_30_90
                                + r04_directa_vencida
                                + r04_inversiones_financieras
                                + r04_castigada_directa
                                + r04_castigada_indirect > 0 OR	mora_sinacofi > 0) THEN 1 
                        ELSE 0 
                    END) =0
                AND uof_cdp = 1 
                AND r04_morosa_30_90
                    + r04_directa_vencida
                    + r04_inversiones_financieras
                    + r04_castigada_directa
                    + r04_castigada_indirect = 0 
                AND lnegro = 1 
                AND mora_sinacofi = 0 THEN 1 
            ELSE 0 
        END) AS no_oferta_lnegro_cdp
    , MAX(CASE 
            WHEN humano = 1 
                AND con_oferta =''SIN OFERTA'' 
                AND (CASE 
                        WHEN humano = 1 
                            AND con_oferta = ''SIN OFERTA''
                            AND uof_cdp = 1 
                            AND (r04_morosa_30_90
                                + r04_directa_vencida
                                + r04_inversiones_financieras
                                + r04_castigada_directa
                                + r04_castigada_indirect > 0 OR	mora_sinacofi > 0) THEN 1 
                        ELSE 0 
                    END) = 0
                AND (CASE 
                        WHEN humano = 1 
                            AND con_oferta = ''SIN OFERTA''
                            AND (CASE 
                                    WHEN humano = 1 
                                        AND con_oferta = ''SIN OFERTA''
                                        AND uof_cdp = 1 
                                        AND (r04_morosa_30_90
                                            + r04_directa_vencida
                                            + r04_inversiones_financieras
                                            + r04_castigada_directa
                                            + r04_castigada_indirect > 0 OR	mora_sinacofi > 0) THEN 1 
                                    ELSE 0 
                                END) =0
                            AND uof_cdp = 1 
                            AND r04_morosa_30_90
                                + r04_directa_vencida
                                + r04_inversiones_financieras
                                + r04_castigada_directa
                                + r04_castigada_indirect = 0 
                            AND lnegro = 1 
                            AND mora_sinacofi = 0 THEN 1 
                        ELSE 0 
                    END) = 0 THEN 1 
            ELSE 0 
        END) AS no_oferta_riesgo_cdp
    , CASE 
        WHEN C.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS marca_doble_ofe
FROM schm_workspace.tv5 AS A
LEFT JOIN schm_workspace.propension AS B
    ON(A.rut = B.rut)
LEFT JOIN br_dm_prod_bigdata_sasdata_db.sas_ppff_doble_oferta_rut AS C --buscar lib Y AGREGAR PERIODO
	ON (A.rut = C.rut)
GROUP BY 
    A.rut
    , A.cantidad
    , a.compra_1p
    , a.humano
    , a.vu
    , a.actividad_tr
    , a.vu_riesgo
    , a.marca_base
    , a.con_oferta
    , a.tipo_cliente
    , a.ya_captado
    , a.uof_nuevos
    , a.uof_dormidos
    , a.uof_capta
    , a.no_uof_capta_vu_activo
    , a.no_uof_capta_vu_semi
    , a.no_uof_capta_no_dormido
    , a.uof_cdp
    , a.no_uof_cdp1
    , a.no_uof_cdp2
    , a.no_uof_cdp3
    , a.r04_morosa_30_90
    , a.r04_directa_vencida
    , a.r04_inversiones_financieras
    , a.r04_castigada_directa
    , a.r04_castigada_indirect
    , a.lnegro
    , a.mora_sinacofi
    , a.salta_tarjeta_cdp
    , a.acepta_tarjeta_cdp
    , a.acepta_tarjeta_tam
    , a.salta_tarjeta_tam
    , a.acepta_tarjeta_tr
    , a.salta_tarjeta_tr
    , a.acepta_tarjeta_mccerrada
    , a.salta_tarjeta_mccerrada
    , a.salta_tamcuotas
    , a.acepta_tamcuotas
    , a.salta_mcblack
    , a.acepta_mcblack
    , a.deu_mcc
    , a.deu_bic
    , a.monto_mora
    , a.det_sbif_3090
    , a.det_sbif_90180
    , a.det_sbif_180mas
    , a.det_sbif_3amas
    , a.dias_mora_car
    , a.dias_mora_bco
    , a.admision
    , a.captado_tam
    , a.captado_cdp
    , a.captado_mccerrada
    , a.captado_tr
    , a.captado_tamcuotas
    , a.captado_mcblack
    , c.rut';
                                        
--select count(*) from schm_productos_financieros.funnel_capta_tv; 


--34
CREATE TABLE schm_workspace.movil1 AS 
SELECT DISTINCT  
    rut
    , fecha 
FROM  schm_workspace.transacciones_capta --ver tema de peroido
WHERE 
    canal = 9;
--select count(*) from schm_workspace.movil1;  
   

--35
CREATE TABLE schm_workspace.movil2 AS 
SELECT 
    rut
    , COUNT(rut) AS VISITAS
    , CASE 
        WHEN (rut BETWEEN 1000000 AND 50000000) 
            AND rut NOT IN (1111111, 2222222, 3333333, 4444444, 5555555, 6666666, 7777777, 8888888, 9999999, 11111111, 22222222, 33333333, 44444444) THEN 1 
        ELSE 0 END AS humano 
FROM schm_workspace.movil1
GROUP BY 
    rut;
--select count(*) from schm_workspace.movil2;  


--36
CREATE TABLE schm_workspace.movil3_v1 AS 
SELECT DISTINCT
    A.*
    , CASE 
        WHEN B1.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS vu
    , B1.actividad_tr
    , B1.vu_riesgo
    , B1.marca_base 
    , CASE 
        WHEN B2.rut IS NOT NULL THEN B2.producto2 
        WHEN B2.rut IS NULL AND D.rut IS NOT NULL THEN D.oferta
        ELSE 'SIN OFERTA' 
    END AS con_oferta
    , CASE 
        WHEN B2.rut IS NOT NULL THEN B2.tipo_cliente::integer
        WHEN B2.rut IS NULL AND D.rut IS NOT NULL THEN D.camp_origen_base
    END AS tipo_cliente
    , CASE 
        WHEN C.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS ya_captado
FROM schm_workspace.movil2 AS A
LEFT JOIN schm_workspace.act_tr AS B1
    ON(A.rut = B1.rut)
LEFT JOIN schm_workspace.resumen_oferta3 AS B2
    ON(A.rut = B2.rut)
LEFT JOIN schm_workspace.captado6m2 AS C
    ON(A.rut = C.rut)
LEFT JOIN (SELECT * FROM schm_workspace.oferta_visible WHERE rut NOT IN (SELECT rut FROM schm_workspace.resumen_oferta3) AND oferta NOT IN ('CV', 'CC')) AS D
    ON(A.rut = D.rut);
--select count(*) from schm_workspace.movil3_v1;   


--37
CREATE TABLE schm_workspace.movil3_v2 AS
SELECT 
    A.*
    , CASE 
        WHEN (con_oferta NOT IN ('SIN OFERTA', 'CDP') AND tipo_cliente IN ('102', '108', '201', '207')) 
            OR ((vu = 0 OR (D.rut IS NOT NULL) ) AND ya_captado = 0 AND A.humano = 1) THEN 1 
        ELSE 0 
    END AS uof_nuevos
    , CASE 
        WHEN (con_oferta NOT IN ('SIN OFERTA', 'CDP') AND tipo_cliente IS NOT NULL 
            AND tipo_cliente NOT IN('102', '108', '201', '207') AND uof_nuevos=0)
            OR (vu = 1 AND actividad_TR IN ('DORMIDO BLANDO', 'DORMIDO DURO', 'ANTIGUO SIN USO')  
            AND uof_nuevos = 0
            AND ya_captado = 0 
            AND A.humano = 1) THEN 1 
        ELSE 0 
    END AS uof_dormidos
    , CASE 
        WHEN  uof_nuevos = 1 OR uof_dormidos = 1 THEN 1 
        ELSE 0 
    END AS uof_capta
    , CASE 
        WHEN uof_capta = 0 AND vu_riesgo = 1 AND actividad_tr = 'ACTIVO' AND A.humano = 1 THEN 1 
        ELSE 0 
    END AS no_uof_capta_vu_activo
    , CASE 
        WHEN uof_capta = 0 AND vu_riesgo = 1 AND actividad_tr = 'SEMIACTIVO' AND A.humano = 1 THEN 1 
        ELSE 0 
    END AS no_uof_capta_vu_semi
    , CASE 
        WHEN uof_capta = 0 AND no_uof_capta_vu_activo = 0 AND no_uof_capta_vu_semi = 0 AND A.humano = 1 THEN 1
        ELSE 0 
    END AS no_uof_capta_no_dormido
    , CASE 
        WHEN(con_oferta = 'CDP') OR (E.rut IS NOT NULL AND marca_base = 'TR' AND vu_riesgo = 1 AND actividad_tr = 'ACTIVO' AND A.humano = 1 AND ya_captado=0) THEN 1 
        ELSE 0 
    END AS uof_cdp
    , CASE 
        WHEN vu_riesgo = 0 AND A.humano = 1 AND marca_base='TR' AND  uof_cdp = 0 THEN 1 
        ELSE 0 
    END AS no_uof_cdp1
    , CASE 
        WHEN  vu_riesgo > 0 AND A.humano = 1 AND marca_base = 'TAM' AND uof_cdp = 0 THEN 1 
        ELSE 0 
    END AS no_uof_cdp2
    , CASE 
        WHEN uof_cdp = 0 AND no_uof_cdp1 = 0 AND no_uof_cdp2 = 0 THEN 1 
        ELSE 0 
    END AS NO_uof_cdp3
    , COALESCE(C.deuda_morosa_30_90, 0) AS r04_morosa_30_90
    , COALESCE(C.deuda_directa_vencida, 0) AS r04_directa_vencida
    , COALESCE(C.deuda_inversiones_financieras, 0) AS r04_inversiones_financieras
    , COALESCE(C.saldo_deuda_castigada_directa, 0) AS r04_castigada_directa
    , COALESCE(C.saldo_deuda_castigada_indirect, 0) AS r04_castigada_indirect
    , CASE 
        WHEN C1.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS lnegro
    , CASE 
        WHEN C2.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS mora_sinacofi
FROM schm_workspace.movil3_v1 AS A
LEFT JOIN schm_data_analytics.r04_sde AS C
    ON(A.rut = C.rut)
LEFT JOIN (SELECT DISTINCT rut FROM schm_data_analytics.ctbl_lnegro_car WHERE tipo_inhibicion <>'PEP') AS C1
    ON(A.rut = C1.rut)
LEFT JOIN (SELECT DISTINCT RUT FROM schm_data_analytics.mdpg_mora_sinacofi WHERE mora_consolidada >= 10000) AS C2
    ON(A.rut = C2.rut)
LEFT JOIN schm_workspace.castigo AS D
    ON(A.rut = D.rut)
LEFT JOIN schm_workspace.act_tr_bi AS E 
    ON(A.rut = E.rut)
where 
  	c.periodo = v_periodo_3;
--select count(*) from schm_workspace.movil3_v2;


--38
drop table if exists schm_workspace.cruce;
CREATE TABLE schm_workspace.cruce AS 
SELECT 
    *
    , CASE 
        WHEN producto = '8' AND con_producto NOT IN ('813', '816', '812', '815', '814', '803', '804') AND mensaje IS NOT NULL THEN 1 
        ELSE 0 
    END AS cdp
    , CASE 
        WHEN (producto = '9' AND con_producto IN ('914', '915')) OR (producto = '8' AND con_producto IN ('814', '815')) AND mensaje IS NOT NULL THEN 1 
        ELSE 0 
    END AS mccerrada
    , CASE 
        WHEN (producto = '9' AND con_producto IN ('900', '901', '902', '903', '999')) AND mensaje IS NOT NULL THEN 1 
        ELSE 0 
    END AS tr
    , CASE 
        WHEN (producto = '9' AND con_producto NOT IN ('900', '901', '902', '903', '999', '908', '917', '918')) OR (producto = '8' AND con_producto = '812') AND mensaje IS NOT NULL THEN 1 
        ELSE 0 
    END AS tam
    , CASE 
        WHEN (producto = '9' AND con_producto = '908') OR (producto = '8' AND con_producto IN ('803', '804')) AND mensaje IS NOT NULL THEN 1 
        ELSE 0 
    END AS tamcuotas
    , CASE 
        WHEN (producto = '9' AND con_producto in ('917', '918')) OR (producto = '8' AND con_producto IN ('813', '816')) AND mensaje IS NOT NULL THEN 1 
        ELSE 0 
    END AS mcblack
    , CASE 
        WHEN camp_mov_mnt_deu_mcc > 10000 THEN 1 
        ELSE 0 
    END AS deu_mcc
    , CASE 
        WHEN camp_mov_mto_deu_bic > 10000 THEN 1 
        ELSE 0 
    END AS deu_bic
    , CASE 
        WHEN camp_mov_mnt_deu_mcc + camp_mov_mnt_deu_mcc > 10000 THEN 1 
        ELSE 0 
    END AS monto_mora
    , CASE 
        WHEN camp_mov_det_sbif_3090 > 0 THEN 1 
        ELSE 0 
    END AS det_sbif_3090
    , CASE 
        WHEN camp_mov_det_sbif_90180 > 0 THEN 1 
        ELSE 0 
    END AS det_sbif_90180
    , CASE 
        WHEN camp_mov_det_sbif_180mas > 0 THEN 1 
        ELSE 0 
    END AS det_sbif_180mas
    , CASE 
        WHEN camp_mov_det_sbif_3amas > 0 THEN 1 
        ELSE 0 
    END AS det_sbif_3amas
    , CASE 
        WHEN camp_mov_dias_mora_car > 0 THEN 1 
        ELSE 0 
    END AS dias_mora_car
    , CASE 
        WHEN camp_mov_dias_mora_bco > 0 THEN 1 
        ELSE 0 
    END AS dias_mora_bco
FROM schm_workspace.transacciones_capta -- buscar lib  
WHERE 
    canal = 9
    AND rut NOT IN (1111111, 2222222, 3333333, 4444444, 5555555, 6666666, 7777777, 8888888, 9999999, 11111111, 22222222, 33333333, 44444444);
--select count(*) from schm_workspace.CRUCE;


--39
drop table if EXISTS schm_workspace.colapso_cruce;
CREATE TABLE schm_workspace.colapso_cruce AS 
SELECT  
    RUT
    , MAX(CASE 
            WHEN cdp = 1 THEN 1 
            ELSE 0 
    END) AS salta_tarjeta_cdp
    , MAX(CASE 
            WHEN est_oferta IN (818, 6000, 822) AND cdp = 1 THEN 1 
            ELSE 0 
    END) AS acepta_tarjeta_cdp
    , MAX(CASE 
            WHEN est_oferta IN (818, 6000, 822) AND tam = 1 THEN 1 
            ELSE 0 
    END) AS acepta_tarjeta_tam
    , MAX(CASE 
            WHEN tam = 1 THEN 1 
            ELSE 0 
    END) AS salta_tarjeta_tam
    , MAX(CASE 
            WHEN est_oferta IN (818, 6000, 822) AND tr = 1 THEN 1 
            ELSE 0 
    END) AS acepta_tarjeta_tr
    , MAX(CASE 
            WHEN tr = 1 THEN 1 
            ELSE 0 
    END) AS salta_tarjeta_tr
    , MAX(CASE 
            WHEN est_oferta IN (818, 6000, 822)  AND MCCERRADA=1 THEN 1 
            ELSE 0 
    END) AS acepta_tarjeta_mccerrada
    , MAX(CASE 
            WHEN mccerrada = 1 THEN 1 
            ELSE 0 
    END) AS salta_tarjeta_mccerrada
    , MAX(CASE 
            WHEN tamcuotas = 1 THEN 1 
            ELSE 0 
    END) AS salta_tamcuotas
    , MAX(CASE 
            WHEN est_oferta IN (818, 6000, 822) AND tamcuotas = 1 THEN 1 
            ELSE 0 
    END) AS acepta_tamcuotas
    , MAX(CASE 
            WHEN mcblack = 1 THEN 1 
            ELSE 0 
    END) AS salta_mcblack
    , MAX(CASE 
            WHEN est_oferta IN (818, 6000, 822) AND mcblack = 1 THEN 1 
            ELSE 0 
    END) AS acepta_mcblack
    , MAX(CASE 
            WHEN deu_mcc = 1 THEN 1 
            ELSE 0 
    END) AS deu_mcc
    , MAX(CASE 
            WHEN deu_bic = 1 THEN 1 
            ELSE 0 
    END) AS deu_bic
    , MAX(CASE 
            WHEN monto_mora = 1 THEN 1 
            ELSE 0 
    END) AS monto_mora
    , MAX(CASE 
            WHEN det_sbif_3090 = 1 THEN 1 
            ELSE 0 
    END) AS det_sbif_3090
    , MAX(CASE 
            WHEN det_sbif_90180 = 1 THEN 1 
            ELSE 0 
    END) AS det_sbif_90180
    , MAX(CASE 
            WHEN det_sbif_180mas = 1 THEN 1 
            ELSE 0 
    END) AS det_sbif_180mas
    , MAX(CASE 
            WHEN det_sbif_3amas = 1 THEN 1 
            ELSE 0 
    END) AS DET_SBIF_3AMAS
    , MAX(CASE 
            WHEN dias_mora_car = 1 THEN 1 
            ELSE 0 
    END) AS dias_mora_car
    , MAX(CASE 
            WHEN dias_mora_bco = 1 THEN 1 
            ELSE 0 
    END) AS dias_mora_bco
FROM schm_workspace.cruce
WHERE rut IS NOT NULL
GROUP BY 
    rut;
--select count(*) from schm_workspace.colapso_cruce; 


--40
CREATE TABLE schm_workspace.movil4 AS 
SELECT  
    A.*
    , COALESCE(salta_tarjeta_cdp, 0) AS salta_tarjeta_cdp
    , COALESCE(acepta_tarjeta_cdp, 0) AS acepta_tarjeta_cdp
    , COALESCE(acepta_tarjeta_tam, 0) AS acepta_tarjeta_tam
    , COALESCE(salta_tarjeta_tam, 0) AS salta_tarjeta_tam
    , COALESCE(acepta_tarjeta_tr, 0) AS acepta_tarjeta_tr
    , COALESCE(salta_tarjeta_tr, 0) AS salta_tarjeta_tr
    , COALESCE(acepta_tarjeta_mccerrada, 0) AS acepta_tarjeta_mccerrada
    , COALESCE(salta_tarjeta_mccerrada, 0) AS salta_tarjeta_mccerrada
    , COALESCE(salta_tamcuotas, 0) AS salta_tamcuotas
    , COALESCE(acepta_tamcuotas, 0) AS acepta_tamcuotas
    , COALESCE(salta_mcblack, 0) AS salta_mcblack
    , COALESCE(acepta_mcblack, 0) AS acepta_mcblack
    , COALESCE(B2.deu_mcc, 0) AS deu_mcc
    , COALESCE(B2.deu_bic, 0) AS deu_bic
    , COALESCE(B2.monto_mora, 0) AS monto_mora
    , COALESCE(B2.det_sbif_3090, 0) AS det_sbif_3090
    , COALESCE(B2.det_sbif_90180, 0) AS det_sbif_90180
    , COALESCE(B2.det_sbif_180mas, 0) AS det_sbif_180mas
    , COALESCE(B2.det_sbif_3amas, 0) AS det_sbif_3amas
    , COALESCE(B2.dias_mora_car, 0) AS dias_mora_car
    , COALESCE(B2.dias_mora_bco, 0) AS dias_mora_bco
FROM schm_workspace.movil3_v2 AS A 
LEFT JOIN schm_workspace.colapso_cruce AS B2
    ON(A.rut = B2.rut);
    --select count(*) FROM schm_workspace.MOVIL4;
    
   
--41   
CREATE TABLE schm_workspace.movil5 AS 
SELECT 
    A.*
    , CASE 
        WHEN B.rut IS NOT NULL OR C.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS admision
FROM schm_workspace.movil4 AS A
LEFT JOIN schm_workspace.admision AS B
    ON(A.rut = B.rut)
LEFT JOIN schm_workspace.admision_movil AS C
    ON(A.rut = C.rut);
--select count(*) FROM schm_workspace.MOVIL5;


--42
CREATE TABLE schm_workspace.movil6 AS 
SELECT DISTINCT 
    A.*
    , MAX(CASE 
            WHEN B.RUT IS NOT NULL AND B.producto_camp = 'TAM' THEN 1 ELSE 0 
        END) AS captado_tam
    , MAX(CASE 
            WHEN B.RUT IS NOT NULL AND B.producto_camp = 'CDP' THEN 1 ELSE 0 
        END) AS captado_cdp
    , MAX(CASE 
            WHEN B.RUT IS NOT NULL AND B.producto_camp = 'MCCERRADA' THEN 1 ELSE 0 
        END) AS captado_mccerrada
    , MAX(CASE 
            WHEN B.RUT IS NOT NULL AND B.producto_camp = 'TR' THEN 1 ELSE 0 
        END) AS captado_tr
    , MAX(CASE 
            WHEN B.RUT IS NOT NULL AND B.producto_camp = 'TAMCUOTAS' THEN 1 ELSE 0 
        END) AS captado_tamcuotas
    , MAX(CASE 
            WHEN B.RUT IS NOT NULL AND B.producto_camp = 'MCBLACK' THEN 1 ELSE 0 
        END) AS captado_mcblack
FROM schm_workspace.movil5 AS A
LEFT JOIN (SELECT * FROM schm_workspace.captado_total2 WHERE canal = 'MOVIL') AS B
    ON(A.rut = B.rut)
GROUP BY 
	A.rut
    , A.visitas
   	, A.humano
	, A.vu
	, a.actividad_tr
	, a.vu_riesgo
	, a.marca_base
	, a.con_oferta
	, a.tipo_cliente
	, a.ya_captado
	, a.uof_nuevos
	, a.uof_dormidos
	, a.uof_capta
	, a.no_uof_capta_vu_activo
	, a.no_uof_capta_vu_semi
	, a.no_uof_capta_no_dormido
	, a.uof_cdp
	, a.no_uof_cdp1
	, a.no_uof_cdp2
	, a.no_uof_cdp3
	, a.r04_morosa_30_90
	, a.r04_directa_vencida
	, a.r04_inversiones_financieras
	, a.r04_castigada_directa
	, a.r04_castigada_indirect
	, lnegro
	, a.mora_sinacofi
	, a.salta_tarjeta_cdp
	, a.acepta_tarjeta_cdp
	, a.acepta_tarjeta_tam
	, a.salta_tarjeta_tam
	, a.acepta_tarjeta_tr
	, a.salta_tarjeta_tr
	, a.acepta_tarjeta_mccerrada
	, a.salta_tarjeta_mccerrada
	, a.salta_tamcuotas
	, a.acepta_tamcuotas
	, a.salta_mcblack
	, a.acepta_mcblack
	, a.deu_mcc
	, a.deu_bic
	, a.monto_mora
	, a.det_sbif_3090
	, a.det_sbif_90180
	, a.det_sbif_180mas
	, a.det_sbif_3amas
	, a.dias_mora_car
	, a.dias_mora_bco
	, a.admision;
--select count(*) from schm_workspace.movil6; 


--43
EXECUTE 
'CREATE TABLE schm_productos_financieros.funnel_capta_movil_'||v_periodo||' as -- DEJAR ESTO CON LIBRERIA Y PERIODO 
SELECT  
    A.*
    , MAX(CASE 
            WHEN B.rut IS NOT NULL AND B.compra_mes > 0 THEN 1 
            ELSE 0 
        END) AS concreta_mes
    , MAX(CASE 
            WHEN B.rut IS NOT NULL AND B.compra_dia > 0 THEN 1 
            ELSE 0 
        END) AS concreta_dia
    , MAX(CASE 
            WHEN humano = 1 
                AND con_oferta =''SIN OFERTA'' 
                AND uof_capta = 1 
                AND (r04_morosa_30_90
                    +r04_directa_vencida
                    +r04_inversiones_financieras
                    +r04_castigada_directa
                    +r04_castigada_indirect > 0 
                    OR mora_sinacofi > 0) THEN 1 
            ELSE 0 
        END) AS no_oferta_mora_protesto_capta
    , MAX(CASE 
            WHEN humano = 1 
                AND con_oferta = ''SIN OFERTA'' 
                AND (CASE 
                        WHEN humano = 1 
                            AND con_oferta =''SIN OFERTA'' 
                            AND uof_capta = 1 
                            AND (r04_morosa_30_90
                                +r04_directa_vencida
                                +r04_inversiones_financieras
                                +r04_castigada_directa
                                +r04_castigada_indirect > 0 
                                OR mora_sinacofi > 0) THEN 1 
                        ELSE 0 
                    END) = 0
                AND uof_capta = 1 
                AND r04_morosa_30_90
                    +r04_directa_vencida
                    +r04_inversiones_financieras
                    +r04_castigada_directa
                    +r04_castigada_indirect = 0 
                AND lnegro = 1 
                AND mora_sinacofi = 0 THEN 1 
            ELSE 0 
        END) AS no_oferta_lnegro_capta
    , MAX(CASE 
            WHEN humano = 1 
                AND con_oferta = ''SIN OFERTA''
                AND uof_capta = 1
                AND (CASE 
                        WHEN humano = 1 
                            AND con_oferta =''SIN OFERTA'' 
                            AND uof_capta = 1 
                            AND (r04_morosa_30_90
                                +r04_directa_vencida
                                +r04_inversiones_financieras
                                +r04_castigada_directa
                                +r04_castigada_indirect > 0 OR mora_sinacofi > 0) THEN 1 
                        ELSE 0 
                    END) = 0
                AND (CASE 
                        WHEN humano = 1 
                            AND con_oferta =''SIN OFERTA'' 
                            AND (CASE 
                                    WHEN humano = 1 
                                        AND con_oferta =''SIN OFERTA''
                                        AND uof_capta = 1 
                                        AND (r04_morosa_30_90
                                            +r04_directa_vencida
                                            +r04_inversiones_financieras
                                            +r04_castigada_directa
                                            +r04_castigada_indirect > 0 OR mora_sinacofi > 0) THEN 1 
                                    ELSE 0 
                                END) = 0
                            AND uof_capta = 1 
                            AND r04_morosa_30_90
                                +r04_directa_vencida
                                +r04_inversiones_financieras
                                +r04_castigada_directa
                                +r04_castigada_indirect = 0 
                            AND lnegro = 1 
                            AND mora_sinacofi = 0 THEN 1 
                        ELSE 0 
                    END) = 0 THEN 1 
            ELSE 0 
        END) AS no_oferta_riesgo_capta
    , MAX(CASE 
            WHEN humano = 1 
                AND con_oferta = ''SIN OFERTA'' 
                AND uof_cdp = 1 
                AND (r04_morosa_30_90
                    +r04_directa_vencida
                    +r04_inversiones_financieras
                    +r04_castigada_directa
                    +r04_castigada_indirect > 0 OR mora_sinacofi > 0) THEN 1 
            ELSE 0 
        END) AS no_oferta_mora_protesto_cdp
    , MAX(CASE 
            WHEN humano = 1 
                AND con_oferta = ''SIN OFERTA''
                AND (CASE 
                        WHEN humano = 1 
                            AND con_oferta = ''SIN OFERTA''
                            AND uof_cdp = 1 
                            AND (r04_morosa_30_90
                                +r04_directa_vencida
                                +r04_inversiones_financieras
                                +r04_castigada_directa
                                +r04_castigada_indirect > 0 OR mora_sinacofi > 0) THEN 1 
                        ELSE 0 
                    END) =0
                AND uof_cdp = 1 
                AND r04_morosa_30_90
                    +r04_directa_vencida
                    +r04_inversiones_financieras
                    +r04_castigada_directa
                    +r04_castigada_indirect = 0 
                AND lnegro = 1 
                AND mora_sinacofi = 0 THEN 1 
            ELSE 0 
        END) AS no_oferta_lnegro_cdp
    , MAX(CASE 
            WHEN humano = 1 
                AND con_oferta =''SIN OFERTA'' 
                AND (CASE 
                        WHEN humano = 1 
                            AND con_oferta = ''SIN OFERTA''
                            AND uof_cdp = 1  
                            AND (r04_morosa_30_90
                                +r04_directa_vencida
                                +r04_inversiones_financieras
                                +r04_castigada_directa
                                +r04_castigada_indirect > 0 
                            OR mora_sinacofi>0) THEN 1 
                        ELSE 0 
                    END)=0
                AND (CASE 
                        WHEN humano = 1 
                            AND con_oferta = ''SIN OFERTA''
                            AND (CASE 
                                    WHEN humano = 1 
                                        AND con_oferta = ''SIN OFERTA''
                                        AND uof_cdp = 1 
                                        AND (r04_morosa_30_90
                                            +r04_directa_vencida
                                            +r04_inversiones_financieras
                                            +r04_castigada_directa
                                            +r04_castigada_indirect > 0 
                                        OR mora_sinacofi > 0) THEN 1 
                                    ELSE 0 
                                END) =0
                            AND uof_cdp = 1 
                            AND r04_morosa_30_90
                                +r04_directa_vencida
                                +r04_inversiones_financieras
                                +r04_castigada_directa
                                +r04_castigada_indirect=0 
                            AND lnegro = 1 
                            AND mora_sinacofi = 0 THEN 1 
                        ELSE 0 
                    END) = 0 THEN 1 
            ELSE 0 
        END) AS  no_oferta_riesgo_cdp
    , CASE 
        WHEN C.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS marca_doble_ofe
FROM schm_workspace.movil6 AS A
LEFT JOIN schm_workspace.propension AS B
    ON(A.rut = B.rut)
LEFT JOIN br_dm_prod_bigdata_sasdata_db.sas_ppff_doble_oferta_rut C-- buscar tabla
	ON A.rut = C.rut
GROUP BY 
	A.rut
	, a.visitas
	, A.humano
	, A.vu
	, a.actividad_tr
	, a.vu_riesgo
	, a.marca_base
	, a.con_oferta
	, a.tipo_cliente
	, a.ya_captado
	, a.uof_nuevos
	, a.uof_dormidos
	, a.uof_capta
	, a.no_uof_capta_vu_activo
	, a.no_uof_capta_vu_semi
	, a.no_uof_capta_no_dormido
	, a.uof_cdp
	, a.no_uof_cdp1
	, a.no_uof_cdp2
	, a.no_uof_cdp3
	, a.r04_morosa_30_90
	, a.r04_directa_vencida
	, a.r04_inversiones_financieras
	, a.r04_castigada_directa
	, a.r04_castigada_indirect
	, lnegro
	, a.mora_sinacofi
	, a.salta_tarjeta_cdp
	, a.acepta_tarjeta_cdp
	, a.acepta_tarjeta_tam
	, a.salta_tarjeta_tam
	, a.acepta_tarjeta_tr
	, a.salta_tarjeta_tr
	, a.acepta_tarjeta_mccerrada
	, a.salta_tarjeta_mccerrada
	, a.salta_tamcuotas
	, a.acepta_tamcuotas
	, a.salta_mcblack
	, a.acepta_mcblack
	, a.deu_mcc
	, a.deu_bic
	, a.monto_mora
	, a.det_sbif_3090
	, a.det_sbif_90180
	, a.det_sbif_180mas
	, a.det_sbif_3amas
	, a.dias_mora_car
	, a.dias_mora_bco
	, a.admision
	, A.CAPTADO_TAM
	, a.captado_cdp
	, a.captado_mccerrada
	, a.captado_tr
	, a.captado_tamcuotas
	, a.captado_mcblack
	, C.RUT';

--select count(*) from schm_productos_financieros.funnel_capta_movil;


--44
CREATE TABLE schm_workspace.ccss1 AS 
SELECT DISTINCT  
    rut
    , fecha 
FROM schm_workspace.transacciones_capta--buscar lib
WHERE 
    canal = 3
    AND sucursal NOT IN (502,503,504,505,506,507,508,509,510,511,512,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,
                        532,533,534,536,537,538,539,541,542,543,544,545,546,547,548,549,550,551,60,558,61,557,584,559,800,801,802);
--select count(*) from  schm_workspace.ccss1;


--45
CREATE TABLE schm_workspace.ccss2 AS 
SELECT 
    rut,
    COUNT(rut) AS visitas,
    CASE 
        WHEN (rut BETWEEN 1000000 AND 50000000) AND rut NOT IN (1111111,2222222,3333333,4444444,5555555,
            6666666,7777777,8888888,9999999,11111111,22222222,33333333,44444444) THEN 1 
        ELSE 0 
    END AS humano 
FROM schm_workspace.ccss1
GROUP BY 
    rut;
--select count(*) from schm_workspace.ccss2;  


--46
CREATE TABLE schm_workspace.ccss3_v1 AS 
SELECT DISTINCT
    A.*
    , CASE 
        WHEN B1.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS VU
    , b1.actividad_tr
    , b1.vu_riesgo
    , b1.marca_base
    , CASE 
        WHEN B2.rut IS NOT NULL THEN B2.producto2 
        WHEN B2.rut IS NULL AND D.rut IS NOT NULL THEN D.oferta
        ELSE 'SIN OFERTA'  
    END AS con_oferta
    , CASE 
        WHEN B2.rut IS NOT NULL THEN B2.tipo_cliente ::integer
        WHEN B2.rut IS NULL AND D.rut IS NOT NULL THEN D.camp_origen_base
    END AS tipo_cliente
    , CASE 
        WHEN C.rut IS NOT NULL THEN 1 
        ELSE 0 
    END AS ya_captado
FROM schm_workspace.ccss2 AS A
LEFT JOIN schm_workspace.act_tr AS B1--verificar si esta en este esquema
    ON(A.rut = B1.rut)
LEFT JOIN schm_workspace.resumen_oferta3 AS B2
    ON(A.rut = B2.rut)
LEFT JOIN schm_workspace.captado6m2 AS C
    ON(A.rut = C.rut)
LEFT JOIN (SELECT * FROM schm_workspace.oferta_visible WHERE rut NOT IN (SELECT rut FROM schm_workspace.resumen_oferta3) AND oferta NOT IN ('CV', 'CC')) AS D
    ON(A.rut = D.rut);
--select count(*) from schm_workspace.ccss3_v1; 


--47
CREATE TABLE schm_workspace.ccss3_v2 as
SELECT 
    A.*
    , CASE 
        WHEN (con_oferta NOT IN ('SIN OFERTA', 'CDP') AND tipo_cliente IN('102', '108', '201', '207'))
            OR ((vu = 0  or (D.rut IS NOT NULL)) AND ya_captado = 0 AND A.humano = 1) THEN 1 
        ELSE 0 
    END AS uof_nuevos
    , CASE 
        WHEN (con_oferta NOT IN ('SIN OFERTA', 'CDP') AND tipo_cliente IS NOT NULL AND tipo_cliente NOT IN ('102', '108', '201', '207') AND uof_nuevos = 0)
            OR (vu = 1 AND actividad_tr IN ('DORMIDO BLANDO', 'DORMIDO DURO', 'ANTIGUO SIN USO') AND uof_nuevos = 0 AND ya_captado = 0 AND A.humano = 1) THEN 1 
        ELSE 0 
    END AS uof_dormidos
    , CASE 
        WHEN uof_nuevos = 1 OR uof_dormidos=1 THEN 1 
        ELSE 0 
    END AS uof_capta
    , CASE 
        WHEN uof_capta = 0 AND  vu_riesgo=1 AND  ACTIVIDAD_TR='ACTIVO' AND A.humano = 1 THEN 1 
        ELSE 0 
    END AS no_uof_capta_vu_activo
    , CASE 
        WHEN uof_capta = 0 AND vu_riesgo=1 AND  ACTIVIDAD_TR='SEMIACTIVO' AND A.humano = 1 THEN 1 
        ELSE 0 
    END AS no_uof_capta_vu_semi
    , CASE 
        WHEN uof_capta = 0  AND  no_uof_capta_vu_activo=0 AND   NO_uof_capta_VU_semi=0 AND A.humano = 1  THEN 1 
        ELSE 0 
        END AS NO_uof_capta_NO_DORMIDO
    , CASE 
        WHEN (con_oferta in ('CDP')) or
	    (E.RUT IS NOT NULL AND marca_base in ('TR') AND vu_riesgo=1
	    AND actividad_TR in ('ACTIVO') AND A.humano = 1 AND ya_captado=0)
	    THEN 1 ELSE 0 
	    END AS uof_cdp
    , CASE WHEN vu_riesgo=0 AND A.humano = 1 AND marca_base='TR' AND  uof_cdp=0 THEN 1 ELSE 0 
    	END AS NO_uof_cdp1
    , CASE WHEN  vu_riesgo>0 AND A.humano = 1 AND marca_base='TAM' AND  uof_cdp=0  THEN 1 ELSE 0 
    	END AS NO_uof_cdp2
    , CASE WHEN  uof_cdp=0 AND  NO_uof_cdp1=0
    	AND  NO_uof_cdp2 =0 THEN 1 ELSE 0 
    	END AS NO_uof_cdp3
    , COALESCE(C.deuda_morosa_30_90,0) AS r04_morosa_30_90
    , COALESCE(C.deuda_directa_vencida,0) AS r04_directa_vencida
    , COALESCE(C.deuda_inversiones_financieras,0) AS r04_inversiones_financieras
    , COALESCE(C.saldo_deuda_castigada_directa ,0) AS r04_castigada_directa
    , COALESCE(C.saldo_deuda_castigada_indirect, 0) AS r04_castigada_indirect
    , CASE WHEN C1.rut IS NOT NULL THEN 1 ELSE 0 
    	END AS LNEGRO
    , CASE WHEN C2.rut IS NOT NULL  THEN 1 ELSE 0 
    	END AS mora_sinacofi
FROM schm_workspace.ccss3_v1 AS A
LEFT JOIN schm_data_analytics.r04_sde AS C -- buscar lib 
    ON(A.rut = C.rut)
LEFT JOIN (SELECT DISTINCT rut FROM schm_data_analytics.ctbl_lnegro_car where TIPO_INHIBICION <>'PEP') AS C1
    ON(A.rut = C1.rut)
LEFT JOIN (SELECT DISTINCT RUT FROM schm_data_analytics.mdpg_mora_sinacofi WHERE MORA_CONSOLIDADA >= 10000) AS C2
    ON(A.rut = C2.rut)
LEFT JOIN schm_workspace.castigo AS D
    ON (A.rut = D.rut)
LEFT JOIN schm_workspace.act_tr_bi AS E 
    ON (A.rut = E.rut)
WHERE c.periodo = v_periodo_3;
--select count(*) from schm_workspace.ccss3_v2; 


--48
drop table if exists schm_workspace.cruce;
CREATE TABLE schm_workspace.cruce AS 
SELECT *,
CASE WHEN PRODUCTO='8' AND 	CON_PRODUCTO NOT IN ('812','815','814','803','804','813','816') AND MENSAJE IS NOT NULL  THEN 1 ELSE 0 END AS  CDP,
CASE WHEN (PRODUCTO='9' AND CON_PRODUCTO  in ('914','915')) 
or (PRODUCTO='8' AND CON_PRODUCTO  in ('814','815')) AND MENSAJE IS NOT NULL  THEN 1 ELSE 0 END AS MCCERRADA,
CASE WHEN (PRODUCTO='9' AND CON_PRODUCTO  in ('900','901','902','903','999'))
AND MENSAJE IS NOT NULL    THEN 1 ELSE 0 END AS TR,
CASE WHEN
(PRODUCTO='9' AND CON_PRODUCTO   NOT IN ('900','901','902','903','999','908','917','918'))
or (PRODUCTO='8' AND CON_PRODUCTO  in ('812')) AND MENSAJE IS NOT NULL  THEN 1 ELSE 0 END AS TAM,
CASE WHEN (PRODUCTO='9' AND CON_PRODUCTO    in ('908'))
or   (PRODUCTO='8' AND CON_PRODUCTO  in ('803','804')) AND MENSAJE IS NOT NULL  THEN 1 ELSE 0 END AS TAMCUOTAS,
CASE WHEN (PRODUCTO='9' AND CON_PRODUCTO    in ('917','918'))
or   (PRODUCTO='8' AND CON_PRODUCTO  in ('813','816')) AND MENSAJE IS NOT NULL  THEN 1 ELSE 0 END AS MCBLACK,
CASE WHEN CAMP_MOV_MNT_DEU_MCC>10000 THEN 1 ELSE 0 END AS DEU_MCC,
CASE WHEN CAMP_MOV_MTO_DEU_BIC>10000 THEN 1 ELSE 0 END AS DEU_BIC,
CASE WHEN CAMP_MOV_MNT_DEU_MCC+CAMP_MOV_MNT_DEU_MCC>10000 THEN 1 ELSE 0 END AS MONTO_MORA,
CASE WHEN CAMP_MOV_DET_SBIF_3090>0 THEN 1 ELSE 0 end  AS DET_SBIF_3090,
CASE WHEN CAMP_MOV_DET_SBIF_90180>0	THEN 1 ELSE 0 END AS DET_SBIF_90180,
CASE WHEN CAMP_MOV_DET_SBIF_180MAS>0 THEN 1 ELSE 0 END AS DET_SBIF_180MAS,
CASE WHEN CAMP_MOV_DET_SBIF_3AMAS>0 THEN 1 ELSE 0 END AS DET_SBIF_3AMAS,
CASE WHEN CAMP_MOV_DIAS_MORA_CAR>0 THEN 1 ELSE 0 END AS DIAS_MORA_CAR,
CASE WHEN CAMP_MOV_DIAS_MORA_BCO>0 THEN 1 ELSE 0 END AS DIAS_MORA_BCO
FROM schm_workspace.transacciones_capta -- buscar esta lib 
WHERE rut BETWEEN 1000000 AND 50000000
AND rut NOT IN (1111111,2222222,3333333,4444444,5555555,6666666,7777777,8888888,9999999,
11111111,22222222,33333333,44444444)
AND CANAL=3
AND SUCURSAL NOT IN 
(502,503,504,505,506,507,508,509,510,511,512,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,
532,533,534,536,537,538,539,541,542,543,544,545,546,547,548,549,550,551,60,558,61,557,584,559,800,801,802);
--select count(*) from schm_workspace.CRUCE; 

--49
drop table if exists schm_workspace.colapso_cruce;
CREATE TABLE schm_workspace.colapso_cruce AS 
SELECT  
RUT,
MAX(CASE WHEN CDP=1 THEN 1 ELSE 0 END ) AS SALTA_TARJETA_CDP,
MAX(CASE WHEN EST_OFERTA IN (218,6000)  AND CDP=1 THEN 1 ELSE 0 END) AS ACEPTA_TARJETA_cdp,
MAX(CASE WHEN EST_OFERTA IN (218,6000)  AND TAM=1 THEN 1 ELSE 0 END) AS ACEPTA_TARJETA_tam,
MAX(CASE WHEN TAM=1 THEN 1 ELSE 0 END ) AS SALTA_TARJETA_tam,
MAX(CASE WHEN EST_OFERTA IN (218,6000)  AND TR=1 THEN 1 ELSE 0 END) AS ACEPTA_TARJETA_TR,
MAX(CASE WHEN TR=1 THEN 1 ELSE 0 END ) AS SALTA_TARJETA_TR,
MAX(CASE WHEN EST_OFERTA IN (218,6000)  AND MCCERRADA=1 THEN 1 ELSE 0 END) AS ACEPTA_TARJETA_MCCERRADA,
MAX(CASE WHEN MCCERRADA=1 THEN 1 ELSE 0 END ) AS SALTA_TARJETA_MCCERRADA,
MAX(CASE WHEN TAMCUOTAS=1 THEN 1 ELSE 0 END ) AS SALTA_TAMCUOTAS,
MAX(CASE WHEN EST_OFERTA IN (218,6000)  AND TAMCUOTAS=1 THEN 1 ELSE 0 END) AS ACEPTA_TAMCUOTAS,
MAX(CASE WHEN MCBLACK=1 THEN 1 ELSE 0 END ) AS SALTA_MCBLACK,
MAX(CASE WHEN EST_OFERTA IN (218,6000)  AND MCBLACK=1 THEN 1 ELSE 0 END) AS ACEPTA_MCBLACK,
MAX(CASE WHEN DEU_MCC=1 THEN 1 ELSE 0 END) AS DEU_MCC,
MAX(CASE WHEN DEU_BIC=1 THEN 1 ELSE 0 END) AS DEU_BIC,
MAX(CASE WHEN MONTO_MORA=1 THEN 1 ELSE 0 END) AS MONTO_MORA,
MAX(CASE WHEN DET_SBIF_3090=1 THEN 1 ELSE 0 END) AS DET_SBIF_3090,
MAX(CASE WHEN DET_SBIF_90180=1 THEN 1 ELSE 0 END) AS DET_SBIF_90180,
MAX(CASE WHEN DET_SBIF_180MAS=1 THEN 1 ELSE 0 END) AS DET_SBIF_180MAS,
MAX(CASE WHEN DET_SBIF_3AMAS=1 THEN 1 ELSE 0 END) AS DET_SBIF_3AMAS,
MAX(CASE WHEN DIAS_MORA_CAR=1 THEN 1 ELSE 0 END) AS DIAS_MORA_CAR,
MAX(CASE WHEN DIAS_MORA_BCO=1 THEN 1 ELSE 0 END) AS DIAS_MORA_BCO
FROM schm_workspace.cruce
where rut IS NOT NULL
GROUP BY rut;
--select count(*) from  schm_workspace.colapso_cruce;


--50
CREATE TABLE schm_workspace.ccss4 AS 
SELECT  
A.*,
COALESCE(SALTA_TARJETA_CDP,0) AS SALTA_TARJETA_CDP,
COALESCE(ACEPTA_TARJETA_cdp,0) AS ACEPTA_TARJETA_cdp,
COALESCE(ACEPTA_TARJETA_tam,0) AS ACEPTA_TARJETA_tam,
COALESCE(SALTA_TARJETA_tam,0) AS SALTA_TARJETA_tam,
COALESCE(ACEPTA_TARJETA_TR,0) AS ACEPTA_TARJETA_TR,
COALESCE(SALTA_TARJETA_TR,0) AS SALTA_TARJETA_TR,
COALESCE(ACEPTA_TARJETA_MCCERRADA,0) AS ACEPTA_TARJETA_MCCERRADA,
COALESCE(SALTA_TARJETA_MCCERRADA,0) AS SALTA_TARJETA_MCCERRADA,
COALESCE(SALTA_TAMCUOTAS,0) AS SALTA_TAMCUOTAS,
COALESCE(ACEPTA_TAMCUOTAS,0) AS ACEPTA_TAMCUOTAS,
COALESCE(SALTA_MCBLACK,0) AS SALTA_MCBLACK,
COALESCE(ACEPTA_MCBLACK,0) AS ACEPTA_MCBLACK,
COALESCE(B2.DEU_MCC,0) AS DEU_MCC,
COALESCE(B2.DEU_BIC,0) AS DEU_BIC,
COALESCE(B2.MONTO_MORA,0) AS MONTO_MORA,
COALESCE(B2.DET_SBIF_3090,0) AS DET_SBIF_3090,
COALESCE(B2.DET_SBIF_90180,0) AS DET_SBIF_90180,
COALESCE(B2.DET_SBIF_180MAS,0) AS DET_SBIF_180MAS,
COALESCE(B2.DET_SBIF_3AMAS,0) AS DET_SBIF_3AMAS,
COALESCE(B2.DIAS_MORA_CAR,0) AS DIAS_MORA_CAR,
COALESCE(B2.DIAS_MORA_BCO,0) AS DIAS_MORA_BCO
FROM schm_workspace.ccss3_v2 AS a 
LEFT JOIN schm_workspace.colapso_cruce AS b2
    ON(A.rut=B2.rut);
--select count(*) from schm_workspace.ccss4;


--51
CREATE TABLE schm_workspace.ccss5 AS 
SELECT A.*,
CASE WHEN b.rut IS NOT NULL or C.RUT IS NOT NULL THEN 1 ELSE 0 END AS admision
FROM schm_workspace.ccss4 AS a
LEFT JOIN schm_workspace.admision AS b
ON(A.rut=B.RUT)
LEFT JOIN schm_workspace.admision_movil AS C
ON(A.RUT=C.RUT);
--select count(*) from schm_workspace.ccss5;


--52
CREATE TABLE schm_workspace.ccss6 AS 
SELECT  DISTINCT A.*,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='TAM'  THEN 1 ELSE 0 END) AS CAPTADO_TAM,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='CDP'  THEN 1 ELSE 0 END) AS CAPTADO_CDP,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='MCCERRADA'  THEN 1 ELSE 0 END) AS CAPTADO_MCCERRADA,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='TR'  THEN 1 ELSE 0 END) AS CAPTADO_TR,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='TAMCUOTAS'  THEN 1 ELSE 0 END) AS CAPTADO_TAMCUOTAS,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='MCBLACK'  THEN 1 ELSE 0 END) AS CAPTADO_MCBLACK
FROM schm_workspace.ccss5 AS A
LEFT JOIN (SELECT * FROM schm_workspace.captado_total2 where CANAL='PLATAFORMA COMERCIAL'
AND COD_SUCURSAL not  in (502,503,504,505,506,507,508,509,510,511,512,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,
532,533,534,536,537,538,539,541,542,543,544,545,546,547,548,549,550,551,60,558,61,557,584,559,800,801,802
)) AS B
    ON(A.RUT=B.RUT)
GROUP BY 
	A.rut
	, A.VISITAS
	, A.humano
	, A.vu
	, a.actividad_tr
	, a.vu_riesgo
	, a.marca_base
	, a.con_oferta
	, a.tipo_cliente
	, a.ya_captado
	, a.uof_nuevos
	, a.uof_dormidos
	, a.uof_capta
	, a.no_uof_capta_vu_activo
	, a.no_uof_capta_vu_semi
	, a.no_uof_capta_no_dormido
	, a.uof_cdp
	, a.no_uof_cdp1
	, a.no_uof_cdp2
	, a.no_uof_cdp3
	, a.r04_morosa_30_90
	, a.r04_directa_vencida
	, a.r04_inversiones_financieras
	, a.r04_castigada_directa
	, a.r04_castigada_indirect
	, lnegro
	, a.mora_sinacofi
	, a.salta_tarjeta_cdp
	, a.acepta_tarjeta_cdp
	, a.acepta_tarjeta_tam
	, a.salta_tarjeta_tam
	, a.acepta_tarjeta_tr
	, a.salta_tarjeta_tr
	, a.acepta_tarjeta_mccerrada
	, a.salta_tarjeta_mccerrada
	, a.salta_tamcuotas
	, a.acepta_tamcuotas
	, a.salta_mcblack
	, a.acepta_mcblack
	, a.deu_mcc
	, a.deu_bic
	, a.monto_mora
	, a.det_sbif_3090
	, a.det_sbif_90180
	, a.det_sbif_180mas
	, a.det_sbif_3amas
	, a.dias_mora_car
	, a.dias_mora_bco
	, a.admision;
--select count(*) from schm_workspace.CCSS6; 


--53
EXECUTE 
'CREATE TABLE schm_productos_financieros.funnel_capta_ccss_'||v_periodo||' AS -- ver donde va a quedar esto
SELECT  A.*,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.COMPRA_MES>0 THEN 1 ELSE 0 END) AS CONCRETA_MES,
MAX(CASE WHEN B.RUT IS NOT NULL AND B.COMPRA_DIA>0 THEN 1 ELSE 0 END) AS CONCRETA_DIA,
MAX(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA''
AND (uof_capta=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END) AS NO_oferta_mora_protesto_CAPTA,
MAX(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA'' and
(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA''
AND (uof_capta=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END)=0
AND (uof_capta=1 ) AND r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect=0 AND lnegro=1 AND 	mora_sinacofi=0  THEN 1 ELSE 0 END) AS no_oferta_lnegro_capta,
MAX( CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA''
AND (uof_capta=1)
AND (CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA''
AND (uof_capta=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END)=0
AND 
(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA'' and
(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA''
AND (uof_capta=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END)=0
AND (uof_capta=1 ) AND r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect=0 AND lnegro=1 AND 	mora_sinacofi=0  THEN 1 ELSE 0 END)=0
THEN 1 ELSE 0 end) AS No_oferta_riesgo_capta,
MAX(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND (uof_cdp=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END) AS no_oferta_mora_protesto_cdp,
MAX(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND 
(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND (uof_cdp=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END) =0
AND (uof_cdp=1 ) AND r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect=0 AND lnegro=1 AND 	mora_sinacofi=0  THEN 1 ELSE 0 END) AS No_oferta_lnegro_CDP,
MAX(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA'' and
(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND (uof_cdp=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END)=0
AND 
(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND 
(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND (uof_cdp=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END) =0
AND (uof_cdp=1 ) AND r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect=0 AND lnegro=1 AND 	mora_sinacofi=0  THEN 1 ELSE 0 END)=0
THEN 1 ELSE 0 END) AS  no_oferta_riesgo_cdp,
CASE WHEN C.RUT IS NOT NULL THEN 1 ELSE 0 END AS marca_doble_ofe
FROM schm_workspace.ccss6 AS A
LEFT JOIN schm_workspace.propension AS B
    ON(A.RUT=B.RUT)
LEFT JOIN br_dm_prod_bigdata_sasdata_db.sas_ppff_doble_oferta_rut as C-- buscar lib 
	ON A.RUT=C.RUT
GROUP BY 
	A.rut
	, a.visitas
	, A.humano
	, A.vu
	, a.actividad_tr
	, a.vu_riesgo
	, a.marca_base
	, a.con_oferta
	, a.tipo_cliente
	, a.ya_captado
	, a.uof_nuevos
	, a.uof_dormidos
	, a.uof_capta
	, a.no_uof_capta_vu_activo
	, a.no_uof_capta_vu_semi
	, a.no_uof_capta_no_dormido
	, a.uof_cdp
	, a.no_uof_cdp1
	, a.no_uof_cdp2
	, a.no_uof_cdp3
	, a.r04_morosa_30_90
	, a.r04_directa_vencida
	, a.r04_inversiones_financieras
	, a.r04_castigada_directa
	, a.r04_castigada_indirect
	, lnegro
	, a.mora_sinacofi
	, a.salta_tarjeta_cdp
	, a.acepta_tarjeta_cdp
	, a.acepta_tarjeta_tam
	, a.salta_tarjeta_tam
	, a.acepta_tarjeta_tr
	, a.salta_tarjeta_tr
	, a.acepta_tarjeta_mccerrada
	, a.salta_tarjeta_mccerrada
	, a.salta_tamcuotas
	, a.acepta_tamcuotas
	, a.salta_mcblack
	, a.acepta_mcblack
	, a.deu_mcc
	, a.deu_bic
	, a.monto_mora
	, a.det_sbif_3090
	, a.det_sbif_90180
	, a.det_sbif_180mas
	, a.det_sbif_3amas
	, a.dias_mora_car
	, a.dias_mora_bco
	, a.admision
	, A.CAPTADO_TAM
	, a.captado_cdp
	, a.captado_mccerrada
	, a.captado_tr
	, a.captado_tamcuotas
	, a.captado_mcblack
	, C.RUT';
--select count(*) from schm_productos_financieros.funnel_capta_ccss; 


--54
CREATE TABLE schm_workspace.banco1 AS 
SELECT DISTINCT  
rut,
fecha 
FROM schm_workspace.transacciones_capta
WHERE CANAL=3
AND SUCURSAL  in 
(502,503,504,505,506,507,508,509,510,511,512,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,
532,533,534,536,537,538,539,541,542,543,544,545,546,547,548,549,550,551,558,557,584,559);
--select count(*) from  schm_workspace.banco1;


--55
CREATE TABLE schm_workspace.banco2 AS 
SELECT 
rut,
COUNT(RUT) AS VISITAS,
CASE WHEN (rut BETWEEN 1000000 AND 50000000) AND rut NOT IN (1111111,2222222,3333333,4444444,5555555,
6666666,7777777,8888888,9999999,11111111,22222222,33333333,44444444) THEN 1 ELSE 0 END AS humano 
FROM schm_workspace.banco1
GROUP BY 
RUT;
--select count(*) from  schm_workspace.banco2;


--56
CREATE TABLE schm_workspace.banco3_v1 AS 
SELECT DISTINCT
A.*,
CASE WHEN  B1.RUT IS NOT NULL  THEN 1 ELSE 0 END AS VU,
b1.actividad_TR,b1.vu_riesgo,
b1.marca_base,
CASE WHEN  B2.rut IS NOT NULL  THEN B2.producto2 
WHEN B2.rut IS NULL AND D.rut IS NOT NULL THEN D.oferta
ELSE 'SIN OFERTA'  END AS CON_OFERTA,
CASE WHEN  B2.rut IS NOT NULL  THEN B2.tipo_cliente ::integer
WHEN B2.rut IS NULL AND D.rut IS NOT NULL THEN D.CAMP_ORIGEN_BASE
END AS tipo_cliente,
CASE WHEN C.rut IS NOT NULL THEN 1 ELSE 0 END AS ya_captado
FROM schm_workspace.banco2 AS A
LEFT JOIN schm_workspace.act_tr AS B1
ON(A.RUT=B1.RUT)
LEFT JOIN schm_workspace.resumen_oferta3 AS B2
ON(A.RUT=B2.RUT)
LEFT JOIN schm_workspace.captado6m2 AS c
ON(A.rut=C.rut)
LEFT JOIN (SELECT * FROM schm_workspace.oferta_visible where rut NOT IN (SELECT rut FROM schm_workspace.resumen_oferta3)
AND oferta NOT IN ('CV','CC')) AS d
ON(A.rut=D.rut);
--select count(*) from schm_workspace.banco3_v1; 


--57
CREATE TABLE schm_workspace.banco3_v2 as
SELECT 
A.*,
CASE WHEN (con_oferta NOT IN ('SIN OFERTA','CDP') AND tipo_cliente
IN('102','108','201','207'))
or ((vu=0  or (D.rut IS NOT NULL) ) AND ya_captado=0 AND A.humano = 1) 
THEN 1 ELSE 0 END AS uof_nuevos,
CASE WHEN (con_oferta NOT IN ('SIN OFERTA','CDP') AND tipo_cliente IS NOT NULL AND tipo_cliente
NOT IN('102','108','201','207') AND  uof_nuevos=0 )
or (vu=1 AND actividad_TR in ('DORMIDO BLANDO', 
'DORMIDO DURO' , 'ANTIGUO SIN USO')  AND  uof_nuevos=0
AND ya_captado=0 AND A.humano = 1) THEN 1 ELSE 0 END AS uof_dormidos,
CASE WHEN  uof_nuevos=1 or  uof_dormidos=1 THEN 1 ELSE 0 END AS uof_capta,
CASE WHEN  uof_capta=0 AND  vu_riesgo=1 AND  ACTIVIDAD_TR='ACTIVO' AND A.humano = 1 THEN 1 ELSE 0 END AS NO_uof_capta_VU_ACTIVO,
CASE WHEN  uof_capta=0 AND vu_riesgo=1 AND  ACTIVIDAD_TR='SEMIACTIVO' AND A.humano = 1 THEN 1 ELSE 0 END AS NO_uof_capta_VU_semi,
CASE WHEN  uof_capta=0  AND  NO_uof_capta_VU_ACTIVO=0 AND   NO_uof_capta_VU_semi=0 AND A.humano = 1  THEN 1
ELSE 0 END AS NO_uof_capta_NO_DORMIDO, 
CASE WHEN (con_oferta in ('CDP')) or
(E.RUT IS NOT NULL AND marca_base in ('TR') AND vu_riesgo=1
AND actividad_TR in ('ACTIVO') AND A.humano = 1 AND ya_captado=0)
THEN 1 ELSE 0 END AS uof_cdp,
CASE WHEN vu_riesgo=0 AND A.humano = 1 AND marca_base='TR' AND  uof_cdp=0 THEN 1 ELSE 0 END AS NO_uof_cdp1,
CASE WHEN  vu_riesgo>0 AND A.humano = 1 AND marca_base='TAM' AND  uof_cdp=0  THEN 1 ELSE 0 END AS NO_uof_cdp2,
CASE WHEN  uof_cdp=0 AND  NO_uof_cdp1=0
AND  NO_uof_cdp2 =0 THEN 1 ELSE 0 END AS NO_uof_cdp3,
COALESCE(C.DEUDA_MOROSA_30_90,0) AS r04_morosa_30_90,
COALESCE(C.DEUDA_DIRECTA_VENCIDA,0) AS r04_directa_vencida,
COALESCE(C.DEUDA_INVERSIONES_FINANCIERAS,0) AS r04_inversiones_financieras,
COALESCE(C.SALDO_DEUDA_CASTIGADA_DIRECTA ,0) AS r04_castigada_directa,
COALESCE(C.SALDO_DEUDA_CASTIGADA_INDIRECT, 0) AS r04_castigada_indirect,
CASE WHEN C1.rut IS NOT NULL THEN 1 ELSE 0 END AS LNEGRO,
CASE WHEN C2.rut IS NOT NULL  THEN 1 ELSE 0 END AS mora_sinacofi
FROM schm_workspace.banco3_v1 AS A
LEFT JOIN schm_data_analytics.r04_sde AS C-- 3meses ant
    ON(A.rut=C.rut)
LEFT JOIN (SELECT DISTINCT  rut FROM schm_data_analytics.ctbl_lnegro_car where TIPO_INHIBICION <>'PEP') AS c1--buscar lib
    ON(A.rut=C1.rut)
LEFT JOIN (SELECT DISTINCT RUT FROM schm_data_analytics.mdpg_mora_sinacofi WHERE MORA_CONSOLIDADA>=10000) AS c2--buscar lib
    ON(A.rut=C2.rut)
LEFT JOIN schm_workspace.castigo AS d
    on (A.rut=D.rut)
LEFT JOIN schm_workspace.act_tr_bi AS e 
    on (A.rut=E.rut)
WHERE c.periodo=v_periodo_3;
--select count(*) from schm_workspace.banco3_v2;   


--58
drop table if exists schm_workspace.cruce;
CREATE TABLE schm_workspace.cruce AS 
SELECT *,
CASE WHEN PRODUCTO='8' AND 	CON_PRODUCTO NOT IN ('812','815','814','803','804','813','816') AND MENSAJE IS NOT NULL  THEN 1 ELSE 0 END AS  CDP,
CASE WHEN (PRODUCTO='9' AND CON_PRODUCTO  in ('914','915')) 
or (PRODUCTO='8' AND CON_PRODUCTO  in ('814','815')) AND MENSAJE IS NOT NULL  THEN 1 ELSE 0 END AS MCCERRADA,
CASE WHEN (PRODUCTO='9' AND CON_PRODUCTO  in ('900','901','902','903','999'))
AND MENSAJE IS NOT NULL    THEN 1 ELSE 0 END AS TR,
CASE WHEN
(PRODUCTO='9' AND CON_PRODUCTO   NOT IN ('900','901','902','903','999','908','917','918'))
or   (PRODUCTO='8' AND CON_PRODUCTO  in ('812')) AND MENSAJE IS NOT NULL  THEN 1 ELSE 0 END AS TAM,
CASE WHEN (PRODUCTO='9' AND CON_PRODUCTO    in ('908'))
or   (PRODUCTO='8' AND CON_PRODUCTO  in ('803','804')) AND MENSAJE IS NOT NULL  THEN 1 ELSE 0 END AS TAMCUOTAS,
CASE WHEN (PRODUCTO='9' AND CON_PRODUCTO    in ('917','918'))
or   (PRODUCTO='8' AND CON_PRODUCTO  in ('813','816')) AND MENSAJE IS NOT NULL  THEN 1 ELSE 0 END AS MCBLACK,
CASE WHEN CAMP_MOV_MNT_DEU_MCC>10000 THEN 1 ELSE 0 END AS DEU_MCC,
CASE WHEN CAMP_MOV_MTO_DEU_BIC>10000 THEN 1 ELSE 0 END AS DEU_BIC,
CASE WHEN CAMP_MOV_MNT_DEU_MCC+CAMP_MOV_MNT_DEU_MCC>10000 THEN 1 ELSE 0 END AS MONTO_MORA,
CASE WHEN CAMP_MOV_DET_SBIF_3090>0 THEN 1 ELSE 0 end  AS DET_SBIF_3090,
CASE WHEN CAMP_MOV_DET_SBIF_90180>0	THEN 1 ELSE 0 END AS DET_SBIF_90180,
CASE WHEN CAMP_MOV_DET_SBIF_180MAS>0 THEN 1 ELSE 0 END AS DET_SBIF_180MAS,
CASE WHEN CAMP_MOV_DET_SBIF_3AMAS>0 THEN 1 ELSE 0 END AS DET_SBIF_3AMAS,
CASE WHEN CAMP_MOV_DIAS_MORA_CAR>0 THEN 1 ELSE 0 END AS DIAS_MORA_CAR,
CASE WHEN CAMP_MOV_DIAS_MORA_BCO>0 THEN 1 ELSE 0 END AS DIAS_MORA_BCO
FROM schm_workspace.TRANSACCIONES_CAPTA 
WHERE rut BETWEEN 1000000 AND 50000000
AND rut NOT IN (1111111,2222222,3333333,4444444,5555555,6666666,7777777,8888888,9999999,
11111111,22222222,33333333,44444444)
AND CANAL=3
AND SUCURSAL  in 
(502,503,504,505,506,507,508,509,510,511,512,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,
532,533,534,536,537,538,539,541,542,543,544,545,546,547,548,549,550,551,558,557,584,559);
--select count(*) from schm_workspace.cruce;


--59
drop table if exists schm_workspace.colapso_cruce;
CREATE TABLE schm_workspace.colapso_cruce AS 
SELECT  
RUT,
MAX(CASE WHEN CDP=1 THEN 1 ELSE 0 END ) AS SALTA_TARJETA_CDP,
max(CASE WHEN EST_OFERTA IN (218,6000)  AND CDP=1 THEN 1 ELSE 0 END) AS ACEPTA_TARJETA_cdp,
max(CASE WHEN EST_OFERTA IN (218,6000)  AND TAM=1 THEN 1 ELSE 0 END) AS ACEPTA_TARJETA_tam,
MAX(CASE WHEN TAM=1 THEN 1 ELSE 0 END ) AS SALTA_TARJETA_tam,
max(CASE WHEN EST_OFERTA IN (218,6000)  AND TR=1 THEN 1 ELSE 0 END) AS ACEPTA_TARJETA_TR,
MAX(CASE WHEN TR=1 THEN 1 ELSE 0 END ) AS SALTA_TARJETA_TR,
max(CASE WHEN EST_OFERTA IN (218,6000)  AND MCCERRADA=1 THEN 1 ELSE 0 END) AS ACEPTA_TARJETA_MCCERRADA,
MAX(CASE WHEN MCCERRADA=1 THEN 1 ELSE 0 END ) AS SALTA_TARJETA_MCCERRADA,
MAX(CASE WHEN TAMCUOTAS=1 THEN 1 ELSE 0 END ) AS SALTA_TAMCUOTAS,
max(CASE WHEN EST_OFERTA IN (218,6000)  AND TAMCUOTAS=1 THEN 1 ELSE 0 END) AS ACEPTA_TAMCUOTAS,
MAX(CASE WHEN MCBLACK=1 THEN 1 ELSE 0 END ) AS SALTA_MCBLACK,
max(CASE WHEN EST_OFERTA IN (218,6000)  AND MCBLACK=1 THEN 1 ELSE 0 END) AS ACEPTA_MCBLACK,
MAX(CASE WHEN DEU_MCC=1 THEN 1 ELSE 0 END) AS DEU_MCC,
MAX(CASE WHEN DEU_BIC=1 THEN 1 ELSE 0 END) AS DEU_BIC,
MAX(CASE WHEN MONTO_MORA=1 THEN 1 ELSE 0 END) AS MONTO_MORA,
MAX(CASE WHEN DET_SBIF_3090=1 THEN 1 ELSE 0 END) AS DET_SBIF_3090,
MAX(CASE WHEN DET_SBIF_90180=1 THEN 1 ELSE 0 END) AS DET_SBIF_90180,
MAX(CASE WHEN DET_SBIF_180MAS=1 THEN 1 ELSE 0 END) AS DET_SBIF_180MAS,
MAX(CASE WHEN DET_SBIF_3AMAS=1 THEN 1 ELSE 0 END) AS DET_SBIF_3AMAS,
MAX(CASE WHEN DIAS_MORA_CAR=1 THEN 1 ELSE 0 END) AS DIAS_MORA_CAR,
MAX(CASE WHEN DIAS_MORA_BCO=1 THEN 1 ELSE 0 END) AS DIAS_MORA_BCO
FROM schm_workspace.cruce
WHERE rut IS NOT NULL
GROUP BY RUT;
--select count(*) from schm_workspace.cruce;


--60
CREATE TABLE schm_workspace.banco4 AS 
SELECT  
A.*,
COALESCE(SALTA_TARJETA_CDP,0) AS SALTA_TARJETA_CDP,
COALESCE(ACEPTA_TARJETA_cdp,0) AS ACEPTA_TARJETA_cdp,
COALESCE(ACEPTA_TARJETA_tam,0) AS ACEPTA_TARJETA_tam,
COALESCE(SALTA_TARJETA_tam,0) AS SALTA_TARJETA_tam,
COALESCE(ACEPTA_TARJETA_TR,0) AS ACEPTA_TARJETA_TR,
COALESCE(SALTA_TARJETA_TR,0) AS SALTA_TARJETA_TR,
COALESCE(ACEPTA_TARJETA_MCCERRADA,0) AS ACEPTA_TARJETA_MCCERRADA,
COALESCE(SALTA_TARJETA_MCCERRADA,0) AS SALTA_TARJETA_MCCERRADA,
COALESCE(SALTA_TAMCUOTAS,0) AS SALTA_TAMCUOTAS,
COALESCE(ACEPTA_TAMCUOTAS,0) AS ACEPTA_TAMCUOTAS,
COALESCE(SALTA_MCBLACK,0) AS SALTA_MCBLACK,
COALESCE(ACEPTA_MCBLACK,0) AS ACEPTA_MCBLACK,
COALESCE(B2.DEU_MCC,0) AS DEU_MCC,
COALESCE(B2.DEU_BIC,0) AS DEU_BIC,
COALESCE(B2.MONTO_MORA,0) AS MONTO_MORA,
COALESCE(B2.DET_SBIF_3090,0) AS DET_SBIF_3090,
COALESCE(B2.DET_SBIF_90180,0) AS DET_SBIF_90180,
COALESCE(B2.DET_SBIF_180MAS,0) AS DET_SBIF_180MAS,
COALESCE(B2.DET_SBIF_3AMAS,0) AS DET_SBIF_3AMAS,
COALESCE(B2.DIAS_MORA_CAR,0) AS DIAS_MORA_CAR,
COALESCE(B2.DIAS_MORA_BCO,0) AS DIAS_MORA_BCO
FROM schm_workspace.banco3_v2 AS a 
LEFT JOIN schm_workspace.colapso_cruce AS b2
ON(A.rut=B2.rut);
--select count(*) from schm_workspace.banco4;


--61
CREATE TABLE schm_workspace.banco5 AS 
SELECT A.*,
CASE WHEN b.rut IS NOT NULL or C.RUT IS NOT NULL THEN 1 ELSE 0 END AS admision
FROM schm_workspace.banco4 AS a
LEFT JOIN schm_workspace.admision AS b
    ON(A.rut=B.RUT)
LEFT JOIN schm_workspace.admision_movil AS C
    ON(A.RUT=C.RUT);
--select count(*) from schm_workspace.banco5;


--62
CREATE TABLE schm_workspace.banco6 AS 
SELECT  DISTINCT A.*,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='TAM'  THEN 1 ELSE 0 END) AS CAPTADO_TAM,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='CDP'  THEN 1 ELSE 0 END) AS CAPTADO_CDP,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='MCCERRADA'  THEN 1 ELSE 0 END) AS CAPTADO_MCCERRADA,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='TR'  THEN 1 ELSE 0 END) AS CAPTADO_TR,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='TAMCUOTAS'  THEN 1 ELSE 0 END) AS CAPTADO_TAMCUOTAS,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='MCBLACK'  THEN 1 ELSE 0 END) AS CAPTADO_MCBLACK
FROM schm_workspace.banco5 AS A
LEFT JOIN (SELECT * FROM schm_workspace.captado_total2 where CANAL='PLATAFORMA COMERCIAL'
AND COD_SUCURSAL in (502,503,504,505,506,507,508,509,510,511,512,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,
532,533,534,536,537,538,539,541,542,543,544,545,546,547,548,549,550,551,558,557,584,559)) AS B
    ON(A.RUT=B.RUT)
GROUP BY 
	A.rut
	, A.VISITAS
	, A.humano
	, A.vu
	, a.actividad_tr
	, a.vu_riesgo
	, a.marca_base
	, a.con_oferta
	, a.tipo_cliente
	, a.ya_captado
	, a.uof_nuevos
	, a.uof_dormidos
	, a.uof_capta
	, a.no_uof_capta_vu_activo
	, a.no_uof_capta_vu_semi
	, a.no_uof_capta_no_dormido
	, a.uof_cdp
	, a.no_uof_cdp1
	, a.no_uof_cdp2
	, a.no_uof_cdp3
	, a.r04_morosa_30_90
	, a.r04_directa_vencida
	, a.r04_inversiones_financieras
	, a.r04_castigada_directa
	, a.r04_castigada_indirect
	, lnegro
	, a.mora_sinacofi
	, a.salta_tarjeta_cdp
	, a.acepta_tarjeta_cdp
	, a.acepta_tarjeta_tam
	, a.salta_tarjeta_tam
	, a.acepta_tarjeta_tr
	, a.salta_tarjeta_tr
	, a.acepta_tarjeta_mccerrada
	, a.salta_tarjeta_mccerrada
	, a.salta_tamcuotas
	, a.acepta_tamcuotas
	, a.salta_mcblack
	, a.acepta_mcblack
	, a.deu_mcc
	, a.deu_bic
	, a.monto_mora
	, a.det_sbif_3090
	, a.det_sbif_90180
	, a.det_sbif_180mas
	, a.det_sbif_3amas
	, a.dias_mora_car
	, a.dias_mora_bco
	, a.admision;
--select count(*) from schm_workspace.banco6; 


--63
EXECUTE 
'CREATE TABLE schm_productos_financieros.funnel_capta_banco_'||v_periodo||' AS -- buscar lib  
SELECT  A.*,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.COMPRA_MES>0 THEN 1 ELSE 0 END) AS CONCRETA_MES,
MAX(CASE WHEN B.RUT IS NOT NULL AND B.COMPRA_DIA>0 THEN 1 ELSE 0 END) AS CONCRETA_DIA,
MAX(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA''
AND (uof_capta=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END) AS NO_oferta_mora_protesto_CAPTA,
MAX(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA'' and
(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA''
AND (uof_capta=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END)=0
AND (uof_capta=1 ) AND r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect=0 AND lnegro=1 AND 	mora_sinacofi=0  THEN 1 ELSE 0 END) AS no_oferta_lnegro_capta,
MAX( CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA''
AND (uof_capta=1 )
AND 
(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA''
AND (uof_capta=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END)=0
AND 
(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA'' and
(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA''
AND (uof_capta=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END)=0
AND (uof_capta=1 ) AND r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect=0 AND lnegro=1 AND 	mora_sinacofi=0  THEN 1 ELSE 0 END)=0
THEN 1 ELSE 0 end
) AS No_oferta_riesgo_capta,
MAX(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND (uof_cdp=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END) AS no_oferta_mora_protesto_cdp,
MAX(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND 
(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND (uof_cdp=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END) =0
AND (uof_cdp=1 ) AND r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect=0 AND lnegro=1 AND 	mora_sinacofi=0  THEN 1 ELSE 0 END) AS No_oferta_lnegro_CDP,
MAX(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA'' and
(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND (uof_cdp=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END)=0
AND 
(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND 
(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND (uof_cdp=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END) =0
AND (uof_cdp=1 ) AND r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect=0 AND lnegro=1 AND 	mora_sinacofi=0  THEN 1 ELSE 0 END)=0
THEN 1 ELSE 0 END) AS  no_oferta_riesgo_cdp,
CASE WHEN C.RUT IS NOT NULL THEN 1 ELSE 0 END AS marca_doble_ofe
FROM schm_workspace.banco6 AS A
LEFT JOIN schm_workspace.propension AS B
    ON(A.RUT=B.RUT)
LEFT JOIN br_dm_prod_bigdata_sasdata_db.sas_ppff_doble_oferta_rut C-- buscar tabla
	ON A.RUT=C.RUT
GROUP BY 
	A.rut
	, a.visitas
	, A.humano
	, A.vu
	, a.actividad_tr
	, a.vu_riesgo
	, a.marca_base
	, a.con_oferta
	, a.tipo_cliente
	, a.ya_captado
	, a.uof_nuevos
	, a.uof_dormidos
	, a.uof_capta
	, a.no_uof_capta_vu_activo
	, a.no_uof_capta_vu_semi
	, a.no_uof_capta_no_dormido
	, a.uof_cdp
	, a.no_uof_cdp1
	, a.no_uof_cdp2
	, a.no_uof_cdp3
	, a.r04_morosa_30_90
	, a.r04_directa_vencida
	, a.r04_inversiones_financieras
	, a.r04_castigada_directa
	, a.r04_castigada_indirect
	, lnegro
	, a.mora_sinacofi
	, a.salta_tarjeta_cdp
	, a.acepta_tarjeta_cdp
	, a.acepta_tarjeta_tam
	, a.salta_tarjeta_tam
	, a.acepta_tarjeta_tr
	, a.salta_tarjeta_tr
	, a.acepta_tarjeta_mccerrada
	, a.salta_tarjeta_mccerrada
	, a.salta_tamcuotas
	, a.acepta_tamcuotas
	, a.salta_mcblack
	, a.acepta_mcblack
	, a.deu_mcc
	, a.deu_bic
	, a.monto_mora
	, a.det_sbif_3090
	, a.det_sbif_90180
	, a.det_sbif_180mas
	, a.det_sbif_3amas
	, a.dias_mora_car
	, a.dias_mora_bco
	, a.admision
	, A.CAPTADO_TAM
	, a.captado_cdp
	, a.captado_mccerrada
	, a.captado_tr
	, a.captado_tamcuotas
	, a.captado_mcblack
	, C.RUT';
--select count(*) from schm_productos_financieros.funnel_capta_banco;


--64
CREATE TABLE schm_workspace.rpos1 AS 
SELECT DISTINCT  
	rut
	, fecha 
FROM schm_workspace.transacciones_capta--buscar lib
WHERE canal = 11;
--select count(*) from schm_workspace.rpos1; 


--65
CREATE TABLE schm_workspace.rpos2 AS 
SELECT 
	rut,
	COUNT(RUT) AS VISITAS,
	CASE WHEN (rut BETWEEN 1000000 AND 50000000) AND rut NOT IN (1111111,2222222,3333333,4444444,5555555,
	6666666,7777777,8888888,9999999,11111111,22222222,33333333,44444444) THEN 1 ELSE 0 END AS humano 
FROM schm_workspace.rpos1
GROUP BY 
	rut;
--select count(*) from schm_workspace.rpos2;


--66
CREATE TABLE schm_workspace.rpos3_v1 AS 
SELECT DISTINCT
A.*,
CASE WHEN  B1.RUT IS NOT NULL  THEN 1 ELSE 0 END AS VU,
b1.actividad_TR,b1.vu_riesgo,
b1.marca_base,
CASE WHEN  B2.rut IS NOT NULL  THEN B2.producto2 
WHEN B2.rut IS NULL AND D.rut IS NOT NULL THEN D.oferta
ELSE 'SIN OFERTA'  END AS CON_OFERTA,
CASE WHEN  B2.rut IS NOT NULL  THEN B2.tipo_cliente ::integer
WHEN B2.rut IS NULL AND D.rut IS NOT NULL THEN D.CAMP_ORIGEN_BASE
  END AS tipo_cliente,
CASE WHEN C.rut IS NOT NULL THEN 1 ELSE 0 END AS ya_captado
FROM schm_workspace.rpos2 AS A
LEFT JOIN schm_workspace.act_tr AS B1
    ON(A.RUT = B1.RUT)
LEFT JOIN schm_workspace.resumen_oferta3 AS B2
    ON(A.RUT = B2.RUT)
LEFT JOIN schm_workspace.captado6m2 AS C
    ON(A.rut = C.rut)
LEFT JOIN (SELECT * FROM schm_workspace.oferta_visible where rut NOT IN (SELECT rut FROM schm_workspace.resumen_oferta3)
	AND oferta NOT IN ('CV','CC')) AS d
	ON(A.rut = D.rut);
--select count(*) from schm_workspace.rpos3_v1;


--67
CREATE TABLE schm_workspace.rpos3_v2 as
SELECT 
A.*,
CASE WHEN (con_oferta NOT IN ('SIN OFERTA','CDP') AND tipo_cliente
IN('102','108','201','207'))
or ((vu=0  or (D.rut IS NOT NULL) ) AND ya_captado=0 AND A.humano = 1) 
THEN 1 ELSE 0 END AS uof_nuevos,
CASE WHEN (con_oferta NOT IN ('SIN OFERTA','CDP') AND tipo_cliente IS NOT NULL AND tipo_cliente
NOT IN('102','108','201','207') AND  uof_nuevos=0 )
or (vu=1 AND actividad_TR in ('DORMIDO BLANDO', 
'DORMIDO DURO' , 'ANTIGUO SIN USO')  AND  uof_nuevos=0
AND ya_captado=0 AND A.humano = 1) THEN 1 ELSE 0 END AS uof_dormidos,
CASE WHEN  uof_nuevos=1 or  uof_dormidos=1 THEN 1 ELSE 0 END AS uof_capta,
CASE WHEN  uof_capta=0 AND  vu_riesgo=1 AND  ACTIVIDAD_TR='ACTIVO' AND A.humano = 1 THEN 1 ELSE 0 END AS NO_uof_capta_VU_ACTIVO,
CASE WHEN  uof_capta=0 AND vu_riesgo=1 AND  ACTIVIDAD_TR='SEMIACTIVO' AND A.humano = 1 THEN 1 ELSE 0 END AS NO_uof_capta_VU_semi,
CASE WHEN  uof_capta=0  AND  NO_uof_capta_VU_ACTIVO=0 AND   NO_uof_capta_VU_semi=0 AND A.humano = 1  THEN 1
ELSE 0 END AS NO_uof_capta_NO_DORMIDO, 
CASE WHEN (con_oferta in ('CDP')) or
(E.RUT IS NOT NULL AND marca_base in ('TR') AND vu_riesgo=1
AND actividad_TR in ('ACTIVO') AND A.humano = 1 AND ya_captado=0)
THEN 1 ELSE 0 END AS uof_cdp,
CASE WHEN vu_riesgo=0 AND A.humano = 1 AND marca_base='TR' AND  uof_cdp=0 THEN 1 ELSE 0 END AS NO_uof_cdp1,
CASE WHEN  vu_riesgo>0 AND A.humano = 1 AND marca_base='TAM' AND  uof_cdp=0  THEN 1 ELSE 0 END AS NO_uof_cdp2,
CASE WHEN  uof_cdp=0 AND  NO_uof_cdp1=0
AND  NO_uof_cdp2 =0 THEN 1 ELSE 0 END AS NO_uof_cdp3,
COALESCE(C.DEUDA_MOROSA_30_90,0) AS r04_morosa_30_90,
COALESCE(C.DEUDA_DIRECTA_VENCIDA,0) AS r04_directa_vencida,
COALESCE(C.DEUDA_INVERSIONES_FINANCIERAS,0) AS r04_inversiones_financieras,
COALESCE(C.SALDO_DEUDA_CASTIGADA_DIRECTA ,0) AS r04_castigada_directa,
COALESCE(C.SALDO_DEUDA_CASTIGADA_INDIRECT, 0) AS r04_castigada_indirect,
CASE WHEN C1.rut IS NOT NULL THEN 1 ELSE 0 END AS LNEGRO,
CASE WHEN C2.rut IS NOT NULL  THEN 1 ELSE 0 END AS mora_sinacofi
FROM schm_workspace.rpos3_v1 AS A
LEFT JOIN schm_data_analytics.r04_sde AS C--buscar tabla
    ON(A.rut=C.rut)
LEFT JOIN (SELECT DISTINCT  rut FROM schm_data_analytics.ctbl_lnegro_car where TIPO_INHIBICION <>'PEP') AS c1
    ON(A.rut=C1.rut)
LEFT JOIN (SELECT DISTINCT RUT FROM schm_data_analytics.mdpg_mora_sinacofi WHERE MORA_CONSOLIDADA>=10000) AS c2
    ON(A.rut=C2.rut)
LEFT JOIN schm_workspace.castigo AS d
    on (A.rut=D.rut)
LEFT JOIN schm_workspace.act_tr_bi AS e 
    on (A.rut=E.rut)
WHERE c.periodo = v_periodo_3;
--select count(*) from schm_workspace.rpos3_v2;


--68
drop table if exists schm_workspace.cruce;
CREATE TABLE schm_workspace.cruce AS 
SELECT *,
CASE WHEN PRODUCTO='8' AND 	CON_PRODUCTO NOT IN ('812','815','814','803','804','813','816') AND MENSAJE IS NOT NULL  THEN 1 ELSE 0 END AS  CDP,
CASE WHEN (PRODUCTO='9' AND CON_PRODUCTO  in ('914','915')) 
or (PRODUCTO='8' AND CON_PRODUCTO  in ('814','815')) AND MENSAJE IS NOT NULL  THEN 1 ELSE 0 END AS MCCERRADA,
CASE WHEN (PRODUCTO='9' AND CON_PRODUCTO  in ('900','901','902','903','999'))
AND MENSAJE IS NOT NULL    THEN 1 ELSE 0 END AS TR,
CASE WHEN
(PRODUCTO='9' AND CON_PRODUCTO   NOT IN ('900','901','902','903','999','908','917','918'))
or   (PRODUCTO='8' AND CON_PRODUCTO  in ('812')) AND MENSAJE IS NOT NULL  THEN 1 ELSE 0 END AS TAM,
CASE WHEN (PRODUCTO='9' AND CON_PRODUCTO    in ('908'))
or   (PRODUCTO='8' AND CON_PRODUCTO  in ('803','804')) AND MENSAJE IS NOT NULL  THEN 1 ELSE 0 END AS TAMCUOTAS,
CASE WHEN (PRODUCTO='9' AND CON_PRODUCTO    in ('917','918'))
or   (PRODUCTO='8' AND CON_PRODUCTO  in ('813','816')) AND MENSAJE IS NOT NULL  THEN 1 ELSE 0 END AS MCBLACK,
CASE WHEN CAMP_MOV_MNT_DEU_MCC>10000 THEN 1 ELSE 0 END AS DEU_MCC,
CASE WHEN CAMP_MOV_MTO_DEU_BIC>10000 THEN 1 ELSE 0 END AS DEU_BIC,
CASE WHEN CAMP_MOV_MNT_DEU_MCC+CAMP_MOV_MNT_DEU_MCC>10000 THEN 1 ELSE 0 END AS MONTO_MORA,
CASE WHEN CAMP_MOV_DET_SBIF_3090>0 THEN 1 ELSE 0 end  AS DET_SBIF_3090,
CASE WHEN CAMP_MOV_DET_SBIF_90180>0	THEN 1 ELSE 0 END AS DET_SBIF_90180,
CASE WHEN CAMP_MOV_DET_SBIF_180MAS>0 THEN 1 ELSE 0 END AS DET_SBIF_180MAS,
CASE WHEN CAMP_MOV_DET_SBIF_3AMAS>0 THEN 1 ELSE 0 END AS DET_SBIF_3AMAS,
CASE WHEN CAMP_MOV_DIAS_MORA_CAR>0 THEN 1 ELSE 0 END AS DIAS_MORA_CAR,
CASE WHEN CAMP_MOV_DIAS_MORA_BCO>0 THEN 1 ELSE 0 END AS DIAS_MORA_BCO
FROM schm_workspace.transacciones_capta--buscar libreria 
WHERE rut BETWEEN 1000000 AND 50000000
AND rut NOT IN (1111111,2222222,3333333,4444444,5555555,6666666,7777777,8888888,9999999,
11111111,22222222,33333333,44444444)
AND CANAL=11;
--select count(*) from schm_workspace.cruce; 


--69
drop table if exists schm_workspace.colapso_cruce;
CREATE TABLE schm_workspace.colapso_cruce AS 
SELECT  
RUT,
MAX(CASE WHEN CDP=1 THEN 1 ELSE 0 END ) AS SALTA_TARJETA_CDP,
max(CASE WHEN EST_OFERTA IN (218,6000)  AND CDP=1 THEN 1 ELSE 0 END) AS ACEPTA_TARJETA_cdp,
max(CASE WHEN EST_OFERTA IN (218,6000)  AND TAM=1 THEN 1 ELSE 0 END) AS ACEPTA_TARJETA_tam,
MAX(CASE WHEN TAM=1 THEN 1 ELSE 0 END ) AS SALTA_TARJETA_tam,
max(CASE WHEN EST_OFERTA IN (218,6000)  AND TR=1 THEN 1 ELSE 0 END) AS ACEPTA_TARJETA_TR,
MAX(CASE WHEN TR=1 THEN 1 ELSE 0 END ) AS SALTA_TARJETA_TR,
max(CASE WHEN EST_OFERTA IN (218,6000)  AND MCCERRADA=1 THEN 1 ELSE 0 END) AS ACEPTA_TARJETA_MCCERRADA,
MAX(CASE WHEN MCCERRADA=1 THEN 1 ELSE 0 END ) AS SALTA_TARJETA_MCCERRADA,
MAX(CASE WHEN TAMCUOTAS=1 THEN 1 ELSE 0 END ) AS SALTA_TAMCUOTAS,
max(CASE WHEN EST_OFERTA IN (218,6000)  AND TAMCUOTAS=1 THEN 1 ELSE 0 END) AS ACEPTA_TAMCUOTAS,
MAX(CASE WHEN MCBLACK=1 THEN 1 ELSE 0 END ) AS SALTA_MCBLACK,
max(CASE WHEN EST_OFERTA IN (218,6000)  AND MCBLACK=1 THEN 1 ELSE 0 END) AS ACEPTA_MCBLACK,
MAX(CASE WHEN  DEU_MCC=1 THEN 1 ELSE 0 END) AS DEU_MCC,
MAX(CASE WHEN  DEU_BIC=1 THEN 1 ELSE 0 END) AS DEU_BIC,
MAX(CASE WHEN  MONTO_MORA=1 THEN 1 ELSE 0 END) AS MONTO_MORA,
MAX(CASE WHEN  DET_SBIF_3090=1 THEN 1 ELSE 0 END) AS DET_SBIF_3090,
MAX(CASE WHEN  DET_SBIF_90180=1 THEN 1 ELSE 0 END) AS DET_SBIF_90180,
MAX(CASE WHEN  DET_SBIF_180MAS=1 THEN 1 ELSE 0 END) AS DET_SBIF_180MAS,
MAX(CASE WHEN  DET_SBIF_3AMAS=1 THEN 1 ELSE 0 END) AS DET_SBIF_3AMAS,
MAX(CASE WHEN  DIAS_MORA_CAR=1 THEN 1 ELSE 0 END) AS DIAS_MORA_CAR,
MAX(CASE WHEN  DIAS_MORA_BCO=1 THEN 1 ELSE 0 END) AS DIAS_MORA_BCO
FROM schm_workspace.cruce
where rut IS NOT NULL
GROUP BY RUT;
--select count(*) from schm_workspace.colapso_cruce; 


--70
CREATE TABLE schm_workspace.rpos4 AS 
SELECT  
	A.*,
	COALESCE(SALTA_TARJETA_CDP,0) AS SALTA_TARJETA_CDP,
	COALESCE(ACEPTA_TARJETA_cdp,0) AS ACEPTA_TARJETA_cdp,
	COALESCE(ACEPTA_TARJETA_tam,0) AS ACEPTA_TARJETA_tam,
	COALESCE(SALTA_TARJETA_tam,0) AS SALTA_TARJETA_tam,
	COALESCE(ACEPTA_TARJETA_TR,0) AS ACEPTA_TARJETA_TR,
	COALESCE(SALTA_TARJETA_TR,0) AS SALTA_TARJETA_TR,
	COALESCE(ACEPTA_TARJETA_MCCERRADA,0) AS ACEPTA_TARJETA_MCCERRADA,
	COALESCE(SALTA_TARJETA_MCCERRADA,0) AS SALTA_TARJETA_MCCERRADA,
	COALESCE(SALTA_TAMCUOTAS,0) AS SALTA_TAMCUOTAS,
	COALESCE(ACEPTA_TAMCUOTAS,0) AS ACEPTA_TAMCUOTAS,
	COALESCE(SALTA_MCBLACK,0) AS SALTA_MCBLACK,
	COALESCE(ACEPTA_MCBLACK,0) AS ACEPTA_MCBLACK,
	COALESCE(B2.DEU_MCC,0) AS DEU_MCC,
	COALESCE(B2.DEU_BIC,0) AS DEU_BIC,
	COALESCE(B2.MONTO_MORA,0) AS MONTO_MORA,
	COALESCE(B2.DET_SBIF_3090,0) AS DET_SBIF_3090,
	COALESCE(B2.DET_SBIF_90180,0) AS DET_SBIF_90180,
	COALESCE(B2.DET_SBIF_180MAS,0) AS DET_SBIF_180MAS,
	COALESCE(B2.DET_SBIF_3AMAS,0) AS DET_SBIF_3AMAS,
	COALESCE(B2.DIAS_MORA_CAR,0) AS DIAS_MORA_CAR,
	COALESCE(B2.DIAS_MORA_BCO,0) AS DIAS_MORA_BCO
FROM schm_workspace.rpos3_v2 AS a 
LEFT JOIN schm_workspace.colapso_cruce AS b2
    ON(A.rut=B2.rut);
--select count(*) from schm_workspace.rpos4;  
   

--71
CREATE TABLE schm_workspace.rpos5 AS 
SELECT A.*,
CASE WHEN b.rut IS NOT NULL or C.RUT IS NOT NULL THEN 1 ELSE 0 END AS admision
FROM schm_workspace.rpos4 AS a
LEFT JOIN schm_workspace.admision AS b
    ON(A.rut=B.RUT)
LEFT JOIN schm_workspace.admision_movil AS C
    ON(A.RUT=C.RUT);
--select count(*) from schm_workspace.rpos5;


--72
CREATE TABLE schm_workspace.rpos6 AS 
SELECT  DISTINCT A.*,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='TAM'  THEN 1 ELSE 0 END) AS CAPTADO_TAM,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='CDP'  THEN 1 ELSE 0 END) AS CAPTADO_CDP,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='MCCERRADA'  THEN 1 ELSE 0 END) AS CAPTADO_MCCERRADA,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='TR'  THEN 1 ELSE 0 END) AS CAPTADO_TR,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='TAMCUOTAS'  THEN 1 ELSE 0 END) AS CAPTADO_TAMCUOTAS,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.producto_camp='MCBLACK'  THEN 1 ELSE 0 END) AS CAPTADO_MCBLACK
FROM schm_workspace.rpos5 AS A
LEFT JOIN (SELECT * FROM schm_workspace.captado_total2 where CANAL='RPOS' ) AS B
    ON(A.RUT=B.RUT)
GROUP BY A.rut
	, A.VISITAS
	, A.humano
	, A.vu
	, a.actividad_tr
	, a.vu_riesgo
	, a.marca_base
	, a.con_oferta
	, a.tipo_cliente
	, a.ya_captado
	, a.uof_nuevos
	, a.uof_dormidos
	, a.uof_capta
	, a.no_uof_capta_vu_activo
	, a.no_uof_capta_vu_semi
	, a.no_uof_capta_no_dormido
	, a.uof_cdp
	, a.no_uof_cdp1
	, a.no_uof_cdp2
	, a.no_uof_cdp3
	, a.r04_morosa_30_90
	, a.r04_directa_vencida
	, a.r04_inversiones_financieras
	, a.r04_castigada_directa
	, a.r04_castigada_indirect
	, lnegro
	, a.mora_sinacofi
	, a.salta_tarjeta_cdp
	, a.acepta_tarjeta_cdp
	, a.acepta_tarjeta_tam
	, a.salta_tarjeta_tam
	, a.acepta_tarjeta_tr
	, a.salta_tarjeta_tr
	, a.acepta_tarjeta_mccerrada
	, a.salta_tarjeta_mccerrada
	, a.salta_tamcuotas
	, a.acepta_tamcuotas
	, a.salta_mcblack
	, a.acepta_mcblack
	, a.deu_mcc
	, a.deu_bic
	, a.monto_mora
	, a.det_sbif_3090
	, a.det_sbif_90180
	, a.det_sbif_180mas
	, a.det_sbif_3amas
	, a.dias_mora_car
	, a.dias_mora_bco
	, a.admision;
--select count(*) from schm_workspace.rpos6; 


--73
EXECUTE 
'CREATE TABLE schm_productos_financieros.funnel_capta_rpos_'||v_periodo||' AS--ver en que libreria va a quedar 
SELECT  A.*,
MAX(CASE WHEN  B.RUT IS NOT NULL AND B.COMPRA_MES>0 THEN 1 ELSE 0 END) AS CONCRETA_MES,
MAX(CASE WHEN B.RUT IS NOT NULL AND B.COMPRA_DIA>0 THEN 1 ELSE 0 END) AS CONCRETA_DIA,
MAX(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA''
AND (uof_capta=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END) AS NO_oferta_mora_protesto_CAPTA,
MAX(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA'' and
(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA''
AND (uof_capta=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END)=0
AND (uof_capta=1 ) AND r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect=0 AND lnegro=1 AND 	mora_sinacofi=0  THEN 1 ELSE 0 END) AS no_oferta_lnegro_capta,
MAX( CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA''
AND (uof_capta=1 )
AND 
(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA''
AND (uof_capta=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END)=0
AND 
(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA'' and
(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA''
AND (uof_capta=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END)=0
AND (uof_capta=1 ) AND r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect=0 AND lnegro=1 AND 	mora_sinacofi=0  THEN 1 ELSE 0 END)=0
THEN 1 ELSE 0 end) AS No_oferta_riesgo_capta,
MAX(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND (uof_cdp=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END) AS no_oferta_mora_protesto_cdp,
MAX(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND 
(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND (uof_cdp=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END) =0
AND (uof_cdp=1 ) AND r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect=0 AND lnegro=1 AND 	mora_sinacofi=0  THEN 1 ELSE 0 END) AS No_oferta_lnegro_CDP,
MAX(CASE WHEN humano = 1 AND con_oferta =''SIN OFERTA'' and
(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND (uof_cdp=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END)=0
AND 
(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND 
(CASE WHEN humano = 1 AND con_oferta = ''SIN OFERTA''
AND (uof_cdp=1 ) AND (r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect>0 or	mora_sinacofi>0) 
THEN 1 ELSE 0 END) =0
AND (uof_cdp=1 ) AND r04_morosa_30_90+
r04_directa_vencida+
r04_inversiones_financieras+
r04_castigada_directa+
r04_castigada_indirect=0 AND lnegro=1 AND 	mora_sinacofi=0  THEN 1 ELSE 0 END)=0
THEN 1 ELSE 0 END) AS  no_oferta_riesgo_cdp,
CASE WHEN C.RUT IS NOT NULL THEN 1 ELSE 0 END AS marca_doble_ofe
FROM schm_workspace.rpos6 AS A
LEFT JOIN schm_workspace.propension AS B
	ON(A.RUT=B.RUT)
LEFT JOIN br_dm_prod_bigdata_sasdata_db.sas_ppff_doble_oferta_rut C -- buscar tabla
	ON A.RUT=C.RUT
GROUP BY 
	A.rut
	, a.visitas
	, A.humano
	, A.vu
	, a.actividad_tr
	, a.vu_riesgo
	, a.marca_base
	, a.con_oferta
	, a.tipo_cliente
	, a.ya_captado
	, a.uof_nuevos
	, a.uof_dormidos
	, a.uof_capta
	, a.no_uof_capta_vu_activo
	, a.no_uof_capta_vu_semi
	, a.no_uof_capta_no_dormido
	, a.uof_cdp
	, a.no_uof_cdp1
	, a.no_uof_cdp2
	, a.no_uof_cdp3
	, a.r04_morosa_30_90
	, a.r04_directa_vencida
	, a.r04_inversiones_financieras
	, a.r04_castigada_directa
	, a.r04_castigada_indirect
	, lnegro
	, a.mora_sinacofi
	, a.salta_tarjeta_cdp
	, a.acepta_tarjeta_cdp
	, a.acepta_tarjeta_tam
	, a.salta_tarjeta_tam
	, a.acepta_tarjeta_tr
	, a.salta_tarjeta_tr
	, a.acepta_tarjeta_mccerrada
	, a.salta_tarjeta_mccerrada
	, a.salta_tamcuotas
	, a.acepta_tamcuotas
	, a.salta_mcblack
	, a.acepta_mcblack
	, a.deu_mcc
	, a.deu_bic
	, a.monto_mora
	, a.det_sbif_3090
	, a.det_sbif_90180
	, a.det_sbif_180mas
	, a.det_sbif_3amas
	, a.dias_mora_car
	, a.dias_mora_bco
	, a.admision
	, A.captado_tam
	, a.captado_cdp
	, a.captado_mccerrada
	, a.captado_tr
	, a.captado_tamcuotas
	, a.captado_mcblack
	, C.rut';
--select count(*) from schm_productos_financieros.funnel_capta_rpos;


--VISTA TERMINAL DE VENTAS 

--74
EXECUTE 
'create table schm_productos_financieros.tv_tam_'||v_periodo||' AS  
select
''01.TV'' as CANAL,
''01.TAM'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo,--revisar esto ya que esta con una var 
sum(cantidad) as TRX_TOTAL, 
sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END) AS DIG, 
(sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END))/sum(cantidad) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
SUM(HUMANO)/(sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END)) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end)
as porcentaje_POPUP,
count(case when 
humano=1 
AND CON_OFERTA  in (''TAM'')
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
humano=1 
AND CON_OFERTA  in (''TAM'')
and SALTA_TARJETA_tam=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
then rut end ) +
count(
case when 
humano=1 
AND  CON_OFERTA  in (''TAM'')
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end ) as  PORCENTAJE_ACEPTACION,
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end),0)
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAM'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAM'')
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 
and ADMISION>=0 then  CAPTADO_TAM end ) AS CAPTADO
FROM schm_productos_financieros.funnel_capta_tv_'||v_periodo||'
';


--75
EXECUTE 
'CREATE TABLE schm_productos_financieros.TV_TR_'||v_periodo||' as  
SELECT
''01.TV'' as CANAL,
''02.TR'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(cantidad) as TRX_TOTAL, 
sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END) AS DIG, 
(sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END))/sum(cantidad) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
SUM(HUMANO)/(sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END)) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end)
as porcentaje_POPUP,
count(case when 
humano=1 
AND  CON_OFERTA  in (''TR'')
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
humano=1 
AND  CON_OFERTA  in (''TR'')
and SALTA_TARJETA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
then rut end ) +
count(
case when 
humano=1 
AND  CON_OFERTA  in (''TR'')
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TR'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TR'')
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 
and ADMISION>=0 then  CAPTADO_TR end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_tv_'||v_periodo||'';


--76
EXECUTE 
'create table schm_productos_financieros.tv_cdp_'||v_periodo||' as  
select
''01.TV'' as CANAL,
''03.CDP'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(cantidad) as TRX_TOTAL, 
sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END) AS DIG, 
(sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END))/sum(cantidad) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
SUM(HUMANO)/(sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END)) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_Cdp=0) and NO_UOF_CDP1=1 and NO_UOF_CDP2=0 and  NO_UOF_CDP3=0  then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_Cdp=0) and NO_UOF_CDP2=1 and NO_UOF_CDP1=0 and NO_UOF_CDP3=0 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_Cdp=0) and  ((NO_UOF_CDP3=1 and NO_UOF_CDP2=0 and NO_UOF_CDP1=0)
or (NO_UOF_CDP1+NO_UOF_CDP2+NO_UOF_CDP3=0)
or (NO_UOF_CDP1+NO_UOF_CDP2+NO_UOF_CDP3>=2)) 
then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and NO_oferta_mora_protesto_CDP=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and No_oferta_lnegro_CDP=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and NO_oferta_mora_protesto_CDP=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and No_oferta_lnegro_CDP=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end)/
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end )/
count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''CDP'')
and SALTA_TARJETA_CDP=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''CDP'')
and SALTA_TARJETA_CDP=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''CDP'')
and SALTA_TARJETA_CDP=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''CDP'') and SALTA_TARJETA_CDP=1 then ACEPTA_TARJETA_CDP end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''CDP'') and SALTA_TARJETA_CDP=1 then ACEPTA_TARJETA_CDP end )/
SUM(case when humano=1  and   CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 and ADMISION=0 then CAPTADO_CDP end),0)) as ACEPTACION_REAL,
(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 and ADMISION=0 then CAPTADO_CDP end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''CDP'') and SALTA_TARJETA_CDP=1 then ACEPTA_TARJETA_CDP end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 and ADMISION=0 then CAPTADO_CDP end))/
SUM(case when humano=1  and   CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''CDP'')
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 
and ADMISION>=0 then  CAPTADO_CDP end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_tv_'||v_periodo||'';


--77
EXECUTE 
'create table schm_productos_financieros.tv_mccerrada_'||v_periodo||' as  
select
''01.TV'' as CANAL,
''04.MCCERRADA'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(cantidad) as TRX_TOTAL, 
sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END) AS DIG, 
(sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END))/sum(cantidad) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
SUM(HUMANO)/(sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END)) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_TRomp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
then rut end ) +
count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCCERRADA'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 
and ADMISION>=0 then  CAPTADO_MCCERRADA end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_tv_'||v_periodo||'';


--78
EXECUTE 
'create table schm_productos_financieros.tv_tamcuotas_'||v_periodo||' as  
select
''01.TV'' as CANAL,
''05.TAMCUOTAS'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(cantidad) as TRX_TOTAL, 
sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END) AS DIG, 
(sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END))/sum(cantidad) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
SUM(HUMANO)/(sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END)) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAMCUOTAS'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 
and ADMISION>=0 then  CAPTADO_TAMCUOTAS end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_tv_'||v_periodo||'';


--79
EXECUTE 
'create table schm_productos_financieros.tv_mcblack_'||v_periodo||' as  
select
''01.TV'' as CANAL,
''06.MCBLACK'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(cantidad) as TRX_TOTAL, 
sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END) AS DIG, 
(sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END))/sum(cantidad) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
SUM(HUMANO)/(sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END)) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'')
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'')
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'')
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCBLACK'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCBLACK'')
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 
and ADMISION>=0 then  CAPTADO_MCBLACK end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_tv_'||v_periodo||'';


--VISTA CCSS


--80
EXECUTE 
'create table schm_productos_financieros.ccss_tam_'||v_periodo||' as  
select
''02.CCSS'' as CANAL,
''01.TAM'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'')
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'')
and SALTA_TARJETA_tam=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'')
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end ) as  PORCENTAJE_ACEPTACION,
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end),0)
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAM'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAM'')
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 
and ADMISION>=0 then  CAPTADO_TAM end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_ccss_'||v_periodo||'';


--81
EXECUTE 
'create table schm_productos_financieros.ccss_tr_'||v_periodo||' as  
select
''02.CCSS'' as CANAL,
''02.TR'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'')
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'')
and SALTA_TARJETA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TR'')
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TR'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TR'')
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 
and ADMISION>=0 then  CAPTADO_TR end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_ccss_'||v_periodo||'';


--82
EXECUTE 
'create table schm_productos_financieros.ccss_cdp_'||v_periodo||' as  
select
''02.CCSS'' as CANAL,
''03.CDP'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_Cdp=0) and NO_UOF_CDP1=1 and NO_UOF_CDP2=0 and  NO_UOF_CDP3=0  then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_Cdp=0) and NO_UOF_CDP2=1 and NO_UOF_CDP1=0 and NO_UOF_CDP3=0 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_Cdp=0) and  ((NO_UOF_CDP3=1 and NO_UOF_CDP2=0 and NO_UOF_CDP1=0)
or (NO_UOF_CDP1+NO_UOF_CDP2+NO_UOF_CDP3=0)
or (NO_UOF_CDP1+NO_UOF_CDP2+NO_UOF_CDP3>=2)) 
then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and NO_oferta_mora_protesto_CDP=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and No_oferta_lnegro_CDP=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and NO_oferta_mora_protesto_CDP=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and No_oferta_lnegro_CDP=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end)/
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end )/
count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''CDP'')
and SALTA_TARJETA_CDP=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''CDP'')
and SALTA_TARJETA_CDP=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''CDP'')
and SALTA_TARJETA_CDP=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''CDP'') and SALTA_TARJETA_CDP=1 then ACEPTA_TARJETA_CDP end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''CDP'') and SALTA_TARJETA_CDP=1 then ACEPTA_TARJETA_CDP end )/
SUM(case when humano=1  and   CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 and ADMISION=0 then CAPTADO_CDP end),0)) as ACEPTACION_REAL,
(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 and ADMISION=0 then CAPTADO_CDP end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''CDP'') and SALTA_TARJETA_CDP=1 then ACEPTA_TARJETA_CDP end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 and ADMISION=0 then CAPTADO_CDP end))/
SUM(case when humano=1  and   CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''CDP'')
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 
and ADMISION>=0 then  CAPTADO_CDP end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_ccss_'||v_periodo||'';


--83
EXECUTE 
'create table schm_productos_financieros.ccss_mccerrada_'||v_periodo||' as  
select
''02.CCSS'' as CANAL,
''04.MCCERRADA'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_TRomp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCCERRADA'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 
and ADMISION>=0 then  CAPTADO_MCCERRADA end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_ccss_'||v_periodo||'';


--84
EXECUTE 
'create table schm_productos_financieros.ccss_tamcuotas_'||v_periodo||' as  
select
''02.CCSS'' as CANAL,
''05.TAMCUOTAS'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAMCUOTAS'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 
and ADMISION>=0 then  CAPTADO_TAMCUOTAS end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_ccss_'||v_periodo||'';


--85
EXECUTE 
'create table schm_productos_financieros.ccss_mcblack_'||v_periodo||' as  
select
''02.CCSS'' as CANAL,
''06.MCBLACK'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'')
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'')
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'')
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCBLACK'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCBLACK'')
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 
and ADMISION>=0 then  CAPTADO_MCBLACK end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_ccss_'||v_periodo||'';


--VISTA BANCO;


--86
EXECUTE 
'create table schm_productos_financieros.banco_tam_'||v_periodo||' as  
select
''03.BANCO'' as CANAL,
''01.TAM'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'')
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'')
and SALTA_TARJETA_tam=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'')
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end ) as  PORCENTAJE_ACEPTACION,
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end),0)
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAM'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAM'')
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 
and ADMISION>=0 then  CAPTADO_TAM end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_banco_'||v_periodo||'';


--87
EXECUTE 
'create table schm_productos_financieros.banco_tr_'||v_periodo||' as  
select
''03.BANCO'' as CANAL,
''02.TR'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'')
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'')
and SALTA_TARJETA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TR'')
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TR'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TR'')
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 
and ADMISION>=0 then  CAPTADO_TR end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_banco_'||v_periodo||'';


--88
EXECUTE 
'create table schm_productos_financieros.banco_cdp_'||v_periodo||' as  
select
''03.BANCO'' as CANAL,
''03.CDP'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_Cdp=0) and NO_UOF_CDP1=1 and NO_UOF_CDP2=0 and  NO_UOF_CDP3=0  then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_Cdp=0) and NO_UOF_CDP2=1 and NO_UOF_CDP1=0 and NO_UOF_CDP3=0 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_Cdp=0) and  ((NO_UOF_CDP3=1 and NO_UOF_CDP2=0 and NO_UOF_CDP1=0)
or (NO_UOF_CDP1+NO_UOF_CDP2+NO_UOF_CDP3=0)
or (NO_UOF_CDP1+NO_UOF_CDP2+NO_UOF_CDP3>=2)) 
then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and NO_oferta_mora_protesto_CDP=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and No_oferta_lnegro_CDP=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and NO_oferta_mora_protesto_CDP=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and No_oferta_lnegro_CDP=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end)/
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end )/
count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''CDP'')
and SALTA_TARJETA_CDP=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''CDP'')
and SALTA_TARJETA_CDP=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''CDP'')
and SALTA_TARJETA_CDP=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''CDP'') and SALTA_TARJETA_CDP=1 then ACEPTA_TARJETA_CDP end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''CDP'') and SALTA_TARJETA_CDP=1 then ACEPTA_TARJETA_CDP end )/
SUM(case when humano=1  and   CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 and ADMISION=0 then CAPTADO_CDP end),0)) as ACEPTACION_REAL,
(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 and ADMISION=0 then CAPTADO_CDP end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''CDP'') and SALTA_TARJETA_CDP=1 then ACEPTA_TARJETA_CDP end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 and ADMISION=0 then CAPTADO_CDP end))/
SUM(case when humano=1  and   CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''CDP'')
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 
and ADMISION>=0 then  CAPTADO_CDP end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_banco_'||v_periodo||'';


--89
EXECUTE 
'create table schm_productos_financieros.banco_mccerrada_'||v_periodo||' as  
select
''03.BANCO'' as CANAL,
''04.MCCERRADA'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_TRomp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCCERRADA'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 
and ADMISION>=0 then  CAPTADO_MCCERRADA end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_banco_'||v_periodo||'';


--90
EXECUTE 
'create table schm_productos_financieros.banco_tamcuotas_'||v_periodo||' as  
select
''03.BANCO'' as CANAL,
''05.TAMCUOTAS'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAMCUOTAS'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 
and ADMISION>=0 then  CAPTADO_TAMCUOTAS end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_banco_'||v_periodo||'';


--91
EXECUTE 
'create table schm_productos_financieros.banco_mcblack_'||v_periodo||' as  
select
''03.BANCO'' as CANAL,
''06.MCBLACK'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'')
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'')
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'')
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCBLACK'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCBLACK'')
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 
and ADMISION>=0 then  CAPTADO_MCBLACK end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_banco_'||v_periodo||'';


--VISTA MOVIL;


--92
EXECUTE 
'create table schm_productos_financieros.movil_tam_'||v_periodo||' as  
select
''04.MOVIL'' as CANAL,
''01.TAM'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'')
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'')
and SALTA_TARJETA_tam=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'')
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end ) as  PORCENTAJE_ACEPTACION,
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end),0)
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAM'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAM'')
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 
and ADMISION>=0 then  CAPTADO_TAM end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_movil_'||v_periodo||'';


EXECUTE
'create table schm_productos_financieros.movil_tr_'||v_periodo||' as  
select
''04.MOVIL'' as CANAL,
''02.TR'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'')
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'')
and SALTA_TARJETA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TR'')
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TR'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TR'')
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 
and ADMISION>=0 then  CAPTADO_TR end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_movil_'||v_periodo||'';

--94
EXECUTE 
'create table schm_productos_financieros.movil_cdp_'||v_periodo||' as  
select
''04.MOVIL'' as CANAL,
''03.CDP'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_Cdp=0) and NO_UOF_CDP1=1 and NO_UOF_CDP2=0 and  NO_UOF_CDP3=0  then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_Cdp=0) and NO_UOF_CDP2=1 and NO_UOF_CDP1=0 and NO_UOF_CDP3=0 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_Cdp=0) and  ((NO_UOF_CDP3=1 and NO_UOF_CDP2=0 and NO_UOF_CDP1=0)
or (NO_UOF_CDP1+NO_UOF_CDP2+NO_UOF_CDP3=0)
or (NO_UOF_CDP1+NO_UOF_CDP2+NO_UOF_CDP3>=2)) 
then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and NO_oferta_mora_protesto_CDP=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and No_oferta_lnegro_CDP=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and NO_oferta_mora_protesto_CDP=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and No_oferta_lnegro_CDP=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end)/
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end )/
count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''CDP'')
and SALTA_TARJETA_CDP=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''CDP'')
and SALTA_TARJETA_CDP=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''CDP'')
and SALTA_TARJETA_CDP=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''CDP'') and SALTA_TARJETA_CDP=1 then ACEPTA_TARJETA_CDP end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''CDP'') and SALTA_TARJETA_CDP=1 then ACEPTA_TARJETA_CDP end )/
SUM(case when humano=1  and   CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 and ADMISION=0 then CAPTADO_CDP end),0)) as ACEPTACION_REAL,
(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 and ADMISION=0 then CAPTADO_CDP end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''CDP'') and SALTA_TARJETA_CDP=1 then ACEPTA_TARJETA_CDP end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 and ADMISION=0 then CAPTADO_CDP end))/
SUM(case when humano=1  and   CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''CDP'')
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 
and ADMISION>=0 then  CAPTADO_CDP end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_movil_'||v_periodo||'';


--95
EXECUTE 
'create table schm_productos_financieros.movil_mccerrada_'||v_periodo||' as  
select
''04.MOVIL'' as CANAL,
''04.MCCERRADA'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_TRomp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCCERRADA'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 
and ADMISION>=0 then  CAPTADO_MCCERRADA end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_movil_'||v_periodo||'';


--96
EXECUTE 
'create table schm_productos_financieros.movil_tamcuotas_'||v_periodo||' as  
select
''04.MOVIL'' as CANAL,
''05.TAMCUOTAS'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAMCUOTAS'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 
and ADMISION>=0 then  CAPTADO_TAMCUOTAS end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_movil_'||v_periodo||'';


--97
EXECUTE 
'create table schm_productos_financieros.movil_mcblack_'||v_periodo||' as  
select
''04.MOVIL'' as CANAL,
''06.MCBLACK'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'')
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'')
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'')
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCBLACK'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCBLACK'')
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 
and ADMISION>=0 then  CAPTADO_MCBLACK end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_movil_'||v_periodo||'';


--VISTA RPOS


--98
EXECUTE 
'create table schm_productos_financieros.rpos_tam_'||v_periodo||' as  
select
''05.RPOS'' as CANAL,
''01.TAM'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'')
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'')
and SALTA_TARJETA_tam=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'')
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end ) as  PORCENTAJE_ACEPTACION,
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end),0)
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAM'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAM'')
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 
and ADMISION>=0 then  CAPTADO_TAM end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_rpos_'||v_periodo||'';


--99
EXECUTE 
'create table schm_productos_financieros.rpos_tr_'||v_periodo||' as  
select
''05.RPOS'' as CANAL,
''02.TR'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'')
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'')
and SALTA_TARJETA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TR'')
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TR'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TR'')
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 
and ADMISION>=0 then  CAPTADO_TR end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_rpos_'||v_periodo||'';


--100
EXECUTE 
'create table schm_productos_financieros.rpos_cdp_'||v_periodo||' as  
select
''05.RPOS'' as CANAL,
''03.CDP'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_Cdp=0) and NO_UOF_CDP1=1 and NO_UOF_CDP2=0 and  NO_UOF_CDP3=0  then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_Cdp=0) and NO_UOF_CDP2=1 and NO_UOF_CDP1=0 and NO_UOF_CDP3=0 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_Cdp=0) and  ((NO_UOF_CDP3=1 and NO_UOF_CDP2=0 and NO_UOF_CDP1=0)
or (NO_UOF_CDP1+NO_UOF_CDP2+NO_UOF_CDP3=0)
or (NO_UOF_CDP1+NO_UOF_CDP2+NO_UOF_CDP3>=2)) 
then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and NO_oferta_mora_protesto_CDP=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and No_oferta_lnegro_CDP=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and NO_oferta_mora_protesto_CDP=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''CDP'')
and (UOF_CDP=1) and No_oferta_lnegro_CDP=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end)/
count(case when humano=1  AND  (UOF_CDP=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end )/
count(case when HUMANO=1 and CON_OFERTA  in (''CDP'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''CDP'')
and SALTA_TARJETA_CDP=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''CDP'')
and SALTA_TARJETA_CDP=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''CDP'')
and SALTA_TARJETA_CDP=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''CDP'') and SALTA_TARJETA_CDP=1 then ACEPTA_TARJETA_CDP end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''CDP'') and SALTA_TARJETA_CDP=1 then ACEPTA_TARJETA_CDP end )/
SUM(case when humano=1  and   CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 and ADMISION=0 then CAPTADO_CDP end),0)) as ACEPTACION_REAL,
(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 and ADMISION=0 then CAPTADO_CDP end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''CDP'') and SALTA_TARJETA_CDP=1 then ACEPTA_TARJETA_CDP end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''CDP'') 
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 and ADMISION=0 then CAPTADO_CDP end))/
SUM(case when humano=1  and   CON_OFERTA  in (''CDP'') AND SALTA_TARJETA_CDP=1  then SALTA_TARJETA_CDP end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''CDP'')
and SALTA_TARJETA_CDP=1 
and ACEPTA_TARJETA_CDP=1 
and ADMISION>=0 then  CAPTADO_CDP end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_rpos_'||v_periodo||'';


--101
EXECUTE 
'create table schm_productos_financieros.rpos_mccerrada_'||v_periodo||' as  
select
''05.RPOS'' as CANAL,
''04.MCCERRADA'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_TRomp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCCERRADA'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCCERRADA'')
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 
and ADMISION>=0 then  CAPTADO_MCCERRADA end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_rpos_'||v_periodo||'';


--102
EXECUTE 
'create table schm_productos_financieros.rpos_tamcuotas_'||v_periodo||' as  
select
''05.RPOS'' as CANAL,
''05.TAMCUOTAS'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAMCUOTAS'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAMCUOTAS'')
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 
and ADMISION>=0 then  CAPTADO_TAMCUOTAS end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_rpos_'||v_periodo||'';


--103
EXECUTE 
'create table schm_productos_financieros.rpos_mcblack_'||v_periodo||' as  
select
''05.RPOS'' as CANAL,
''06.MCBLACK'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 THEN rut END)/sum(VISITAS) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end) AS UOF, 
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and (UOF_CAPTA=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and (UOF_CAPTA=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)/SUM(HUMANO) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'')
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'')
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'')
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCBLACK'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCBLACK'')
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 
and ADMISION>=0 then  CAPTADO_MCBLACK end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_rpos_'||v_periodo||'';


--COLAPSO FUNNEL TC


--104
EXECUTE 
'drop table if exists schm_productos_financieros.colapso_funnel_tc_'||v_periodo||''
;

EXECUTE 
'
create table schm_productos_financieros.colapso_funnel_tc_'||v_periodo||' AS
select 
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.tv_tam_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.tv_tr_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.tv_cdp_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.tv_mccerrada_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.tv_tamcuotas_'||v_periodo||'
union all
select 
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.tv_mcblack_'||v_periodo||'
union all
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.ccss_tam_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.ccss_tr_'||v_periodo||'
union all 
select 
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.ccss_cdp_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.ccss_mccerrada_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.ccss_tamcuotas_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.ccss_mcblack_'||v_periodo||' 
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.banco_tam_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.banco_tr_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.banco_cdp_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia 
	, *
from schm_productos_financieros.banco_mccerrada_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia 
	, *
from schm_productos_financieros.banco_tamcuotas_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia 
	, *
from schm_productos_financieros.banco_mcblack_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.movil_tam_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia	
	, *
from schm_productos_financieros.movil_tr_'||v_periodo||'
union all 
select 
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.movil_cdp_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.movil_mccerrada_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.movil_tamcuotas_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.movil_mcblack_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.rpos_tam_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.rpos_tr_'||v_periodo||'
union all 
select  
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.rpos_cdp_'||v_periodo||'
union all 
select 
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.rpos_mccerrada_'||v_periodo||'
union all 
select 
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.rpos_tamcuotas_'||v_periodo||'
union all 
select 
	''TOTAL'' as tipologia
	, *
from schm_productos_financieros.rpos_mcblack_'||v_periodo||'';


--NUEVOS


--104
EXECUTE 
'
create table schm_productos_financieros.tv_tam_nuevos_'||v_periodo||' as  
select
''01.TV'' as CANAL,
''01.TAM'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(CANTIDAD) as TRX_TOTAL, 
sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END) AS DIG,
(sum(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END))/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN cantidad END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')   THEN HUMANO END)/(sum(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END)) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1   AND (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 AND  CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end ) as  PORCENTAJE_ACEPTACION,
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end),0)
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 
and ADMISION>=0 then  CAPTADO_TAM end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_tv_'||v_periodo||'';


--105
EXECUTE 
'create table schm_productos_financieros.tv_tr_nuevos_'||v_periodo||' as  
select
''01.TV'' as CANAL,
''02.TR'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(CANTIDAD) as TRX_TOTAL, 
sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END) AS DIG, 
(sum(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END))/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN cantidad END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')   THEN HUMANO END)/(sum(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END)) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 AND  CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 AND  CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1  and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1  and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')   AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')   and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'')and tipo_cliente in(''102'',''108'',''201'',''207'')   AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 
and ADMISION>=0 then  CAPTADO_TR end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_tv_'||v_periodo||'';


--106
EXECUTE 
'create table schm_productos_financieros.tv_mccerrada_nuevos_'||v_periodo||' as  
select
''01.TV'' as CANAL,
''04.MCCERRADA'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(CANTIDAD) as TRX_TOTAL, 
sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END) AS DIG,
(sum(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END))/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN cantidad END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')   THEN HUMANO END)/(sum(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END)) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 AND  CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 AND  CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1  and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1  and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 
and ADMISION>=0 then  CAPTADO_MCCERRADA end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_tv_'||v_periodo||'';


--107
EXECUTE 
'create table schm_productos_financieros.tv_tamcuotas_nuevos_'||v_periodo||' as  
select
''01.TV'' as CANAL,
''05.TAMCUOTAS'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(CANTIDAD) as TRX_TOTAL, 
sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END) AS DIG,
(sum(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END))/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN cantidad END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')   THEN HUMANO END)/(sum(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END)) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 AND  CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 AND  CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1  and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1  and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 
and ADMISION>=0 then  CAPTADO_TAMCUOTAS end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_tv_'||v_periodo||'';


--108
EXECUTE 
'create table schm_productos_financieros.tv_mcblack_nuevos_'||v_periodo||' as  
select
''01.TV'' as CANAL,
''06.MCBLACK'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(CANTIDAD) as TRX_TOTAL, 
sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END) AS DIG,
(sum(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END))/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN cantidad END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')   THEN HUMANO END)/(sum(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END)) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 AND  CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 AND  CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1  and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1  and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 
and ADMISION>=0 then  CAPTADO_MCBLACK end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_tv_'||v_periodo||'';


--VISTA CCSS;


--109
EXECUTE 
'create table schm_productos_financieros.ccss_tam_nuevos_'||v_periodo||' as  
select
''02.CCSS'' as CANAL,
''01.TAM'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 and tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and  tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
count(case when HUMANO=1  and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1   AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1  and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1  and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end ) as  PORCENTAJE_ACEPTACION,
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end),0)
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 
and ADMISION>=0 then  CAPTADO_TAM end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_ccss_'||v_periodo||'';


--110
EXECUTE 
'create table schm_productos_financieros.ccss_tr_nuevos_'||v_periodo||' as  
select
''02.CCSS'' as CANAL,
''02.TR'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 and tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
count(case when HUMANO=1  and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1   AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1  and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1  and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 
and ADMISION>=0 then  CAPTADO_TR end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_ccss_'||v_periodo||'';


--111
EXECUTE 
'create table schm_productos_financieros.ccss_mccerrada_nuevos_'||v_periodo||' as  
select
''02.CCSS'' as CANAL,
''04.MCCERRADA'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 and tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1  and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1   AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1  and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1  and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 
and ADMISION>=0 then  CAPTADO_MCCERRADA end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_ccss_'||v_periodo||'';


--112
EXECUTE 
'create table schm_productos_financieros.ccss_tamcuotas_nuevos_'||v_periodo||' as  
select
''02.CCSS'' as CANAL,
''05.TAMCUOTAS'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 and tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1  and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1   AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1  and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1  and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 
and ADMISION>=0 then  CAPTADO_TAMCUOTAS end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_ccss_'||v_periodo||'';


--113
EXECUTE 
'create table schm_productos_financieros.ccss_mcblack_nuevos_'||v_periodo||' as  
select
''02.CCSS'' as CANAL,
''06.MCBLACK'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 and tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 and tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 and tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1  AND  tipo_cliente in(''102'',''108'',''201'',''207'')  AND (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1  and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1   AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1  and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1  and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 
and ADMISION>=0 then  CAPTADO_MCBLACK end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_ccss_'||v_periodo||'';


--VISTA BANCO;


--114
EXECUTE 
'create table schm_productos_financieros.banco_tam_nuevos_'||v_periodo||' as  
select
''03.BANCO'' as CANAL,
''01.TAM'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
  count(case when HUMANO=1 and CON_OFERTA  in (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end ) as  PORCENTAJE_ACEPTACION,
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end),0)
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 
and ADMISION>=0 then  CAPTADO_TAM end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_banco_'||v_periodo||'';


--115
EXECUTE 
'create table schm_productos_financieros.banco_tr_nuevos_'||v_periodo||' as  
select
''03.BANCO'' as CANAL,
''02.TR'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 
and ADMISION>=0 then  CAPTADO_TR end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_banco_'||v_periodo||'';


--116
EXECUTE 
'create table schm_productos_financieros.banco_mccerrada_nuevos_'||v_periodo||' as  
select
''03.BANCO'' as CANAL,
''04.MCCERRADA'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 
and ADMISION>=0 then  CAPTADO_MCCERRADA end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_banco_'||v_periodo||'';


--117
EXECUTE 
'create table schm_productos_financieros.banco_tamcuotas_nuevos_'||v_periodo||' as  
select
''03.BANCO'' as CANAL,
''05.TAMCUOTAS'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 
and ADMISION>=0 then  CAPTADO_TAMCUOTAS end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_banco_'||v_periodo||'';


--118
EXECUTE 
'create table schm_productos_financieros.banco_mcblack_nuevos_'||v_periodo||' as  
select
''03.BANCO'' as CANAL,
''06.MCBLACK'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 
and ADMISION>=0 then  CAPTADO_MCBLACK end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_banco_'||v_periodo||'';


--VISTA MOVIL


--119
EXECUTE 
'create table schm_productos_financieros.movil_tam_nuevos_'||v_periodo||' as  
select
''04.MOVIL'' as CANAL,
''01.TAM'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end ) as  PORCENTAJE_ACEPTACION,
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end),0)
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 
and ADMISION>=0 then  CAPTADO_TAM end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_movil_'||v_periodo||'';


--120
EXECUTE 
'create table schm_productos_financieros.movil_tr_nuevos_'||v_periodo||' as  
select
''04.MOVIL'' as CANAL,
''02.TR'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 
and ADMISION>=0 then  CAPTADO_TR end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_movil_'||v_periodo||'';


--121
EXECUTE 
'create table schm_productos_financieros.movil_mccerrada_nuevos_'||v_periodo||' as  
select
''04.MOVIL'' as CANAL,
''04.MCCERRADA'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 
and ADMISION>=0 then  CAPTADO_MCCERRADA end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_movil_'||v_periodo||'';


--122
EXECUTE 
'create table schm_productos_financieros.movil_tamcuotas_nuevos_'||v_periodo||' as  
select
''04.MOVIL'' as CANAL,
''05.TAMCUOTAS'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 
and ADMISION>=0 then  CAPTADO_TAMCUOTAS end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_movil_'||v_periodo||'';


--123
EXECUTE 
'create table schm_productos_financieros.movil_mcblack_nuevos_'||v_periodo||' as  
select
''04.MOVIL'' as CANAL,
''06.MCBLACK'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 
and ADMISION>=0 then  CAPTADO_MCBLACK end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_movil_'||v_periodo||'';


--VISTA RPOS


--124
EXECUTE 
'create table schm_productos_financieros.rpos_tam_nuevos_'||v_periodo||' as  
select
''05.RPOS'' as CANAL,
''01.TAM'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end ) as  PORCENTAJE_ACEPTACION,
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end),0)
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAM'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 
and ADMISION>=0 then  CAPTADO_TAM end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_rpos_'||v_periodo||'';


--125
EXECUTE 
'create table schm_productos_financieros.rpos_tr_nuevos_'||v_periodo||' as  
select
''05.RPOS'' as CANAL,
''02.TR'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TR'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 
and ADMISION>=0 then  CAPTADO_TR end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_rpos_'||v_periodo||'';


--126
EXECUTE 
'create table schm_productos_financieros.rpos_mccerrada_nuevos_'||v_periodo||' as  
select
''05.RPOS'' as CANAL,
''04.MCCERRADA'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCCERRADA'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 
and ADMISION>=0 then  CAPTADO_MCCERRADA end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_rpos_'||v_periodo||'';


--127
EXECUTE 
'create table schm_productos_financieros.rpos_tamcuotas_nuevos_'||v_periodo||' as  
select
''05.RPOS'' as CANAL,
''05.TAMCUOTAS'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAMCUOTAS'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 
and ADMISION>=0 then  CAPTADO_TAMCUOTAS end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_rpos_'||v_periodo||'';


--128
EXECUTE 
'create table schm_productos_financieros.rpos_mcblack_nuevos_'||v_periodo||' as  
select
''05.RPOS'' as CANAL,
''06.MCBLACK'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_NUEVOs=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)/SUM(CASE WHEN tipo_cliente in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_NUEVOs=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_NUEVOs=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when 
 humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCBLACK'') and tipo_cliente in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 
and ADMISION>=0 then  CAPTADO_MCBLACK end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_rpos_'||v_periodo||'';


--129
EXECUTE 
'insert into schm_productos_financieros.colapso_funnel_tc_'||v_periodo||' 
select 
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.tv_tam_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.tv_tr_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.tv_mccerrada_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.tv_tamcuotas_nuevos_'||v_periodo||'
union all
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.tv_mcblack_nuevos_'||v_periodo||'
union all
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.ccss_tam_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.ccss_tr_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.ccss_mccerrada_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.ccss_tamcuotas_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.ccss_mcblack_nuevos_'||v_periodo||' 
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.banco_tam_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.banco_tr_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.banco_mccerrada_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.banco_tamcuotas_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.banco_mcblack_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.movil_tam_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.movil_tr_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.movil_mccerrada_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.movil_tamcuotas_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.movil_mcblack_nuevos_'||v_periodo||'
union all
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.rpos_tam_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.rpos_tr_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.rpos_mccerrada_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.rpos_tamcuotas_nuevos_'||v_periodo||'
union all 
select  
	''NUEVO'' as tipologia
	, *
from schm_productos_financieros.rpos_mcblack_nuevos_'||v_periodo||'';


--DORMIDOS


--130

EXECUTE 
'create table schm_productos_financieros.tv_tam_dormidos_'||v_periodo||' as  
select
	''01.TV'' as CANAL
	, ''01.TAM'' AS SEGUIMIENTO
	, '||v_periodo||' as periodo
	, sum(CANTIDAD) as TRX_TOTAL
	, sum(CASE WHEN humano=1 THEN cantidad END)
		-sum(CASE WHEN HUMANO = 1 THEN COMPRA_1P END) AS DIG
	, (sum(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'') THEN cantidad END)
		-sum(CASE WHEN HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'') THEN COMPRA_1P END))
		/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'') THEN cantidad END) as porcentaje_Dig
	, SUM(HUMANO) AS DIG_UNICAS
	, SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'') THEN HUMANO END)
		/(sum(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'') THEN cantidad END)
		- sum(CASE WHEN HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'') THEN COMPRA_1P END)) as eliminacio_digitados
	, count(case when humano=1 and (UOF_CAPTA=1 and UOF_DORMIDOS=1) then rut end) AS UOF
	, count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'') and (UOF_CAPTA=0 and UOF_DORMIDOS=0) 
		and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end) as NO_UOF_1
	, count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  
		and (UOF_CAPTA=0 and UOF_DORMIDOS=0) 
		and NO_UOF_CAPTA_VU_semi=1 then rut end) as NO_UOF_2
	, count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3
	, count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp
	, count(case when HUMANO=1 AND  CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO
	, count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TAM'')
		and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto
	, count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TAM'')
		and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro
	, count(case when humano=1  AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
	count(case when HUMANO=1 and CON_OFERTA  in (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
	count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TAM'')
	and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
	 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TAM'')
	and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
	as No_oferta_riesgo
	, count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
	count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
	as porcentaje_oferta,
	SUM(case when humano=1  and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )  AS SALTA_POPUP, 
	SUM(case when humano=1  and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )/
	count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
	as porcentaje_POPUP,
	count(case when humano=1 
	AND  CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
	and SALTA_TARJETA_tam=0 and 
	DEU_MCC+
	DEU_BIC+
	MONTO_MORA+
	DET_SBIF_3090+
	DET_SBIF_90180+
	DET_SBIF_180MAS+
	DET_SBIF_3AMAS+
	DIAS_MORA_CAR+
	DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
	count(case when humano=1 
	AND  CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
	and SALTA_TARJETA_tam=0 and 
	DET_SBIF_3090+
	DET_SBIF_90180+
	DET_SBIF_180MAS+
	DET_SBIF_3AMAS>0
	then rut end ) +
	count(
	case when humano=1 
	AND  CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
	and SALTA_TARJETA_tam=0 and 
	DEU_MCC+
	DEU_BIC+
	MONTO_MORA+
	DIAS_MORA_CAR+
	DIAS_MORA_BCO>0
	and 
	DET_SBIF_3090+
	DET_SBIF_90180+
	DET_SBIF_180MAS+
	DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
	SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end ) as  aCEPTACION,
	SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )/
	SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end ) as  PORCENTAJE_ACEPTACION,
	sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
	and SALTA_TARJETA_tam=1 
	and ACEPTA_TARJETA_tam=1 then ADMISION end)+
	coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
	and SALTA_TARJETA_tam=1 
	and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end),0)
	AS ACEPTACION_REAL, 
	(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
	and SALTA_TARJETA_tam=1 
	and ACEPTA_TARJETA_tam=1 then ADMISION end)+
	sum( case when humano=1   AND CON_OFERTA IN (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
	and SALTA_TARJETA_tam=1 
	and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
	SUM(case when humano=1   AND CON_OFERTA  in  (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )
	as Tasa_mala_Venta,
	(sum( case when humano=1   AND CON_OFERTA IN (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
	and SALTA_TARJETA_tam=1 
	and ACEPTA_TARJETA_tam=1 then ADMISION end)+
	sum( case when humano=1   AND CON_OFERTA IN (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
	and SALTA_TARJETA_tam=1 
	and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
	SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )
	as 
	PROCENTAJE_ACEPTACION_REAL,
	SUM(case when humano=1
	AND CON_OFERTA  IN (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
	and SALTA_TARJETA_tam=1 
	and ACEPTA_TARJETA_tam=1 
	and ADMISION>=0 then  CAPTADO_TAM end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_tv_'||v_periodo||'';


--131
EXECUTE 
'create table schm_productos_financieros.tv_tr_dormidos_'||v_periodo||' as  
select
''01.TV'' as CANAL,
''02.TR'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(CANTIDAD) as TRX_TOTAL, 
sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END) AS DIG, 
(sum(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END))/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN cantidad END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END)/(sum(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END)) as eliminacio_digitados,
count(case when humano=1 AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 AND  CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')   AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')   and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'')and tipo_cliente not in(''102'',''108'',''201'',''207'')   AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 
and ADMISION>=0 then  CAPTADO_TR end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_tv_'||v_periodo||'';


--132
EXECUTE 
'create table schm_productos_financieros.tv_mccerrada_dormidos_'||v_periodo||' as  
select
''01.TV'' as CANAL,
''04.MCCERRADA'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(CANTIDAD) as TRX_TOTAL, 
sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END) AS DIG, 
(sum(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END))/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN cantidad END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END)/(sum(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END)) as eliminacio_digitados,
count(case when humano=1 AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 
and ADMISION>=0 then  CAPTADO_MCCERRADA end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_tv_'||v_periodo||'';


--133
EXECUTE 
'create table schm_productos_financieros.tv_tamcuotas_dormidos_'||v_periodo||' as  
select
''01.TV'' as CANAL,
''05.TAMCUOTAS'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(CANTIDAD) as TRX_TOTAL, 
sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END) AS DIG, 
(sum(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END))/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN cantidad END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END)/(sum(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END)) as eliminacio_digitados,
count(case when humano=1 AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 
and ADMISION>=0 then  CAPTADO_TAMCUOTAS end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_tv_'||v_periodo||'';


--134
EXECUTE 
'create table schm_productos_financieros.tv_mcblack_dormidos_'||v_periodo||' as  
select
''01.TV'' as CANAL,
''06.MCBLACK'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(CANTIDAD) as TRX_TOTAL, 
sum(CASE WHEN humano=1 THEN cantidad END)-sum(CASE WHEN HUMANO=1 THEN COMPRA_1P END) AS DIG, 
(sum(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END))/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN cantidad END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END)/(sum(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN cantidad END)-sum(CASE WHEN HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN COMPRA_1P END)) as eliminacio_digitados,
count(case when humano=1 AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 
and ADMISION>=0 then  CAPTADO_MCBLACK end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_tv_'||v_periodo||'';


--VISTA CCSS


--135
EXECUTE 
'create table schm_productos_financieros.ccss_tam_dormidos_'||v_periodo||' as  
select
''02.CCSS'' as CANAL,
''01.TAM'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end ) as  PORCENTAJE_ACEPTACION,
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end),0)
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 
and ADMISION>=0 then  CAPTADO_TAM end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_ccss_'||v_periodo||'';


--136
EXECUTE 
'create table schm_productos_financieros.ccss_tr_dormidos_'||v_periodo||' as  
select
''02.CCSS'' as CANAL,
''02.TR'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 
and ADMISION>=0 then  CAPTADO_TR end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_ccss_'||v_periodo||'';


--137
EXECUTE 
'create table schm_productos_financieros.ccss_mccerrada_dormidos_'||v_periodo||' as  
select
''02.CCSS'' as CANAL,
''04.MCCERRADA'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 
and ADMISION>=0 then  CAPTADO_MCCERRADA end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_ccss_'||v_periodo||'';


--138
EXECUTE 
'create table schm_productos_financieros.ccss_tamcuotas_dormidos_'||v_periodo||' as  
select
''02.CCSS'' as CANAL,
''05.TAMCUOTAS'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 
and ADMISION>=0 then  CAPTADO_TAMCUOTAS end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_ccss_'||v_periodo||'';


--139
EXECUTE 
'create table schm_productos_financieros.ccss_mcblack_dormidos_'||v_periodo||' as  
select
''02.CCSS'' as CANAL,
''06.MCBLACK'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 
and ADMISION>=0 then  CAPTADO_MCBLACK end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_ccss_'||v_periodo||'';


--VISTA BANCO


--140
EXECUTE 
'create table schm_productos_financieros.banco_tam_dormidos_'||v_periodo||' as  
select
''03.BANCO'' as CANAL,
''01.TAM'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end ) as  PORCENTAJE_ACEPTACION,
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end),0)
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 
and ADMISION>=0 then  CAPTADO_TAM end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_banco_'||v_periodo||'';


--141
EXECUTE 
'create table schm_productos_financieros.banco_tr_dormidos_'||v_periodo||' as  
select
''03.BANCO'' as CANAL,
''02.TR'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 
and ADMISION>=0 then  CAPTADO_TR end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_banco_'||v_periodo||'';


--142
EXECUTE 
'create table schm_productos_financieros.banco_mccerrada_dormidos_'||v_periodo||' as  
select
''03.BANCO'' as CANAL,
''04.MCCERRADA'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 
and ADMISION>=0 then  CAPTADO_MCCERRADA end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_banco_'||v_periodo||'';


--143
EXECUTE 
'create table schm_productos_financieros.banco_tamcuotas_dormidos_'||v_periodo||' as  
select
''03.BANCO'' as CANAL,
''05.TAMCUOTAS'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 
and ADMISION>=0 then  CAPTADO_TAMCUOTAS end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_banco_'||v_periodo||'';


--144
EXECUTE 
'create table schm_productos_financieros.banco_mcblack_dormidos_'||v_periodo||' as  
select
''03.BANCO'' as CANAL,
''06.MCBLACK'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 
and ADMISION>=0 then  CAPTADO_MCBLACK end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_banco_'||v_periodo||'';


--VISTA MOVIL


--145
EXECUTE 
'create table schm_productos_financieros.movil_tam_dormidos_'||v_periodo||' as  
select
''04.MOVIL'' as CANAL,
''01.TAM'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end ) as  PORCENTAJE_ACEPTACION,
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end),0)
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 
and ADMISION>=0 then  CAPTADO_TAM end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_movil_'||v_periodo||'';


--146
EXECUTE 
'create table schm_productos_financieros.movil_tr_dormidos_'||v_periodo||' as  
select
''04.MOVIL'' as CANAL,
''02.TR'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
 count(
case when humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 
and ADMISION>=0 then  CAPTADO_TR end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_movil_'||v_periodo||'';


--147
EXECUTE 
'create table schm_productos_financieros.movil_mccerrada_dormidos_'||v_periodo||' as  
select
''04.MOVIL'' as CANAL,
''04.MCCERRADA'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
then rut end ) +
count(
case when humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 
and ADMISION>=0 then  CAPTADO_MCCERRADA end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_movil_'||v_periodo||'';


--148
EXECUTE
'create table schm_productos_financieros.movil_tamcuotas_dormidos_'||v_periodo||' as  
select
''04.MOVIL'' as CANAL,
''05.TAMCUOTAS'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
then rut end ) +
count(
case when humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 
and ADMISION>=0 then  CAPTADO_TAMCUOTAS end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_movil_'||v_periodo||'';


--149
EXECUTE
'create table schm_productos_financieros.movil_mcblack_dormidos_'||v_periodo||' as  
select
''04.MOVIL'' as CANAL,
''06.MCBLACK'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
count(
case when humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 
and ADMISION>=0 then  CAPTADO_MCBLACK end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_movil_'||v_periodo||'';


--VISTA RPOS


--150
EXECUTE
'create table schm_productos_financieros.rpos_tam_dormidos_'||v_periodo||' as  
select
''05.RPOS'' as CANAL,
''01.TAM'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAM'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
count(
case when humano=1 
AND  CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end ) as  PORCENTAJE_ACEPTACION,
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end),0)
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_tam=1 then ACEPTA_TARJETA_tam end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAM'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 and ADMISION=0 then CAPTADO_TAM end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_tam=1  then SALTA_TARJETA_tam end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAM'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_tam=1 
and ACEPTA_TARJETA_tam=1 
and ADMISION>=0 then  CAPTADO_TAM end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_rpos_'||v_periodo||'';


--151
EXECUTE
'create table schm_productos_financieros.rpos_tr_dormidos_'||v_periodo||' as  
select
''05.RPOS'' as CANAL,
''02.TR'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TR'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
 count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
count(
case when humano=1 
AND  CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_TR=1 then ACEPTA_TARJETA_TR end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TR'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 and ADMISION=0 then CAPTADO_TR end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_TR=1  then SALTA_TARJETA_TR end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TR'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_TR=1 
and ACEPTA_TARJETA_TR=1 
and ADMISION>=0 then  CAPTADO_TR end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_rpos_'||v_periodo||'';


--152
EXECUTE
'create table schm_productos_financieros.rpos_mccerrada_dormidos_'||v_periodo||' as  
select
''05.RPOS'' as CANAL,
''04.MCCERRADA'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''MCCERRADA'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
count(
case when humano=1 
AND  CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end ) as aceptacion,
SUM(case when humano=1   AND CON_OFERTA  in (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TARJETA_MCCERRADA=1 then ACEPTA_TARJETA_MCCERRADA end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCCERRADA'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 and ADMISION=0 then CAPTADO_MCCERRADA end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TARJETA_MCCERRADA=1  then SALTA_TARJETA_MCCERRADA end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCCERRADA'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TARJETA_MCCERRADA=1 
and ACEPTA_TARJETA_MCCERRADA=1 
and ADMISION>=0 then  CAPTADO_MCCERRADA end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_rpos_'||v_periodo||'';


--153
EXECUTE
'create table schm_productos_financieros.rpos_tamcuotas_dormidos_'||v_periodo||' as  
select
''05.RPOS'' as CANAL,
''05.TAMCUOTAS'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
 count(case when HUMANO=1 and CON_OFERTA not in (''TAMCUOTAS'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )/
count(case when HUMANO=1 and CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
count(
case when humano=1 
AND  CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_TAMCUOTAS=1 then ACEPTA_TAMCUOTAS end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''TAMCUOTAS'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 and ADMISION=0 then CAPTADO_TAMCUOTAS end))/
SUM(case when humano=1  and   CON_OFERTA  in (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_TAMCUOTAS=1  then SALTA_TAMCUOTAS end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''TAMCUOTAS'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_TAMCUOTAS=1 
and ACEPTA_TAMCUOTAS=1 
and ADMISION>=0 then  CAPTADO_TAMCUOTAS end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_rpos_'||v_periodo||'';


--154
EXECUTE 
'create table schm_productos_financieros.rpos_mcblack_dormidos_'||v_periodo||' as  
select
''05.RPOS'' as CANAL,
''06.MCBLACK'' AS SEGUIMIENTO, 
'||v_periodo||' as periodo, 
sum(VISITAS) as TRX_TOTAL, 
count(CASE WHEN humano=1 THEN rut END) AS DIG, 
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as porcentaje_Dig,
SUM(HUMANO) AS DIG_UNICAS,
count(CASE WHEN humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN rut END)/sum(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN VISITAS END) as eliminacio_digitados,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end) AS UOF, 
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_ACTIVO=1 then rut end ) as NO_UOF_1,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and NO_UOF_CAPTA_VU_semi=1 then rut end ) as NO_UOF_2,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  and (UOF_CAPTA=0 and UOF_DORMIDOS=0) and  NO_UOF_CAPTA_VU_ACTIVO+NO_UOF_CAPTA_VU_semi=0 then rut end ) as NO_UOF_3,
count(case when humano=1 AND tipo_cliente not in(''102'',''108'',''201'',''207'')  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)/SUM(CASE WHEN tipo_cliente not in(''102'',''108'',''201'',''207'')  THEN HUMANO END) as eliminacion_tromp,
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end) as oferta_RIESGO,
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end) as NO_oferta_mora_protesto,
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end ) as No_oferta_lnegro,
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)-
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and NO_oferta_mora_protesto_CAPTA=1 then rut end)-
count(case when HUMANO=1 and CON_OFERTA not in (''MCBLACK'')
and (UOF_CAPTA=1 and UOF_DORMIDOS=1) and No_oferta_lnegro_CAPTA=1 then rut end )
as No_oferta_riesgo,
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)/
count(case when humano=1  AND  (UOF_CAPTA=1 and UOF_DORMIDOS=1 ) then rut end)
as porcentaje_oferta,
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )  AS SALTA_POPUP, 
SUM(case when humano=1  and CON_OFERTA  in (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )/
count(case when HUMANO=1 and CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  then rut end)
as porcentaje_POPUP,
count(case when humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS+
DIAS_MORA_CAR+
DIAS_MORA_BCO=0 then rut end ) as NO_POPUP_LN,
count(case when humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS>0
 then rut end ) +
count(
case when humano=1 
AND  CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=0 and 
DEU_MCC+
DEU_BIC+
MONTO_MORA+
DIAS_MORA_CAR+
DIAS_MORA_BCO>0
and 
DET_SBIF_3090+
DET_SBIF_90180+
DET_SBIF_180MAS+
DET_SBIF_3AMAS=0 then rut end ) as NO_popup_MORA,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end ) as  aCEPTACION,
SUM(case when humano=1   AND CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end ) as  PORCENTAJE_ACEPTACION,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
coalesce(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end),0))
AS ACEPTACION_REAL, 
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
 SUM(case when humano=1   AND CON_OFERTA  in  (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  and SALTA_MCBLACK=1 then ACEPTA_MCBLACK end )
as Tasa_mala_Venta,
(sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 then ADMISION end)+
sum( case when humano=1   AND CON_OFERTA IN (''MCBLACK'')  and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 and ADMISION=0 then CAPTADO_MCBLACK end))/
SUM(case when humano=1  and   CON_OFERTA  in (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'')  AND SALTA_MCBLACK=1  then SALTA_MCBLACK end )
as 
PROCENTAJE_ACEPTACION_REAL,
SUM(case when humano=1
AND CON_OFERTA  IN (''MCBLACK'') and tipo_cliente not in(''102'',''108'',''201'',''207'') 
and SALTA_MCBLACK=1 
and ACEPTA_MCBLACK=1 
and ADMISION>=0 then  CAPTADO_MCBLACK end ) AS CAPTADO
from schm_productos_financieros.funnel_capta_rpos_'||v_periodo||'';


--155
EXECUTE 
'insert into  schm_productos_financieros.colapso_funnel_tc_'||v_periodo||' 
select ''DORMI'' as tipologia,
*
from schm_productos_financieros.tv_tam_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.tv_tr_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.tv_mccerrada_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.tv_tamcuotas_dormidos_'||v_periodo||'
union all
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.tv_mcblack_dormidos_'||v_periodo||'
union all
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.ccss_tam_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.ccss_tr_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.ccss_mccerrada_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.ccss_tamcuotas_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.ccss_mcblack_dormidos_'||v_periodo||' 
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.banco_tam_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.banco_tr_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.banco_mccerrada_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.banco_tamcuotas_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.banco_mcblack_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.movil_tam_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.movil_tr_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.movil_mccerrada_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.movil_tamcuotas_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.movil_mcblack_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.rpos_tam_dormidos_'||v_periodo||'
union all
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.rpos_tr_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.rpos_mccerrada_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.rpos_tamcuotas_dormidos_'||v_periodo||'
union all 
select  ''DORMI'' as tipologia,
*
from schm_productos_financieros.rpos_mcblack_dormidos_'||v_periodo||'';

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_tnda_data_mkp(v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
	
	
BEGIN

	DROP TABLE IF EXISTS  schm_workspace.tnda_marketplace_db2;

	CREATE TABLE schm_workspace.tnda_marketplace_db2 AS 
	SELECT 
		shop_id
		,order_id
		,product_sku AS sku
		,date_created_dt AS fecha_creacion
		,order_line_state AS estado
		,payment_type AS tipo_de_pago
		,shop_name AS seller
		,product_title AS detalle
		,category_label AS categoria
		,brand AS marca
		,rebates AS devoluciones
		,CASE
			WHEN LENGTH(customer_id) = 10 THEN SUBSTRING(customer_id,-2,12)
			WHEN LENGTH(customer_id) = 9 THEN SUBSTRING(customer_id,-2,11)
			WHEN LENGTH(customer_id) = 8 THEN SUBSTRING(customer_id,-2,10)
			WHEN LENGTH(customer_id) = 7 THEN SUBSTRING(customer_id,-2,9)
			ELSE customer_id
		END AS rut_cliente
		,RIGHT(customer_id,1) AS rut_cliente_dv 
		,price+shipping_price AS venta_con_iva
		,ROUND((price+shipping_price)/1.19) AS venta_sin_iva
		,quantity AS items
		,price AS precio_con_iva
		,ROUND((price)/1.19) AS precio_sin_iva
		,shipping_price AS precio_envio_con_iva
		,ROUND((shipping_price)/1.19) AS precio_envio_sin_iva
		,commission_fee AS margen_con_iva
		,ROUND((commission_fee)/1.19) AS margen_sin_iva
		,customer_shipping_state AS region
		,category_code AS cod
		,offer_id AS sku_2
		,depto 
		,nombre_departamento 
		,division 
		,'' AS division_3
		,CASE
			WHEN EXTRACT(MONTH FROM date_created_dt) = 1 THEN 'enero'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 2 THEN 'febrero'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 3 THEN 'marzo'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 4 THEN 'abril'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 5 THEN 'mayo'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 6 THEN 'junio'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 7 THEN 'julio'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 8 THEN 'agosto'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 9 THEN 'septiembre'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 10 THEN 'octubre'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 11 THEN 'noviembre'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 12 THEN 'diciembre'
		END AS mes
		,EXTRACT(YEAR FROM date_created_dt) AS anio
		,EXTRACT(DAY FROM date_created_dt) AS dia_2
		,CASE
			WHEN EXTRACT(MONTH FROM date_created_dt) = 1 THEN 'Q1'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 2 THEN 'Q1'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 3 THEN 'Q1'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 4 THEN 'Q2'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 5 THEN 'Q2'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 6 THEN 'Q2'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 7 THEN 'Q3'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 8 THEN 'Q3'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 9 THEN 'Q3'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 10 THEN 'Q4'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 11 THEN 'Q4'
			WHEN EXTRACT(MONTH FROM date_created_dt) = 12 THEN 'Q4'
		END AS q
		,order_additional_fields AS promo
		,periodo
	FROM br_dm_prod_bigdata_sqldwarehouse_db.marketplace_db2
	WHERE order_line_state IN ('RECEIVED', 'CLOSED', 'REFUNDED', 'REFUNDED 2', 'SHIPPED', 'SHIPPING', 'INCIDENT_OPEN')
		AND order_id NOT LIKE '%OPL%'
		AND periodo = v_periodo
	;

	DELETE
	FROM schm_data_analytics.tnda_data_mkp 
	WHERE periodo = v_periodo
	;
	
	INSERT INTO schm_data_analytics.tnda_data_mkp (
		shop_id,
		order_id,
		sku,
		fecha_creacion,
		estado,
		tipo_de_pago,
		seller,
		detalle,
		categoria,
		marca,
		devoluciones,
		rut_cliente,
		rut_cliente_dv,
		venta_con_iva,
		venta_sin_iva,
		items,
		precio_con_iva,
		precio_sin_iva,
		precio_envio_con_iva,
		precio_envio_sin_iva,
		margen_con_iva,
		margen_sin_iva,
		region,
		cod,
		sku_2,
		depto,
		nombre_departamento,
		division,
		division_3,
		mes,
		anio,
		dia_2,
		q,
		promo,
		periodo)
	SELECT 
		shop_id,
		order_id,
		sku,
		fecha_creacion,
		estado,
		tipo_de_pago,
		seller,
		detalle,
		categoria,
		marca,
		devoluciones,
		rut_cliente,
		rut_cliente_dv,
		venta_con_iva,
		venta_sin_iva,
		items,
		precio_con_iva,
		precio_sin_iva,
		precio_envio_con_iva,
		precio_envio_sin_iva,
		margen_con_iva,
		margen_sin_iva,
		region,
		cod,
		sku_2,
		depto,
		nombre_departamento,
		division,
		division_3,
		mes,
		anio,
		dia_2,
		q,
		promo,
		periodo
	FROM schm_workspace.tnda_marketplace_db2
	WHERE periodo = v_periodo
	;
	
	/*  ===========================================================================================================
	    === Control de versiones visual ===
	    2023-12-27 -- v02 -- David Vásquez	-- Actualización agregando el drop table al inicio de la tabla temporal.
	    2023-12-14 -- v01 -- Esteban Pino 	-- Versión original refactorizada en AWS.

	    === Información adicional:
	    Proceso que 
	    ===========================================================================================================
	*/

END;



$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_tnda_dmw_ciclo(stop int4)
	LANGUAGE plpgsql
AS $$
	
	DECLARE
	contador INTEGER := 1;

	BEGIN
		WHILE contador <= stop
		LOOP
			
	DROP TABLE IF EXISTS schm_workspace.DMW_BASE_PASO_TNDA;

	CREATE TABLE schm_workspace.DMW_BASE_PASO_TNDA AS 
	SELECT
		'TC' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TNDA
	WHERE
		date_part(DAY, fecha)<= contador
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL
	SELECT
		DISTINCT
	'CTACTE' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTACTE_TNDA
	WHERE
		date_part(DAY, fecha)<= contador
	UNION ALL

	SELECT
		DISTINCT
	'CTAVTA' AS tipo,
		rut,
		0 AS monto
	FROM
		schm_workspace.DMW_CTAVTA_TNDA
	WHERE
		date_part(DAY, fecha)<= contador
	UNION ALL
	SELECT
		'TC CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TC_CHEK_TNDA
	WHERE
		date_part(DAY, fecha)<= contador
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	UNION ALL

	SELECT
		'TD CHEK' AS tipo,
		rut,
		sum(monto) AS monto
	FROM
		schm_workspace.DMW_TD_CHEK_TNDA
	WHERE
		date_part(DAY, fecha)<= contador
	GROUP BY
		rut
	HAVING
		sum(monto)>0
	;

	INSERT
		INTO
		schm_workspace.DMW_BASE_PASO_TNDA2 
	SELECT
		contador AS dia,
		count(DISTINCT rut) AS GLOBAL,
		count(DISTINCT CASE WHEN tipo IN ('TC', 'SEG', 'CTAVTA', 'CTACTE') THEN rut END ) AS BANCO,
		count(DISTINCT CASE WHEN tipo IN ('TC', 'SEG') THEN rut END ) AS TC,
		count(DISTINCT CASE WHEN tipo IN ('CTAVTA', 'CTACTE') THEN rut END ) AS TD,
		count(DISTINCT CASE WHEN tipo IN ('CTAVTA') THEN rut END ) AS CTAVTA,
		count(DISTINCT CASE WHEN tipo IN ('CTACTE') THEN rut END ) AS CTACTE,
		count(DISTINCT CASE WHEN tipo IN ('TC CHEK', 'TD CHEK') THEN rut END ) AS CHEK,
		count(DISTINCT CASE WHEN tipo IN ('TC CHEK') THEN rut END ) AS TC_CHEK,
		count(DISTINCT CASE WHEN tipo IN ('TD CHEK') THEN rut END ) AS TD_CHEK
	FROM
		schm_workspace.DMW_BASE_PASO_TNDA
	;

	contador = contador + 1;
	END LOOP;
		END;
	
$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_tnda_forma_de_pago(indice int4)
	LANGUAGE plpgsql
AS $$
	
	
	

BEGIN

	DROP TABLE IF EXISTS  schm_workspace.tmp_tnda_iplaza_periodos;
	DROP TABLE IF EXISTS  schm_workspace.tmp_tnda_iplaza_compras4;
	DROP TABLE IF EXISTS  schm_workspace.tmp_tnda_iplaza_venta_bol;
	DROP TABLE IF EXISTS  schm_workspace.tmp_tnda_iplaza_tda_ITF;


	create table schm_workspace.tmp_tnda_iplaza_periodos(
	nombre VARCHAR(64), value INT );


	INSERT INTO schm_workspace.tmp_tnda_iplaza_periodos (
		 nombre
		,value)
	VALUES('PERIODO',DATE_PART(YEAR,dateadd(MONTH,-indice, CURRENT_DATE))*100+DATE_PART(MONTH,DATEADD(MONTH,-indice, current_date))),
		  ('INI_NUM',REPLACE(TO_DATE(DATE_TRUNC('month', cast(dateadd(MONTH,-indice, CURRENT_DATE) as date)), 'YYYY/MM/DD'), '-', '')::INTEGER),
		  ('FIN_num',REPLACE(TO_DATE(last_day(dateadd(MONTH,-indice, CURRENT_DATE)), 'YYYY/MM/DD'), '-', '')::INTEGER)
	;


	--####################################################################################################
	-- [01.01] informacion de credito retail &periodo
	--####################################################################################################

	--####################################################################################################
	-- [01.01] [01.04] Apertura blando y duro &periodo
	--####################################################################################################

	CREATE TABLE schm_workspace.tmp_tnda_iplaza_compras4 AS
	SELECT
		 EXTRACT(DAY FROM (to_char(TO_DATE(fecha, 'YYYYMMDD'), 'yyyy-mm-dd')::date)) AS fecha
	--TO_CHAR(TO_DATE(fecha, 'YYYYMMDD'), 'DDMONYYYY') AS fecha
		,TO_CHAR(DATE_TRUNC('month', cast(dateadd(MONTH,-1, CURRENT_DATE) as date)), 'DDMONYY') as fecha_tableau
		,sucursal
		,boleta
		,mto
		,capital
		,blando_duro
		,periodo
		,CASE
			WHEN marca_tipo_tr IN ('DEBITO RIPLEY','MCD RIPLEY','CUENTA CORRIENTE RIPLEY') THEN 'DEBITO RIPLEY'
			WHEN marca_tipo_tr='T_CREDITO' THEN 'CREDITO'
			WHEN marca_tipo_tr='OTRAS DEBITO' THEN 'DEBITO'
			WHEN marca_tipo_tr='OTRA' THEN 'OTROS'
			WHEN marca_tipo_TR='CHECK' THEN 'CHEK'
			ELSE marca_tipo_tr
		END AS marca_tipo_tr
	FROM schm_data_analytics.mdpg_uso_tr_marca
	WHERE periodo=(SELECT value FROM schm_workspace.tmp_tnda_iplaza_periodos WHERE nombre='PERIODO')
	;


	CREATE TABLE schm_workspace.tmp_tnda_iplaza_venta_bol AS
	SELECT
		'BLANDO' AS metrica
		,CASE
			WHEN sucursal=39 THEN 'R.COM'
			ELSE 'PRESENCIAL'
		END AS submetrica
		,CASE
			WHEN marca_tipo_tr='CHEK' THEN	'05'
			WHEN marca_tipo_tr='CREDITO' THEN	'03'
			WHEN marca_tipo_tr='DEBITO' THEN	'02'
			WHEN marca_tipo_tr='DEBITO RIPLEY' THEN	'04'
			WHEN marca_tipo_tr='EFECTIVO' THEN	'06'
			WHEN marca_tipo_tr='OTROS' THEN	'07'
			WHEN marca_tipo_tr='TR' THEN	'01'
		END AS correlativo
		,marca_tipo_tr AS variable
		,fecha_tableau
		,periodo
		,fecha AS dia
		,SUM(mto) AS monto
	FROM schm_workspace.tmp_tnda_iplaza_compras4
	WHERE blando_duro='BLANDO'
	GROUP BY
		 correlativo
		,submetrica
		,variable
		,fecha_tableau
		,periodo
		,fecha
	UNION
	SELECT
		 'BLANDO' AS metrica
		,'TOTAL' AS submetrica
		,CASE
			WHEN marca_tipo_tr='CHEK' THEN	'05'
			WHEN marca_tipo_tr='CREDITO' THEN	'03'
			WHEN marca_tipo_tr='DEBITO' THEN	'02'
			WHEN marca_tipo_tr='DEBITO RIPLEY' THEN	'04'
			WHEN marca_tipo_tr='EFECTIVO' THEN	'06'
			WHEN marca_tipo_tr='OTROS' THEN	'07'
			WHEN marca_tipo_tr='TR' THEN	'01'
		END AS correlativo
		,marca_tipo_tr AS variable
		,fecha_tableau
		,periodo
		,fecha AS dia
		,SUM(mto) AS monto
	FROM schm_workspace.tmp_tnda_iplaza_compras4
	WHERE blando_duro='BLANDO'
	GROUP BY
		 correlativo
		,submetrica
		,variable
		,fecha_tableau
		,periodo
		,fecha
	UNION
	SELECT
		 'DURO' AS metrica
		,CASE
			WHEN sucursal=39 THEN 'R.COM'
			ELSE 'PRESENCIAL'
		END AS submetrica
		,CASE
			WHEN marca_tipo_tr='CHEK' THEN	'05'
			WHEN marca_tipo_tr='CREDITO' THEN	'03'
			WHEN marca_tipo_tr='DEBITO' THEN	'02'
			WHEN marca_tipo_tr='DEBITO RIPLEY' THEN	'04'
			WHEN marca_tipo_tr='EFECTIVO' THEN	'06'
			WHEN marca_tipo_tr='OTROS' THEN	'07'
			WHEN marca_tipo_tr='TR' THEN	'01'
		END AS correlativo
		,marca_tipo_tr AS variable
		,fecha_tableau
		,periodo
		,fecha AS dia
		,SUM(mto) AS monto
	FROM schm_workspace.tmp_tnda_iplaza_compras4
	WHERE blando_duro='DURO'
	GROUP BY
		 correlativo
		,submetrica
		,variable
		,fecha_tableau
		,periodo
		,fecha
	UNION
	SELECT
		 'DURO' AS metrica
		,'TOTAL' AS submetrica
		,CASE
			WHEN marca_tipo_tr='CHEK' THEN	'05'
			WHEN marca_tipo_tr='CREDITO' THEN	'03'
			WHEN marca_tipo_tr='DEBITO' THEN	'02'
			WHEN marca_tipo_tr='DEBITO RIPLEY' THEN	'04'
			WHEN marca_tipo_tr='EFECTIVO' THEN	'06'
			WHEN marca_tipo_tr='OTROS' THEN	'07'
			WHEN marca_tipo_tr='TR' THEN	'01'
		END AS correlativo
		,marca_tipo_tr AS variable
		,fecha_tableau
		,periodo
		,fecha AS dia
		,SUM(mto) AS monto
	FROM schm_workspace.tmp_tnda_iplaza_compras4
	WHERE blando_duro='DURO'
	GROUP BY
		 correlativo
		,submetrica
		,variable
		,fecha_tableau
		,periodo
		,fecha
	UNION
	SELECT
		 'TOTAL' AS metrica
		,CASE
			WHEN sucursal=39
			THEN 'R.COM'
			ELSE 'PRESENCIAL'
		END AS submetrica
		,CASE
			WHEN marca_tipo_tr='CHEK' THEN	'05'
			WHEN marca_tipo_tr='CREDITO' THEN	'03'
			WHEN marca_tipo_tr='DEBITO' THEN	'02'
			WHEN marca_tipo_tr='DEBITO RIPLEY' THEN	'04'
			WHEN marca_tipo_tr='EFECTIVO' THEN	'06'
			WHEN marca_tipo_tr='OTROS' THEN	'07'
			WHEN marca_tipo_tr='TR' THEN	'01'
		END AS correlativo
		,marca_tipo_tr AS variable
		,fecha_tableau
		,periodo
		,fecha AS dia
		,SUM(mto) AS monto
	FROM schm_workspace.tmp_tnda_iplaza_compras4
	GROUP BY
		 correlativo
		,submetrica
		,variable
		,fecha_tableau
		,periodo
		,fecha
	UNION
	SELECT
		 'TOTAL' AS metrica
		,'TOTAL' AS submetrica
		,CASE
			WHEN marca_tipo_tr='CHEK' THEN	'05'
			WHEN marca_tipo_tr='CREDITO' THEN	'03'
			WHEN marca_tipo_tr='DEBITO' THEN	'02'
			WHEN marca_tipo_tr='DEBITO RIPLEY' THEN	'04'
			WHEN marca_tipo_tr='EFECTIVO' THEN	'06'
			WHEN marca_tipo_tr='OTROS' THEN	'07'
			WHEN marca_tipo_tr='TR' THEN	'01'
		END AS correlativo
		,marca_tipo_tr AS variable
		,fecha_tableau
		,periodo
		,fecha AS dia
		,SUM(mto) AS monto
	FROM schm_workspace.tmp_tnda_iplaza_compras4
	GROUP BY
		 correlativo
		,submetrica
		,variable
		,fecha_tableau
		,periodo
		,fecha
	;

	--####################################################################################################
	-- [08.01] apertura tipo plastico Tda Itf &periodo
	--####################################################################################################

	CREATE TABLE schm_workspace.tmp_tnda_iplaza_tda_ITF AS
	SELECT
		CASE
			WHEN SUBSTRING(pan,1,6)='549070' THEN 'TAM'
			ELSE 'TR'
		END AS tipo_plastico
		,CASE
			WHEN sucursal=39 THEN 'DIGITAL'
			ELSE 'PRESENCIAL'
		 	END AS tipo
		,periodo
		,SUM(capital) AS monto
		,COUNT(CASE	WHEN capital>0 THEN rut	END)-COUNT(CASE WHEN capital<0 THEN rut END) AS trx
	FROM schm_data_analytics.tnda_tda_itf
	WHERE periodo=(SELECT value FROM schm_workspace.tmp_tnda_iplaza_periodos WHERE nombre='PERIODO')
	GROUP BY
		 tipo_plastico
		,tipo
		,periodo
	;


	CREATE TABLE IF NOT EXISTS schm_data_analytics.tnda_apertura_tda_mdp(
		 tipo_plastico VARCHAR(3)
		,tipo VARCHAR(10)
		,periodo INT4
		,monto INT8
		,trx INT8
	);


	CREATE TABLE IF NOT EXISTS schm_data_analytics.tnda_evolutivo_forma_pago_new(
		 metrica VARCHAR(6)
		,submetrica VARCHAR(10)
		,correlativo VARCHAR(2)
		,variable VARCHAR(16383)
		,fecha_tableau VARCHAR(17)
		,periodo INT4
		,dia INT8
		,monto INT8
	);

	--#########################################################
	--BORRADO DEL PERIODO
	--#########################################################

	DELETE FROM schm_data_analytics.tnda_apertura_tda_mdp
	WHERE periodo=(SELECT value FROM schm_workspace.tmp_tnda_iplaza_periodos WHERE nombre='PERIODO')
	;

	DELETE FROM schm_data_analytics.tnda_evolutivo_forma_pago_new
	WHERE periodo=(SELECT value FROM schm_workspace.tmp_tnda_iplaza_periodos WHERE nombre='PERIODO')
	;

	--#########################################################
	--INSERTAR PERIODO
	--#########################################################

	INSERT INTO schm_data_analytics.tnda_apertura_tda_mdp
	SELECT
		*
	FROM schm_workspace.tmp_tnda_iplaza_tda_ITF
	;

	INSERT INTO schm_data_analytics.tnda_evolutivo_forma_pago_new
	SELECT
		*
	FROM schm_workspace.tmp_tnda_iplaza_venta_bol
	;


	--####################################################################################################
	-- BORRADO DE TABLAS
	--####################################################################################################

	DROP TABLE IF EXISTS  schm_workspace.tmp_tnda_iplaza_periodos;
	DROP TABLE IF EXISTS  schm_workspace.tmp_tnda_iplaza_compras4;
	DROP TABLE IF EXISTS  schm_workspace.tmp_tnda_iplaza_venta_bol;
	DROP TABLE IF EXISTS  schm_workspace.tmp_tnda_iplaza_tda_ITF;

/*	===========================================================================================================
	=== Control de versiones visual ===
	2024-01-16	-- v04	--	Esteban Pino	--	Cambio de fuentes sasdata a schm_data_analytics.
	2023-06-20	-- v03	--	Ignacio Plaza	--	Actualización a variables fechas en la lógica del job.
	2023-06-01	-- v02	--	David Vásquez	--	Update a código RS según estándares.
	2023-05-26	-- v01	--	Ignacio Plaza	--	Versión original.

	=== Información adicional:
	-
	===========================================================================================================
*/


	END;
	


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_tnda_sku()
	LANGUAGE plpgsql
AS $$
	
BEGIN

    DROP TABLE IF EXISTS schm_data_analytics.tnda_sku;

    CREATE TABLE schm_data_analytics.tnda_sku AS
    SELECT
        prd_producto
        ,prd_producto::bigint AS sku_corto
        ,prv_productovta
        ,prv_productovta::bigint AS sku
        ,dep_coc_dvs
        ,dep_des_dvs
        ,COALESCE(prd_depto,'SIN INF') AS prd_depto
        ,COALESCE(dep_descripcion,'SIN INF') AS dep_descripcion
        ,COALESCE(prd_linea,'SIN INF') AS prd_linea
        ,COALESCE(lin_descripcion,'SIN INF') AS lin_descripcion
        ,COALESCE(prd_sublinea,'SIN INF') AS prd_sublinea
        ,COALESCE(sli_descripcion,'SIN INF') AS sli_descripcion
        ,COALESCE(mar_codmarca,'SIN INF') AS mar_codmarca
        ,COALESCE(mar_descripcion,'SIN INF') AS mar_descripcion
        ,COALESCE(prd_codestacion,'SIN INF') AS prd_codestacion
        ,mod_descripcion
    FROM br_dm_prod_bigdata_sqldwarehouse_db.gst_vmproducto_03_sqldwarehouse
    WHERE prv_productovta IS NOT NULL
    ;

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_tnda_sucursal_preferente()
	LANGUAGE plpgsql
AS $$
	
	
BEGIN

    DROP TABLE IF EXISTS schm_workspace.venta_tienda;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_2;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_total_tmp;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_total_tmp_2;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_presencial_tmp;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_presencial_tmp_2;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_total_tar;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_total_tar_2;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_presencial_tar;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_presencial_tar_2;
    DROP TABLE IF EXISTS schm_workspace.sucursal_pref;
    DROP TABLE IF EXISTS schm_workspace.sucursal_preferente;
   
    CREATE TABLE schm_workspace.venta_tienda AS 
    SELECT 
        rut
        , codigo_sucursal
        , sum(CASE  WHEN nro_trxs_tmp > 0 THEN 1 ELSE 0 END) AS frec_tmp
        , floor(CASE WHEN nro_trxs_tmp > 0 
		 	THEN MONTHS_BETWEEN(trunc(DATEADD(MM,-1,current_date)), max(periodo))
		    ELSE DATE_PART(YEAR,trunc(DATEADD(MM,-1,current_date))) * 12 + DATE_PART(MONTH,trunc(DATEADD(MM,-1,current_date)))
		  END) AS rec_tmp
        , sum(nro_trxs_tmp) AS nro_trxs_tmp
        , sum(mto_trxs_tmp) AS mto_trxs_tmp
        , sum(CASE WHEN nro_trxs_tar > 0 THEN 1 ELSE 0 END) AS frec_tar
        , CASE WHEN nro_trxs_tar >0 
		 	THEN MONTHS_BETWEEN(trunc(DATEADD(MM,-1,current_date)), max(periodo))
		    ELSE DATE_PART(YEAR,trunc(DATEADD(MM,-1,current_date))) * 12 + DATE_PART(MONTH,trunc(DATEADD(MM,-1,current_date)))
		  END AS rec_tar
        , sum(nro_trxs_tar) AS nro_trxs_tar
        , sum(mto_trxs_tar) AS mto_trxs_tar
    FROM (
        SELECT
            periodo
            , rut
            , codigo_sucursal
            , COUNT(1) AS nro_trxs_tmp
            , SUM(monto) AS mto_trxs_tmp
            , SUM(CASE WHEN medio_pago='TAR' THEN 1 ELSE 0 END) AS nro_trxs_tar
            , SUM(CASE WHEN medio_pago='TAR' THEN monto ELSE 0 END) AS mto_trxs_tar
        FROM (
            SELECT 
                ddmtd_fch_dia AS periodo
                , ddmct_rut_cli AS rut
                , ddmsu_cod_suc - 10000 AS codigo_sucursal
                , CASE WHEN ddmfp_cod_for_pag = 3 THEN 'TAR' ELSE 'OMP' END AS medio_pago
                , dcmct_mnt_trn AS monto
            FROM br_dm_prod_bigdata_gedcre_db.gedcre_dcrm_cos_mov_trn_vta_bol
            WHERE ddmct_rut_cli < 99999999 and ddmct_rut_cli > 10000
            	AND ddmsu_cod_neg = 1
                AND dcmct_cod_prd = 1
                AND periodo BETWEEN to_char(trunc(dateadd(MM,-12,current_date)),'YYYYMM')::INTEGER AND to_char(trunc(dateadd(MM,-1,current_date)),'YYYYMM')::INTEGER
                AND dcmct_cod_tip_trn = 1
                AND dcmct_cod_trn NOT IN (39, 401, 402, 89, 90, 93)
                AND ddmsu_cod_suc NOT IN (10993, 10990)
        )
        GROUP BY periodo, rut, codigo_sucursal
    )
    GROUP BY rut, codigo_sucursal, nro_trxs_tmp, nro_trxs_tar
   ;
  
--SELECT to_char(trunc(dateadd(MM,-1,current_date)),'YYYYMM')::INTEGER;
--SELECT count(1) from schm_workspace.venta_tienda;
  
/*SELECT periodo, count(1) 
FROM br_dm_prod_bigdata_gedcre_db.gedcre_dcrm_cos_mov_trn_vta_bol 
WHERE periodo =202308
GROUP BY periodo
ORDER BY periodo desc;*/

  
  CREATE TABLE schm_workspace.venta_tienda_2 AS
    SELECT 
        *
        , ROUND(
            0.5 * schm_artifacts.f_valor_interpolado(nro_trxs_tmp::numeric, 1, 0, 2 * 12, 0, 1) +
            0.3 * schm_artifacts.f_valor_interpolado(frec_tmp::numeric, 1, 0, 12, 0, 1) +
            0.1 * schm_artifacts.f_valor_interpolado(mto_trxs_tmp, 1, 0, 20000 * 12, 0, 1) +
            0.1 * schm_artifacts.f_valor_interpolado(round(rec_tmp)::numeric, 1, 12, 0, 0, 1)
            , 3
        ) AS indicador_tmp
        , ROUND(
            0.5 * schm_artifacts.f_valor_interpolado(nro_trxs_tar::numeric, 1, 0, 2 * 12, 0, 1) +
            0.3 * schm_artifacts.f_valor_interpolado(frec_tar::numeric, 1, 0, 12, 0, 1) +
            0.1 * schm_artifacts.f_valor_interpolado(mto_trxs_tar, 1, 0, 20000 * 12, 0, 1) +
            0.1 * schm_artifacts.f_valor_interpolado(round(rec_tar)::numeric, 1, 12, 0, 0, 1)
            , 3
        ) AS indicador_tar 
    FROM schm_workspace.venta_tienda
   ;

    CREATE TABLE schm_workspace.venta_tienda_total_tmp AS
    SELECT 
        a.*
        , CASE 
            WHEN b.rut IS NOT NULL THEN 1
            ELSE 0
        END AS suc_pref 
    FROM schm_workspace.venta_tienda_2 AS a 
    LEFT JOIN (
        SELECT 
            rut
            , MAX(indicador_tmp * 10000 + codigo_sucursal) as ind
        FROM schm_workspace.venta_tienda_2
        GROUP BY rut
    ) AS b 
        ON a.rut = b.rut 
        AND a.indicador_tmp * 10000 + a.codigo_sucursal = b.ind
    ORDER BY rut, codigo_sucursal
   ;

    CREATE TABLE schm_workspace.venta_tienda_total_tmp_2 AS
    SELECT 
        rut
        , MAX(codigo_sucursal) as codigo_sucursal
    FROM schm_workspace.venta_tienda_total_tmp
    WHERE suc_pref = 1
    GROUP BY rut
   ;

    CREATE TABLE schm_workspace.venta_tienda_presencial_tmp AS
    SELECT
        a.*
        , CASE 
            WHEN b.rut IS NOT NULL THEN 1
            ELSE 0
        END AS suc_pref 
    FROM schm_workspace.venta_tienda_2 AS a 
    LEFT JOIN (
        SELECT 
            rut
            , MAX(indicador_tmp * 10000 + codigo_sucursal) AS ind 
        FROM schm_workspace.venta_tienda_2
        WHERE codigo_sucursal <> 39
        GROUP BY rut
    ) AS b 
        ON a.rut = b.rut 
        AND a.indicador_tmp * 10000 + a.codigo_sucursal = b.ind
    WHERE a.codigo_sucursal <> 39
    ORDER BY rut, codigo_sucursal
   ;

    CREATE TABLE schm_workspace.venta_tienda_presencial_tmp_2 AS
    SELECT 
        rut
        , MAX(codigo_sucursal) as codigo_sucursal
    FROM schm_workspace.venta_tienda_presencial_tmp
    WHERE suc_pref = 1
    GROUP BY rut
   ;

    CREATE TABLE schm_workspace.venta_tienda_total_tar AS
    SELECT 
        a.*
        , CASE 
            WHEN b.rut IS NOT NULL THEN 1
            ELSE 0
        END AS suc_pref 
    FROM schm_workspace.venta_tienda_2 AS a
    LEFT JOIN (
        SELECT
            rut
            , MAX(indicador_tar * 10000 + codigo_sucursal) AS ind
        FROM schm_workspace.venta_tienda_2
        GROUP BY rut
    ) AS b 
        ON a.rut = b.rut
        AND a.indicador_tar * 10000 + a.codigo_sucursal = b.ind
    ORDER BY rut, codigo_sucursal
   ;

    CREATE TABLE schm_workspace.venta_tienda_total_tar_2 AS
    SELECT 
        rut
        , MAX(codigo_sucursal) AS codigo_sucursal
    FROM schm_workspace.venta_tienda_total_tar
    WHERE suc_pref = 1
    GROUP BY rut
   ;

    CREATE TABLE schm_workspace.venta_tienda_presencial_tar AS
    SELECT 
        a.*
        , CASE
            WHEN b.rut IS NOT NULL THEN 1
            ELSE 0
        END AS suc_pref 
    FROM schm_workspace.venta_tienda_2 AS a 
    LEFT JOIN (
        SELECT
            rut
            , MAX(indicador_tar * 10000 + codigo_sucursal) AS ind 
        FROM schm_workspace.venta_tienda_2
        WHERE codigo_sucursal <> 39
        GROUP BY rut 
    ) AS b 
        ON a.rut = b.rut 
        AND a.indicador_tar * 10000 + a.codigo_sucursal = b.ind
    WHERE a.codigo_sucursal <> 39
    ORDER BY rut, codigo_sucursal
   ;

    CREATE TABLE schm_workspace.venta_tienda_presencial_tar_2 AS
    SELECT 
        rut
        , MAX(codigo_sucursal) AS codigo_sucursal 
    FROM schm_workspace.venta_tienda_presencial_tar 
    WHERE suc_pref = 1
    GROUP BY rut
   ;

    CREATE TABLE schm_workspace.sucursal_pref AS
    SELECT
        a.rut
        , b.codigo_sucursal AS codsuc_totaltmp
        , c.codigo_sucursal AS codsuc_presencialtmp
        , d.codigo_sucursal AS codsuc_totaltar
        , e.codigo_sucursal AS codsuc_presencialtar 
    FROM (
        SELECT
            DISTINCT rut
        FROM schm_workspace.venta_tienda_2
    ) AS a 
    LEFT JOIN schm_workspace.venta_tienda_total_tmp_2 AS b 
        ON a.rut = b.rut 
    LEFT JOIN schm_workspace.venta_tienda_presencial_tmp_2 AS c
        ON a.rut = c.rut 
    LEFT JOIN schm_workspace.venta_tienda_total_tar_2 AS d
        ON a.rut = d.rut 
    LEFT JOIN schm_workspace.venta_tienda_presencial_tar_2 AS e
        ON a.rut = e.rut
       ;

    CREATE TABLE schm_workspace.sucursal_preferente AS
    SELECT
        a.*
        , b.nombre_tienda AS nomsuc_totaltmp
        , b.comuna AS comunasuc_totaltmp
        , b.zona_retail AS zonasuc_totaltmp
        , c.nombre_tienda AS nomsuc_presencialtmp
        , c.comuna AS comunasuc_presencialtmp
        , c.zona_retail AS zonasuc_presencialtmp
        , d.nombre_tienda AS nomsuc_totaltar
        , d.comuna AS comunasuc_totaltar
        , d.zona_retail AS zonasuc_totaltar
        , e.nombre_tienda AS nomsuc_presencialtar
        , e.comuna AS comunasuc_presencialtar
        , e.zona_retail AS zonasuc_presencialtar
    FROM schm_workspace.sucursal_pref AS a
    LEFT JOIN schm_data_analytics.bitr_maestra_sucursales AS b
        ON a.codsuc_totaltmp = b.cod_suc
    LEFT JOIN schm_data_analytics.bitr_maestra_sucursales AS c 
        ON a.codsuc_presencialtmp = c.cod_suc
    LEFT JOIN schm_data_analytics.bitr_maestra_sucursales AS d 
        ON a.codsuc_totaltar = d.cod_suc
    LEFT JOIN schm_data_analytics.bitr_maestra_sucursales AS e 
        ON a.codsuc_presencialtar = e.cod_suc
       ;

    DELETE FROM schm_data_analytics.tnda_sucursal_preferente
    WHERE periodo = to_char(dateadd(month, -1, getdate())::DATE,'yyyymm')::INTEGER;

    INSERT INTO schm_data_analytics.tnda_sucursal_preferente
    SELECT
        rut
        , codsuc_totaltmp
        , codsuc_presencialtmp
        , codsuc_totaltar
        , codsuc_presencialtar
        , nomsuc_totaltmp
        , comunasuc_totaltmp
        , zonasuc_totaltmp
        , nomsuc_presencialtmp
        , comunasuc_presencialtmp
        , zonasuc_presencialtmp
        , nomsuc_totaltar
        , comunasuc_totaltar
        , zonasuc_totaltar
        , nomsuc_presencialtar
        , comunasuc_presencialtar
        , zonasuc_presencialtar
        , to_char(current_timestamp,'dd/mm/yyyy_hh:mi') AS fecha_proceso
        , to_char(dateadd(month, -1, getdate())::DATE,'yyyymm')::INTEGER AS periodo
    FROM schm_workspace.sucursal_preferente
   ;


    DROP TABLE IF EXISTS schm_workspace.venta_tienda;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_2;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_total_tmp;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_total_tmp_2;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_presencial_tmp;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_presencial_tmp_2;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_total_tar;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_total_tar_2;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_presencial_tar;
    DROP TABLE IF EXISTS schm_workspace.venta_tienda_presencial_tar_2;
    DROP TABLE IF EXISTS schm_workspace.sucursal_pref;
    DROP TABLE IF EXISTS schm_workspace.sucursal_preferente;

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_tnda_tda_itf(v_fecha_inicio date, v_fecha_fin date, v_periodo int4)
	LANGUAGE plpgsql
AS $$
	
	
BEGIN


	DROP TABLE IF EXISTS schm_workspace.tnda_itf_mpdt205;
	DROP TABLE IF EXISTS schm_workspace.tnda_itf_cuota;
	DROP TABLE IF EXISTS schm_workspace.tnda_itf_mpdt012;
	DROP TABLE IF EXISTS schm_workspace.tnda_itf_sincuota;
	DROP TABLE IF EXISTS schm_workspace.tnda_itf_nc;
	DROP TABLE IF EXISTS schm_workspace.tnda_itf_sucursal;
	DROP TABLE IF EXISTS schm_workspace.tnda_itf_final;


	CREATE TABLE schm_workspace.tnda_itf_mpdt205 AS
	SELECT 
	     codent
	     ,centalta
	     ,cuenta
	     ,clamon
	     ,fecfac
	     ,pan
	     ,numaut
	     ,numboleta
	     ,siaidcd
	     ,sucursal
	     ,codcom
	     ,nomcomred
	     ,numopecuo
	     ,numfinan
	     ,codact
	     ,linea
	     ,tipfran
	     ,tipofac
	     ,impfac
	     ,entrada
	     ,indnorcor
	FROM br_dm_prod_bigdata_reporitf_db.mpdt205
	WHERE fecfac BETWEEN v_fecha_inicio AND v_fecha_fin
		AND tipofac NOT IN (210, 115, 117) 
	    AND linea IN ('0050', '0053', '0000')
	    AND tipfran NOT IN (9999, 8006, 0)
	    AND codcom = '000000000000001';


	CREATE TABLE schm_workspace.tnda_itf_cuota AS
	select                   
	     pan                
	     ,codent                  
	     ,centalta                
	     ,cuenta                  
	     ,rut                
	     ,CASE 
	          WHEN signo = '-' THEN impfac * (-1) 
	          ELSE impfac 
	     END AS capital                   
	     ,CASE 
	          WHEN signo = '-' THEN entrada * (-1) 
	          ELSE entrada 
	     END AS pie
	     ,totcuotas AS cuotas
	     ,fecfac AS fecha
	     ,numboleta AS dcto
	     ,codcom AS comercio
	     ,sucursal
	     ,caja
	     ,nummescar AS diferido
	     ,CASE 
	          WHEN signo = '-' THEN mgfin * (-1) 
	          ELSE mgfin 
	     END AS mgfin           
	     ,porint AS tasa
	     ,porintcar AS tasa_dif
	     ,dv
	     ,numaut
	     ,siaidcd
	     ,CASE 
	          WHEN signo = '-' THEN 'NOTA CREDITO' 
	          ELSE 'COMPRA' 
	     END AS transaccion
	     ,codmar
	     ,indtipt
	     ,destipt
	     ,tipo_tarjeta
	     ,CASE 
	          WHEN numbencta = 1 THEN 'TI' 
	          ELSE 'BE' 
	     END AS cliente 
	     ,linea
	     ,tipfran AS franquicia
	     ,desfra
	     ,tipofac
	     ,destipfac
	     ,signo
	     ,CASE                     
	          WHEN totcuotas = 0 THEN 'REVOLVING'                    
	          WHEN totcuotas = 1 THEN '1 CUOTA'                 
	          when totcuotas >= 2 THEN '2 O MAS CUOTAS'  
	          ELSE 'SIN INFO' 
	     END AS financiamiento
	     ,valor_cuota             
	     ,imptotal
	     ,CASE 
	          WHEN nummescar > 0 THEN 1 
	          ELSE 0 
	     END AS t_diferido
	FROM (
	SELECT 
	     G.pemid_gls_nro_dct_ide_k AS RUT
	     ,G.pemid_dvr_nro_dct_ide AS DV
	     ,A.codent
	     ,A.centalta
	     ,A.cuenta
	     ,A.fecfac
	     ,A.pan
	     ,A.numaut
	     ,A.numboleta
	     ,A.siaidcd
	     ,SUBSTRING(A.sucursal, 1, 4) AS sucursal
	     ,SUBSTRING(A.sucursal, 5, 4) AS caja
	     ,A.codcom
	     ,A.nomcomred
	     ,A.codact
	     ,E.desact
	     ,F.codmar
	     ,F.indtipt
	     ,J.destipt
	     ,CASE 
	          WHEN F.codmar = 1 AND F.indtipt IN (1,3,9,11) THEN 'TR'
	          WHEN F.codmar = 2 AND F.indtipt IN (1,6,7,10,14) THEN 'TAM'
	          WHEN F.codmar = 2 AND F.indtipt = 8 THEN 'MASTERCARD DEBITO'
	          WHEN F.codmar = 2 AND F.indtipt = 13 THEN 'DEBITO CTACTE'
	          WHEN F.codmar = 2 AND F.indtipt = 12 THEN 'MASTERCARD CHEK'
	          WHEN F.codmar = 4 AND F.indtipt = 1 THEN 'MAESTRO DEBITO' 
	     END AS tipo_tarjeta
	     ,A.linea
	     ,A.tipfran
	     ,I.desfra
	     ,A.tipofac
	     ,H.destipfac
	     ,H.indnorcor
	     ,H.signo
	     ,A.impfac
	     ,A.entrada
	     ,C.totcuotas
	     ,C.impcuota AS valor_cuota
	     ,C.impinttotal AS mgfin
	     ,C.imptotal
	     ,C.porint
	     ,C.porintcar
	     ,C.nummescar
	     ,X.modentdat
	     ,X.idterm
	     ,F.numbencta
	     ,SUM(COALESCE((D.impbrueco - D.impboneco),0)) AS comision
	FROM schm_workspace.tnda_itf_mpdt205 A 
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt004 X 
	     ON A.siaidcd = X.siaidcd
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 B 
	     ON (A.codent = B.codent 
	          AND A.centalta = B.centalta 
	          AND A.cuenta = B.cuenta)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt206 C 
	     ON (A.codent = C.codent 
	          AND A.centalta = C.centalta 
	          AND A.cuenta = C.cuenta 
	          AND A.clamon = C.clamon 
	          AND A.numopecuo = C.numopecuo
	          AND A.numfinan = C.numfinan)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt208 D 
	     ON (A.codent = D.codent 
	          AND A.centalta = D.centalta 
	          AND A.cuenta = D.cuenta 
	          AND A.clamon = D.clamon 
	          AND A.numopecuo = D.numopecuo 
	          AND A.numfinan = D.numfinan)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt039 E 
	     ON (A.codent = E.codent 
	          AND A.codact = E.codact)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt009 F 
	     ON (A.codent = F.codent 
	          AND A.centalta = F.centalta 
	          AND A.cuenta = F.cuenta 
	          AND A.pan = F.pan)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide G 
	     ON G.pemid_nro_inn_ide = CAST(B.identcli AS BIGINT)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt044 H 
	     ON (A.codent = H.codent 
	          AND A.tipofac = H.tipofac 
	          AND A.indnorcor = H.indnorcor 
	          AND H.indfacinf = 'N')
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt131 I 
	     ON (A.tipfran = I.tipfran 
	          AND I.codidioma = '1')  
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt026 J 
	     ON (J.codent = F.codent 
	          AND J.codmar = F.codmar 
	          AND J.indtipt = F.indtipt)  
	GROUP BY 
	     G.pemid_gls_nro_dct_ide_k
	     ,G.pemid_dvr_nro_dct_ide
	     ,A.codent
	     ,A.centalta
	     ,A.cuenta
	     ,A.fecfac
	     ,A.pan
	     ,A.numaut
	     ,A.numboleta
	     ,A.siaidcd
	     ,A.sucursal
	     ,A.codcom
	     ,A.nomcomred
	     ,A.codact
	     ,E.desact
	     ,F.codmar
	     ,F.indtipt
	     ,J.destipt
	     ,CASE 
	          WHEN F.codmar = 1 AND F.indtipt IN (1, 3, 9, 11) THEN 'TR'
	          WHEN F.codmar = 2 AND F.indtipt IN (1, 6, 7, 10, 14) THEN 'TAM'
	          WHEN F.codmar = 2 AND F.indtipt = 8 THEN 'MASTERCARD DEBITO'
	          WHEN F.codmar = 2 AND F.indtipt = 13 THEN 'DEBITO CTACTE'
	          WHEN F.codmar = 2 AND F.indtipt = 12 THEN 'MASTERCARD CHEK'
	          WHEN F.codmar = 4 AND F.indtipt = 1 THEN 'MAESTRO DEBITO' 
	     END              
	     ,A.linea
	     ,A.tipfran
	     ,I.desfra
	     ,A.tipofac
	     ,H.destipfac
	     ,H.indnorcor
	     ,H.signo
	     ,A.impfac
	     ,A.entrada
	     ,C.totcuotas
	     ,C.impcuota
	     ,C.impinttotal
	     ,C.imptotal
	     ,C.porint
	     ,C.porintcar
	     ,C.nummescar
	     ,X.modentdat
	     ,X.idterm
	     ,F.numbencta);
	     

	CREATE TABLE schm_workspace.tnda_itf_mpdt012 AS
	SELECT 
		 clamon
		,codent
		,centalta
		,cuenta
		,fecfac
		,pan
		,numaut
		,numcuota
		,numextcta
		,nummovext
		,numboleta
		,siaidcd
		,sucursal
		,codcom
		,nomcomred
		,codact
		,totcuotas
		,linea
		,tipfran
		,tipofac
		,impfac
		,entrada
		,indnorcor
		,indmovanu
	FROM br_dm_prod_bigdata_reporitf_db.mpdt012
	WHERE fecfac BETWEEN v_fecha_inicio AND v_fecha_fin
		AND tipofac NOT IN (210,115,117)
		AND linea IN ('0050', '0053', '0000')
		AND indnorcor = 0
		AND codcom = '000000000000001';


	CREATE TABLE schm_workspace.tnda_itf_sincuota AS
	SELECT 
		pan
		,codent
		,centalta
		,cuenta
		,rut
		,CASE
			WHEN signo = '-' THEN impfac * (-1) 
			ELSE impfac 
		END AS capital
		,CASE 
			WHEN signo = '-' THEN entrada * (-1) 
			ELSE entrada 
		END AS pie
		,totcuotas AS cuotas
		,fecfac AS fecha
		,numboleta AS dcto
		,codcom AS comercio
		,sucursal AS sucursal
		,caja AS caja
		,0 AS diferido
		,0 AS mgfin
		,0 AS tasa
		,0 AS tasa_dif
		,dv
		,numaut
		,siaidcd
		,CASE 
			WHEN signo = '-' THEN 'NOTA CREDITO' 
			ELSE 'COMPRA' 
		END AS transaccion
		,codmar
		,indtipt
		,destipt
		,tipo_tarjeta
		,CASE 
			WHEN numbencta = 1 THEN 'TI' 
			ELSE 'BE' 
		END AS cliente
		,linea
		,tipfran AS franquicia
		,desfra
		,tipofac
		,destipfac
		,signo
		,CASE
			WHEN totcuotas = 0 THEN 'REVOLVING'
			WHEN totcuotas = 1 THEN '1 CUOTA' /* WHEN totcuotas > 0 AND totcuotas < 2 THEN '1 CUOTA' */
			WHEN totcuotas >= 2 THEN '2 O MAS CUOTAS' /* WHEN totcuotas > 2 THEN '2 O MAS CUOTAS' */
			ELSE 'SIN INFO'
		END AS financiamiento
		,CASE
			WHEN signo = '-' THEN impfac * (-1)
			ELSE impfac
		END AS valor_cuota
		,CASE
			WHEN signo = '-' THEN impfac * (-1)	
			ELSE impfac
		END AS imptotal
		,0 AS t_diferido
	FROM (
	SELECT 
		G.pemid_gls_nro_dct_ide_k AS rut
		,G.pemid_dvr_nro_dct_ide AS dv
		,A.codent
		,A.centalta
		,A.cuenta
		,A.fecfac
		,A.pan
		,A.numaut
		,A.numboleta
		,A.siaidcd
		,SUBSTRING(A.sucursal,1,4) as sucursal
		,SUBSTRING(A.sucursal,5,4) as caja
		,A.codcom
		,A.nomcomred
		,A.codact
		,A.totcuotas
		,D.desact
		,F.codmar
		,F.indtipt
		,J.destipt
		,CASE 
			WHEN F.codmar = 1 AND F.indtipt IN (1, 3, 9, 11) THEN 'TR'
			WHEN F.codmar = 2 AND F.indtipt IN (1, 6, 7, 10, 14) THEN 'TAM'
			WHEN F.codmar = 2 AND F.indtipt = 8 THEN 'MASTERCARD DEBITO'
			WHEN F.codmar = 2 AND F.indtipt = 13 THEN 'DEBITO CTACTE'
			WHEN F.codmar = 2 AND F.indtipt = 12 THEN 'MASTERCARD CHEK'
			WHEN F.codmar = 4 AND F.indtipt = 1 THEN 'MAESTRO DEBITO' 
		END AS tipo_tarjeta
		,A.linea
		,A.tipfran
		,I.desfra
		,A.tipofac
		,E.destipfac
		,E.indnorcor
		,E.signo
		,A.impfac
		,A.entrada
		,X.modentdat
		,X.idterm
		,F.numbencta
		,coalesce((C.impbrueco - C.impboneco),0) AS comision
	FROM schm_workspace.tnda_itf_mpdt012 A
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt004 X 
		ON A.siaidcd = X.siaidcd
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 B 
		ON (A.codent = B.codent 
			AND A.centalta = B.centalta 
			AND A.cuenta = B.cuenta)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt039 D 
		ON (A.codent = D.codent 
			AND A.codact  = D.codact)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt009 F 
		ON (A.codent = F.codent 
			AND A.centalta = F.centalta 
			AND A.cuenta = F.cuenta 
			AND A.pan = F.pan)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide G 
		ON G.pemid_nro_inn_ide = CAST(B.identcli AS BIGINT)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt044 E 
		ON (A.tipofac = E.tipofac 
			AND A.indnorcor = E.indnorcor 
			AND E.indfacinf = 'N')
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt151 C 
		ON (A.codent = C.codent 
			AND A.centalta = C.centalta 
			AND A.cuenta = C.cuenta 
			AND A.clamon = C.clamon 
			AND A.numextcta = C.numextcta 
			AND A.nummovext = C.nummovext 
			AND C.tipimp = 2 
			AND C.codconeco = 200) 
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt131 I 
		ON (A.tipfran = I.tipfran 
			AND I.codidioma = '1')  
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt026 J 
		ON (J.codent = F.codent 
			AND J.codmar = F.codmar 
			AND J.indtipt = F.indtipt )  
	WHERE A.tipfran NOT IN (9999, 8006, 0)
		AND A.numcuota = 0
		AND E.tipofacsist = 2);


	CREATE TABLE schm_workspace.tnda_itf_nc AS
	select 
		pan
		,codent
		,centalta
		,cuenta
		,rut
		,CASE 
			WHEN signo = '-' THEN impfac * (-1)
			ELSE impfac
		END AS capital
		,CASE
			WHEN signo = '-' THEN entrada * (-1)
			ELSE entrada
		END AS pie
		,COALESCE(totcuotas,0) AS cuotas
		,fecfac AS fecha
		,numboleta AS dcto
		,codcom AS comercio
		,sucursal AS sucursal
		,caja AS caja
		,0 AS diferido
		,0 AS mgfin
		,0 AS tasa
		,0 AS tasa_dif
		,dv
		,numaut
		,siaidcd
		,CASE 
			WHEN signo = '-' THEN 'NOTA CREDITO' 
			ELSE 'COMPRA' 
		END AS transaccion
		,codmar
		,indtipt
		,destipt
		,tipo_tarjeta
		,CASE 
			WHEN numbencta = 1 THEN 'TI' 
			ELSE 'BE' 
		END AS cliente
		,linea
		,tipfran AS franquicia
		,desfra
		,tipofac
		,destipfac
		,signo
		,CASE
			WHEN totcuotas = 0 THEN 'REVOLVING'
			WHEN totcuotas = 1 THEN '1 CUOTA'
			when totcuotas >= 2 THEN '2 O MAS CUOTAS'
			ELSE 'SIN INFO'
		END AS financiamiento
		,CASE
			WHEN signo = '-' THEN impfac * (-1)
			ELSE impfac
		END AS valor_cuota
		,CASE
			WHEN signo = '-' THEN impfac * (-1)
			ELSE impfac
		END AS imptotal
		,0 AS t_diferido
	FROM (
	SELECT 
		G.pemid_gls_nro_dct_ide_k AS rut
		,G.pemid_dvr_nro_dct_ide AS dv
		,A.codent
		,A.centalta
		,A.cuenta
		,A.fecfac
		,A.pan
		,A.numaut
		,A.numboleta
		,A.siaidcd
		,SUBSTRING(A.sucursal,1,4) AS sucursal
		,SUBSTRING(A.sucursal,5,4) AS caja
		,A.codcom
		,A.nomcomred
		,A.codact
		,D.desact
		,F.codmar
		,F.indtipt
		,J.destipt
		,CASE 
			WHEN F.codmar = 1 AND F.indtipt IN (1, 3, 9, 11) THEN 'TR'
			WHEN F.codmar = 2 AND F.indtipt	IN (1, 6, 7, 10, 14) THEN 'TAM'
			WHEN F.codmar = 2 AND F.indtipt	= 8 THEN 'MASTERCARD DEBITO'
			WHEN F.codmar = 2 AND F.indtipt	= 13 THEN 'DEBITO CTACTE'
			WHEN F.codmar = 2 AND F.indtipt	= 12 THEN 'MASTERCARD CHEK'
			WHEN F.codmar = 4 AND F.indtipt	= 1 THEN 'MAESTRO DEBITO' 
		END AS tipo_tarjeta
		,A.linea
		,A.tipfran
		,I.desfra
		,A.tipofac
		,E.destipfac
		,E.indnorcor
		,E.signo
		,A.impfac
		,A.entrada
		,X.modentdat
		,X.idterm
		,A.totcuotas
		,F.numbencta
		,COALESCE((C.impbrueco - C.impboneco),0) AS comision
	FROM schm_workspace.tnda_itf_mpdt012 A
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt004 X 
		ON A.siaidcd = X.siaidcd
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt007 B 
		ON (A.codent = B.codent 
			AND A.centalta = B.centalta 
			AND A.cuenta = B.cuenta)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt039 D 
		ON (A.codent = D.codent 
			AND A.codact = D.codact)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt009 F 
		ON (A.codent = F.codent 
			AND A.centalta = F.centalta 
			AND A.cuenta = F.cuenta 
			AND A.pan = F.pan)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.bopers_mae_ide G 
		ON G.pemid_nro_inn_ide = CAST(B.identcli AS BIGINT)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt044 E 
		ON (A.tipofac = E.tipofac 
			AND A.indnorcor = E.indnorcor )
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt131 I 
		ON (A.tipfran = I.tipfran 
			AND I.codidioma = '1')  
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt151 C 
		ON (A.codent = C.codent 
			AND A.centalta = C.centalta 
			AND A.cuenta = C.cuenta 
			AND A.clamon = C.clamon 
			AND A.numextcta = C.numextcta 
			AND A.nummovext = C.nummovext 
			AND C.tipimp = 2 
			AND C.codconeco = 200)
	LEFT JOIN br_dm_prod_bigdata_reporitf_db.mpdt026 J 
		ON (J.codent = F.codent 
			AND J.codmar = F.codmar 
			AND J.indtipt = F.indtipt)  
	WHERE ((E.tipofacsist = 1500 AND A.indmovanu = 0) 
		OR (a.tipofac = 1515 AND A.indmovanu = 2)));
		

	CREATE TABLE schm_workspace.tnda_itf_sucursal AS
	SELECT 
		DISTINCT 
		C.camp_dat_valor1 AS codigo
		,C.camp_dat_texto1 AS sucursal
	FROM br_dm_prod_bigdata_camreport_db.cbcamp_par_tablas A
	INNER JOIN br_dm_prod_bigdata_camreport_db.cbcamp_par_columnas B 
		ON A.camp_cod_tabla = B.camp_cod_tabla_k
	INNER JOIN br_dm_prod_bigdata_camreport_db.cbcamp_par_datos C 
		ON A.camp_cod_tabla = C.camp_cod_tabla_k
	WHERE camp_cod_tabla = 2
	ORDER BY codigo asc;


	CREATE TABLE schm_workspace.tnda_itf_final AS
	SELECT 
		CAST(TO_CHAR(getdate(),'YYYYMMDD') as INT)
		,D.pan
		,D.codent
		,D.centalta
		,D.cuenta
		,D.rut
		,D.capital
		,D.pie
		,D.cuotas
		,D.fecha
		,CASE
			WHEN regexp_replace(D.dcto,'([^0-9])','') SIMILAR TO '[0-9]+(.[0-9][0-9])?' then regexp_replace(D.dcto,'([^0-9])','')::BIGINT
			ELSE NULL
		END AS dcto
		,CASE
			WHEN regexp_replace(D.comercio,'([^0-9])','') SIMILAR TO '[0-9]+(.[0-9][0-9])?' then regexp_replace(D.comercio,'([^0-9])','')::INTEGER
			ELSE NULL
		END AS comercio
		,CASE
			WHEN regexp_replace(D.sucursal,'([^0-9])','') SIMILAR TO '[0-9]+(.[0-9][0-9])?' then regexp_replace(D.sucursal,'([^0-9])','')::INTEGER
			ELSE NULL
		END AS sucursal
		,CASE
			WHEN regexp_replace(D.caja,'([^0-9])','') SIMILAR TO '[0-9]+(.[0-9][0-9])?' then regexp_replace(D.caja,'([^0-9])','')::INTEGER
			ELSE NULL
		END AS caja
		,D.diferido
		,D.mgfin
		,D.tasa
		,D.tasa_dif
		,D.dv
		,CASE 
		WHEN D.sucursal IS NOT NULL THEN ((CASE WHEN regexp_replace(D.sucursal,'([^0-9])','') SIMILAR TO '[0-9]+(.[0-9][0-9])?' then regexp_replace(D.sucursal,'([^0-9])','')::INTEGER ELSE NULL END)||'.-'||E.sucursal) 
			ELSE 'SIN INFORMACION' 
		END AS nombre_suc
		,CASE 
		WHEN (CASE WHEN regexp_replace(D.sucursal,'([^0-9])','') SIMILAR TO '[0-9]+(.[0-9][0-9])?' then regexp_replace(D.sucursal,'([^0-9])','')::INTEGER ELSE NULL END) = 39 THEN 'NO PRESENCIAL'
			ELSE 'PRESENCIAL' 
		END AS presencial
		,D.numaut
		,D.siaidcd
		,D.transaccion
		,D.codmar
		,D.indtipt
		,D.destipt AS tipo_tarjeta_rsat
		,D.tipo_tarjeta
		,D.cliente
		,D.linea
		,D.franquicia
		,D.desfra
		,D.tipofac
		,D.destipfac
		,D.signo
		,D.financiamiento
		,D.valor_cuota
		,D.imptotal
		,D.t_diferido
		,v_periodo AS periodo
	FROM(
		select B.* from schm_workspace.tnda_itf_sincuota B
		union all
		select C.* from schm_workspace.tnda_itf_nc C
		union all
		select A.* from schm_workspace.tnda_itf_cuota A
	) D 
	LEFT JOIN schm_workspace.tnda_itf_sucursal E 
		ON (CASE WHEN regexp_replace(D.sucursal,'([^0-9])','') SIMILAR TO '[0-9]+(.[0-9][0-9])?' then regexp_replace(D.sucursal,'([^0-9])','')::INTEGER ELSE NULL END) = E.codigo;


	DELETE FROM schm_data_analytics.tnda_tda_itf
	WHERE periodo = v_periodo;


	INSERT INTO schm_data_analytics.tnda_tda_itf
	SELECT * FROM schm_workspace.tnda_itf_final;


	DROP TABLE IF EXISTS schm_workspace.tnda_itf_mpdt205;
	DROP TABLE IF EXISTS schm_workspace.tnda_itf_cuota;
	DROP TABLE IF EXISTS schm_workspace.tnda_itf_mpdt012;
	DROP TABLE IF EXISTS schm_workspace.tnda_itf_sincuota;
	DROP TABLE IF EXISTS schm_workspace.tnda_itf_nc;
	DROP TABLE IF EXISTS schm_workspace.tnda_itf_sucursal;
	DROP TABLE IF EXISTS schm_workspace.tnda_itf_final;

	/*  ===========================================================================================================
	    === Control de versiones visual ===
	    2023-12-05 -- v02 -- David Vásquez	-- Actualización para campo sucursal: 
	    								-- Se quitan 00 al inicio para conservar nomenclatura desde tablas con periodos originales
	    								-- Mejora en cruce para diferenciar campo presencial de no presencial vs la sucursal.
	    2023-01-24 -- v01 -- Julio Nina 	-- Versión original refactorizada en AWS.

	    === Información adicional:
	    Proceso que genera y permite presentar toda la venta con tarjeta de credito realizadas en la tienda, 
	    permite obtener el plazo de compra, la tasa, si se realizo con pie o no y si fue una compra presencial o no presencial
	    ===========================================================================================================
	*/

END


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.sp_unload_baja_cupo(v_nombre_archivo varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	

BEGIN


	EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/clts/baja_cupo/' || v_nombre_archivo || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off HEADER ALLOWOVERWRITE extension ''csv'' DELIMITER '','';';
	RETURN;

END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.spos_cargos_pat_resp(indice int4)
	LANGUAGE plpgsql
AS $$
	


begin

    DROP TABLE schm_facturacion.iplaza_cargos_pat2;
    DROP TABLE schm_workspace.spos_periodos;
    DROP TABLE schm_facturacion.iplaza_cargos_pat_final;

    CREATE TABLE schm_workspace.spos_periodos(nombre varchar(64), value int );

    INSERT INTO schm_workspace.spos_periodos (nombre,value)
    VALUES('periodo',date_part(year,DATEADD(month,-indice, current_date))*100+date_part(month,DATEADD(month,-indice, current_date)));



-- falta esperar a que carguen bien la spos_aut, para descomentar filas comentadas

--####################################################################################################
--Me traigo todos los cargos PAT
--####################################################################################################

    CREATE TABLE schm_facturacion.IPLAZA_CARGOS_PAT2 AS
        SELECT
            Fecha,
            Periodo,
            codigo_COMERCIO_MPDT,
            codigo_comercio,
            Nombre_Comercio,
            Actividad_Comercio,
            RUT,
            VENTA_TARJETA,
            COD_PAIS,
            TOT_CUOTAS,
            PAN,
            CODACT,
            POR_INT,
            CODENT,
            CENTALTA,
            CUENTA,
            Tipo_Tarjeta,
            PAN_2,
            CONTRATO_PAN,
            si_digital,
            Ind_PAN,
            FINANCIAMIENTO,
            TASA,
            PRESENCIAL,
            FRANQUICIA,
            TIPO_FAC,
            COD_RESPU,
            TGDTG_GLS_COO_UNO,
            TGDTG_GLS_LAR_UNO,
            TGDTG_FCH_ACL_REG,
            TGMDO_GLS_DOM,
            (rut || ' ' || (TO_CHAR(FECHA, 'YYYYMMDD')::INTEGER) || ' ' || VENTA_TARJETA) as llave
            FROM schm_data_analytics.spos_aut
            WHERE PRESENCIAL = 'PAT' and periodo=(select value from schm_workspace.spos_periodos where nombre='periodo')
            order by llave ;

--####################################################################################################
--Filtro IMPTRN>50
--####################################################################################################

    CREATE TABLE schm_facturacion.IPLAZA_CARGOS_PAT_FINAL AS
        SELECT
            RUT,
            PERIODO,
            FECHA as FECTRN,
            PAN,
            Tipo_Tarjeta as TIPO_TR,
            VENTA_TARJETA as IMPTRN,
            codigo_comercio as COD_COM,
            CODACT,
            CODENT,
            CUENTA,
            CENTALTA,
            TGDTG_GLS_COO_UNO,
            TGDTG_GLS_LAR_UNO,
            TGDTG_FCH_ACL_REG,
            TGMDO_GLS_DOM
    FROM schm_facturacion.IPLAZA_CARGOS_PAT2
    WHERE IMPTRN>50;



--#########################################################
--creación tabla
--#########################################################

    CREATE TABLE IF NOT EXISTS schm_facturacion.IPLAZA_CARGOS_PAT(
        RUT int4,
        PERIODO int,
        FECTRN date,
        PAN varchar(16383),
        TIPO_TR varchar(16383),
        IMPTRN int,
        COD_COM int,
        CODACT int,
        CODENT varchar(16383),
        CUENTA varchar(16383),
        CENTALTA varchar(16383),
        TGDTG_GLS_COO_UNO int8,
        TGDTG_GLS_LAR_UNO varchar(16383),
        TGDTG_FCH_ACL_REG DATE,
        TGMDO_GLS_DOM varchar(16383)
    );


--#########################################################
--borrado del periodo
--#########################################################

    DELETE FROM schm_facturacion.IPLAZA_CARGOS_PAT
    WHERE periodo=(SELECT value FROM schm_workspace.spos_periodos WHERE nombre='periodo')
    ;

--#########################################################
--insertar periodo
--#########################################################

    INSERT INTO schm_facturacion.IPLAZA_CARGOS_PAT
    SELECT
    *
    FROM schm_facturacion.IPLAZA_CARGOS_PAT_FINAL;


--#########################################################
--borrado de tablas
--#########################################################

    DROP TABLE schm_facturacion.IPLAZA_CARGOS_PAT2;
    DROP TABLE schm_workspace.spos_periodos;
    DROP TABLE schm_facturacion.IPLAZA_CARGOS_PAT_FINAL;
    END;


$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.spos_foto_resumen(periodo_paso int4)
	LANGUAGE plpgsql
AS $$
	

DECLARE 
	contador INTEGER;

BEGIN 
	
	DROP TABLE IF EXISTS schm_workspace.SPOS_TC;
	DROP TABLE IF EXISTS schm_workspace.spos_TC_CHEK;
	DROP TABLE IF EXISTS schm_workspace.SPOS_TD;
	DROP TABLE IF EXISTS schm_workspace.SPOS_TD_chek;
	DROP TABLE IF EXISTS schm_workspace.TNDA_tc;
	DROP TABLE IF EXISTS schm_workspace.TNDA_tc_CHEK;
	DROP TABLE IF EXISTS schm_workspace.TNDA_TD;
	DROP TABLE IF EXISTS schm_workspace.TNDA_TD_chek;
	DROP TABLE IF EXISTS schm_workspace.dimension_mes_FOTO_SPOS;

	CREATE TABLE IF NOT EXISTS schm_workspace.SPOS_TC
	(dia int,
	periodo int,
	monto_total  numeric(34,8),
	Trx  numeric(34,8),
	trx_prom_por_cliente numeric(34,8),
	ticket_prom  numeric(34,8),
	clientes_unicos numeric(34,8),
	clientes_unico_5_trx numeric(34,8),
	gasto_prom numeric(34,8),
	tasa_total numeric(34,8),
	plazo_total numeric(34,8),
	vta_coutas numeric(34,8),
	porcentaje_vta_coutas numeric(34,8),
	tasa_vta_coutas numeric(34,8),
	plazo_vta_coutas numeric(34,8),
	vta_fin numeric(34,8),
	porcentaje_vta_fin numeric(34,8),
	tasa_vta_fin numeric(34,8),
	plazo_vta_fin numeric(34,8),
	MG_FIN numeric(34,8),
	vta_NO_fin numeric(34,8),
	porcentaje_vta_NO_fin numeric(34,8),
	tasa_vta_NO_fin numeric(34,8),
	plazo_vta_NO_fin numeric(34,8),
	MG_NO_FIN numeric(34,8)
	);


	CREATE TABLE IF NOT EXISTS schm_workspace.spos_TC_CHEK
	(dia int,
	periodo int,
	monto_total  numeric(34,8),
	Trx  numeric(34,8),
	trx_prom_por_cliente numeric(34,8),
	ticket_prom  numeric(34,8),
	clientes_unicos numeric(34,8),
	clientes_unico_5_trx numeric(34,8),
	gasto_prom numeric(34,8),
	tasa_total numeric(34,8),
	plazo_total numeric(34,8),
	vta_coutas numeric(34,8),
	porcentaje_vta_coutas numeric(34,8),
	tasa_vta_coutas numeric(34,8),
	plazo_vta_coutas numeric(34,8),
	vta_fin numeric(34,8),
	porcentaje_vta_fin numeric(34,8),
	tasa_vta_fin numeric(34,8),
	plazo_vta_fin numeric(34,8),
	MG_FIN numeric(34,8),
	vta_NO_fin numeric(34,8),
	porcentaje_vta_NO_fin numeric(34,8),
	tasa_vta_NO_fin numeric(34,8),
	plazo_vta_NO_fin numeric(34,8),
	MG_NO_FIN numeric(34,8)
	);

	CREATE TABLE IF NOT EXISTS  schm_workspace.SPOS_TD
	(dia int,
	periodo int, 
	monto_total numeric(34,8),
	Trx numeric(34,8),
	trx_prom_por_cliente numeric(34,8),
	ticket_prom numeric(34,8),
	clientes_unicos numeric(34,8),
	clientes_unico_5_trx numeric(34,8),
	gasto_prom numeric(34,8)
	);

	CREATE TABLE IF NOT EXISTS  schm_workspace.SPOS_TD_chek
	(dia int,
	periodo int, 
	monto_total numeric(34,8),
	Trx numeric(34,8),
	trx_prom_por_cliente numeric(34,8),
	ticket_prom numeric(34,8),
	clientes_unicos numeric(34,8),
	clientes_unico_5_trx numeric(34,8),
	gasto_prom numeric(34,8)
	);


	CREATE TABLE IF NOT EXISTS schm_workspace.TNDA_tc
	(dia int,
	periodo int,
	monto_pie numeric(34,8),
	monto_total  numeric(34,8),
	Trx  numeric(34,8),
	trx_prom_por_cliente numeric(34,8),
	ticket_prom  numeric(34,8),
	clientes_unicos numeric(34,8),
	clientes_unico_5_trx numeric(34,8),
	gasto_prom numeric(34,8),
	tasa_total numeric(34,8),
	plazo_total numeric(34,8),
	vta_coutas numeric(34,8),
	porcentaje_vta_coutas numeric(34,8),
	tasa_vta_coutas numeric(34,8),
	plazo_vta_coutas numeric(34,8),
	vta_fin numeric(34,8),
	porcentaje_vta_fin numeric(34,8),
	tasa_vta_fin numeric(34,8),
	plazo_vta_fin numeric(34,8),
	MG_FIN numeric(34,8),
	vta_NO_fin numeric(34,8),
	porcentaje_vta_NO_fin numeric(34,8),
	tasa_vta_NO_fin numeric(34,8),
	plazo_vta_NO_fin numeric(34,8),
	MG_NO_FIN numeric(34,8)
	)
	;



	CREATE TABLE IF NOT EXISTS schm_workspace.TNDA_tC_CHEK
	(dia int,
	periodo int,
	monto_pie numeric(34,8),
	monto_total  numeric(34,8),
	Trx  numeric(34,8),
	trx_prom_por_cliente numeric(34,8),
	ticket_prom  numeric(34,8),
	clientes_unicos numeric(34,8),
	clientes_unico_5_trx numeric(34,8),
	gasto_prom numeric(34,8),
	tasa_total numeric(34,8),
	plazo_total numeric(34,8),
	vta_coutas numeric(34,8),
	porcentaje_vta_coutas numeric(34,8),
	tasa_vta_coutas numeric(34,8),
	plazo_vta_coutas numeric(34,8),
	vta_fin numeric(34,8),
	porcentaje_vta_fin numeric(34,8),
	tasa_vta_fin numeric(34,8),
	plazo_vta_fin numeric(34,8),
	MG_FIN numeric(34,8),
	vta_NO_fin numeric(34,8),
	porcentaje_vta_NO_fin numeric(34,8),
	tasa_vta_NO_fin numeric(34,8),
	plazo_vta_NO_fin numeric(34,8),
	MG_NO_FIN numeric(34,8)
	)
	;

	CREATE TABLE IF NOT EXISTS  schm_workspace.TNDA_TD
	(dia int,
	periodo int, 
	monto_total numeric(34,8),
	Trx numeric(34,8),
	trx_prom_por_cliente numeric(34,8),
	ticket_prom numeric(34,8),
	clientes_unicos numeric(34,8),
	clientes_unico_5_trx numeric(34,8),
	gasto_prom numeric(34,8)
	);

	CREATE TABLE IF NOT EXISTS  schm_workspace.TNDA_TD_chek
	(dia int,
	periodo int, 
	monto_total numeric(34,8),
	Trx numeric(34,8),
	trx_prom_por_cliente numeric(34,8),
	ticket_prom numeric(34,8),
	clientes_unicos numeric(34,8),
	clientes_unico_5_trx numeric(34,8),
	gasto_prom numeric(34,8)
	);




	CREATE TABLE schm_workspace.dimension_mes_FOTO_SPOS AS 
	SELECT 
	full_date AS fecha, 
	month_day_number AS dia

	FROM schm_planificacion_comercial.dim_dates
	WHERE year_number*100+month_number=periodo_paso
	;

	--------------------------------------
	---- borrado tablas de paso spos_TC
	--------------------------------------

	DROP TABLE IF EXISTS schm_workspace.paso1_TC_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso2_TC_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso3_TC_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso4_TC_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso5_TC_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso6_TC_SPOS;

	--------------------------------------
	---- calculos de kpi para spos credito
	--------------------------------------

	CREATE TABLE schm_workspace.paso1_TC_SPOS AS 
	SELECT 
	'SPOS' AS tipo,
	rut,
	fecha,
	venta_tarjeta AS monto
	from schm_data_analytics.spos_aut
	WHERE periodo = periodo_paso  AND centalta<>'0105'
	UNION ALL 
	select 'SEG' AS tipo,
	rut,
	FECPROCES AS fecha,
	MONTO_RECAUDADO as monto
	from schm_data_analytics.spos_trx_seguros
	WHERE periodo = periodo_paso 
	and CODCONREC not in ('S201','S083','S170')
	and TIPO_SEGURO<>'SEGUROS TARJETA'
	and (rut<>17519002 and monto_recaudado<>476454338)
	;

	CREATE TABLE schm_workspace.paso2_TC_SPOS AS 
	SELECT 
	a.fecha,
	a.dia,
	b.fecha AS fecha_trx,
	b.tipo,
	b.rut,
	b.monto
	FROM  schm_workspace.dimension_mes_FOTO_SPOS AS a 
	LEFT JOIN schm_workspace.paso1_TC_SPOS AS b
	on(b.fecha<=a.fecha)
	;
		
		
	CREATE TABLE schm_workspace.paso3_TC_SPOS AS
	SELECT
	dia,
	rut,
	count(case when monto>0 then rut end)-count(case when monto<0 then rut end) as trx,
	sum(CASE WHEN tipo='SPOS' THEN monto ELSE 0 end) as monto_spos,
	sum(CASE WHEN tipo<>'SPOS' THEN monto ELSE 0 end) as monto_seg,
	CASE WHEN sum(CASE WHEN tipo='SPOS' THEN monto ELSE 0 end)>0 OR 
	sum(CASE WHEN tipo<>'SPOS' THEN monto ELSE 0 end)>0 THEN 1 ELSE 0 END AS uso_spos,
	sum(monto) as monto
	FROM schm_workspace.paso2_TC_SPOS
	GROUP BY dia,
	rut
	;	


	CREATE TABLE schm_workspace.paso4_TC_SPOS AS 
		SELECT
		dia
		,count(case when trx>=5 and monto>0 then rut end) as clientes_unico_5_trx
		,count(distinct case when uso_spos=1 then rut end) as clientes_unicos
		from schm_workspace.paso3_TC_SPOS
		GROUP BY dia
		;

	CREATE TABLE schm_workspace.paso5_TC_SPOS AS 
	SELECT 
		fecha,
		'SPOS' as tipo,
		rut,
		fecha,
		venta_tarjeta,
		totcuotas,
		PORINT,
		mg_fin
		FROM schm_data_analytics.spos_aut
		WHERE periodo = periodo_paso AND centalta<>'0105'
		union all
		select 
		FECPROCES AS fecha,
		'SEGUROS' as tipo,rut,
		FECPROCES as fecha,
		MONTO_RECAUDADO as venta_tarjeta,
		0 as totcuotas,
		0 as PORINT,
		0 AS mg_fin
		from schm_data_analytics.spos_trx_seguros
		WHERE periodo = periodo_paso
		and CODCONREC not in ('S201','S083','S170')
		and TIPO_SEGURO<>'SEGUROS TARJETA'
		and (rut<>17519002 and monto_recaudado<>476454338)
	;



	CREATE TABLE schm_workspace.paso6_TC_SPOS AS 
	SELECT 
	a.fecha,
	a.dia,
	b.fecha AS fecha_trx,
	b.tipo,
	b.rut,
	b.venta_tarjeta,
	b.totcuotas,
	b.PORINT,
	b.mg_fin
	FROM  schm_workspace.dimension_mes_FOTO_SPOS AS a 
	LEFT JOIN schm_workspace.paso5_TC_SPOS AS b
	on(b.fecha<=a.fecha)
	;

	INSERT INTO schm_workspace.SPOS_TC 
	SELECT
	a.dia,
	periodo_paso as periodo,
	sum(venta_tarjeta)::numeric(34,8) as monto_total,
	(count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) ) as Trx,
	CASE WHEN count(distinct rut)<>0 THEN 
	(count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) )/
	count(distinct rut)::numeric(34,8) ELSE 0 END  as trx_prom_por_cliente,
	CASE WHEN (count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) )<>0 THEN 
	sum(venta_tarjeta)::numeric(34,8) /(count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) ) 
	ELSE 0 END as ticket_prom,
	b.clientes_unicos::numeric(34,8) ,
	b.clientes_unico_5_trx::numeric(34,8) ,
	CASE WHEN count(distinct rut)<>0 THEN sum(venta_tarjeta)::numeric(34,8) /count(distinct rut)::numeric(34,8) ELSE 0 END    as gasto_prom,
	CASE WHEN sum(venta_tarjeta)<>0 THEN sum(venta_tarjeta*PORINT)::numeric(34,8)/sum(venta_tarjeta) ELSE 0 END  AS tasa_total,
	CASE WHEN sum(venta_tarjeta)<>0 THEN sum(venta_tarjeta*TOTCUOTAS)::numeric(34,8)/sum(venta_tarjeta) ELSE 0 END AS plazo_total,

	sum(case when TOTCUOTAS>=2  then venta_tarjeta else 0 end)::numeric(34,8)  as vta_coutas,
	CASE WHEN sum(case when tipo='SPOS' then venta_tarjeta end )<>0 THEN 
	sum(case when TOTCUOTAS>=2  then venta_tarjeta else 0 end)::numeric(34,8) /
	sum(case when tipo='SPOS' then venta_tarjeta end )::numeric(34,8) ELSE 0 END   as  porcentaje_vta_coutas,
	CASE WHEN sum(case when  TOTCUOTAS>=2  then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=2  then venta_tarjeta*PORINT else 0 end )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=2  then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 end  as tasa_vta_coutas,
	CASE WHEN sum(case when  TOTCUOTAS>=2  then venta_tarjeta else 0 end )<>0 THEN 
	sum(case when  TOTCUOTAS>=2  then venta_tarjeta*TOTCUOTAS else 0 end  )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=2  then venta_tarjeta else 0 end )::numeric(34,8) ELSE 0 END as plazo_vta_coutas,

	sum(case when TOTCUOTAS>=2 and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8)  as vta_fin,
	CASE WHEN sum(case when tipo='SPOS' then venta_tarjeta end )<>0 THEN 
	sum(case when TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8) /
	sum(case when tipo='SPOS' then venta_tarjeta end )::numeric(34,8) ELSE 0 END  as porcentaje_vta_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta*PORINT else 0 end )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 END  as tasa_vta_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta*TOTCUOTAS else 0 end  )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 end as plazo_vta_fin,
	sum(CASE WHEN TOTCUOTAS>=2  and PORINT>0 THEN mg_fin ELSE 0 END ) AS MG_FIN,

	sum(case when TOTCUOTAS>=2 and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8)  as vta_no_fin,
	CASE WHEN sum(case when tipo='SPOS' then venta_tarjeta end )<>0 THEN 
	sum(case when TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8) /
	sum(case when tipo='SPOS' then venta_tarjeta end )::numeric(34,8) ELSE 0 END   as porcentaje_vta_no_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta*PORINT else 0 end )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 END  as tasa_vta_no_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta*TOTCUOTAS else 0 end  )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 end as plazo_vta_no_fin,
	sum(CASE WHEN TOTCUOTAS>=2  and PORINT=0 THEN mg_fin ELSE 0 END ) AS MG_no_FIN

	from schm_workspace.paso6_TC_SPOS AS a
	LEFT JOIN schm_workspace.paso4_TC_SPOS b 
		ON a.dia=b.dia			
	GROUP BY b.clientes_unicos,
		b.clientes_unico_5_trx,
		a.dia
	;




	----------------------------------------
	---- borrado tablas de paso spos_TC_chek
	----------------------------------------

	DROP TABLE IF EXISTS schm_workspace.paso1_TC_SPOS_chek;
	DROP TABLE IF EXISTS schm_workspace.paso2_TC_SPOS_chek;
	DROP TABLE IF EXISTS schm_workspace.paso3_TC_SPOS_chek;
	DROP TABLE IF EXISTS schm_workspace.paso4_TC_SPOS_chek;
	DROP TABLE IF EXISTS schm_workspace.paso5_TC_SPOS_chek;
	DROP TABLE IF EXISTS schm_workspace.paso6_TC_SPOS_chek;

	-------------------------------------------
	---- calculos de kpi para spos credito chek
	-------------------------------------------

	CREATE TABLE schm_workspace.paso1_TC_SPOS_chek AS 
	SELECT 
	'SPOS' AS tipo,
	rut,
	fecha,
	venta_tarjeta AS monto
	from schm_data_analytics.spos_aut
	WHERE periodo = periodo_paso  AND centalta='0105'
	;

	CREATE TABLE schm_workspace.paso2_TC_SPOS_chek AS 
	SELECT 
	a.fecha,
	a.dia,
	b.fecha AS fecha_trx,
	b.tipo,
	b.rut,
	b.monto
	FROM  schm_workspace.dimension_mes_FOTO_SPOS AS a 
	LEFT JOIN schm_workspace.paso1_TC_SPOS_chek AS b
	on(b.fecha<=a.fecha)
	;
		
		
	CREATE TABLE schm_workspace.paso3_TC_SPOS_chek AS
	SELECT
	dia,
	rut,
	count(case when monto>0 then rut end)-count(case when monto<0 then rut end) as trx,
	sum(CASE WHEN tipo='SPOS' THEN monto ELSE 0 end) as monto_spos,
	sum(CASE WHEN tipo<>'SPOS' THEN monto ELSE 0 end) as monto_seg,
	CASE WHEN sum(CASE WHEN tipo='SPOS' THEN monto ELSE 0 end)>0 OR 
	sum(CASE WHEN tipo<>'SPOS' THEN monto ELSE 0 end)>0 THEN 1 ELSE 0 END AS uso_spos,
	sum(monto) as monto
	FROM schm_workspace.paso2_TC_SPOS_chek
	GROUP BY dia,
	rut
	;	


	CREATE TABLE schm_workspace.paso4_TC_SPOS_chek AS 
		SELECT
		dia
		,count(case when trx>=5 and monto>0 then rut end) as clientes_unico_5_trx
		,count(distinct case when uso_spos=1 then rut end) as clientes_unicos
		from schm_workspace.paso3_TC_SPOS_chek
		GROUP BY dia
		;

	CREATE TABLE schm_workspace.paso5_TC_SPOS_chek AS 
	SELECT 
		fecha,
		'SPOS' as tipo,
		rut,
		venta_tarjeta,
		totcuotas,
		PORINT,
		mg_fin
		FROM schm_data_analytics.spos_aut
		WHERE periodo = periodo_paso AND centalta='0105'
	;



	CREATE TABLE schm_workspace.paso6_TC_SPOS_chek AS 
	SELECT 
	a.fecha,
	a.dia,
	b.fecha AS fecha_trx,
	b.tipo,
	b.rut,
	b.venta_tarjeta,
	b.totcuotas,
	b.PORINT,
	b.mg_fin
	FROM  schm_workspace.dimension_mes_FOTO_SPOS AS a 
	LEFT JOIN schm_workspace.paso5_TC_SPOS_chek AS b
	on(b.fecha<=a.fecha)
	;

	INSERT INTO schm_workspace.SPOS_TC_chek 
	SELECT
	a.dia,
	periodo_paso as periodo,
	sum(venta_tarjeta)::numeric(34,8) as monto_total,
	(count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) ) as Trx,
	CASE WHEN count(distinct rut)<>0 THEN 
	(count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) )/
	count(distinct rut)::numeric(34,8) ELSE 0 END  as trx_prom_por_cliente,
	CASE WHEN (count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) )<>0 THEN 
	sum(venta_tarjeta)::numeric(34,8) /(count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) ) 
	ELSE 0 END as ticket_prom,
	b.clientes_unicos::numeric(34,8) ,
	b.clientes_unico_5_trx::numeric(34,8) ,
	CASE WHEN count(distinct rut)<>0 THEN sum(venta_tarjeta)::numeric(34,8) /count(distinct rut)::numeric(34,8) ELSE 0 END    as gasto_prom,
	CASE WHEN sum(venta_tarjeta)<>0 THEN sum(venta_tarjeta*PORINT)::numeric(34,8)/sum(venta_tarjeta) ELSE 0 END  AS tasa_total,
	CASE WHEN sum(venta_tarjeta)<>0 THEN sum(venta_tarjeta*TOTCUOTAS)::numeric(34,8)/sum(venta_tarjeta) ELSE 0 END AS plazo_total,

	sum(case when TOTCUOTAS>=2  then venta_tarjeta else 0 end)::numeric(34,8)  as vta_coutas,
	CASE WHEN sum(case when tipo='SPOS' then venta_tarjeta end )<>0 THEN 
	sum(case when TOTCUOTAS>=2  then venta_tarjeta else 0 end)::numeric(34,8) /
	sum(case when tipo='SPOS' then venta_tarjeta end )::numeric(34,8) ELSE 0 END   as  porcentaje_vta_coutas,
	CASE WHEN sum(case when  TOTCUOTAS>=2  then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=2  then venta_tarjeta*PORINT else 0 end )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=2  then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 end  as tasa_vta_coutas,
	CASE WHEN sum(case when  TOTCUOTAS>=2  then venta_tarjeta else 0 end )<>0 THEN 
	sum(case when  TOTCUOTAS>=2  then venta_tarjeta*TOTCUOTAS else 0 end  )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=2  then venta_tarjeta else 0 end )::numeric(34,8) ELSE 0 END as plazo_vta_coutas,

	sum(case when TOTCUOTAS>=2 and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8)  as vta_fin,
	CASE WHEN sum(case when tipo='SPOS' then venta_tarjeta end )<>0 THEN 
	sum(case when TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8) /
	sum(case when tipo='SPOS' then venta_tarjeta end )::numeric(34,8) ELSE 0 END  as porcentaje_vta_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta*PORINT else 0 end )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 END  as tasa_vta_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta*TOTCUOTAS else 0 end  )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=2  and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 end as plazo_vta_fin,
	sum(CASE WHEN TOTCUOTAS>=2  and PORINT>0 THEN mg_fin ELSE 0 END ) AS MG_FIN,

	sum(case when TOTCUOTAS>=2 and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8)  as vta_no_fin,
	CASE WHEN sum(case when tipo='SPOS' then venta_tarjeta end )<>0 THEN 
	sum(case when TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8) /
	sum(case when tipo='SPOS' then venta_tarjeta end )::numeric(34,8) ELSE 0 END   as porcentaje_vta_no_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta*PORINT else 0 end )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 END  as tasa_vta_no_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta*TOTCUOTAS else 0 end  )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=2  and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 end as plazo_vta_no_fin,
	sum(CASE WHEN TOTCUOTAS>=2  and PORINT=0 THEN mg_fin ELSE 0 END ) AS MG_no_FIN

	from schm_workspace.paso6_TC_SPOS_chek AS a
	LEFT JOIN schm_workspace.paso4_TC_SPOS_chek b 
		ON a.dia=b.dia			
	GROUP BY b.clientes_unicos,
		b.clientes_unico_5_trx,
		a.dia
	;









	----------------------------------------
	---- borrado tablas de paso spos_TD
	----------------------------------------

	DROP TABLE IF EXISTS schm_workspace.paso1_TD_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso2_TD_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso3_TD_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso4_TD_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso5_TD_SPOS;

	---------------------------------------------------
	---- calculos de kpi para spos DEBITO ctavta+ctacte
	---------------------------------------------------


	create table  schm_workspace.paso1_TD_SPOS as 
	SELECT 
	rut,
	fecha,
	count(rut) AS trx
	FROM schm_data_analytics.mpdg_movimientos_debito
	where periodo = periodo_paso
	AND tipo_compra='SPOS'
	GROUP BY 1,2
	;

	CREATE TABLE schm_workspace.paso2_TD_SPOS AS 
	SELECT 
	a.fecha,
	a.dia,
	b.fecha AS fecha_trx,
	b.rut,
	b.trx
	FROM  schm_workspace.dimension_mes_FOTO_SPOS AS a 
	LEFT JOIN schm_workspace.paso1_TD_SPOS AS b
	on(b.fecha<=a.fecha)
	;

	CREATE TABLE schm_workspace.paso3_TD_SPOS AS 
	SELECT
	dia
	,count(case when trx>=5  then rut end) as clientes_unico_5_trx
	,count(distinct rut) as clientes_unicos
	from schm_workspace.paso2_TD_SPOS
	GROUP BY dia
	;

	CREATE TABLE schm_workspace.paso4_TD_SPOS AS 
	SELECT 
	rut,
	fecha,
	venta_tarjeta
	FROM schm_data_analytics.mpdg_movimientos_debito
	where periodo = periodo_paso
	AND tipo_compra='SPOS'
	;


	CREATE TABLE schm_workspace.paso5_TD_SPOS AS 
	SELECT 
	a.fecha,
	a.dia,
	b.fecha AS fecha_trx,
	b.rut,
	b.venta_tarjeta
	FROM schm_workspace.dimension_mes_FOTO_SPOS AS a 
	LEFT JOIN schm_workspace.paso4_TD_SPOS AS b
	on(b.fecha<=a.fecha)
	;
		
	INSERT INTO schm_workspace.SPOS_TD  
	SELECT
	a.dia,
	periodo_paso as periodo,
	sum(venta_tarjeta)::numeric(34,8)  as monto_total,
	count(rut)::numeric(34,8)  as Trx,
	CASE WHEN count(distinct rut)<>0 THEN count(rut)::numeric(34,8) /count(distinct rut)::numeric(34,8) ELSE 0 end  as trx_prom_por_cliente,
	CASE WHEN count(rut)<>0 THEN sum(venta_tarjeta)::numeric(34,8) /count(rut)::numeric(34,8) ELSE 0 END   as ticket_prom,
	count(distinct rut)::numeric(34,8)  as clientes_unicos,
	b.clientes_unico_5_trx::numeric(34,8) ,
	CASE WHEN count(distinct rut)<>0 THEN 
	sum(venta_tarjeta)::numeric(34,8) /count(distinct rut)::numeric(34,8) 
	ELSE 0 END as gasto_prom
	from schm_workspace.paso5_TD_SPOS AS a 
	LEFT JOIN schm_workspace.paso3_TD_SPOS AS  b 
	ON a.dia=b.dia	
	GROUP BY b.clientes_unico_5_trx,
		a.dia
	;



	----------------------------------------
	---- borrado tablas de paso spos_TD_CHEK
	----------------------------------------

	DROP TABLE IF EXISTS schm_workspace.paso1_TD_SPOS_CHEK;
	DROP TABLE IF EXISTS schm_workspace.paso2_TD_SPOS_CHEK;
	DROP TABLE IF EXISTS schm_workspace.paso3_TD_SPOS_CHEK;
	DROP TABLE IF EXISTS schm_workspace.paso4_TD_SPOS_CHEK;
	DROP TABLE IF EXISTS schm_workspace.paso5_TD_SPOS_CHEK;

	---------------------------------------------------
	---- calculos de kpi para spos DEBITO chek
	---------------------------------------------------

	create table  schm_workspace.paso1_TD_SPOS_CHEK as 
	SELECT 
	rut,
	fecha,
	count(rut) AS trx
	FROM schm_data_analytics.mdpg_trx_mcchek
	where periodo = periodo_paso
	AND tipo_movimiento='SPOS'
	GROUP BY 1,2
	;

	CREATE TABLE schm_workspace.paso2_TD_SPOS_CHEK AS 
	SELECT 
	a.fecha,
	a.dia,
	b.fecha AS fecha_trx,
	b.rut,
	b.trx
	FROM  schm_workspace.dimension_mes_FOTO_SPOS AS a 
	LEFT JOIN schm_workspace.paso1_TD_SPOS_CHEK AS b
	on(b.fecha<=a.fecha)
	;

	CREATE TABLE schm_workspace.paso3_TD_SPOS_CHEK AS 
	SELECT
	dia
	,count(case when trx>=5  then rut end) as clientes_unico_5_trx
	,count(distinct rut) as clientes_unicos
	from schm_workspace.paso2_TD_SPOS_CHEK
	GROUP BY dia
	;

	CREATE TABLE schm_workspace.paso4_TD_SPOS_CHEK AS 
	SELECT 
	rut,
	fecha,
	venta_tarjeta
	FROM  schm_data_analytics.mdpg_trx_mcchek
	where periodo = periodo_paso
	AND tipo_movimiento='SPOS'
	;


	CREATE TABLE schm_workspace.paso5_TD_SPOS_CHEK AS 
	SELECT 
	a.fecha,
	a.dia,
	b.fecha AS fecha_trx,
	b.rut,
	b.venta_tarjeta
	FROM schm_workspace.dimension_mes_FOTO_SPOS AS a 
	LEFT JOIN schm_workspace.paso4_TD_SPOS_CHEK AS b
	on(b.fecha<=a.fecha)
	;
		
	INSERT INTO schm_workspace.SPOS_TD_chek  
	SELECT
	a.dia,
	periodo_paso as periodo,
	sum(venta_tarjeta)::numeric(34,8)  as monto_total,
	count(rut)::numeric(34,8)  as Trx,
	CASE WHEN count(distinct rut)<>0 THEN count(rut)::numeric(34,8) /count(distinct rut)::numeric(34,8) ELSE 0 end  as trx_prom_por_cliente,
	CASE WHEN count(rut)<>0 THEN sum(venta_tarjeta)::numeric(34,8) /count(rut)::numeric(34,8) ELSE 0 END   as ticket_prom,
	count(distinct rut)::numeric(34,8)  as clientes_unicos,
	b.clientes_unico_5_trx::numeric(34,8) ,
	CASE WHEN count(distinct rut)<>0 THEN 
	sum(venta_tarjeta)::numeric(34,8) /count(distinct rut)::numeric(34,8) 
	ELSE 0 END as gasto_prom

	from schm_workspace.paso5_TD_SPOS_CHEK AS a 
	LEFT JOIN schm_workspace.paso3_TD_SPOS_CHEK AS  b 
	ON a.dia=b.dia	
	GROUP BY b.clientes_unico_5_trx,
		a.dia
	;



	--------------------------------------
	---- borrado tablas de paso TNDA_TC
	--------------------------------------

	DROP TABLE IF EXISTS schm_workspace.paso1_TC_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso2_TC_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso3_TC_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso4_TC_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso5_TC_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso6_TC_TNDA;

	--------------------------------------
	---- calculos de kpi para TnDA credito
	--------------------------------------

	CREATE TABLE schm_workspace.paso1_TC_TNDA AS 
	SELECT 
	rut,
	fecha,
	capital AS monto
	from schm_data_analytics.tnda_tda_itf
	WHERE periodo = periodo_paso  AND centalta<>'0105'
	;

	CREATE TABLE schm_workspace.paso2_TC_TNDA AS 
	SELECT 
	a.fecha,
	a.dia,
	b.fecha AS fecha_trx,
	b.rut,
	b.monto
	FROM  schm_workspace.dimension_mes_FOTO_SPOS AS a 
	LEFT JOIN schm_workspace.paso1_TC_TNDA AS b
	on(b.fecha<=a.fecha)
	;
		
		
	CREATE TABLE schm_workspace.paso3_TC_TNDA AS
	SELECT
	dia,
	rut,
	count(case when monto>0 then rut end)-count(case when monto<0 then rut end) as trx,

	CASE WHEN sum(monto)>0 THEN 1 ELSE 0 END AS uso_TNDA,
	sum(monto) as monto
	FROM schm_workspace.paso2_TC_TNDA
	GROUP BY dia,
	rut
	;	


	CREATE TABLE schm_workspace.paso4_TC_TNDA AS 
		SELECT
		dia
		,count(case when trx>=5 and monto>0 then rut end) as clientes_unico_5_trx
		,count(distinct case when uso_TNDA=1 then rut end) as clientes_unicos
		from schm_workspace.paso3_TC_TNDA
		GROUP BY dia
		;

	CREATE TABLE schm_workspace.paso5_TC_TNDA AS 
	SELECT 
		fecha,
		rut,
		capital AS venta_tarjeta,
		pie AS pie,
		cuotas AS totcuotas,
		tasa AS PORINT,
		mgfin AS mg_fin
		FROM schm_data_analytics.tnda_tda_itf
		WHERE periodo = periodo_paso AND centalta<>'0105'	
	;



	CREATE TABLE schm_workspace.paso6_TC_TNDA AS 
	SELECT 
	a.fecha,
	a.dia,
	b.fecha AS fecha_trx,
	b.rut,
	b.venta_tarjeta,
	b.pie,
	b.totcuotas,
	b.PORINT,
	b.mg_fin
	FROM  schm_workspace.dimension_mes_FOTO_SPOS AS a 
	LEFT JOIN schm_workspace.paso5_TC_TNDA AS b
	on(b.fecha<=a.fecha)
	;

	INSERT INTO schm_workspace.TNDA_tc 
	SELECT
	a.dia,
	periodo_paso as periodo,
	sum(venta_tarjeta)::numeric(34,8)+sum(pie)::numeric(34,8) AS monto_pie,
	sum(venta_tarjeta)::numeric(34,8) as monto_total,
	(count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) ) as Trx,
	CASE WHEN count(distinct rut)<>0 THEN 
	(count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) )
	/count(distinct rut)::numeric(34,8) ELSE 0 END  as trx_prom_por_cliente,
	CASE WHEN (count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) )<>0 THEN 
	sum(venta_tarjeta)::numeric(34,8) /(count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) )
	ELSE 0 END as ticket_prom,b.clientes_unicos::numeric(34,8) ,
	b.clientes_unico_5_trx::numeric(34,8) ,
	CASE WHEN count(distinct rut)<>0 THEN sum(venta_tarjeta)::numeric(34,8) /count(distinct rut)::numeric(34,8) ELSE 0 END    as gasto_prom,
	CASE WHEN sum(venta_tarjeta)<>0 THEN sum(venta_tarjeta*PORINT)::numeric(34,8)/sum(venta_tarjeta) ELSE 0 END  AS tasa_total,
	CASE WHEN sum(venta_tarjeta)<>0 THEN sum(venta_tarjeta*TOTCUOTAS)::numeric(34,8)/sum(venta_tarjeta) ELSE 0 END AS plazo_total,

	sum(case when TOTCUOTAS>=3  then venta_tarjeta else 0 end)::numeric(34,8)  as vta_coutas,
	CASE WHEN sum( venta_tarjeta  )<>0 THEN 
	sum(case when TOTCUOTAS>=3  then venta_tarjeta else 0 end)::numeric(34,8) /
	sum( venta_tarjeta  )::numeric(34,8) ELSE 0 END   as  porcentaje_vta_coutas,
	CASE WHEN sum(case when  TOTCUOTAS>=3  then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=3  then venta_tarjeta*PORINT else 0 end )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=3  then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 end  as tasa_vta_coutas,
	CASE WHEN sum(case when  TOTCUOTAS>=3  then venta_tarjeta else 0 end )<>0 THEN 
	sum(case when  TOTCUOTAS>=3  then venta_tarjeta*TOTCUOTAS else 0 end  )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=3  then venta_tarjeta else 0 end )::numeric(34,8) ELSE 0 END as plazo_vta_coutas,

	sum(case when TOTCUOTAS>=3 and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8)  as vta_fin,
	CASE WHEN sum( venta_tarjeta  )<>0 THEN 
	sum(case when TOTCUOTAS>=3  and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8) /
	sum( venta_tarjeta)::numeric(34,8) ELSE 0 END  as porcentaje_vta_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=3  and PORINT>0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=3  and PORINT>0 then venta_tarjeta*PORINT else 0 end )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=3  and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 END  as tasa_vta_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=3  and PORINT>0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=3  and PORINT>0 then venta_tarjeta*TOTCUOTAS else 0 end  )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=3  and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 end as plazo_vta_fin,
	sum(CASE WHEN TOTCUOTAS>=3  and PORINT>0 THEN mg_fin ELSE 0 END ) AS MG_FIN,

	sum(case when TOTCUOTAS>=3 and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8)  as vta_no_fin,
	CASE WHEN sum( venta_tarjeta  )<>0 THEN 
	sum(case when TOTCUOTAS>=3  and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8) /
	sum( venta_tarjeta  )::numeric(34,8) ELSE 0 END   as porcentaje_vta_no_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=3  and PORINT=0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=3  and PORINT=0 then venta_tarjeta*PORINT else 0 end )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=3  and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 END  as tasa_vta_no_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=3  and PORINT=0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=3  and PORINT=0 then venta_tarjeta*TOTCUOTAS else 0 end  )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=3  and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 end as plazo_vta_no_fin,
	sum(CASE WHEN TOTCUOTAS>=3  and PORINT=0 THEN mg_fin ELSE 0 END ) AS MG_no_FIN

	from schm_workspace.paso6_TC_TNDA AS a
	LEFT JOIN schm_workspace.paso4_TC_TNDA  AS b 
		ON a.dia=b.dia			
	GROUP BY b.clientes_unicos,
		b.clientes_unico_5_trx,
		a.dia
	;




	----------------------------------------
	---- borrado tablas de paso TNDA_TC_CHEK
	----------------------------------------

	DROP TABLE IF EXISTS schm_workspace.paso1_TC_TNDA_chek;
	DROP TABLE IF EXISTS schm_workspace.paso2_TC_TNDA_chek;
	DROP TABLE IF EXISTS schm_workspace.paso3_TC_TNDA_chek;
	DROP TABLE IF EXISTS schm_workspace.paso4_TC_TNDA_chek;
	DROP TABLE IF EXISTS schm_workspace.paso5_TC_TNDA_chek;
	DROP TABLE IF EXISTS schm_workspace.paso6_TC_TNDA_chek;

	-------------------------------------------
	---- calculos de kpi para TnDA credito chek
	-------------------------------------------

	CREATE TABLE schm_workspace.paso1_TC_TNDA_chek AS 
	SELECT 
	rut,
	fecha,
	capital AS monto
	from schm_data_analytics.tnda_tda_itf
	WHERE periodo = periodo_paso  AND centalta='0105'
	;

	CREATE TABLE schm_workspace.paso2_TC_TNDA_chek AS 
	SELECT 
	a.fecha,
	a.dia,
	b.fecha AS fecha_trx,
	b.rut,
	b.monto
	FROM  schm_workspace.dimension_mes_FOTO_SPOS AS a 
	LEFT JOIN schm_workspace.paso1_TC_TNDA_chek AS b
	on(b.fecha<=a.fecha)
	;
		
		
	CREATE TABLE schm_workspace.paso3_TC_TNDA_chek AS
	SELECT
	dia,
	rut,
	count(case when monto>0 then rut end)-count(case when monto<0 then rut end) as trx,

	CASE WHEN sum(monto)>0 THEN 1 ELSE 0 END AS uso_TNDA,
	sum(monto) as monto
	FROM schm_workspace.paso2_TC_TNDA_chek
	GROUP BY dia,
	rut
	;	


	CREATE TABLE schm_workspace.paso4_TC_TNDA_chek AS 
		SELECT
		dia
		,count(case when trx>=5 and monto>0 then rut end) as clientes_unico_5_trx
		,count(distinct case when uso_TNDA=1 then rut end) as clientes_unicos
		from schm_workspace.paso3_TC_TNDA_chek
		GROUP BY dia
		;

	CREATE TABLE schm_workspace.paso5_TC_TNDA_chek AS 
	SELECT 
		fecha,
		rut,
		capital AS venta_tarjeta,
		pie AS pie,
		cuotas AS totcuotas,
		tasa AS PORINT,
		mgfin AS mg_fin
		FROM schm_data_analytics.tnda_tda_itf
		WHERE periodo = periodo_paso AND centalta='0105'	
	;



	CREATE TABLE schm_workspace.paso6_TC_TNDA_chek AS 
	SELECT 
	a.fecha,
	a.dia,
	b.fecha AS fecha_trx,
	b.rut,
	b.venta_tarjeta,
	b.pie,
	b.totcuotas,
	b.PORINT,
	b.mg_fin
	FROM  schm_workspace.dimension_mes_FOTO_SPOS AS a 
	LEFT JOIN schm_workspace.paso5_TC_TNDA_chek AS b
	on(b.fecha<=a.fecha)
	;


	INSERT INTO schm_workspace.TNDA_tc_chek 
	SELECT
	a.dia,
	periodo_paso as periodo,
	sum(venta_tarjeta)::numeric(34,8)+sum(pie)::numeric(34,8) AS monto_pie,
	sum(venta_tarjeta)::numeric(34,8) as monto_total,
	(count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) ) as Trx,
	CASE WHEN count(distinct rut)<>0 THEN 
	(count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) )
	/count(distinct rut)::numeric(34,8) ELSE 0 END  as trx_prom_por_cliente,
	CASE WHEN (count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) )<>0 THEN 
	sum(venta_tarjeta)::numeric(34,8) /(count(case when venta_tarjeta>0 then rut end)::numeric(34,8) -count(case when venta_tarjeta<0 then rut end)::numeric(34,8) )
	ELSE 0 END as ticket_prom,b.clientes_unicos::numeric(34,8) ,
	b.clientes_unico_5_trx::numeric(34,8) ,
	CASE WHEN count(distinct rut)<>0 THEN sum(venta_tarjeta)::numeric(34,8) /count(distinct rut)::numeric(34,8) ELSE 0 END    as gasto_prom,
	CASE WHEN sum(venta_tarjeta)<>0 THEN sum(venta_tarjeta*PORINT)::numeric(34,8)/sum(venta_tarjeta) ELSE 0 END  AS tasa_total,
	CASE WHEN sum(venta_tarjeta)<>0 THEN sum(venta_tarjeta*TOTCUOTAS)::numeric(34,8)/sum(venta_tarjeta) ELSE 0 END AS plazo_total,

	sum(case when TOTCUOTAS>=3  then venta_tarjeta else 0 end)::numeric(34,8)  as vta_coutas,
	CASE WHEN sum( venta_tarjeta  )<>0 THEN 
	sum(case when TOTCUOTAS>=3  then venta_tarjeta else 0 end)::numeric(34,8) /
	sum( venta_tarjeta  )::numeric(34,8) ELSE 0 END   as  porcentaje_vta_coutas,
	CASE WHEN sum(case when  TOTCUOTAS>=3  then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=3  then venta_tarjeta*PORINT else 0 end )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=3  then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 end  as tasa_vta_coutas,
	CASE WHEN sum(case when  TOTCUOTAS>=3  then venta_tarjeta else 0 end )<>0 THEN 
	sum(case when  TOTCUOTAS>=3  then venta_tarjeta*TOTCUOTAS else 0 end  )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=3  then venta_tarjeta else 0 end )::numeric(34,8) ELSE 0 END as plazo_vta_coutas,

	sum(case when TOTCUOTAS>=3 and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8)  as vta_fin,
	CASE WHEN sum( venta_tarjeta  )<>0 THEN 
	sum(case when TOTCUOTAS>=3  and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8) /
	sum( venta_tarjeta)::numeric(34,8) ELSE 0 END  as porcentaje_vta_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=3  and PORINT>0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=3  and PORINT>0 then venta_tarjeta*PORINT else 0 end )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=3  and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 END  as tasa_vta_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=3  and PORINT>0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=3  and PORINT>0 then venta_tarjeta*TOTCUOTAS else 0 end  )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=3  and PORINT>0 then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 end as plazo_vta_fin,
	sum(CASE WHEN TOTCUOTAS>=3  and PORINT>0 THEN mg_fin ELSE 0 END ) AS MG_FIN,

	sum(case when TOTCUOTAS>=3 and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8)  as vta_no_fin,
	CASE WHEN sum( venta_tarjeta  )<>0 THEN 
	sum(case when TOTCUOTAS>=3  and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8) /
	sum( venta_tarjeta  )::numeric(34,8) ELSE 0 END   as porcentaje_vta_no_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=3  and PORINT=0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=3  and PORINT=0 then venta_tarjeta*PORINT else 0 end )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=3  and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 END  as tasa_vta_no_fin,
	CASE WHEN sum(case when  TOTCUOTAS>=3  and PORINT=0 then venta_tarjeta else 0 end)<>0 THEN 
	sum(case when  TOTCUOTAS>=3  and PORINT=0 then venta_tarjeta*TOTCUOTAS else 0 end  )::numeric(34,8) /
	sum(case when  TOTCUOTAS>=3  and PORINT=0 then venta_tarjeta else 0 end)::numeric(34,8) ELSE 0 end as plazo_vta_no_fin,
	sum(CASE WHEN TOTCUOTAS>=3  and PORINT=0 THEN mg_fin ELSE 0 END ) AS MG_no_FIN


	from schm_workspace.paso6_TC_TNDA_chek AS a
	LEFT JOIN schm_workspace.paso4_TC_TNDA_chek  AS b 
		ON a.dia=b.dia			
	GROUP BY b.clientes_unicos,
		b.clientes_unico_5_trx,
		a.dia
	;




	----------------------------------------
	---- borrado tablas de paso TNDA_TD
	----------------------------------------

	DROP TABLE IF EXISTS schm_workspace.paso1_TD_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso2_TD_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso3_TD_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso4_TD_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso5_TD_TNDA;

	---------------------------------------------------
	---- calculos de kpi para TNDA DEBITO ctavta+ctacte
	---------------------------------------------------


	create table  schm_workspace.paso1_TD_TNDA as 
	SELECT 
	rut,
	fecha,
	count(rut) AS trx
	FROM schm_data_analytics.mpdg_movimientos_debito
	where periodo = periodo_paso
	AND tipo_compra='TNDA'
	GROUP BY 1,2
	;

	CREATE TABLE schm_workspace.paso2_TD_TNDA AS 
	SELECT 
	a.fecha,
	a.dia,
	b.fecha AS fecha_trx,
	b.rut,
	b.trx
	FROM  schm_workspace.dimension_mes_FOTO_SPOS AS a 
	LEFT JOIN schm_workspace.paso1_TD_TNDA AS b
	on(b.fecha<=a.fecha)
	;

	CREATE TABLE schm_workspace.paso3_TD_TNDA AS 
	SELECT
	dia
	,count(case when trx>=5  then rut end) as clientes_unico_5_trx
	,count(distinct rut) as clientes_unicos
	from schm_workspace.paso2_TD_TNDA
	GROUP BY dia
	;

	CREATE TABLE schm_workspace.paso4_TD_TNDA AS 
	SELECT 
	rut,
	fecha,
	venta_tarjeta
	FROM schm_data_analytics.mpdg_movimientos_debito
	where periodo = periodo_paso
	AND tipo_compra='TNDA'
	;


	CREATE TABLE schm_workspace.paso5_TD_TNDA AS 
	SELECT 
	a.fecha,
	a.dia,
	b.fecha AS fecha_trx,
	b.rut,
	b.venta_tarjeta
	FROM schm_workspace.dimension_mes_FOTO_SPOS AS a 
	LEFT JOIN schm_workspace.paso4_TD_TNDA AS b
	on(b.fecha<=a.fecha)
	;
		
	INSERT INTO schm_workspace.TNDA_TD  
	SELECT
	a.dia,
	periodo_paso as periodo,
	sum(venta_tarjeta)::numeric(34,8)  as monto_total,
	count(rut)::numeric(34,8)  as Trx,
	CASE WHEN count(distinct rut)<>0 THEN count(rut)::numeric(34,8) /count(distinct rut)::numeric(34,8) ELSE 0 end  as trx_prom_por_cliente,
	CASE WHEN count(rut)<>0 THEN sum(venta_tarjeta)::numeric(34,8) /count(rut)::numeric(34,8) ELSE 0 END   as ticket_prom,
	count(distinct rut)::numeric(34,8)  as clientes_unicos,
	b.clientes_unico_5_trx::numeric(34,8) ,
	CASE WHEN count(distinct rut)<>0 THEN 
	sum(venta_tarjeta)::numeric(34,8) /count(distinct rut)::numeric(34,8) 
	ELSE 0 END as gasto_prom
	from schm_workspace.paso5_TD_TNDA AS a 
	LEFT JOIN schm_workspace.paso3_TD_TNDA AS  b 
	ON a.dia=b.dia	
	GROUP BY b.clientes_unico_5_trx,
		a.dia
	;



	----------------------------------------
	---- borrado tablas de paso TNDA_TD_CHEK
	----------------------------------------

	DROP TABLE IF EXISTS schm_workspace.paso1_TD_TNDA_CHEK;
	DROP TABLE IF EXISTS schm_workspace.paso2_TD_TNDA_CHEK;
	DROP TABLE IF EXISTS schm_workspace.paso3_TD_TNDA_CHEK;
	DROP TABLE IF EXISTS schm_workspace.paso4_TD_TNDA_CHEK;
	DROP TABLE IF EXISTS schm_workspace.paso5_TD_TNDA_CHEK;

	---------------------------------------------------
	---- calculos de kpi para TNDA DEBITO chek
	---------------------------------------------------

	create table  schm_workspace.paso1_TD_TNDA_CHEK as 
	SELECT 
	rut,
	fecha,
	count(rut) AS trx
	FROM schm_data_analytics.mdpg_trx_mcchek
	where periodo = periodo_paso
	AND tipo_movimiento='TNDA'
	GROUP BY 1,2
	;

	CREATE TABLE schm_workspace.paso2_TD_TNDA_CHEK AS 
	SELECT 
	a.fecha,
	a.dia,
	b.fecha AS fecha_trx,
	b.rut,
	b.trx
	FROM  schm_workspace.dimension_mes_FOTO_SPOS AS a 
	LEFT JOIN schm_workspace.paso1_TD_TNDA_CHEK AS b
	on(b.fecha<=a.fecha)
	;

	CREATE TABLE schm_workspace.paso3_TD_TNDA_CHEK AS 
	SELECT
	dia
	,count(case when trx>=5  then rut end) as clientes_unico_5_trx
	,count(distinct rut) as clientes_unicos
	from schm_workspace.paso2_TD_TNDA_CHEK
	GROUP BY dia
	;

	CREATE TABLE schm_workspace.paso4_TD_TNDA_CHEK AS 
	SELECT 
	rut,
	fecha,
	venta_tarjeta
	FROM  schm_data_analytics.mdpg_trx_mcchek
	where periodo = periodo_paso
	AND tipo_movimiento='TNDA'
	;


	CREATE TABLE schm_workspace.paso5_TD_TNDA_CHEK AS 
	SELECT 
	a.fecha,
	a.dia,
	b.fecha AS fecha_trx,
	b.rut,
	b.venta_tarjeta
	FROM schm_workspace.dimension_mes_FOTO_SPOS AS a 
	LEFT JOIN schm_workspace.paso4_TD_TNDA_CHEK AS b
	on(b.fecha<=a.fecha)
	;
		
	INSERT INTO schm_workspace.TNDA_TD_chek  
	SELECT
	a.dia,
	periodo_paso as periodo,
	sum(venta_tarjeta)::numeric(34,8)  as monto_total,
	count(rut)::numeric(34,8)  as Trx,
	CASE WHEN count(distinct rut)<>0 THEN count(rut)::numeric(34,8) /count(distinct rut)::numeric(34,8) ELSE 0 end  as trx_prom_por_cliente,
	CASE WHEN count(rut)<>0 THEN sum(venta_tarjeta)::numeric(34,8) /count(rut)::numeric(34,8) ELSE 0 END   as ticket_prom,
	count(distinct rut)::numeric(34,8)  as clientes_unicos,
	b.clientes_unico_5_trx::numeric(34,8) ,
	CASE WHEN count(distinct rut)<>0 THEN 
	sum(venta_tarjeta)::numeric(34,8) /count(distinct rut)::numeric(34,8) 
	ELSE 0 END as gasto_prom
	from schm_workspace.paso5_TD_TNDA_CHEK AS a 
	LEFT JOIN schm_workspace.paso3_TD_TNDA_CHEK AS  b 
	ON a.dia=b.dia	
	GROUP BY b.clientes_unico_5_trx,
		a.dia
	;

	--------------------------------------------------------------------
	---- guardado en duro de la tabla 
	--------------------------------------------------------------------

	CREATE TABLE IF NOT EXISTS schm_data_analytics.SPOS_resumen_venta_HIST
	(
	fecha_actualizacion date,
	producto varchar,
	dia int,
	periodo int,
	monto_pie numeric(34,8),
	monto_total  numeric(34,8),
	Trx  numeric(34,8),
	trx_prom_por_cliente numeric(34,8),
	ticket_prom  numeric(34,8),
	clientes_unicos numeric(34,8),
	clientes_unico_5_trx numeric(34,8),
	gasto_prom numeric(34,8),
	tasa_total numeric(34,8),
	plazo_total numeric(34,8),
	vta_coutas numeric(34,8),
	porcentaje_vta_coutas numeric(34,8),
	tasa_vta_coutas numeric(34,8),
	plazo_vta_coutas numeric(34,8),
	vta_fin numeric(34,8),
	porcentaje_vta_fin numeric(34,8),
	tasa_vta_fin numeric(34,8),
	plazo_vta_fin numeric(34,8),
	MG_FIN numeric(34,8),
	vta_NO_fin numeric(34,8),
	porcentaje_vta_NO_fin numeric(34,8),
	tasa_vta_NO_fin numeric(34,8),
	plazo_vta_NO_fin numeric(34,8),
	MG_NO_FIN numeric(34,8)
	)
	;


	DELETE FROM schm_data_analytics.SPOS_resumen_venta_HIST
	WHERE periodo=periodo_paso;


	INSERT INTO schm_data_analytics.SPOS_resumen_venta_HIST  
	SELECT 
	current_date AS fecha_actualizacion,
	'SPOS TC' AS tipo ,
	dia ,
	periodo ,
	monto_total AS monto_pie ,
	monto_total  ,
	Trx  ,
	trx_prom_por_cliente ,
	ticket_prom  ,
	clientes_unicos ,
	clientes_unico_5_trx ,
	gasto_prom ,
	tasa_total ,
	plazo_total ,
	vta_coutas ,
	porcentaje_vta_coutas ,
	tasa_vta_coutas ,
	plazo_vta_coutas ,
	vta_fin ,
	porcentaje_vta_fin ,
	tasa_vta_fin ,
	plazo_vta_fin ,
	MG_FIN ,
	vta_NO_fin ,
	porcentaje_vta_NO_fin ,
	tasa_vta_NO_fin ,
	plazo_vta_NO_fin ,
	MG_NO_FIN 
	FROM schm_workspace.SPOS_TC
	;


	INSERT INTO schm_data_analytics.SPOS_resumen_venta_HIST  
	SELECT 
	current_date AS fecha_actualizacion,
	'SPOS TC CHEK' AS tipo ,
	dia ,
	periodo ,
	monto_total AS monto_pie ,
	monto_total  ,
	Trx  ,
	trx_prom_por_cliente ,
	ticket_prom  ,
	clientes_unicos ,
	clientes_unico_5_trx ,
	gasto_prom ,
	tasa_total ,
	plazo_total ,
	vta_coutas ,
	porcentaje_vta_coutas ,
	tasa_vta_coutas ,
	plazo_vta_coutas ,
	vta_fin ,
	porcentaje_vta_fin ,
	tasa_vta_fin ,
	plazo_vta_fin ,
	MG_FIN ,
	vta_NO_fin ,
	porcentaje_vta_NO_fin ,
	tasa_vta_NO_fin ,
	plazo_vta_NO_fin ,
	MG_NO_FIN 
	FROM schm_workspace.SPOS_TC_chek
	;

	INSERT INTO schm_data_analytics.SPOS_resumen_venta_HIST  
	SELECT 
	current_date AS fecha_actualizacion,
	'SPOS TD' AS tipo ,
	dia ,
	periodo ,
	monto_total AS monto_pie ,
	monto_total  ,
	Trx  ,
	trx_prom_por_cliente ,
	ticket_prom  ,
	clientes_unicos ,
	clientes_unico_5_trx ,
	gasto_prom ,
	0 AS tasa_total ,
	0 AS plazo_total ,
	0 AS vta_coutas ,
	0 AS porcentaje_vta_coutas ,
	0 AS tasa_vta_coutas ,
	0 AS plazo_vta_coutas ,
	0 AS vta_fin ,
	0 AS porcentaje_vta_fin ,
	0 AS tasa_vta_fin ,
	0 AS plazo_vta_fin ,
	0 AS MG_FIN ,
	0 AS vta_NO_fin ,
	0 AS porcentaje_vta_NO_fin ,
	0 AS tasa_vta_NO_fin ,
	0 AS  plazo_vta_NO_fin ,
	0 AS MG_NO_FIN 
	FROM schm_workspace.SPOS_TD
	;


	INSERT INTO schm_data_analytics.SPOS_resumen_venta_HIST  
	SELECT 
	current_date AS fecha_actualizacion,
	'SPOS TD CHEK' AS tipo ,
	dia ,
	periodo ,
	monto_total AS monto_pie ,
	monto_total  ,
	Trx  ,
	trx_prom_por_cliente ,
	ticket_prom  ,
	clientes_unicos ,
	clientes_unico_5_trx ,
	gasto_prom ,
	0 AS tasa_total ,
	0 AS plazo_total ,
	0 AS vta_coutas ,
	0 AS porcentaje_vta_coutas ,
	0 AS tasa_vta_coutas ,
	0 AS plazo_vta_coutas ,
	0 AS vta_fin ,
	0 AS porcentaje_vta_fin ,
	0 AS tasa_vta_fin ,
	0 AS plazo_vta_fin ,
	0 AS MG_FIN ,
	0 AS vta_NO_fin ,
	0 AS porcentaje_vta_NO_fin ,
	0 AS tasa_vta_NO_fin ,
	0 AS  plazo_vta_NO_fin ,
	0 AS MG_NO_FIN 
	FROM schm_workspace.SPOS_TD_Chek
	;


	INSERT INTO schm_data_analytics.SPOS_resumen_venta_HIST  
	SELECT 
	current_date AS fecha_actualizacion,
	'TNDA TC' AS tipo ,
	dia ,
	periodo ,
	monto_total AS monto_pie ,
	monto_total  ,
	Trx  ,
	trx_prom_por_cliente ,
	ticket_prom  ,
	clientes_unicos ,
	clientes_unico_5_trx ,
	gasto_prom ,
	tasa_total ,
	plazo_total ,
	vta_coutas ,
	porcentaje_vta_coutas ,
	tasa_vta_coutas ,
	plazo_vta_coutas ,
	vta_fin ,
	porcentaje_vta_fin ,
	tasa_vta_fin ,
	plazo_vta_fin ,
	MG_FIN ,
	vta_NO_fin ,
	porcentaje_vta_NO_fin ,
	tasa_vta_NO_fin ,
	plazo_vta_NO_fin ,
	MG_NO_FIN 
	FROM schm_workspace.TNDA_TC
	;


	INSERT INTO schm_data_analytics.SPOS_resumen_venta_HIST  
	SELECT 
	current_date AS fecha_actualizacion,
	'TNDA TC CHEK' AS tipo ,
	dia ,
	periodo ,
	monto_pie ,
	monto_total  ,
	Trx  ,
	trx_prom_por_cliente ,
	ticket_prom  ,
	clientes_unicos ,
	clientes_unico_5_trx ,
	gasto_prom ,
	tasa_total ,
	plazo_total ,
	vta_coutas ,
	porcentaje_vta_coutas ,
	tasa_vta_coutas ,
	plazo_vta_coutas ,
	vta_fin ,
	porcentaje_vta_fin ,
	tasa_vta_fin ,
	plazo_vta_fin ,
	MG_FIN ,
	vta_NO_fin ,
	porcentaje_vta_NO_fin ,
	tasa_vta_NO_fin ,
	plazo_vta_NO_fin ,
	MG_NO_FIN 
	FROM schm_workspace.TNDA_TC_chek
	;

	INSERT INTO schm_data_analytics.SPOS_resumen_venta_HIST  
	SELECT 
	current_date AS fecha_actualizacion,
	'TNDA TD' AS tipo ,
	dia ,
	periodo ,
	monto_total AS monto_pie ,
	monto_total  ,
	Trx  ,
	trx_prom_por_cliente ,
	ticket_prom  ,
	clientes_unicos ,
	clientes_unico_5_trx ,
	gasto_prom ,
	0 AS tasa_total ,
	0 AS plazo_total ,
	0 AS vta_coutas ,
	0 AS porcentaje_vta_coutas ,
	0 AS tasa_vta_coutas ,
	0 AS plazo_vta_coutas ,
	0 AS vta_fin ,
	0 AS porcentaje_vta_fin ,
	0 AS tasa_vta_fin ,
	0 AS plazo_vta_fin ,
	0 AS MG_FIN ,
	0 AS vta_NO_fin ,
	0 AS porcentaje_vta_NO_fin ,
	0 AS tasa_vta_NO_fin ,
	0 AS  plazo_vta_NO_fin ,
	0 AS MG_NO_FIN 
	FROM schm_workspace.TNDA_TD
	;


	INSERT INTO schm_data_analytics.SPOS_resumen_venta_HIST  
	SELECT 
	current_date AS fecha_actualizacion,
	'TNDA TD CHEK' AS tipo ,
	dia ,
	periodo ,
	monto_total AS monto_pie ,
	monto_total  ,
	Trx  ,
	trx_prom_por_cliente ,
	ticket_prom  ,
	clientes_unicos ,
	clientes_unico_5_trx ,
	gasto_prom ,
	0 AS tasa_total ,
	0 AS plazo_total ,
	0 AS vta_coutas ,
	0 AS porcentaje_vta_coutas ,
	0 AS tasa_vta_coutas ,
	0 AS plazo_vta_coutas ,
	0 AS vta_fin ,
	0 AS porcentaje_vta_fin ,
	0 AS tasa_vta_fin ,
	0 AS plazo_vta_fin ,
	0 AS MG_FIN ,
	0 AS vta_NO_fin ,
	0 AS porcentaje_vta_NO_fin ,
	0 AS tasa_vta_NO_fin ,
	0 AS  plazo_vta_NO_fin ,
	0 AS MG_NO_FIN 
	FROM schm_workspace.TNDA_TD_Chek
	;


	DROP TABLE IF EXISTS schm_workspace.SPOS_TC;
	DROP TABLE IF EXISTS schm_workspace.spos_TC_CHEK;
	DROP TABLE IF EXISTS schm_workspace.SPOS_TD;
	DROP TABLE IF EXISTS schm_workspace.SPOS_TD_chek;
	DROP TABLE IF EXISTS schm_workspace.TNDA_tc;
	DROP TABLE IF EXISTS schm_workspace.TNDA_tc_CHEK;
	DROP TABLE IF EXISTS schm_workspace.TNDA_TD;
	DROP TABLE IF EXISTS schm_workspace.TNDA_TD_chek;
	DROP TABLE IF EXISTS schm_workspace.dimension_mes_FOTO_SPOS;

	DROP TABLE IF EXISTS schm_workspace.paso1_TC_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso2_TC_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso3_TC_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso4_TC_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso5_TC_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso6_TC_SPOS;

	DROP TABLE IF EXISTS schm_workspace.paso1_TC_SPOS_chek;
	DROP TABLE IF EXISTS schm_workspace.paso2_TC_SPOS_chek;
	DROP TABLE IF EXISTS schm_workspace.paso3_TC_SPOS_chek;
	DROP TABLE IF EXISTS schm_workspace.paso4_TC_SPOS_chek;
	DROP TABLE IF EXISTS schm_workspace.paso5_TC_SPOS_chek;
	DROP TABLE IF EXISTS schm_workspace.paso6_TC_SPOS_chek;

	DROP TABLE IF EXISTS schm_workspace.paso1_TD_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso2_TD_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso3_TD_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso4_TD_SPOS;
	DROP TABLE IF EXISTS schm_workspace.paso5_TD_SPOS;

	DROP TABLE IF EXISTS schm_workspace.paso1_TD_SPOS_CHEK;
	DROP TABLE IF EXISTS schm_workspace.paso2_TD_SPOS_CHEK;
	DROP TABLE IF EXISTS schm_workspace.paso3_TD_SPOS_CHEK;
	DROP TABLE IF EXISTS schm_workspace.paso4_TD_SPOS_CHEK;
	DROP TABLE IF EXISTS schm_workspace.paso5_TD_SPOS_CHEK;

	DROP TABLE IF EXISTS schm_workspace.paso1_TC_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso2_TC_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso3_TC_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso4_TC_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso5_TC_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso6_TC_TNDA;

	DROP TABLE IF EXISTS schm_workspace.paso1_TC_TNDA_chek;
	DROP TABLE IF EXISTS schm_workspace.paso2_TC_TNDA_chek;
	DROP TABLE IF EXISTS schm_workspace.paso3_TC_TNDA_chek;
	DROP TABLE IF EXISTS schm_workspace.paso4_TC_TNDA_chek;
	DROP TABLE IF EXISTS schm_workspace.paso5_TC_TNDA_chek;
	DROP TABLE IF EXISTS schm_workspace.paso6_TC_TNDA_chek;

	DROP TABLE IF EXISTS schm_workspace.paso1_TD_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso2_TD_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso3_TD_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso4_TD_TNDA;
	DROP TABLE IF EXISTS schm_workspace.paso5_TD_TNDA;

	DROP TABLE IF EXISTS schm_workspace.paso1_TD_TNDA_CHEK;
	DROP TABLE IF EXISTS schm_workspace.paso2_TD_TNDA_CHEK;
	DROP TABLE IF EXISTS schm_workspace.paso3_TD_TNDA_CHEK;
	DROP TABLE IF EXISTS schm_workspace.paso4_TD_TNDA_CHEK;
	DROP TABLE IF EXISTS schm_workspace.paso5_TD_TNDA_CHEK;

	/*  ===========================================================================================================
         === Control de versiones visual ===
         2024-02-19 -- v00 -- Pedro Muñoz         -- Se agrega débito y se aperturó Chek

         === Información adicional:
         Proceso que..
         ===========================================================================================================
    */

END;
	




$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.unload_csv(value_stream varchar, file_name varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
	
	
	
	
	
BEGIN
	
   EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/' || value_stream || '/' || file_name || '/' || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off ALLOWOVERWRITE HEADER extension ''csv'' DELIMITER ''|'';';
   RETURN;

END;







$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.unload_csv_noheaders(value_stream varchar, file_name varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
	
	
	
BEGIN
	
   EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/' || value_stream || '/' || file_name || '/' || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format csv parallel off ALLOWOVERWRITE extension ''txt'' DELIMITER '';'';';
   RETURN;

END;





$$
;

CREATE OR REPLACE PROCEDURE schm_artifacts.unload_parquet(value_stream varchar, file_name varchar, v_query varchar)
	LANGUAGE plpgsql
AS $$
	
	
BEGIN
	
   EXECUTE 'UNLOAD(' || quote_literal(v_query) || ') to ''s3://br-dm-prod-us-east-1-837538682169-artifactory/redshift-email-files/' || value_stream || '/' || file_name || '/' || ''' iam_role ''arn:aws:iam::837538682169:role/ROLE-BR-PROD-DATA-MANAGEMENT-DATACATALOG-REDSHIFT'' format parquet ALLOWOVERWRITE;';
   RETURN;

END;



$$
;
